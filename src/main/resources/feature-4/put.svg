<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="982" onload="init(evt)" viewBox="0 0 1200 982" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="965"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="965"> </text>
<g id="frames">
<g>
<title>all (8,830 samples, 100.00%)</title><rect x="10.0" y="931.0" width="1180.0" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="13.0" y="942.0">all</text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (32 samples, 0.36%)</title><rect x="10.3" y="915.0" width="4.2" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="13.3" y="926.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (32 samples, 0.36%)</title><rect x="10.3" y="899.0" width="4.2" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="13.3" y="910.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) [clone .part.93] (32 samples, 0.36%)</title><rect x="10.3" y="883.0" width="4.2" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="13.3" y="894.0"></text>
</g>
<g>
<title>ObjectMonitor::EnterI(Thread*) (32 samples, 0.36%)</title><rect x="10.3" y="867.0" width="4.2" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="13.3" y="878.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.71] (26 samples, 0.29%)</title><rect x="10.3" y="851.0" width="3.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="13.3" y="862.0"></text>
</g>
<g>
<title>SpinPause (3 samples, 0.03%)</title><rect x="13.7" y="851.0" width="0.4" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="16.7" y="862.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock (3 samples, 0.03%)</title><rect x="14.1" y="851.0" width="0.4" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="17.1" y="862.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.02%)</title><rect x="14.3" y="835.0" width="0.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="17.3" y="846.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.02%)</title><rect x="14.3" y="819.0" width="0.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="17.3" y="830.0"></text>
</g>
<g>
<title>[no_Java_frame] (6 samples, 0.07%)</title><rect x="14.5" y="915.0" width="0.8" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="17.5" y="926.0"></text>
</g>
<g>
<title>[not_walkable_Java] (13 samples, 0.15%)</title><rect x="15.3" y="915.0" width="1.8" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="18.3" y="926.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (10 samples, 0.11%)</title><rect x="15.5" y="899.0" width="1.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="18.5" y="910.0"></text>
</g>
<g>
<title>OptoRuntime::is_deoptimized_caller_frame(JavaThread*) (10 samples, 0.11%)</title><rect x="15.5" y="883.0" width="1.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="18.5" y="894.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (2 samples, 0.02%)</title><rect x="15.5" y="867.0" width="0.2" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="18.5" y="878.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (6 samples, 0.07%)</title><rect x="16.0" y="867.0" width="0.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="19.0" y="878.0"></text>
</g>
<g>
<title>CompiledMethod::is_compiled() const (2 samples, 0.02%)</title><rect x="16.3" y="851.0" width="0.2" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="19.3" y="862.0"></text>
</g>
<g>
<title>frame::frame(long*, long*, long*, unsigned char*) (2 samples, 0.02%)</title><rect x="16.5" y="851.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="19.5" y="862.0"></text>
</g>
<g>
<title>SharedRuntime::on_slowpath_allocation_exit(JavaThread*) (2 samples, 0.02%)</title><rect x="16.8" y="899.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="19.8" y="910.0"></text>
</g>
<g>
<title>[unknown] (18 samples, 0.20%)</title><rect x="17.1" y="915.0" width="2.4" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="20.1" y="926.0"></text>
</g>
<g>
<title>pthread_cond_timedwait@@GLIBC_2.3.2 (13 samples, 0.15%)</title><rect x="17.8" y="899.0" width="1.7" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="20.8" y="910.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (9 samples, 0.10%)</title><rect x="18.3" y="883.0" width="1.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="21.3" y="894.0"></text>
</g>
<g>
<title>do_syscall_64 (9 samples, 0.10%)</title><rect x="18.3" y="867.0" width="1.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="21.3" y="878.0"></text>
</g>
<g>
<title>__x64_sys_futex (7 samples, 0.08%)</title><rect x="18.6" y="851.0" width="0.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="21.6" y="862.0"></text>
</g>
<g>
<title>do_futex (7 samples, 0.08%)</title><rect x="18.6" y="835.0" width="0.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="21.6" y="846.0"></text>
</g>
<g>
<title>futex_wait (7 samples, 0.08%)</title><rect x="18.6" y="819.0" width="0.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="21.6" y="830.0"></text>
</g>
<g>
<title>futex_wait_queue_me (3 samples, 0.03%)</title><rect x="18.7" y="803.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="21.7" y="814.0"></text>
</g>
<g>
<title>hrtimer_sleeper_start_expires (3 samples, 0.03%)</title><rect x="18.7" y="787.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="21.7" y="798.0"></text>
</g>
<g>
<title>hrtimer_start_range_ns (3 samples, 0.03%)</title><rect x="18.7" y="771.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="21.7" y="782.0"></text>
</g>
<g>
<title>__lock_text_start (3 samples, 0.03%)</title><rect x="18.7" y="755.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="21.7" y="766.0"></text>
</g>
<g>
<title>futex_wait_setup (3 samples, 0.03%)</title><rect x="19.1" y="803.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="22.1" y="814.0"></text>
</g>
<g>
<title>[unknown_Java] (16 samples, 0.18%)</title><rect x="19.5" y="915.0" width="2.1" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="22.5" y="926.0"></text>
</g>
<g>
<title>CardTableBarrierSet::on_slowpath_allocation_exit(JavaThread*, oopDesc*) (2 samples, 0.02%)</title><rect x="19.5" y="899.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="22.5" y="910.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (2 samples, 0.02%)</title><rect x="20.0" y="899.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="23.0" y="910.0"></text>
</g>
<g>
<title>__pthread_cond_signal (8 samples, 0.09%)</title><rect x="20.6" y="899.0" width="1.0" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="23.6" y="910.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (7 samples, 0.08%)</title><rect x="20.7" y="883.0" width="0.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="23.7" y="894.0"></text>
</g>
<g>
<title>do_syscall_64 (7 samples, 0.08%)</title><rect x="20.7" y="867.0" width="0.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="23.7" y="878.0"></text>
</g>
<g>
<title>__x64_sys_futex (7 samples, 0.08%)</title><rect x="20.7" y="851.0" width="0.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="23.7" y="862.0"></text>
</g>
<g>
<title>do_futex (7 samples, 0.08%)</title><rect x="20.7" y="835.0" width="0.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="23.7" y="846.0"></text>
</g>
<g>
<title>futex_wake (6 samples, 0.07%)</title><rect x="20.8" y="819.0" width="0.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="23.8" y="830.0"></text>
</g>
<g>
<title>wake_up_q (6 samples, 0.07%)</title><rect x="20.8" y="803.0" width="0.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="23.8" y="814.0"></text>
</g>
<g>
<title>try_to_wake_up (6 samples, 0.07%)</title><rect x="20.8" y="787.0" width="0.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="23.8" y="798.0"></text>
</g>
<g>
<title>__lock_text_start (6 samples, 0.07%)</title><rect x="20.8" y="771.0" width="0.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="23.8" y="782.0"></text>
</g>
<g>
<title>java/lang/Thread.run (6,371 samples, 72.15%)</title><rect x="21.8" y="915.0" width="851.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="24.8" y="926.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (6,371 samples, 72.15%)</title><rect x="21.8" y="899.0" width="851.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="24.8" y="910.0">java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (6,369 samples, 72.13%)</title><rect x="21.8" y="883.0" width="851.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="24.8" y="894.0">java/util/concurrent/ThreadPoolExecutor.runWorker</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.unlock (34 samples, 0.39%)</title><rect x="21.9" y="867.0" width="4.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="24.9" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (34 samples, 0.39%)</title><rect x="21.9" y="851.0" width="4.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="24.9" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (34 samples, 0.39%)</title><rect x="21.9" y="835.0" width="4.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="24.9" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (19 samples, 0.22%)</title><rect x="23.9" y="819.0" width="2.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="26.9" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (1,297 samples, 14.69%)</title><rect x="26.4" y="867.0" width="173.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="29.4" y="878.0">java/util/concurrent/T..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (1,292 samples, 14.63%)</title><rect x="27.1" y="851.0" width="172.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="30.1" y="862.0">java/util/concurrent/A..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (1,003 samples, 11.36%)</title><rect x="27.1" y="835.0" width="134.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="30.1" y="846.0">java/util/concurr..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (10 samples, 0.11%)</title><rect x="31.4" y="819.0" width="1.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="34.4" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (38 samples, 0.43%)</title><rect x="32.7" y="819.0" width="5.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="35.7" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (30 samples, 0.34%)</title><rect x="33.8" y="803.0" width="4.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="36.8" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (30 samples, 0.34%)</title><rect x="33.8" y="787.0" width="4.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="36.8" y="798.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (6 samples, 0.07%)</title><rect x="37.0" y="771.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="40.0" y="782.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.05%)</title><rect x="37.3" y="755.0" width="0.5" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="40.3" y="766.0"></text>
</g>
<g>
<title>__pthread_cond_wait (3 samples, 0.03%)</title><rect x="37.4" y="739.0" width="0.4" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="40.4" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.fullyRelease (122 samples, 1.38%)</title><rect x="37.8" y="819.0" width="16.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="40.8" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (122 samples, 1.38%)</title><rect x="37.8" y="803.0" width="16.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="40.8" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (3 samples, 0.03%)</title><rect x="37.8" y="787.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="40.8" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (119 samples, 1.35%)</title><rect x="38.2" y="787.0" width="15.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="41.2" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (119 samples, 1.35%)</title><rect x="38.2" y="771.0" width="15.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="41.2" y="782.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (118 samples, 1.34%)</title><rect x="38.3" y="755.0" width="15.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="41.3" y="766.0"></text>
</g>
<g>
<title>Unsafe_Unpark (17 samples, 0.19%)</title><rect x="38.6" y="739.0" width="2.3" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="41.6" y="750.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.235] (2 samples, 0.02%)</title><rect x="39.1" y="723.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="42.1" y="734.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (2 samples, 0.02%)</title><rect x="39.4" y="723.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="42.4" y="734.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (2 samples, 0.02%)</title><rect x="39.7" y="723.0" width="0.2" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="42.7" y="734.0"></text>
</g>
<g>
<title>oopDesc::address_field(int) const (2 samples, 0.02%)</title><rect x="40.2" y="723.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="43.2" y="734.0"></text>
</g>
<g>
<title>pthread_mutex_lock (3 samples, 0.03%)</title><rect x="40.5" y="723.0" width="0.4" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="43.5" y="734.0"></text>
</g>
<g>
<title>__pthread_cond_signal (99 samples, 1.12%)</title><rect x="40.9" y="739.0" width="13.2" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="43.9" y="750.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (75 samples, 0.85%)</title><rect x="44.1" y="723.0" width="10.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="47.1" y="734.0"></text>
</g>
<g>
<title>do_syscall_64 (74 samples, 0.84%)</title><rect x="44.2" y="707.0" width="9.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="47.2" y="718.0"></text>
</g>
<g>
<title>__x64_sys_futex (69 samples, 0.78%)</title><rect x="44.9" y="691.0" width="9.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="47.9" y="702.0"></text>
</g>
<g>
<title>do_futex (68 samples, 0.77%)</title><rect x="45.0" y="675.0" width="9.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="48.0" y="686.0"></text>
</g>
<g>
<title>futex_wake (67 samples, 0.76%)</title><rect x="45.1" y="659.0" width="9.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="48.1" y="670.0"></text>
</g>
<g>
<title>mark_wake_futex (3 samples, 0.03%)</title><rect x="45.7" y="643.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="48.7" y="654.0"></text>
</g>
<g>
<title>wake_up_q (60 samples, 0.68%)</title><rect x="46.1" y="643.0" width="8.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="49.1" y="654.0"></text>
</g>
<g>
<title>try_to_wake_up (59 samples, 0.67%)</title><rect x="46.2" y="627.0" width="7.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="49.2" y="638.0"></text>
</g>
<g>
<title>__lock_text_start (59 samples, 0.67%)</title><rect x="46.2" y="611.0" width="7.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="49.2" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.isOnSyncQueue (9 samples, 0.10%)</title><rect x="54.1" y="819.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="57.1" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (784 samples, 8.88%)</title><rect x="55.3" y="819.0" width="104.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="58.3" y="830.0">java/util/co..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (779 samples, 8.82%)</title><rect x="56.0" y="803.0" width="104.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="59.0" y="814.0">jdk/internal..</text>
</g>
<g>
<title>JavaThreadParkedState::JavaThreadParkedState(JavaThread*, bool) (2 samples, 0.02%)</title><rect x="56.6" y="787.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="59.6" y="798.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (5 samples, 0.06%)</title><rect x="56.9" y="787.0" width="0.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="59.9" y="798.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (2 samples, 0.02%)</title><rect x="57.6" y="787.0" width="0.2" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="60.6" y="798.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.235] (2 samples, 0.02%)</title><rect x="57.8" y="787.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="60.8" y="798.0"></text>
</g>
<g>
<title>Unsafe_Park (325 samples, 3.68%)</title><rect x="58.1" y="787.0" width="43.4" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="61.1" y="798.0">Unsa..</text>
</g>
<g>
<title>JavaFrameAnchor::make_walkable(JavaThread*) (8 samples, 0.09%)</title><rect x="60.6" y="771.0" width="1.1" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="63.6" y="782.0"></text>
</g>
<g>
<title>JavaThreadParkedState::JavaThreadParkedState(JavaThread*, bool) (7 samples, 0.08%)</title><rect x="61.7" y="771.0" width="1.0" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="64.7" y="782.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (2 samples, 0.02%)</title><rect x="62.7" y="771.0" width="0.2" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="65.7" y="782.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (73 samples, 0.83%)</title><rect x="62.9" y="771.0" width="9.8" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="65.9" y="782.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/ld-2.31.so (5 samples, 0.06%)</title><rect x="67.2" y="755.0" width="0.7" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="70.2" y="766.0"></text>
</g>
<g>
<title>JavaFrameAnchor::make_walkable(JavaThread*) (2 samples, 0.02%)</title><rect x="67.9" y="755.0" width="0.2" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="70.9" y="766.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (17 samples, 0.19%)</title><rect x="68.1" y="755.0" width="2.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="71.1" y="766.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/ld-2.31.so (7 samples, 0.08%)</title><rect x="69.5" y="739.0" width="0.9" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="72.5" y="750.0"></text>
</g>
<g>
<title>Monitor::unlock() (5 samples, 0.06%)</title><rect x="70.4" y="755.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="73.4" y="766.0"></text>
</g>
<g>
<title>__tls_get_addr (11 samples, 0.12%)</title><rect x="71.1" y="755.0" width="1.4" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="74.1" y="766.0"></text>
</g>
<g>
<title>Thread::is_interrupted(Thread*, bool) (6 samples, 0.07%)</title><rect x="72.7" y="771.0" width="0.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="75.7" y="782.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (4 samples, 0.05%)</title><rect x="73.5" y="771.0" width="0.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="76.5" y="782.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.235] (3 samples, 0.03%)</title><rect x="74.0" y="771.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="77.0" y="782.0"></text>
</g>
<g>
<title>__GI___pthread_mutex_trylock (8 samples, 0.09%)</title><rect x="74.4" y="771.0" width="1.1" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="77.4" y="782.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock (167 samples, 1.89%)</title><rect x="75.5" y="771.0" width="22.3" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="78.5" y="782.0">_..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (65 samples, 0.74%)</title><rect x="89.1" y="755.0" width="8.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="92.1" y="766.0"></text>
</g>
<g>
<title>__x64_sys_futex (2 samples, 0.02%)</title><rect x="89.1" y="739.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="92.1" y="750.0"></text>
</g>
<g>
<title>do_syscall_64 (63 samples, 0.71%)</title><rect x="89.4" y="739.0" width="8.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="92.4" y="750.0"></text>
</g>
<g>
<title>__x64_sys_futex (31 samples, 0.35%)</title><rect x="93.5" y="723.0" width="4.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="96.5" y="734.0"></text>
</g>
<g>
<title>do_futex (25 samples, 0.28%)</title><rect x="94.1" y="707.0" width="3.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="97.1" y="718.0"></text>
</g>
<g>
<title>futex_wake (18 samples, 0.20%)</title><rect x="94.3" y="691.0" width="2.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="97.3" y="702.0"></text>
</g>
<g>
<title>get_futex_key (8 samples, 0.09%)</title><rect x="95.4" y="675.0" width="1.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="98.4" y="686.0"></text>
</g>
<g>
<title>get_futex_key_refs.isra.0 (4 samples, 0.05%)</title><rect x="95.9" y="659.0" width="0.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="98.9" y="670.0"></text>
</g>
<g>
<title>get_futex_key_refs.isra.0 (2 samples, 0.02%)</title><rect x="96.5" y="675.0" width="0.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="99.5" y="686.0"></text>
</g>
<g>
<title>get_futex_key (3 samples, 0.03%)</title><rect x="96.7" y="691.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="99.7" y="702.0"></text>
</g>
<g>
<title>futex_wake (2 samples, 0.02%)</title><rect x="97.4" y="707.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="100.4" y="718.0"></text>
</g>
<g>
<title>__tls_get_addr (6 samples, 0.07%)</title><rect x="97.8" y="771.0" width="0.8" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="100.8" y="782.0"></text>
</g>
<g>
<title>java_lang_Thread::get_thread_status(oopDesc*) (7 samples, 0.08%)</title><rect x="98.6" y="771.0" width="0.9" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="101.6" y="782.0"></text>
</g>
<g>
<title>java_lang_Thread::set_thread_status(oopDesc*, java_lang_Thread::ThreadStatus) (3 samples, 0.03%)</title><rect x="99.5" y="771.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="102.5" y="782.0"></text>
</g>
<g>
<title>os::is_interrupted(Thread*, bool) (11 samples, 0.12%)</title><rect x="99.9" y="771.0" width="1.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="102.9" y="782.0"></text>
</g>
<g>
<title>[unknown] (433 samples, 4.90%)</title><rect x="101.5" y="787.0" width="57.9" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="104.5" y="798.0">[unkno..</text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/ld-2.31.so (9 samples, 0.10%)</title><rect x="101.5" y="771.0" width="1.2" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="104.5" y="782.0"></text>
</g>
<g>
<title>__GI___pthread_mutex_trylock (8 samples, 0.09%)</title><rect x="102.7" y="771.0" width="1.1" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="105.7" y="782.0"></text>
</g>
<g>
<title>__pthread_cleanup_push (2 samples, 0.02%)</title><rect x="103.8" y="771.0" width="0.3" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="106.8" y="782.0"></text>
</g>
<g>
<title>__pthread_cond_wait (364 samples, 4.12%)</title><rect x="104.1" y="771.0" width="48.6" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="107.1" y="782.0">__pt..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (106 samples, 1.20%)</title><rect x="138.4" y="755.0" width="14.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="141.4" y="766.0"></text>
</g>
<g>
<title>do_syscall_64 (106 samples, 1.20%)</title><rect x="138.4" y="739.0" width="14.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="141.4" y="750.0"></text>
</g>
<g>
<title>__x64_sys_futex (78 samples, 0.88%)</title><rect x="141.9" y="723.0" width="10.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="144.9" y="734.0"></text>
</g>
<g>
<title>do_futex (75 samples, 0.85%)</title><rect x="142.2" y="707.0" width="10.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="145.2" y="718.0"></text>
</g>
<g>
<title>futex_wait (72 samples, 0.82%)</title><rect x="142.4" y="691.0" width="9.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="145.4" y="702.0"></text>
</g>
<g>
<title>futex_wait_queue_me (21 samples, 0.24%)</title><rect x="143.1" y="675.0" width="2.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="146.1" y="686.0"></text>
</g>
<g>
<title>schedule (19 samples, 0.22%)</title><rect x="143.4" y="659.0" width="2.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="146.4" y="670.0"></text>
</g>
<g>
<title>__schedule (14 samples, 0.16%)</title><rect x="144.0" y="643.0" width="1.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="147.0" y="654.0"></text>
</g>
<g>
<title>finish_task_switch (5 samples, 0.06%)</title><rect x="145.2" y="627.0" width="0.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="148.2" y="638.0"></text>
</g>
<g>
<title>futex_wait_setup (34 samples, 0.39%)</title><rect x="145.9" y="675.0" width="4.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="148.9" y="686.0"></text>
</g>
<g>
<title>get_futex_key (9 samples, 0.10%)</title><rect x="147.6" y="659.0" width="1.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="150.6" y="670.0"></text>
</g>
<g>
<title>get_futex_key_refs.isra.0 (3 samples, 0.03%)</title><rect x="148.4" y="643.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="151.4" y="654.0"></text>
</g>
<g>
<title>get_futex_value_locked (12 samples, 0.14%)</title><rect x="148.8" y="659.0" width="1.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="151.8" y="670.0"></text>
</g>
<g>
<title>hash_futex (7 samples, 0.08%)</title><rect x="150.7" y="675.0" width="1.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="153.7" y="686.0"></text>
</g>
<g>
<title>plist_add (3 samples, 0.03%)</title><rect x="151.7" y="675.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="154.7" y="686.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (35 samples, 0.40%)</title><rect x="152.7" y="771.0" width="4.7" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="155.7" y="782.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (7 samples, 0.08%)</title><rect x="157.4" y="771.0" width="0.9" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="160.4" y="782.0"></text>
</g>
<g>
<title>__pthread_mutex_cond_lock (2 samples, 0.02%)</title><rect x="158.3" y="771.0" width="0.3" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="161.3" y="782.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock_usercnt (2 samples, 0.02%)</title><rect x="158.6" y="771.0" width="0.3" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="161.6" y="782.0"></text>
</g>
<g>
<title>_pthread_cleanup_pop (4 samples, 0.05%)</title><rect x="158.9" y="771.0" width="0.5" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="161.9" y="782.0"></text>
</g>
<g>
<title>java_lang_Thread::set_thread_status(oopDesc*, java_lang_Thread::ThreadStatus) (5 samples, 0.06%)</title><rect x="159.4" y="787.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="162.4" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.tryRelease (4 samples, 0.05%)</title><rect x="160.1" y="819.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="163.1" y="830.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (4 samples, 0.05%)</title><rect x="160.6" y="819.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="163.6" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (22 samples, 0.25%)</title><rect x="161.1" y="835.0" width="3.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="164.1" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (22 samples, 0.25%)</title><rect x="161.1" y="819.0" width="3.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="164.1" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (22 samples, 0.25%)</title><rect x="161.1" y="803.0" width="3.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="164.1" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (18 samples, 0.20%)</title><rect x="161.4" y="787.0" width="2.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="164.4" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (18 samples, 0.20%)</title><rect x="161.4" y="771.0" width="2.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="164.4" y="782.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (18 samples, 0.20%)</title><rect x="161.4" y="755.0" width="2.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="164.4" y="766.0"></text>
</g>
<g>
<title>Unsafe_Park (8 samples, 0.09%)</title><rect x="161.4" y="739.0" width="1.1" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="164.4" y="750.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (2 samples, 0.02%)</title><rect x="161.4" y="723.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="164.4" y="734.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock (4 samples, 0.05%)</title><rect x="161.8" y="723.0" width="0.5" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="164.8" y="734.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.02%)</title><rect x="162.1" y="707.0" width="0.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="165.1" y="718.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.02%)</title><rect x="162.1" y="691.0" width="0.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="165.1" y="702.0"></text>
</g>
<g>
<title>__x64_sys_futex (2 samples, 0.02%)</title><rect x="162.1" y="675.0" width="0.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="165.1" y="686.0"></text>
</g>
<g>
<title>do_futex (2 samples, 0.02%)</title><rect x="162.1" y="659.0" width="0.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="165.1" y="670.0"></text>
</g>
<g>
<title>futex_wake (2 samples, 0.02%)</title><rect x="162.1" y="643.0" width="0.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="165.1" y="654.0"></text>
</g>
<g>
<title>get_futex_key (2 samples, 0.02%)</title><rect x="162.1" y="627.0" width="0.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="165.1" y="638.0"></text>
</g>
<g>
<title>[unknown] (10 samples, 0.11%)</title><rect x="162.5" y="739.0" width="1.3" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="165.5" y="750.0"></text>
</g>
<g>
<title>__pthread_cond_wait (8 samples, 0.09%)</title><rect x="162.5" y="723.0" width="1.0" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="165.5" y="734.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (7 samples, 0.08%)</title><rect x="162.6" y="707.0" width="0.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="165.6" y="718.0"></text>
</g>
<g>
<title>do_syscall_64 (7 samples, 0.08%)</title><rect x="162.6" y="691.0" width="0.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="165.6" y="702.0"></text>
</g>
<g>
<title>__x64_sys_futex (5 samples, 0.06%)</title><rect x="162.9" y="675.0" width="0.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="165.9" y="686.0"></text>
</g>
<g>
<title>do_futex (4 samples, 0.05%)</title><rect x="162.9" y="659.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="165.9" y="670.0"></text>
</g>
<g>
<title>futex_wait (4 samples, 0.05%)</title><rect x="162.9" y="643.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="165.9" y="654.0"></text>
</g>
<g>
<title>plist_add (2 samples, 0.02%)</title><rect x="163.1" y="627.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="166.1" y="638.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (2 samples, 0.02%)</title><rect x="163.5" y="723.0" width="0.3" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="166.5" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (267 samples, 3.02%)</title><rect x="164.1" y="835.0" width="35.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="167.1" y="846.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (267 samples, 3.02%)</title><rect x="164.1" y="819.0" width="35.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="167.1" y="830.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (267 samples, 3.02%)</title><rect x="164.1" y="803.0" width="35.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="167.1" y="814.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (267 samples, 3.02%)</title><rect x="164.1" y="787.0" width="35.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="167.1" y="798.0">jav..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (265 samples, 3.00%)</title><rect x="164.3" y="771.0" width="35.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="167.3" y="782.0">jdk..</text>
</g>
<g>
<title>ThreadsListHandle::~ThreadsListHandle() (2 samples, 0.02%)</title><rect x="164.6" y="755.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="167.6" y="766.0"></text>
</g>
<g>
<title>Unsafe_Unpark (33 samples, 0.37%)</title><rect x="164.9" y="755.0" width="4.4" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="167.9" y="766.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (2 samples, 0.02%)</title><rect x="165.4" y="739.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="168.4" y="750.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (4 samples, 0.05%)</title><rect x="165.7" y="739.0" width="0.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="168.7" y="750.0"></text>
</g>
<g>
<title>java_lang_Thread::thread(oopDesc*) (2 samples, 0.02%)</title><rect x="166.6" y="739.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="169.6" y="750.0"></text>
</g>
<g>
<title>oopDesc::address_field(int) const (8 samples, 0.09%)</title><rect x="166.9" y="739.0" width="1.1" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="169.9" y="750.0"></text>
</g>
<g>
<title>pthread_mutex_lock (10 samples, 0.11%)</title><rect x="168.0" y="739.0" width="1.3" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="171.0" y="750.0"></text>
</g>
<g>
<title>__pthread_cond_signal (227 samples, 2.57%)</title><rect x="169.3" y="755.0" width="30.3" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="172.3" y="766.0">__..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (193 samples, 2.19%)</title><rect x="173.8" y="739.0" width="25.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="176.8" y="750.0">e..</text>
</g>
<g>
<title>do_syscall_64 (193 samples, 2.19%)</title><rect x="173.8" y="723.0" width="25.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="176.8" y="734.0">d..</text>
</g>
<g>
<title>__x64_sys_futex (178 samples, 2.02%)</title><rect x="175.8" y="707.0" width="23.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="178.8" y="718.0">_..</text>
</g>
<g>
<title>do_futex (176 samples, 1.99%)</title><rect x="176.0" y="691.0" width="23.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="179.0" y="702.0">d..</text>
</g>
<g>
<title>futex_wake (175 samples, 1.98%)</title><rect x="176.1" y="675.0" width="23.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="179.1" y="686.0">f..</text>
</g>
<g>
<title>get_futex_key (2 samples, 0.02%)</title><rect x="177.2" y="659.0" width="0.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="180.2" y="670.0"></text>
</g>
<g>
<title>mark_wake_futex (7 samples, 0.08%)</title><rect x="177.4" y="659.0" width="1.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="180.4" y="670.0"></text>
</g>
<g>
<title>wake_up_q (157 samples, 1.78%)</title><rect x="178.5" y="659.0" width="21.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="181.5" y="670.0"></text>
</g>
<g>
<title>try_to_wake_up (157 samples, 1.78%)</title><rect x="178.5" y="643.0" width="21.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="181.5" y="654.0"></text>
</g>
<g>
<title>__lock_text_start (156 samples, 1.77%)</title><rect x="178.6" y="627.0" width="20.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="181.6" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl$$Lambda$71/959231456.run (18 samples, 0.20%)</title><rect x="199.8" y="867.0" width="2.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="202.8" y="878.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.lambda$flush$6 (18 samples, 0.20%)</title><rect x="199.8" y="851.0" width="2.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="202.8" y="862.0"></text>
</g>
<g>
<title>ru/mail/polis/SSTable.write (18 samples, 0.20%)</title><rect x="199.8" y="835.0" width="2.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="202.8" y="846.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.write (15 samples, 0.17%)</title><rect x="200.2" y="819.0" width="2.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="203.2" y="830.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (13 samples, 0.15%)</title><rect x="200.2" y="803.0" width="1.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="203.2" y="814.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.writeFromNativeBuffer (11 samples, 0.12%)</title><rect x="200.3" y="787.0" width="1.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="203.3" y="798.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.write (11 samples, 0.12%)</title><rect x="200.3" y="771.0" width="1.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="203.3" y="782.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.write0 (11 samples, 0.12%)</title><rect x="200.3" y="755.0" width="1.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="203.3" y="766.0"></text>
</g>
<g>
<title>__libc_write (11 samples, 0.12%)</title><rect x="200.3" y="739.0" width="1.5" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="203.3" y="750.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (8 samples, 0.09%)</title><rect x="200.7" y="723.0" width="1.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="203.7" y="734.0"></text>
</g>
<g>
<title>do_syscall_64 (8 samples, 0.09%)</title><rect x="200.7" y="707.0" width="1.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="203.7" y="718.0"></text>
</g>
<g>
<title>__x64_sys_write (6 samples, 0.07%)</title><rect x="201.0" y="691.0" width="0.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="204.0" y="702.0"></text>
</g>
<g>
<title>ksys_write (6 samples, 0.07%)</title><rect x="201.0" y="675.0" width="0.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="204.0" y="686.0"></text>
</g>
<g>
<title>vfs_write (5 samples, 0.06%)</title><rect x="201.1" y="659.0" width="0.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="204.1" y="670.0"></text>
</g>
<g>
<title>__vfs_write (5 samples, 0.06%)</title><rect x="201.1" y="643.0" width="0.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="204.1" y="654.0"></text>
</g>
<g>
<title>new_sync_write (5 samples, 0.06%)</title><rect x="201.1" y="627.0" width="0.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="204.1" y="638.0"></text>
</g>
<g>
<title>ext4_file_write_iter (5 samples, 0.06%)</title><rect x="201.1" y="611.0" width="0.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="204.1" y="622.0"></text>
</g>
<g>
<title>__generic_file_write_iter (5 samples, 0.06%)</title><rect x="201.1" y="595.0" width="0.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="204.1" y="606.0"></text>
</g>
<g>
<title>generic_perform_write (4 samples, 0.05%)</title><rect x="201.2" y="579.0" width="0.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="204.2" y="590.0"></text>
</g>
<g>
<title>ext4_da_write_begin (2 samples, 0.02%)</title><rect x="201.2" y="563.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="204.2" y="574.0"></text>
</g>
<g>
<title>iov_iter_fault_in_readable (2 samples, 0.02%)</title><rect x="201.5" y="563.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="204.5" y="574.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (2 samples, 0.02%)</title><rect x="201.9" y="803.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="204.9" y="814.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThread.current (2 samples, 0.02%)</title><rect x="201.9" y="787.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="204.9" y="798.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivlev/ThreadController$$Lambda$68/1575687844.run (5,019 samples, 56.84%)</title><rect x="202.2" y="867.0" width="670.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="205.2" y="878.0">ru/mail/polis/service/ivlev/ThreadController$$Lambda$68/1575687844.run</text>
</g>
<g>
<title>ru/mail/polis/service/ivlev/ThreadController.lambda$put$2 (5,019 samples, 56.84%)</title><rect x="202.2" y="851.0" width="670.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="205.2" y="862.0">ru/mail/polis/service/ivlev/ThreadController.lambda$put$2</text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (2 samples, 0.02%)</title><rect x="205.4" y="835.0" width="0.2" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="208.4" y="846.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (2 samples, 0.02%)</title><rect x="205.6" y="835.0" width="0.3" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="208.6" y="846.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (1,172 samples, 13.27%)</title><rect x="205.9" y="835.0" width="156.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="208.9" y="846.0">one/nio/http/HttpSes..</text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (39 samples, 0.44%)</title><rect x="209.4" y="819.0" width="5.2" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="212.4" y="830.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (38 samples, 0.43%)</title><rect x="209.5" y="803.0" width="5.1" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="212.5" y="814.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (38 samples, 0.43%)</title><rect x="209.5" y="787.0" width="5.1" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="212.5" y="798.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.71] (34 samples, 0.39%)</title><rect x="209.7" y="771.0" width="4.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="212.7" y="782.0"></text>
</g>
<g>
<title>SpinPause (3 samples, 0.03%)</title><rect x="214.2" y="771.0" width="0.4" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="217.2" y="782.0"></text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (17 samples, 0.19%)</title><rect x="214.6" y="819.0" width="2.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="217.6" y="830.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (17 samples, 0.19%)</title><rect x="214.6" y="803.0" width="2.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="217.6" y="814.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (17 samples, 0.19%)</title><rect x="214.6" y="787.0" width="2.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="217.6" y="798.0"></text>
</g>
<g>
<title>gettimeofday (2 samples, 0.02%)</title><rect x="215.8" y="771.0" width="0.3" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="218.8" y="782.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (6 samples, 0.07%)</title><rect x="216.1" y="771.0" width="0.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="219.1" y="782.0"></text>
</g>
<g>
<title>gettimeofday (5 samples, 0.06%)</title><rect x="216.2" y="755.0" width="0.7" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="219.2" y="766.0"></text>
</g>
<g>
<title>[vdso] (4 samples, 0.05%)</title><rect x="216.3" y="739.0" width="0.6" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="219.3" y="750.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (1,081 samples, 12.24%)</title><rect x="216.9" y="819.0" width="144.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="219.9" y="830.0">one/nio/http/HttpS..</text>
</g>
<g>
<title>one/nio/http/Request.getHeader (2 samples, 0.02%)</title><rect x="217.0" y="803.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="220.0" y="814.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (36 samples, 0.41%)</title><rect x="217.3" y="803.0" width="4.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="220.3" y="814.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (4 samples, 0.05%)</title><rect x="219.5" y="787.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="222.5" y="798.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (4 samples, 0.05%)</title><rect x="219.5" y="771.0" width="0.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="222.5" y="782.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (3 samples, 0.03%)</title><rect x="219.7" y="755.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="222.7" y="766.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (3 samples, 0.03%)</title><rect x="219.7" y="739.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="222.7" y="750.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (3 samples, 0.03%)</title><rect x="219.7" y="723.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="222.7" y="734.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (2 samples, 0.02%)</title><rect x="219.8" y="707.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="222.8" y="718.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (2 samples, 0.02%)</title><rect x="219.8" y="691.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="222.8" y="702.0"></text>
</g>
<g>
<title>G1CollectedHeap::attempt_allocation_slow(unsigned long) (2 samples, 0.02%)</title><rect x="219.8" y="675.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="222.8" y="686.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (15 samples, 0.17%)</title><rect x="220.1" y="787.0" width="2.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="223.1" y="798.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (15 samples, 0.17%)</title><rect x="220.1" y="771.0" width="2.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="223.1" y="782.0"></text>
</g>
<g>
<title>java/lang/String.charAt (15 samples, 0.17%)</title><rect x="220.1" y="755.0" width="2.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="223.1" y="766.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (2 samples, 0.02%)</title><rect x="221.8" y="739.0" width="0.3" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="224.8" y="750.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (1,042 samples, 11.80%)</title><rect x="222.1" y="803.0" width="139.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="225.1" y="814.0">one/nio/net/Sessi..</text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (3 samples, 0.03%)</title><rect x="222.1" y="787.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="225.1" y="798.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (2 samples, 0.02%)</title><rect x="222.1" y="771.0" width="0.2" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="225.1" y="782.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (2 samples, 0.02%)</title><rect x="222.1" y="755.0" width="0.2" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="225.1" y="766.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (2 samples, 0.02%)</title><rect x="222.1" y="739.0" width="0.2" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="225.1" y="750.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (1,039 samples, 11.77%)</title><rect x="222.5" y="787.0" width="138.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="225.5" y="798.0">one/nio/net/Sessi..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (3 samples, 0.03%)</title><rect x="222.6" y="771.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="225.6" y="782.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (1,035 samples, 11.72%)</title><rect x="223.0" y="771.0" width="138.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="226.0" y="782.0">one/nio/net/Sessi..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (4 samples, 0.05%)</title><rect x="223.7" y="755.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="226.7" y="766.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (1,026 samples, 11.62%)</title><rect x="224.2" y="755.0" width="137.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="227.2" y="766.0">one/nio/net/Nativ..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (51 samples, 0.58%)</title><rect x="225.6" y="739.0" width="6.8" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="228.6" y="750.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (5 samples, 0.06%)</title><rect x="227.8" y="723.0" width="0.7" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="230.8" y="734.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (21 samples, 0.24%)</title><rect x="228.6" y="723.0" width="2.8" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="231.6" y="734.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (2 samples, 0.02%)</title><rect x="229.4" y="707.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="232.4" y="718.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (7 samples, 0.08%)</title><rect x="229.8" y="707.0" width="1.0" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="232.8" y="718.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (5 samples, 0.06%)</title><rect x="230.8" y="707.0" width="0.6" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="233.8" y="718.0"></text>
</g>
<g>
<title>memmove@plt (4 samples, 0.05%)</title><rect x="231.4" y="723.0" width="0.6" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="234.4" y="734.0"></text>
</g>
<g>
<title>void AccessInternal::arraycopy_conjoint&lt;signed char&gt;(signed char*, signed char*, unsigned long) (3 samples, 0.03%)</title><rect x="232.0" y="723.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="235.0" y="734.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (5 samples, 0.06%)</title><rect x="232.4" y="739.0" width="0.6" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="235.4" y="750.0"></text>
</g>
<g>
<title>__send (956 samples, 10.83%)</title><rect x="233.2" y="739.0" width="127.7" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="236.2" y="750.0">__send</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (890 samples, 10.08%)</title><rect x="242.0" y="723.0" width="118.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="245.0" y="734.0">entry_SYSCALL_..</text>
</g>
<g>
<title>__x64_sys_sendto (4 samples, 0.05%)</title><rect x="242.0" y="707.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="245.0" y="718.0"></text>
</g>
<g>
<title>do_syscall_64 (886 samples, 10.03%)</title><rect x="242.5" y="707.0" width="118.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="245.5" y="718.0">do_syscall_64</text>
</g>
<g>
<title>__x64_sys_sendto (869 samples, 9.84%)</title><rect x="244.8" y="691.0" width="116.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="247.8" y="702.0">__x64_sys_sendto</text>
</g>
<g>
<title>__sys_sendto (867 samples, 9.82%)</title><rect x="244.8" y="675.0" width="115.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="247.8" y="686.0">__sys_sendto</text>
</g>
<g>
<title>fput_many (2 samples, 0.02%)</title><rect x="245.2" y="659.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="248.2" y="670.0"></text>
</g>
<g>
<title>sock_sendmsg (850 samples, 9.63%)</title><rect x="245.5" y="659.0" width="113.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="248.5" y="670.0">sock_sendmsg</text>
</g>
<g>
<title>apparmor_socket_sendmsg (3 samples, 0.03%)</title><rect x="245.6" y="643.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="248.6" y="654.0"></text>
</g>
<g>
<title>inet6_sendmsg (843 samples, 9.55%)</title><rect x="246.0" y="643.0" width="112.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="249.0" y="654.0">inet6_sendmsg</text>
</g>
<g>
<title>release_sock (2 samples, 0.02%)</title><rect x="246.5" y="627.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="249.5" y="638.0"></text>
</g>
<g>
<title>tcp_sendmsg (836 samples, 9.47%)</title><rect x="246.8" y="627.0" width="111.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="249.8" y="638.0">tcp_sendmsg</text>
</g>
<g>
<title>_raw_spin_lock_bh (7 samples, 0.08%)</title><rect x="247.6" y="611.0" width="0.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="250.6" y="622.0"></text>
</g>
<g>
<title>release_sock (2 samples, 0.02%)</title><rect x="248.5" y="611.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="251.5" y="622.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (2 samples, 0.02%)</title><rect x="248.5" y="595.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="251.5" y="606.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (3 samples, 0.03%)</title><rect x="248.8" y="611.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="251.8" y="622.0"></text>
</g>
<g>
<title>tcp_push (4 samples, 0.05%)</title><rect x="249.3" y="611.0" width="0.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="252.3" y="622.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (811 samples, 9.18%)</title><rect x="250.0" y="611.0" width="108.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="253.0" y="622.0">tcp_sendmsg_l..</text>
</g>
<g>
<title>__check_object_size (11 samples, 0.12%)</title><rect x="251.7" y="595.0" width="1.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="254.7" y="606.0"></text>
</g>
<g>
<title>__virt_addr_valid (9 samples, 0.10%)</title><rect x="252.0" y="579.0" width="1.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="255.0" y="590.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (3 samples, 0.03%)</title><rect x="253.2" y="595.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="256.2" y="606.0"></text>
</g>
<g>
<title>_copy_from_iter_full (8 samples, 0.09%)</title><rect x="253.6" y="595.0" width="1.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="256.6" y="606.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (5 samples, 0.06%)</title><rect x="253.8" y="579.0" width="0.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="256.8" y="590.0"></text>
</g>
<g>
<title>iov_iter_advance (2 samples, 0.02%)</title><rect x="254.4" y="579.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="257.4" y="590.0"></text>
</g>
<g>
<title>sk_page_frag_refill (6 samples, 0.07%)</title><rect x="254.7" y="595.0" width="0.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="257.7" y="606.0"></text>
</g>
<g>
<title>skb_page_frag_refill (6 samples, 0.07%)</title><rect x="254.7" y="579.0" width="0.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="257.7" y="590.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (42 samples, 0.48%)</title><rect x="255.5" y="595.0" width="5.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="258.5" y="606.0"></text>
</g>
<g>
<title>__alloc_skb (38 samples, 0.43%)</title><rect x="255.6" y="579.0" width="5.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="258.6" y="590.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.0 (16 samples, 0.18%)</title><rect x="256.0" y="563.0" width="2.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="259.0" y="574.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (11 samples, 0.12%)</title><rect x="256.0" y="547.0" width="1.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="259.0" y="558.0"></text>
</g>
<g>
<title>__slab_alloc (2 samples, 0.02%)</title><rect x="257.2" y="531.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="260.2" y="542.0"></text>
</g>
<g>
<title>memset_erms (3 samples, 0.03%)</title><rect x="257.8" y="547.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="260.8" y="558.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (13 samples, 0.15%)</title><rect x="258.2" y="563.0" width="1.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="261.2" y="574.0"></text>
</g>
<g>
<title>ksize (4 samples, 0.05%)</title><rect x="259.9" y="563.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="262.9" y="574.0"></text>
</g>
<g>
<title>__ksize (4 samples, 0.05%)</title><rect x="259.9" y="547.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="262.9" y="558.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.0 (3 samples, 0.03%)</title><rect x="260.7" y="579.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="263.7" y="590.0"></text>
</g>
<g>
<title>skb_entail (4 samples, 0.05%)</title><rect x="261.1" y="595.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="264.1" y="606.0"></text>
</g>
<g>
<title>tcp_push (706 samples, 8.00%)</title><rect x="261.8" y="595.0" width="94.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="264.8" y="606.0">tcp_push</text>
</g>
<g>
<title>__tcp_push_pending_frames (705 samples, 7.98%)</title><rect x="261.8" y="579.0" width="94.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="264.8" y="590.0">__tcp_push_..</text>
</g>
<g>
<title>__tcp_transmit_skb (2 samples, 0.02%)</title><rect x="261.9" y="563.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="264.9" y="574.0"></text>
</g>
<g>
<title>ktime_get (2 samples, 0.02%)</title><rect x="262.2" y="563.0" width="0.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="265.2" y="574.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (2 samples, 0.02%)</title><rect x="262.6" y="563.0" width="0.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="265.6" y="574.0"></text>
</g>
<g>
<title>tcp_write_xmit (697 samples, 7.89%)</title><rect x="262.8" y="563.0" width="93.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="265.8" y="574.0">tcp_write_x..</text>
</g>
<g>
<title>__tcp_select_window (2 samples, 0.02%)</title><rect x="265.1" y="547.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="268.1" y="558.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (652 samples, 7.38%)</title><rect x="265.4" y="547.0" width="87.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="268.4" y="558.0">__tcp_tran..</text>
</g>
<g>
<title>ip_queue_xmit (609 samples, 6.90%)</title><rect x="269.4" y="531.0" width="81.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="272.4" y="542.0">ip_queue_..</text>
</g>
<g>
<title>__ip_queue_xmit (607 samples, 6.87%)</title><rect x="269.4" y="515.0" width="81.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="272.4" y="526.0">__ip_queu..</text>
</g>
<g>
<title>__sk_dst_check (3 samples, 0.03%)</title><rect x="270.9" y="499.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="273.9" y="510.0"></text>
</g>
<g>
<title>ipv4_dst_check (3 samples, 0.03%)</title><rect x="270.9" y="483.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="273.9" y="494.0"></text>
</g>
<g>
<title>ip_local_out (589 samples, 6.67%)</title><rect x="271.4" y="499.0" width="78.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="274.4" y="510.0">ip_local_..</text>
</g>
<g>
<title>ip_output (584 samples, 6.61%)</title><rect x="271.8" y="483.0" width="78.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="274.8" y="494.0">ip_output</text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (2 samples, 0.02%)</title><rect x="272.6" y="467.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="275.6" y="478.0"></text>
</g>
<g>
<title>ip_finish_output (576 samples, 6.52%)</title><rect x="272.9" y="467.0" width="76.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="275.9" y="478.0">ip_finis..</text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (7 samples, 0.08%)</title><rect x="273.0" y="451.0" width="0.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="276.0" y="462.0"></text>
</g>
<g>
<title>__ip_finish_output (563 samples, 6.38%)</title><rect x="273.9" y="451.0" width="75.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="276.9" y="462.0">__ip_fin..</text>
</g>
<g>
<title>ip_finish_output2 (560 samples, 6.34%)</title><rect x="274.3" y="435.0" width="74.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="277.3" y="446.0">ip_finis..</text>
</g>
<g>
<title>__local_bh_enable_ip (495 samples, 5.61%)</title><rect x="275.5" y="419.0" width="66.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="278.5" y="430.0">__local..</text>
</g>
<g>
<title>do_softirq.part.0 (494 samples, 5.59%)</title><rect x="275.7" y="403.0" width="66.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="278.7" y="414.0">do_soft..</text>
</g>
<g>
<title>do_softirq_own_stack (489 samples, 5.54%)</title><rect x="276.3" y="387.0" width="65.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="279.3" y="398.0">do_soft..</text>
</g>
<g>
<title>__softirqentry_text_start (488 samples, 5.53%)</title><rect x="276.3" y="371.0" width="65.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="279.3" y="382.0">__softi..</text>
</g>
<g>
<title>__usecs_to_jiffies (2 samples, 0.02%)</title><rect x="277.9" y="355.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="280.9" y="366.0"></text>
</g>
<g>
<title>net_rx_action (467 samples, 5.29%)</title><rect x="278.2" y="355.0" width="62.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="281.2" y="366.0">net_rx..</text>
</g>
<g>
<title>__kfree_skb_flush (3 samples, 0.03%)</title><rect x="278.7" y="339.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="281.7" y="350.0"></text>
</g>
<g>
<title>__netif_receive_skb (2 samples, 0.02%)</title><rect x="279.1" y="339.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="282.1" y="350.0"></text>
</g>
<g>
<title>process_backlog (457 samples, 5.18%)</title><rect x="279.5" y="339.0" width="61.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="282.5" y="350.0">proces..</text>
</g>
<g>
<title>__netif_receive_skb (449 samples, 5.08%)</title><rect x="280.6" y="323.0" width="60.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="283.6" y="334.0">__neti..</text>
</g>
<g>
<title>__netif_receive_skb_one_core (449 samples, 5.08%)</title><rect x="280.6" y="307.0" width="60.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="283.6" y="318.0">__neti..</text>
</g>
<g>
<title>__netif_receive_skb_core (7 samples, 0.08%)</title><rect x="281.0" y="291.0" width="0.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="284.0" y="302.0"></text>
</g>
<g>
<title>ip_rcv (437 samples, 4.95%)</title><rect x="281.9" y="291.0" width="58.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="284.9" y="302.0">ip_rcv</text>
</g>
<g>
<title>ip_local_deliver (2 samples, 0.02%)</title><rect x="282.3" y="275.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="285.3" y="286.0"></text>
</g>
<g>
<title>ip_rcv_core.isra.0 (2 samples, 0.02%)</title><rect x="282.6" y="275.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="285.6" y="286.0"></text>
</g>
<g>
<title>ip_rcv_finish (430 samples, 4.87%)</title><rect x="282.9" y="275.0" width="57.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="285.9" y="286.0">ip_rcv..</text>
</g>
<g>
<title>ip_local_deliver (430 samples, 4.87%)</title><rect x="282.9" y="259.0" width="57.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="285.9" y="270.0">ip_loc..</text>
</g>
<g>
<title>ip_local_deliver_finish (429 samples, 4.86%)</title><rect x="283.0" y="243.0" width="57.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="286.0" y="254.0">ip_loc..</text>
</g>
<g>
<title>ip_protocol_deliver_rcu (427 samples, 4.84%)</title><rect x="283.2" y="227.0" width="57.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="286.2" y="238.0">ip_pro..</text>
</g>
<g>
<title>_raw_spin_lock (3 samples, 0.03%)</title><rect x="283.6" y="211.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="286.6" y="222.0"></text>
</g>
<g>
<title>raw_local_deliver (3 samples, 0.03%)</title><rect x="284.0" y="211.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="287.0" y="222.0"></text>
</g>
<g>
<title>tcp_v4_rcv (417 samples, 4.72%)</title><rect x="284.5" y="211.0" width="55.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="287.5" y="222.0">tcp_v..</text>
</g>
<g>
<title>__inet_lookup_established (14 samples, 0.16%)</title><rect x="286.2" y="195.0" width="1.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="289.2" y="206.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (8 samples, 0.09%)</title><rect x="288.4" y="195.0" width="1.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="291.4" y="206.0"></text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (7 samples, 0.08%)</title><rect x="288.4" y="179.0" width="0.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="291.4" y="190.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (377 samples, 4.27%)</title><rect x="289.6" y="195.0" width="50.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="292.6" y="206.0">tcp_v..</text>
</g>
<g>
<title>ktime_get_seconds (3 samples, 0.03%)</title><rect x="289.8" y="179.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="292.8" y="190.0"></text>
</g>
<g>
<title>tcp_check_space (7 samples, 0.08%)</title><rect x="290.2" y="179.0" width="1.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="293.2" y="190.0"></text>
</g>
<g>
<title>tcp_data_ready (3 samples, 0.03%)</title><rect x="291.2" y="179.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="294.2" y="190.0"></text>
</g>
<g>
<title>tcp_rcv_established (362 samples, 4.10%)</title><rect x="291.6" y="179.0" width="48.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="294.6" y="190.0">tcp_..</text>
</g>
<g>
<title>__tcp_ack_snd_check (9 samples, 0.10%)</title><rect x="293.0" y="163.0" width="1.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="296.0" y="174.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (7 samples, 0.08%)</title><rect x="293.3" y="147.0" width="0.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="296.3" y="158.0"></text>
</g>
<g>
<title>mod_timer (2 samples, 0.02%)</title><rect x="293.6" y="131.0" width="0.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="296.6" y="142.0"></text>
</g>
<g>
<title>sk_reset_timer (3 samples, 0.03%)</title><rect x="293.8" y="131.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="296.8" y="142.0"></text>
</g>
<g>
<title>mod_timer (2 samples, 0.02%)</title><rect x="294.0" y="115.0" width="0.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="297.0" y="126.0"></text>
</g>
<g>
<title>bictcp_cong_avoid (4 samples, 0.05%)</title><rect x="294.2" y="163.0" width="0.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="297.2" y="174.0"></text>
</g>
<g>
<title>ktime_get (2 samples, 0.02%)</title><rect x="294.8" y="163.0" width="0.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="297.8" y="174.0"></text>
</g>
<g>
<title>sock_def_readable (4 samples, 0.05%)</title><rect x="295.2" y="163.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="298.2" y="174.0"></text>
</g>
<g>
<title>tcp_ack (80 samples, 0.91%)</title><rect x="295.7" y="163.0" width="10.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="298.7" y="174.0"></text>
</g>
<g>
<title>bictcp_cong_avoid (2 samples, 0.02%)</title><rect x="297.7" y="147.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="300.7" y="158.0"></text>
</g>
<g>
<title>rb_erase (2 samples, 0.02%)</title><rect x="298.0" y="147.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="301.0" y="158.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (51 samples, 0.58%)</title><rect x="298.5" y="147.0" width="6.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="301.5" y="158.0"></text>
</g>
<g>
<title>__kfree_skb (33 samples, 0.37%)</title><rect x="299.7" y="131.0" width="4.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="302.7" y="142.0"></text>
</g>
<g>
<title>kfree_skbmem (12 samples, 0.14%)</title><rect x="299.7" y="115.0" width="1.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="302.7" y="126.0"></text>
</g>
<g>
<title>kmem_cache_free (11 samples, 0.12%)</title><rect x="299.9" y="99.0" width="1.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="302.9" y="110.0"></text>
</g>
<g>
<title>skb_release_all (18 samples, 0.20%)</title><rect x="301.5" y="115.0" width="2.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="304.5" y="126.0"></text>
</g>
<g>
<title>skb_release_data (18 samples, 0.20%)</title><rect x="301.5" y="99.0" width="2.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="304.5" y="110.0"></text>
</g>
<g>
<title>skb_free_head (7 samples, 0.08%)</title><rect x="302.9" y="83.0" width="1.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="305.9" y="94.0"></text>
</g>
<g>
<title>kfree (7 samples, 0.08%)</title><rect x="302.9" y="67.0" width="1.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="305.9" y="78.0"></text>
</g>
<g>
<title>__slab_free (3 samples, 0.03%)</title><rect x="303.5" y="51.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="306.5" y="62.0"></text>
</g>
<g>
<title>skb_release_all (2 samples, 0.02%)</title><rect x="304.4" y="131.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="307.4" y="142.0"></text>
</g>
<g>
<title>tcp_ack_update_rtt.isra.0 (3 samples, 0.03%)</title><rect x="304.7" y="131.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="307.7" y="142.0"></text>
</g>
<g>
<title>tcp_rate_skb_delivered (2 samples, 0.02%)</title><rect x="305.1" y="131.0" width="0.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="308.1" y="142.0"></text>
</g>
<g>
<title>tcp_rack_advance (2 samples, 0.02%)</title><rect x="305.5" y="147.0" width="0.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="308.5" y="158.0"></text>
</g>
<g>
<title>tcp_rack_update_reo_wnd (2 samples, 0.02%)</title><rect x="305.7" y="147.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="308.7" y="158.0"></text>
</g>
<g>
<title>tcp_rate_gen (3 samples, 0.03%)</title><rect x="306.0" y="147.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="309.0" y="158.0"></text>
</g>
<g>
<title>tcp_data_ready (235 samples, 2.66%)</title><rect x="306.5" y="163.0" width="31.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="309.5" y="174.0">tc..</text>
</g>
<g>
<title>__wake_up_sync_key (2 samples, 0.02%)</title><rect x="306.5" y="147.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="309.5" y="158.0"></text>
</g>
<g>
<title>sock_def_readable (233 samples, 2.64%)</title><rect x="306.8" y="147.0" width="31.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="309.8" y="158.0">so..</text>
</g>
<g>
<title>__wake_up_sync_key (230 samples, 2.60%)</title><rect x="307.2" y="131.0" width="30.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="310.2" y="142.0">__..</text>
</g>
<g>
<title>__wake_up_common_lock (228 samples, 2.58%)</title><rect x="307.2" y="115.0" width="30.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="310.2" y="126.0">__..</text>
</g>
<g>
<title>__lock_text_start (226 samples, 2.56%)</title><rect x="307.5" y="99.0" width="30.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="310.5" y="110.0">__..</text>
</g>
<g>
<title>_raw_spin_lock_irqsave (2 samples, 0.02%)</title><rect x="337.7" y="115.0" width="0.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="340.7" y="126.0"></text>
</g>
<g>
<title>tcp_event_data_recv (3 samples, 0.03%)</title><rect x="337.9" y="163.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="340.9" y="174.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (7 samples, 0.08%)</title><rect x="338.3" y="163.0" width="1.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="341.3" y="174.0"></text>
</g>
<g>
<title>read_tsc (5 samples, 0.06%)</title><rect x="338.6" y="147.0" width="0.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="341.6" y="158.0"></text>
</g>
<g>
<title>tcp_queue_rcv (2 samples, 0.02%)</title><rect x="339.3" y="163.0" width="0.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="342.3" y="174.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (2 samples, 0.02%)</title><rect x="339.7" y="163.0" width="0.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="342.7" y="174.0"></text>
</g>
<g>
<title>tcp_v4_fill_cb (2 samples, 0.02%)</title><rect x="339.9" y="195.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="342.9" y="206.0"></text>
</g>
<g>
<title>process_backlog (7 samples, 0.08%)</title><rect x="340.6" y="355.0" width="0.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="343.6" y="366.0"></text>
</g>
<g>
<title>dev_queue_xmit (54 samples, 0.61%)</title><rect x="341.7" y="419.0" width="7.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="344.7" y="430.0"></text>
</g>
<g>
<title>__dev_queue_xmit (52 samples, 0.59%)</title><rect x="341.8" y="403.0" width="7.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="344.8" y="414.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (29 samples, 0.33%)</title><rect x="343.3" y="387.0" width="3.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="346.3" y="398.0"></text>
</g>
<g>
<title>loopback_xmit (21 samples, 0.24%)</title><rect x="343.8" y="371.0" width="2.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="346.8" y="382.0"></text>
</g>
<g>
<title>eth_type_trans (7 samples, 0.08%)</title><rect x="344.0" y="355.0" width="0.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="347.0" y="366.0"></text>
</g>
<g>
<title>netif_rx (9 samples, 0.10%)</title><rect x="344.9" y="355.0" width="1.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="347.9" y="366.0"></text>
</g>
<g>
<title>enqueue_to_backlog (2 samples, 0.02%)</title><rect x="344.9" y="339.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="347.9" y="350.0"></text>
</g>
<g>
<title>netif_rx_internal (7 samples, 0.08%)</title><rect x="345.2" y="339.0" width="0.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="348.2" y="350.0"></text>
</g>
<g>
<title>enqueue_to_backlog (6 samples, 0.07%)</title><rect x="345.3" y="323.0" width="0.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="348.3" y="334.0"></text>
</g>
<g>
<title>tcp_wfree (2 samples, 0.02%)</title><rect x="346.4" y="355.0" width="0.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="349.4" y="366.0"></text>
</g>
<g>
<title>skb_clone_tx_timestamp (2 samples, 0.02%)</title><rect x="346.6" y="371.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="349.6" y="382.0"></text>
</g>
<g>
<title>tcp_wfree (2 samples, 0.02%)</title><rect x="346.9" y="371.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="349.9" y="382.0"></text>
</g>
<g>
<title>validate_xmit_skb (9 samples, 0.10%)</title><rect x="347.6" y="387.0" width="1.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="350.6" y="398.0"></text>
</g>
<g>
<title>netif_skb_features (5 samples, 0.06%)</title><rect x="348.0" y="371.0" width="0.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="351.0" y="382.0"></text>
</g>
<g>
<title>do_softirq.part.0 (2 samples, 0.02%)</title><rect x="348.9" y="419.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="351.9" y="430.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (2 samples, 0.02%)</title><rect x="349.2" y="451.0" width="0.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="352.2" y="462.0"></text>
</g>
<g>
<title>ipv4_mtu (3 samples, 0.03%)</title><rect x="349.4" y="451.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="352.4" y="462.0"></text>
</g>
<g>
<title>ip_send_check (2 samples, 0.02%)</title><rect x="349.8" y="483.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="352.8" y="494.0"></text>
</g>
<g>
<title>ipv4_dst_check (2 samples, 0.02%)</title><rect x="350.2" y="499.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="353.2" y="510.0"></text>
</g>
<g>
<title>skb_clone (8 samples, 0.09%)</title><rect x="350.8" y="531.0" width="1.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="353.8" y="542.0"></text>
</g>
<g>
<title>__copy_skb_header (3 samples, 0.03%)</title><rect x="350.9" y="515.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="353.9" y="526.0"></text>
</g>
<g>
<title>__skb_clone (4 samples, 0.05%)</title><rect x="351.3" y="515.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="354.3" y="526.0"></text>
</g>
<g>
<title>skb_push (2 samples, 0.02%)</title><rect x="351.8" y="531.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="354.8" y="542.0"></text>
</g>
<g>
<title>tcp_options_write (2 samples, 0.02%)</title><rect x="352.1" y="531.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="355.1" y="542.0"></text>
</g>
<g>
<title>bictcp_cwnd_event (2 samples, 0.02%)</title><rect x="352.5" y="547.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="355.5" y="558.0"></text>
</g>
<g>
<title>ip_queue_xmit (3 samples, 0.03%)</title><rect x="352.8" y="547.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="355.8" y="558.0"></text>
</g>
<g>
<title>skb_clone (3 samples, 0.03%)</title><rect x="353.2" y="547.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="356.2" y="558.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (3 samples, 0.03%)</title><rect x="353.7" y="547.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="356.7" y="558.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (7 samples, 0.08%)</title><rect x="354.2" y="547.0" width="1.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="357.2" y="558.0"></text>
</g>
<g>
<title>sk_reset_timer (2 samples, 0.02%)</title><rect x="354.9" y="531.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="357.9" y="542.0"></text>
</g>
<g>
<title>mod_timer (2 samples, 0.02%)</title><rect x="354.9" y="515.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="357.9" y="526.0"></text>
</g>
<g>
<title>tcp_update_skb_after_send (3 samples, 0.03%)</title><rect x="355.2" y="547.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="358.2" y="558.0"></text>
</g>
<g>
<title>tcp_v4_send_check (3 samples, 0.03%)</title><rect x="355.6" y="547.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="358.6" y="558.0"></text>
</g>
<g>
<title>tcp_send_mss (17 samples, 0.19%)</title><rect x="356.1" y="595.0" width="2.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="359.1" y="606.0"></text>
</g>
<g>
<title>ipv4_mtu (6 samples, 0.07%)</title><rect x="356.4" y="579.0" width="0.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="359.4" y="590.0"></text>
</g>
<g>
<title>tcp_current_mss (9 samples, 0.10%)</title><rect x="357.2" y="579.0" width="1.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="360.2" y="590.0"></text>
</g>
<g>
<title>ipv4_mtu (2 samples, 0.02%)</title><rect x="358.1" y="563.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="361.1" y="574.0"></text>
</g>
<g>
<title>security_socket_sendmsg (2 samples, 0.02%)</title><rect x="358.8" y="643.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="361.8" y="654.0"></text>
</g>
<g>
<title>apparmor_socket_sendmsg (2 samples, 0.02%)</title><rect x="358.8" y="627.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="361.8" y="638.0"></text>
</g>
<g>
<title>sockfd_lookup_light (12 samples, 0.14%)</title><rect x="359.1" y="659.0" width="1.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="362.1" y="670.0"></text>
</g>
<g>
<title>__fdget (10 samples, 0.11%)</title><rect x="359.1" y="643.0" width="1.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="362.1" y="654.0"></text>
</g>
<g>
<title>__fget_light (10 samples, 0.11%)</title><rect x="359.1" y="627.0" width="1.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="362.1" y="638.0"></text>
</g>
<g>
<title>__fget (10 samples, 0.11%)</title><rect x="359.1" y="611.0" width="1.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="362.1" y="622.0"></text>
</g>
<g>
<title>__fget_light (2 samples, 0.02%)</title><rect x="360.4" y="643.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="363.4" y="654.0"></text>
</g>
<g>
<title>send@plt (2 samples, 0.02%)</title><rect x="361.1" y="739.0" width="0.2" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="364.1" y="750.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (9 samples, 0.10%)</title><rect x="361.3" y="819.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="364.3" y="830.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (5 samples, 0.06%)</title><rect x="361.9" y="803.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="364.9" y="814.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (5 samples, 0.06%)</title><rect x="361.9" y="787.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="364.9" y="798.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (3 samples, 0.03%)</title><rect x="362.5" y="835.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="365.5" y="846.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.upsert (181 samples, 2.05%)</title><rect x="362.9" y="835.0" width="24.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="365.9" y="846.0">r..</text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock (18 samples, 0.20%)</title><rect x="364.1" y="819.0" width="2.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="367.1" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireShared (18 samples, 0.20%)</title><rect x="364.1" y="803.0" width="2.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="367.1" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryAcquireShared (18 samples, 0.20%)</title><rect x="364.1" y="787.0" width="2.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="367.1" y="798.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (3 samples, 0.03%)</title><rect x="364.5" y="771.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="367.5" y="782.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.set (12 samples, 0.14%)</title><rect x="364.9" y="771.0" width="1.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="367.9" y="782.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.set (12 samples, 0.14%)</title><rect x="364.9" y="755.0" width="1.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="367.9" y="766.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap$Entry.&lt;init&gt; (11 samples, 0.12%)</title><rect x="365.1" y="739.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="368.1" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.unlock (3 samples, 0.03%)</title><rect x="366.5" y="819.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="369.5" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.releaseShared (3 samples, 0.03%)</title><rect x="366.5" y="803.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="369.5" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryReleaseShared (3 samples, 0.03%)</title><rect x="366.5" y="787.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="369.5" y="798.0"></text>
</g>
<g>
<title>ru/mail/polis/MemTable.upsert (150 samples, 1.70%)</title><rect x="367.1" y="819.0" width="20.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="370.1" y="830.0"></text>
</g>
<g>
<title>java/nio/Buffer.remaining (4 samples, 0.05%)</title><rect x="367.5" y="803.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="370.5" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (4 samples, 0.05%)</title><rect x="367.5" y="787.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="370.5" y="798.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (11 samples, 0.12%)</title><rect x="368.0" y="803.0" width="1.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="371.0" y="814.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (7 samples, 0.08%)</title><rect x="368.5" y="787.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="371.5" y="798.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (7 samples, 0.08%)</title><rect x="368.5" y="771.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="371.5" y="782.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (4 samples, 0.05%)</title><rect x="368.9" y="755.0" width="0.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="371.9" y="766.0"></text>
</g>
<g>
<title>gettimeofday (2 samples, 0.02%)</title><rect x="369.2" y="739.0" width="0.3" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="372.2" y="750.0"></text>
</g>
<g>
<title>[vdso] (2 samples, 0.02%)</title><rect x="369.2" y="723.0" width="0.3" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="372.2" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.put (131 samples, 1.48%)</title><rect x="369.5" y="803.0" width="17.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="372.5" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (131 samples, 1.48%)</title><rect x="369.5" y="787.0" width="17.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="372.5" y="798.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (13 samples, 0.15%)</title><rect x="370.4" y="771.0" width="1.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="373.4" y="782.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (12 samples, 0.14%)</title><rect x="370.5" y="755.0" width="1.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="373.5" y="766.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (2 samples, 0.02%)</title><rect x="372.2" y="771.0" width="0.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="375.2" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Index.&lt;init&gt; (46 samples, 0.52%)</title><rect x="372.4" y="771.0" width="6.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="375.4" y="782.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (3 samples, 0.03%)</title><rect x="378.2" y="755.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="381.2" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.addIndices (2 samples, 0.02%)</title><rect x="378.7" y="771.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="381.7" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.addIndices (2 samples, 0.02%)</title><rect x="378.7" y="755.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="381.7" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (60 samples, 0.68%)</title><rect x="379.0" y="771.0" width="8.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="382.0" y="782.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (56 samples, 0.63%)</title><rect x="379.5" y="755.0" width="7.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="382.5" y="766.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (54 samples, 0.61%)</title><rect x="379.8" y="739.0" width="7.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="382.8" y="750.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (54 samples, 0.61%)</title><rect x="379.8" y="723.0" width="7.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="382.8" y="734.0"></text>
</g>
<g>
<title>vectorizedMismatch (13 samples, 0.15%)</title><rect x="385.2" y="707.0" width="1.8" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="388.2" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/TopologyImpl.getNodeByKey (2 samples, 0.02%)</title><rect x="387.1" y="835.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="390.1" y="846.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivlev/ThreadController.equalsUrlNode (73 samples, 0.83%)</title><rect x="387.4" y="835.0" width="9.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="390.4" y="846.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/TopologyImpl.getNodeByKey (73 samples, 0.83%)</title><rect x="387.4" y="819.0" width="9.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="390.4" y="830.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/TopologyImpl.getNodeByKey (65 samples, 0.74%)</title><rect x="388.5" y="803.0" width="8.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="391.5" y="814.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (52 samples, 0.59%)</title><rect x="389.7" y="787.0" width="6.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="392.7" y="798.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (52 samples, 0.59%)</title><rect x="389.7" y="771.0" width="6.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="392.7" y="782.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (9 samples, 0.10%)</title><rect x="395.4" y="755.0" width="1.2" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="398.4" y="766.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (4 samples, 0.05%)</title><rect x="396.6" y="787.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="399.6" y="798.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1019384604.invoke (4 samples, 0.05%)</title><rect x="396.6" y="771.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="399.6" y="782.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (4 samples, 0.05%)</title><rect x="396.6" y="755.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="399.6" y="766.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (4 samples, 0.05%)</title><rect x="396.6" y="739.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="399.6" y="750.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (4 samples, 0.05%)</title><rect x="396.6" y="723.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="399.6" y="734.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (3 samples, 0.03%)</title><rect x="396.7" y="707.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="399.7" y="718.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (3 samples, 0.03%)</title><rect x="396.7" y="691.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="399.7" y="702.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (3 samples, 0.03%)</title><rect x="396.7" y="675.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="399.7" y="686.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (2 samples, 0.02%)</title><rect x="396.7" y="659.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="399.7" y="670.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (2 samples, 0.02%)</title><rect x="396.7" y="643.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="399.7" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivlev/ThreadController.sendResponseProxy (3,552 samples, 40.23%)</title><rect x="397.1" y="835.0" width="474.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="400.1" y="846.0">ru/mail/polis/service/ivlev/ThreadController.sendResponseProxy</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (1,432 samples, 16.22%)</title><rect x="397.5" y="819.0" width="191.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="400.5" y="830.0">one/nio/http/HttpSession...</text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (12 samples, 0.14%)</title><rect x="400.5" y="803.0" width="1.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="403.5" y="814.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (12 samples, 0.14%)</title><rect x="400.5" y="787.0" width="1.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="403.5" y="798.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (12 samples, 0.14%)</title><rect x="400.5" y="771.0" width="1.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="403.5" y="782.0"></text>
</g>
<g>
<title>gettimeofday (5 samples, 0.06%)</title><rect x="401.0" y="755.0" width="0.7" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="404.0" y="766.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (3 samples, 0.03%)</title><rect x="401.7" y="755.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="404.7" y="766.0"></text>
</g>
<g>
<title>gettimeofday (3 samples, 0.03%)</title><rect x="401.7" y="739.0" width="0.4" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="404.7" y="750.0"></text>
</g>
<g>
<title>[vdso] (2 samples, 0.02%)</title><rect x="401.8" y="723.0" width="0.3" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="404.8" y="734.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (1,389 samples, 15.73%)</title><rect x="402.1" y="803.0" width="185.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="405.1" y="814.0">one/nio/http/HttpSession..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (61 samples, 0.69%)</title><rect x="402.2" y="787.0" width="8.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="405.2" y="798.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (38 samples, 0.43%)</title><rect x="405.3" y="771.0" width="5.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="408.3" y="782.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (38 samples, 0.43%)</title><rect x="405.3" y="755.0" width="5.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="408.3" y="766.0"></text>
</g>
<g>
<title>java/lang/String.charAt (38 samples, 0.43%)</title><rect x="405.3" y="739.0" width="5.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="408.3" y="750.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (3 samples, 0.03%)</title><rect x="410.0" y="723.0" width="0.4" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="413.0" y="734.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (1,327 samples, 15.03%)</title><rect x="410.4" y="787.0" width="177.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="413.4" y="798.0">one/nio/net/Session.write</text>
</g>
<g>
<title>one/nio/net/Session.write (1,327 samples, 15.03%)</title><rect x="410.4" y="771.0" width="177.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="413.4" y="782.0">one/nio/net/Session.write</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (2 samples, 0.02%)</title><rect x="410.8" y="755.0" width="0.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="413.8" y="766.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (1,322 samples, 14.97%)</title><rect x="411.0" y="755.0" width="176.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="414.0" y="766.0">one/nio/net/Session$Arr..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (2 samples, 0.02%)</title><rect x="411.4" y="739.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="414.4" y="750.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (1,317 samples, 14.92%)</title><rect x="411.7" y="739.0" width="176.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="414.7" y="750.0">one/nio/net/NativeSocke..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (20 samples, 0.23%)</title><rect x="412.8" y="723.0" width="2.6" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="415.8" y="734.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (2 samples, 0.02%)</title><rect x="413.8" y="707.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="416.8" y="718.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (9 samples, 0.10%)</title><rect x="414.2" y="707.0" width="1.2" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="417.2" y="718.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (2 samples, 0.02%)</title><rect x="414.8" y="691.0" width="0.2" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="417.8" y="702.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (2 samples, 0.02%)</title><rect x="415.0" y="691.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="418.0" y="702.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (3 samples, 0.03%)</title><rect x="415.4" y="723.0" width="0.5" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="418.4" y="734.0"></text>
</g>
<g>
<title>__send (1,285 samples, 14.55%)</title><rect x="416.0" y="723.0" width="171.7" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="419.0" y="734.0">__send</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1,222 samples, 13.84%)</title><rect x="424.4" y="707.0" width="163.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="427.4" y="718.0">entry_SYSCALL_64_afte..</text>
</g>
<g>
<title>__x64_sys_sendto (2 samples, 0.02%)</title><rect x="424.4" y="691.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="427.4" y="702.0"></text>
</g>
<g>
<title>do_syscall_64 (1,219 samples, 13.81%)</title><rect x="424.8" y="691.0" width="162.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="427.8" y="702.0">do_syscall_64</text>
</g>
<g>
<title>__x64_sys_sendto (1,196 samples, 13.54%)</title><rect x="427.9" y="675.0" width="159.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="430.9" y="686.0">__x64_sys_sendto</text>
</g>
<g>
<title>__sys_sendto (1,194 samples, 13.52%)</title><rect x="427.9" y="659.0" width="159.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="430.9" y="670.0">__sys_sendto</text>
</g>
<g>
<title>fput_many (3 samples, 0.03%)</title><rect x="428.4" y="643.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="431.4" y="654.0"></text>
</g>
<g>
<title>sock_sendmsg (1,167 samples, 13.22%)</title><rect x="428.8" y="643.0" width="156.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="431.8" y="654.0">sock_sendmsg</text>
</g>
<g>
<title>apparmor_socket_sendmsg (4 samples, 0.05%)</title><rect x="428.8" y="627.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="431.8" y="638.0"></text>
</g>
<g>
<title>inet6_sendmsg (1,161 samples, 13.15%)</title><rect x="429.3" y="627.0" width="155.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="432.3" y="638.0">inet6_sendmsg</text>
</g>
<g>
<title>tcp_sendmsg (1,155 samples, 13.08%)</title><rect x="430.1" y="611.0" width="154.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="433.1" y="622.0">tcp_sendmsg</text>
</g>
<g>
<title>__x86_indirect_thunk_rax (2 samples, 0.02%)</title><rect x="430.1" y="595.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="433.1" y="606.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (5 samples, 0.06%)</title><rect x="430.4" y="595.0" width="0.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="433.4" y="606.0"></text>
</g>
<g>
<title>release_sock (6 samples, 0.07%)</title><rect x="431.1" y="595.0" width="0.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="434.1" y="606.0"></text>
</g>
<g>
<title>_raw_spin_unlock_bh (3 samples, 0.03%)</title><rect x="431.5" y="579.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="434.5" y="590.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (3 samples, 0.03%)</title><rect x="431.5" y="563.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="434.5" y="574.0"></text>
</g>
<g>
<title>tcp_push (4 samples, 0.05%)</title><rect x="432.0" y="595.0" width="0.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="435.0" y="606.0"></text>
</g>
<g>
<title>tcp_rate_check_app_limited (3 samples, 0.03%)</title><rect x="432.6" y="595.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="435.6" y="606.0"></text>
</g>
<g>
<title>tcp_release_cb (2 samples, 0.02%)</title><rect x="433.0" y="595.0" width="0.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="436.0" y="606.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (1,126 samples, 12.75%)</title><rect x="433.4" y="595.0" width="150.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="436.4" y="606.0">tcp_sendmsg_locked</text>
</g>
<g>
<title>__check_object_size (4 samples, 0.05%)</title><rect x="435.8" y="579.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="438.8" y="590.0"></text>
</g>
<g>
<title>__virt_addr_valid (2 samples, 0.02%)</title><rect x="436.0" y="563.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="439.0" y="574.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (2 samples, 0.02%)</title><rect x="436.3" y="579.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="439.3" y="590.0"></text>
</g>
<g>
<title>_copy_from_iter_full (8 samples, 0.09%)</title><rect x="436.6" y="579.0" width="1.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="439.6" y="590.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (5 samples, 0.06%)</title><rect x="436.7" y="563.0" width="0.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="439.7" y="574.0"></text>
</g>
<g>
<title>iov_iter_advance (2 samples, 0.02%)</title><rect x="437.4" y="563.0" width="0.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="440.4" y="574.0"></text>
</g>
<g>
<title>sk_page_frag_refill (8 samples, 0.09%)</title><rect x="437.6" y="579.0" width="1.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="440.6" y="590.0"></text>
</g>
<g>
<title>skb_page_frag_refill (8 samples, 0.09%)</title><rect x="437.6" y="563.0" width="1.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="440.6" y="574.0"></text>
</g>
<g>
<title>alloc_pages_current (5 samples, 0.06%)</title><rect x="438.0" y="547.0" width="0.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="441.0" y="558.0"></text>
</g>
<g>
<title>__alloc_pages_nodemask (5 samples, 0.06%)</title><rect x="438.0" y="531.0" width="0.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="441.0" y="542.0"></text>
</g>
<g>
<title>get_page_from_freelist (5 samples, 0.06%)</title><rect x="438.0" y="515.0" width="0.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="441.0" y="526.0"></text>
</g>
<g>
<title>clear_page_erms (4 samples, 0.05%)</title><rect x="438.0" y="499.0" width="0.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="441.0" y="510.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (64 samples, 0.72%)</title><rect x="438.7" y="579.0" width="8.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="441.7" y="590.0"></text>
</g>
<g>
<title>__alloc_skb (60 samples, 0.68%)</title><rect x="439.1" y="563.0" width="8.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="442.1" y="574.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (2 samples, 0.02%)</title><rect x="439.5" y="547.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="442.5" y="558.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.0 (28 samples, 0.32%)</title><rect x="439.8" y="547.0" width="3.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="442.8" y="558.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (21 samples, 0.24%)</title><rect x="439.8" y="531.0" width="2.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="442.8" y="542.0"></text>
</g>
<g>
<title>kmalloc_slab (5 samples, 0.06%)</title><rect x="441.9" y="515.0" width="0.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="444.9" y="526.0"></text>
</g>
<g>
<title>memcg_kmem_put_cache (2 samples, 0.02%)</title><rect x="442.6" y="531.0" width="0.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="445.6" y="542.0"></text>
</g>
<g>
<title>memset_erms (5 samples, 0.06%)</title><rect x="442.8" y="531.0" width="0.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="445.8" y="542.0"></text>
</g>
<g>
<title>__ksize (2 samples, 0.02%)</title><rect x="443.5" y="547.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="446.5" y="558.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (18 samples, 0.20%)</title><rect x="443.8" y="547.0" width="2.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="446.8" y="558.0"></text>
</g>
<g>
<title>ksize (4 samples, 0.05%)</title><rect x="446.2" y="547.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="449.2" y="558.0"></text>
</g>
<g>
<title>__ksize (4 samples, 0.05%)</title><rect x="446.2" y="531.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="449.2" y="542.0"></text>
</g>
<g>
<title>skb_entail (14 samples, 0.16%)</title><rect x="447.3" y="579.0" width="1.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="450.3" y="590.0"></text>
</g>
<g>
<title>tcp_chrono_start (2 samples, 0.02%)</title><rect x="448.9" y="563.0" width="0.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="451.9" y="574.0"></text>
</g>
<g>
<title>tcp_current_mss (4 samples, 0.05%)</title><rect x="449.1" y="579.0" width="0.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="452.1" y="590.0"></text>
</g>
<g>
<title>tcp_push (980 samples, 11.10%)</title><rect x="449.7" y="579.0" width="130.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="452.7" y="590.0">tcp_push</text>
</g>
<g>
<title>__tcp_push_pending_frames (979 samples, 11.09%)</title><rect x="449.7" y="563.0" width="130.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="452.7" y="574.0">__tcp_push_pendi..</text>
</g>
<g>
<title>__tcp_transmit_skb (3 samples, 0.03%)</title><rect x="449.7" y="547.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="452.7" y="558.0"></text>
</g>
<g>
<title>tcp_write_xmit (976 samples, 11.05%)</title><rect x="450.1" y="547.0" width="130.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="453.1" y="558.0">tcp_write_xmit</text>
</g>
<g>
<title>__tcp_transmit_skb (910 samples, 10.31%)</title><rect x="452.7" y="531.0" width="121.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="455.7" y="542.0">__tcp_transmit_..</text>
</g>
<g>
<title>__ip_queue_xmit (3 samples, 0.03%)</title><rect x="454.7" y="515.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="457.7" y="526.0"></text>
</g>
<g>
<title>__skb_clone (2 samples, 0.02%)</title><rect x="455.1" y="515.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="458.1" y="526.0"></text>
</g>
<g>
<title>__tcp_v4_send_check (2 samples, 0.02%)</title><rect x="455.4" y="515.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="458.4" y="526.0"></text>
</g>
<g>
<title>bictcp_cwnd_event (4 samples, 0.05%)</title><rect x="455.7" y="515.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="458.7" y="526.0"></text>
</g>
<g>
<title>ip_queue_xmit (868 samples, 9.83%)</title><rect x="456.2" y="515.0" width="116.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="459.2" y="526.0">ip_queue_xmit</text>
</g>
<g>
<title>__ip_queue_xmit (865 samples, 9.80%)</title><rect x="456.2" y="499.0" width="115.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="459.2" y="510.0">__ip_queue_xmit</text>
</g>
<g>
<title>__sk_dst_check (9 samples, 0.10%)</title><rect x="457.5" y="483.0" width="1.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="460.5" y="494.0"></text>
</g>
<g>
<title>ipv4_dst_check (8 samples, 0.09%)</title><rect x="457.7" y="467.0" width="1.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="460.7" y="478.0"></text>
</g>
<g>
<title>ip_local_out (838 samples, 9.49%)</title><rect x="458.9" y="483.0" width="112.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="461.9" y="494.0">ip_local_out</text>
</g>
<g>
<title>__ip_local_out (4 samples, 0.05%)</title><rect x="459.0" y="467.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="462.0" y="478.0"></text>
</g>
<g>
<title>ip_send_check (3 samples, 0.03%)</title><rect x="459.1" y="451.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="462.1" y="462.0"></text>
</g>
<g>
<title>ip_output (831 samples, 9.41%)</title><rect x="459.5" y="467.0" width="111.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="462.5" y="478.0">ip_output</text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (2 samples, 0.02%)</title><rect x="459.8" y="451.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="462.8" y="462.0"></text>
</g>
<g>
<title>ip_finish_output (826 samples, 9.35%)</title><rect x="460.2" y="451.0" width="110.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="463.2" y="462.0">ip_finish_out..</text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (7 samples, 0.08%)</title><rect x="460.2" y="435.0" width="1.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="463.2" y="446.0"></text>
</g>
<g>
<title>__ip_finish_output (817 samples, 9.25%)</title><rect x="461.2" y="435.0" width="109.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="464.2" y="446.0">__ip_finish_o..</text>
</g>
<g>
<title>ip_finish_output2 (807 samples, 9.14%)</title><rect x="462.5" y="419.0" width="107.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="465.5" y="430.0">ip_finish_out..</text>
</g>
<g>
<title>__local_bh_enable_ip (739 samples, 8.37%)</title><rect x="463.6" y="403.0" width="98.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="466.6" y="414.0">__local_bh_e..</text>
</g>
<g>
<title>do_softirq.part.0 (739 samples, 8.37%)</title><rect x="463.6" y="387.0" width="98.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="466.6" y="398.0">do_softirq.p..</text>
</g>
<g>
<title>do_softirq_own_stack (737 samples, 8.35%)</title><rect x="463.8" y="371.0" width="98.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="466.8" y="382.0">do_softirq_o..</text>
</g>
<g>
<title>__softirqentry_text_start (731 samples, 8.28%)</title><rect x="463.8" y="355.0" width="97.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="466.8" y="366.0">__softirqen..</text>
</g>
<g>
<title>__x86_indirect_thunk_rax (2 samples, 0.02%)</title><rect x="465.2" y="339.0" width="0.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="468.2" y="350.0"></text>
</g>
<g>
<title>net_rx_action (716 samples, 8.11%)</title><rect x="465.4" y="339.0" width="95.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="468.4" y="350.0">net_rx_action</text>
</g>
<g>
<title>__kfree_skb_flush (6 samples, 0.07%)</title><rect x="466.4" y="323.0" width="0.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="469.4" y="334.0"></text>
</g>
<g>
<title>process_backlog (701 samples, 7.94%)</title><rect x="467.4" y="323.0" width="93.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="470.4" y="334.0">process_bac..</text>
</g>
<g>
<title>__netif_receive_skb (686 samples, 7.77%)</title><rect x="469.0" y="307.0" width="91.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="472.0" y="318.0">__netif_rec..</text>
</g>
<g>
<title>__netif_receive_skb_one_core (684 samples, 7.75%)</title><rect x="469.0" y="291.0" width="91.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="472.0" y="302.0">__netif_rec..</text>
</g>
<g>
<title>__netif_receive_skb_core (22 samples, 0.25%)</title><rect x="469.3" y="275.0" width="2.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="472.3" y="286.0"></text>
</g>
<g>
<title>ip_rcv (657 samples, 7.44%)</title><rect x="472.2" y="275.0" width="87.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="475.2" y="286.0">ip_rcv</text>
</g>
<g>
<title>ip_rcv_core.isra.0 (3 samples, 0.03%)</title><rect x="472.6" y="259.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="475.6" y="270.0"></text>
</g>
<g>
<title>ip_rcv_finish (651 samples, 7.37%)</title><rect x="473.0" y="259.0" width="87.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="476.0" y="270.0">ip_rcv_fin..</text>
</g>
<g>
<title>ip_local_deliver (649 samples, 7.35%)</title><rect x="473.2" y="243.0" width="86.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="476.2" y="254.0">ip_local_d..</text>
</g>
<g>
<title>ip_local_deliver_finish (642 samples, 7.27%)</title><rect x="473.8" y="227.0" width="85.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="476.8" y="238.0">ip_local_d..</text>
</g>
<g>
<title>ip_protocol_deliver_rcu (641 samples, 7.26%)</title><rect x="473.8" y="211.0" width="85.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="476.8" y="222.0">ip_protoco..</text>
</g>
<g>
<title>_raw_spin_lock (7 samples, 0.08%)</title><rect x="474.7" y="195.0" width="0.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="477.7" y="206.0"></text>
</g>
<g>
<title>raw_local_deliver (5 samples, 0.06%)</title><rect x="475.6" y="195.0" width="0.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="478.6" y="206.0"></text>
</g>
<g>
<title>tcp_v4_rcv (620 samples, 7.02%)</title><rect x="476.7" y="195.0" width="82.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="479.7" y="206.0">tcp_v4_rcv</text>
</g>
<g>
<title>__inet_lookup_established (46 samples, 0.52%)</title><rect x="478.8" y="179.0" width="6.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="481.8" y="190.0"></text>
</g>
<g>
<title>inet_ehashfn (3 samples, 0.03%)</title><rect x="484.5" y="163.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="487.5" y="174.0"></text>
</g>
<g>
<title>ipv4_dst_check (2 samples, 0.02%)</title><rect x="485.1" y="179.0" width="0.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="488.1" y="190.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (23 samples, 0.26%)</title><rect x="485.3" y="179.0" width="3.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="488.3" y="190.0"></text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (8 samples, 0.09%)</title><rect x="485.9" y="163.0" width="1.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="488.9" y="174.0"></text>
</g>
<g>
<title>apparmor_socket_sock_rcv_skb (5 samples, 0.06%)</title><rect x="486.9" y="163.0" width="0.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="489.9" y="174.0"></text>
</g>
<g>
<title>security_sock_rcv_skb (6 samples, 0.07%)</title><rect x="487.6" y="163.0" width="0.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="490.6" y="174.0"></text>
</g>
<g>
<title>tcp_rcv_established (2 samples, 0.02%)</title><rect x="488.5" y="179.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="491.5" y="190.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (529 samples, 5.99%)</title><rect x="488.8" y="179.0" width="70.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="491.8" y="190.0">tcp_v4_d..</text>
</g>
<g>
<title>ktime_get_seconds (3 samples, 0.03%)</title><rect x="489.1" y="163.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="492.1" y="174.0"></text>
</g>
<g>
<title>tcp_ack (2 samples, 0.02%)</title><rect x="489.5" y="163.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="492.5" y="174.0"></text>
</g>
<g>
<title>tcp_check_space (8 samples, 0.09%)</title><rect x="489.8" y="163.0" width="1.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="492.8" y="174.0"></text>
</g>
<g>
<title>tcp_data_ready (3 samples, 0.03%)</title><rect x="490.8" y="163.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="493.8" y="174.0"></text>
</g>
<g>
<title>tcp_event_data_recv (2 samples, 0.02%)</title><rect x="491.2" y="163.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="494.2" y="174.0"></text>
</g>
<g>
<title>tcp_rcv_established (508 samples, 5.75%)</title><rect x="491.6" y="163.0" width="67.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="494.6" y="174.0">tcp_rcv..</text>
</g>
<g>
<title>__tcp_ack_snd_check (14 samples, 0.16%)</title><rect x="493.5" y="147.0" width="1.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="496.5" y="158.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (14 samples, 0.16%)</title><rect x="493.5" y="131.0" width="1.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="496.5" y="142.0"></text>
</g>
<g>
<title>sk_reset_timer (13 samples, 0.15%)</title><rect x="493.6" y="115.0" width="1.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="496.6" y="126.0"></text>
</g>
<g>
<title>mod_timer (13 samples, 0.15%)</title><rect x="493.6" y="99.0" width="1.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="496.6" y="110.0"></text>
</g>
<g>
<title>__lock_text_start (11 samples, 0.12%)</title><rect x="493.9" y="83.0" width="1.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="496.9" y="94.0"></text>
</g>
<g>
<title>bictcp_cong_avoid (3 samples, 0.03%)</title><rect x="495.5" y="147.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="498.5" y="158.0"></text>
</g>
<g>
<title>ktime_get_seconds (2 samples, 0.02%)</title><rect x="496.0" y="147.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="499.0" y="158.0"></text>
</g>
<g>
<title>tcp_ack (128 samples, 1.45%)</title><rect x="496.4" y="147.0" width="17.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="499.4" y="158.0"></text>
</g>
<g>
<title>bictcp_acked (3 samples, 0.03%)</title><rect x="499.4" y="131.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="502.4" y="142.0"></text>
</g>
<g>
<title>tcp_chrono_stop (2 samples, 0.02%)</title><rect x="500.2" y="131.0" width="0.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="503.2" y="142.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (84 samples, 0.95%)</title><rect x="500.4" y="131.0" width="11.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="503.4" y="142.0"></text>
</g>
<g>
<title>__kfree_skb (47 samples, 0.53%)</title><rect x="503.0" y="115.0" width="6.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="506.0" y="126.0"></text>
</g>
<g>
<title>kfree_skbmem (10 samples, 0.11%)</title><rect x="503.0" y="99.0" width="1.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="506.0" y="110.0"></text>
</g>
<g>
<title>kmem_cache_free (10 samples, 0.11%)</title><rect x="503.0" y="83.0" width="1.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="506.0" y="94.0"></text>
</g>
<g>
<title>__slab_free (3 samples, 0.03%)</title><rect x="503.9" y="67.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="506.9" y="78.0"></text>
</g>
<g>
<title>skb_release_all (36 samples, 0.41%)</title><rect x="504.3" y="99.0" width="4.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="507.3" y="110.0"></text>
</g>
<g>
<title>skb_release_data (33 samples, 0.37%)</title><rect x="504.6" y="83.0" width="4.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="507.6" y="94.0"></text>
</g>
<g>
<title>skb_free_head (10 samples, 0.11%)</title><rect x="507.7" y="67.0" width="1.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="510.7" y="78.0"></text>
</g>
<g>
<title>kfree (10 samples, 0.11%)</title><rect x="507.7" y="51.0" width="1.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="510.7" y="62.0"></text>
</g>
<g>
<title>__slab_free (5 samples, 0.06%)</title><rect x="508.3" y="35.0" width="0.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="511.3" y="46.0"></text>
</g>
<g>
<title>bictcp_acked (6 samples, 0.07%)</title><rect x="509.4" y="115.0" width="0.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="512.4" y="126.0"></text>
</g>
<g>
<title>tcp_ack_update_rtt.isra.0 (7 samples, 0.08%)</title><rect x="510.5" y="115.0" width="0.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="513.5" y="126.0"></text>
</g>
<g>
<title>tcp_rack_update_reo_wnd (2 samples, 0.02%)</title><rect x="511.9" y="131.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="514.9" y="142.0"></text>
</g>
<g>
<title>tcp_rate_gen (4 samples, 0.05%)</title><rect x="512.2" y="131.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="515.2" y="142.0"></text>
</g>
<g>
<title>tcp_rate_skb_delivered (2 samples, 0.02%)</title><rect x="512.7" y="131.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="515.7" y="142.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (3 samples, 0.03%)</title><rect x="513.0" y="131.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="516.0" y="142.0"></text>
</g>
<g>
<title>tcp_data_ready (319 samples, 3.61%)</title><rect x="513.5" y="147.0" width="42.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="516.5" y="158.0">tcp_..</text>
</g>
<g>
<title>sock_def_readable (319 samples, 3.61%)</title><rect x="513.5" y="131.0" width="42.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="516.5" y="142.0">sock..</text>
</g>
<g>
<title>__wake_up_common_lock (4 samples, 0.05%)</title><rect x="514.1" y="115.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="517.1" y="126.0"></text>
</g>
<g>
<title>__wake_up_sync_key (311 samples, 3.52%)</title><rect x="514.6" y="115.0" width="41.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="517.6" y="126.0">__w..</text>
</g>
<g>
<title>__wake_up_common_lock (311 samples, 3.52%)</title><rect x="514.6" y="99.0" width="41.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="517.6" y="110.0">__w..</text>
</g>
<g>
<title>__lock_text_start (310 samples, 3.51%)</title><rect x="514.7" y="83.0" width="41.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="517.7" y="94.0">__l..</text>
</g>
<g>
<title>tcp_event_data_recv (9 samples, 0.10%)</title><rect x="556.2" y="147.0" width="1.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="559.2" y="158.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (5 samples, 0.06%)</title><rect x="557.4" y="147.0" width="0.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="560.4" y="158.0"></text>
</g>
<g>
<title>read_tsc (3 samples, 0.03%)</title><rect x="557.6" y="131.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="560.6" y="142.0"></text>
</g>
<g>
<title>tcp_queue_rcv (7 samples, 0.08%)</title><rect x="558.0" y="147.0" width="1.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="561.0" y="158.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (3 samples, 0.03%)</title><rect x="559.1" y="147.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="562.1" y="158.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (2 samples, 0.02%)</title><rect x="559.6" y="227.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="562.6" y="238.0"></text>
</g>
<g>
<title>ip_rcv_finish (2 samples, 0.02%)</title><rect x="560.2" y="275.0" width="0.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="563.2" y="286.0"></text>
</g>
<g>
<title>ip_rcv (2 samples, 0.02%)</title><rect x="560.4" y="291.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="563.4" y="302.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (3 samples, 0.03%)</title><rect x="560.7" y="307.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="563.7" y="318.0"></text>
</g>
<g>
<title>process_backlog (3 samples, 0.03%)</title><rect x="561.1" y="339.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="564.1" y="350.0"></text>
</g>
<g>
<title>net_rx_action (5 samples, 0.06%)</title><rect x="561.6" y="355.0" width="0.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="564.6" y="366.0"></text>
</g>
<g>
<title>dev_queue_xmit (60 samples, 0.68%)</title><rect x="562.3" y="403.0" width="8.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="565.3" y="414.0"></text>
</g>
<g>
<title>__dev_queue_xmit (58 samples, 0.66%)</title><rect x="562.3" y="387.0" width="7.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="565.3" y="398.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (36 samples, 0.41%)</title><rect x="563.0" y="371.0" width="4.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="566.0" y="382.0"></text>
</g>
<g>
<title>loopback_xmit (30 samples, 0.34%)</title><rect x="563.4" y="355.0" width="4.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="566.4" y="366.0"></text>
</g>
<g>
<title>eth_type_trans (8 samples, 0.09%)</title><rect x="563.8" y="339.0" width="1.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="566.8" y="350.0"></text>
</g>
<g>
<title>netif_rx (15 samples, 0.17%)</title><rect x="564.9" y="339.0" width="2.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="567.9" y="350.0"></text>
</g>
<g>
<title>enqueue_to_backlog (2 samples, 0.02%)</title><rect x="565.0" y="323.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="568.0" y="334.0"></text>
</g>
<g>
<title>netif_rx_internal (12 samples, 0.14%)</title><rect x="565.3" y="323.0" width="1.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="568.3" y="334.0"></text>
</g>
<g>
<title>enqueue_to_backlog (11 samples, 0.12%)</title><rect x="565.4" y="307.0" width="1.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="568.4" y="318.0"></text>
</g>
<g>
<title>netif_rx_internal (2 samples, 0.02%)</title><rect x="566.9" y="339.0" width="0.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="569.9" y="350.0"></text>
</g>
<g>
<title>tcp_wfree (2 samples, 0.02%)</title><rect x="567.1" y="339.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="570.1" y="350.0"></text>
</g>
<g>
<title>skb_clone_tx_timestamp (2 samples, 0.02%)</title><rect x="567.5" y="355.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="570.5" y="366.0"></text>
</g>
<g>
<title>loopback_xmit (3 samples, 0.03%)</title><rect x="567.8" y="371.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="570.8" y="382.0"></text>
</g>
<g>
<title>netdev_core_pick_tx (2 samples, 0.02%)</title><rect x="568.2" y="371.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="571.2" y="382.0"></text>
</g>
<g>
<title>validate_xmit_skb (9 samples, 0.10%)</title><rect x="568.7" y="371.0" width="1.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="571.7" y="382.0"></text>
</g>
<g>
<title>netif_skb_features (2 samples, 0.02%)</title><rect x="569.7" y="355.0" width="0.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="572.7" y="366.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (2 samples, 0.02%)</title><rect x="570.1" y="387.0" width="0.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="573.1" y="398.0"></text>
</g>
<g>
<title>ip_send_check (2 samples, 0.02%)</title><rect x="570.6" y="467.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="573.6" y="478.0"></text>
</g>
<g>
<title>ip_output (4 samples, 0.05%)</title><rect x="570.9" y="483.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="573.9" y="494.0"></text>
</g>
<g>
<title>ipv4_dst_check (3 samples, 0.03%)</title><rect x="571.4" y="483.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="574.4" y="494.0"></text>
</g>
<g>
<title>ip_copy_addrs (2 samples, 0.02%)</title><rect x="571.8" y="499.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="574.8" y="510.0"></text>
</g>
<g>
<title>skb_clone (9 samples, 0.10%)</title><rect x="572.2" y="515.0" width="1.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="575.2" y="526.0"></text>
</g>
<g>
<title>__copy_skb_header (3 samples, 0.03%)</title><rect x="572.5" y="499.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="575.5" y="510.0"></text>
</g>
<g>
<title>__skb_clone (4 samples, 0.05%)</title><rect x="572.9" y="499.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="575.9" y="510.0"></text>
</g>
<g>
<title>tcp_rate_skb_sent (2 samples, 0.02%)</title><rect x="573.7" y="515.0" width="0.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="576.7" y="526.0"></text>
</g>
<g>
<title>tcp_update_skb_after_send (2 samples, 0.02%)</title><rect x="573.9" y="515.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="576.9" y="526.0"></text>
</g>
<g>
<title>bictcp_cwnd_event (3 samples, 0.03%)</title><rect x="574.5" y="531.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="577.5" y="542.0"></text>
</g>
<g>
<title>ip_queue_xmit (2 samples, 0.02%)</title><rect x="574.9" y="531.0" width="0.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="577.9" y="542.0"></text>
</g>
<g>
<title>rb_first (2 samples, 0.02%)</title><rect x="575.3" y="531.0" width="0.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="578.3" y="542.0"></text>
</g>
<g>
<title>read_tsc (3 samples, 0.03%)</title><rect x="575.5" y="531.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="578.5" y="542.0"></text>
</g>
<g>
<title>skb_clone (3 samples, 0.03%)</title><rect x="575.9" y="531.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="578.9" y="542.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (13 samples, 0.15%)</title><rect x="576.5" y="531.0" width="1.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="579.5" y="542.0"></text>
</g>
<g>
<title>tcp_rearm_rto (7 samples, 0.08%)</title><rect x="577.3" y="515.0" width="0.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="580.3" y="526.0"></text>
</g>
<g>
<title>sk_reset_timer (6 samples, 0.07%)</title><rect x="577.4" y="499.0" width="0.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="580.4" y="510.0"></text>
</g>
<g>
<title>mod_timer (5 samples, 0.06%)</title><rect x="577.5" y="483.0" width="0.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="580.5" y="494.0"></text>
</g>
<g>
<title>__lock_text_start (5 samples, 0.06%)</title><rect x="577.5" y="467.0" width="0.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="580.5" y="478.0"></text>
</g>
<g>
<title>tcp_options_write (4 samples, 0.05%)</title><rect x="578.2" y="531.0" width="0.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="581.2" y="542.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (4 samples, 0.05%)</title><rect x="579.2" y="531.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="582.2" y="542.0"></text>
</g>
<g>
<title>tcp_v4_send_check (4 samples, 0.05%)</title><rect x="580.0" y="531.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="583.0" y="542.0"></text>
</g>
<g>
<title>tcp_send_mss (23 samples, 0.26%)</title><rect x="580.6" y="579.0" width="3.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="583.6" y="590.0"></text>
</g>
<g>
<title>ipv4_mtu (7 samples, 0.08%)</title><rect x="581.2" y="563.0" width="0.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="584.2" y="574.0"></text>
</g>
<g>
<title>tcp_current_mss (11 samples, 0.12%)</title><rect x="582.1" y="563.0" width="1.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="585.1" y="574.0"></text>
</g>
<g>
<title>ipv4_mtu (2 samples, 0.02%)</title><rect x="583.3" y="547.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="586.3" y="558.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (4 samples, 0.05%)</title><rect x="583.8" y="595.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="586.8" y="606.0"></text>
</g>
<g>
<title>sockfd_lookup_light (20 samples, 0.23%)</title><rect x="584.8" y="643.0" width="2.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="587.8" y="654.0"></text>
</g>
<g>
<title>__fdget (16 samples, 0.18%)</title><rect x="584.8" y="627.0" width="2.1" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="587.8" y="638.0"></text>
</g>
<g>
<title>__fget_light (16 samples, 0.18%)</title><rect x="584.8" y="611.0" width="2.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="587.8" y="622.0"></text>
</g>
<g>
<title>__fget (16 samples, 0.18%)</title><rect x="584.8" y="595.0" width="2.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="587.8" y="606.0"></text>
</g>
<g>
<title>__fget_light (4 samples, 0.05%)</title><rect x="586.9" y="627.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="589.9" y="638.0"></text>
</g>
<g>
<title>import_single_range (2 samples, 0.02%)</title><rect x="587.4" y="659.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="590.4" y="670.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (9 samples, 0.10%)</title><rect x="587.7" y="803.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="590.7" y="814.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (7 samples, 0.08%)</title><rect x="588.0" y="787.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="591.0" y="798.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (7 samples, 0.08%)</title><rect x="588.0" y="771.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="591.0" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/TopologyImpl.getNodeByKey (33 samples, 0.37%)</title><rect x="588.9" y="819.0" width="4.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="591.9" y="830.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/TopologyImpl.getNodeByKey (31 samples, 0.35%)</title><rect x="589.2" y="803.0" width="4.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="592.2" y="814.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (23 samples, 0.26%)</title><rect x="589.8" y="787.0" width="3.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="592.8" y="798.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (23 samples, 0.26%)</title><rect x="589.8" y="771.0" width="3.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="592.8" y="782.0"></text>
</g>
<g>
<title>jbyte_arraycopy (2 samples, 0.02%)</title><rect x="592.7" y="755.0" width="0.2" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="595.7" y="766.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (3 samples, 0.03%)</title><rect x="592.9" y="787.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="595.9" y="798.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1019384604.invoke (3 samples, 0.03%)</title><rect x="592.9" y="771.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="595.9" y="782.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (3 samples, 0.03%)</title><rect x="592.9" y="755.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="595.9" y="766.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.prepend (2 samples, 0.02%)</title><rect x="592.9" y="739.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="595.9" y="750.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (2 samples, 0.02%)</title><rect x="592.9" y="723.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="595.9" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivlev/ThreadController.proxy (2,084 samples, 23.60%)</title><rect x="593.3" y="819.0" width="278.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="596.3" y="830.0">ru/mail/polis/service/ivlev/ThreadCon..</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (2,082 samples, 23.58%)</title><rect x="593.6" y="803.0" width="278.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="596.6" y="814.0">one/nio/http/HttpClient.invoke</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (2,082 samples, 23.58%)</title><rect x="593.6" y="787.0" width="278.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="596.6" y="798.0">one/nio/http/HttpClient.invoke</text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (6 samples, 0.07%)</title><rect x="595.6" y="771.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="598.6" y="782.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (6 samples, 0.07%)</title><rect x="595.6" y="755.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="598.6" y="766.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (6 samples, 0.07%)</title><rect x="595.6" y="739.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="598.6" y="750.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.&lt;init&gt; (526 samples, 5.96%)</title><rect x="596.4" y="771.0" width="70.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="599.4" y="782.0">one/nio/..</text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (20 samples, 0.23%)</title><rect x="602.8" y="755.0" width="2.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="605.8" y="766.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (18 samples, 0.20%)</title><rect x="603.1" y="739.0" width="2.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="606.1" y="750.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (18 samples, 0.20%)</title><rect x="603.1" y="723.0" width="2.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="606.1" y="734.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (17 samples, 0.19%)</title><rect x="603.2" y="707.0" width="2.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="606.2" y="718.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (2 samples, 0.02%)</title><rect x="603.2" y="691.0" width="0.3" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="606.2" y="702.0"></text>
</g>
<g>
<title>G1CollectedHeap::mem_allocate(unsigned long, bool*) (6 samples, 0.07%)</title><rect x="603.6" y="691.0" width="0.8" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="606.6" y="702.0"></text>
</g>
<g>
<title>G1CollectedHeap::attempt_allocation_slow(unsigned long) (3 samples, 0.03%)</title><rect x="603.9" y="675.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="606.9" y="686.0"></text>
</g>
<g>
<title>MutatorAllocRegion::retire(bool) (2 samples, 0.02%)</title><rect x="604.0" y="659.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="607.0" y="670.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (4 samples, 0.05%)</title><rect x="604.9" y="691.0" width="0.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="607.9" y="702.0"></text>
</g>
<g>
<title>ThreadLocalAllocBuffer::clear_before_allocation() (3 samples, 0.03%)</title><rect x="604.9" y="675.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="607.9" y="686.0"></text>
</g>
<g>
<title>HandleMark::initialize(Thread*) (2 samples, 0.02%)</title><rect x="605.1" y="659.0" width="0.2" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="608.1" y="670.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (453 samples, 5.13%)</title><rect x="605.5" y="755.0" width="60.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="608.5" y="766.0">one/ni..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (35 samples, 0.40%)</title><rect x="606.7" y="739.0" width="4.7" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="609.7" y="750.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (2 samples, 0.02%)</title><rect x="607.5" y="723.0" width="0.3" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="610.5" y="734.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (3 samples, 0.03%)</title><rect x="607.8" y="723.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="610.8" y="734.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (2 samples, 0.02%)</title><rect x="608.2" y="723.0" width="0.2" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="611.2" y="734.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (17 samples, 0.19%)</title><rect x="608.4" y="723.0" width="2.3" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="611.4" y="734.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (4 samples, 0.05%)</title><rect x="608.8" y="707.0" width="0.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="611.8" y="718.0"></text>
</g>
<g>
<title>ResourceMark::reset_to_mark() (2 samples, 0.02%)</title><rect x="609.4" y="707.0" width="0.2" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="612.4" y="718.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (4 samples, 0.05%)</title><rect x="609.6" y="707.0" width="0.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="612.6" y="718.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (3 samples, 0.03%)</title><rect x="610.3" y="707.0" width="0.4" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="613.3" y="718.0"></text>
</g>
<g>
<title>ResourceMark::reset_to_mark() (2 samples, 0.02%)</title><rect x="610.4" y="691.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="613.4" y="702.0"></text>
</g>
<g>
<title>memmove@plt (2 samples, 0.02%)</title><rect x="610.7" y="723.0" width="0.3" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="613.7" y="734.0"></text>
</g>
<g>
<title>void AccessInternal::arraycopy_conjoint&lt;signed char&gt;(signed char*, signed char*, unsigned long) (3 samples, 0.03%)</title><rect x="611.0" y="723.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="614.0" y="734.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (7 samples, 0.08%)</title><rect x="611.4" y="739.0" width="0.9" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="614.4" y="750.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (9 samples, 0.10%)</title><rect x="612.3" y="739.0" width="1.2" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="615.3" y="750.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (4 samples, 0.05%)</title><rect x="613.5" y="739.0" width="0.5" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="616.5" y="750.0"></text>
</g>
<g>
<title>recv (389 samples, 4.41%)</title><rect x="614.0" y="739.0" width="52.0" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="617.0" y="750.0">recv</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (316 samples, 3.58%)</title><rect x="623.8" y="723.0" width="42.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="626.8" y="734.0">entr..</text>
</g>
<g>
<title>__x64_sys_recvfrom (2 samples, 0.02%)</title><rect x="623.8" y="707.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="626.8" y="718.0"></text>
</g>
<g>
<title>do_syscall_64 (314 samples, 3.56%)</title><rect x="624.1" y="707.0" width="41.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="627.1" y="718.0">do_..</text>
</g>
<g>
<title>__x64_sys_recvfrom (298 samples, 3.37%)</title><rect x="626.2" y="691.0" width="39.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="629.2" y="702.0">__x..</text>
</g>
<g>
<title>__sys_recvfrom (296 samples, 3.35%)</title><rect x="626.2" y="675.0" width="39.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="629.2" y="686.0">__s..</text>
</g>
<g>
<title>fput_many (3 samples, 0.03%)</title><rect x="627.1" y="659.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="630.1" y="670.0"></text>
</g>
<g>
<title>sock_recvmsg (278 samples, 3.15%)</title><rect x="627.7" y="659.0" width="37.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="630.7" y="670.0">soc..</text>
</g>
<g>
<title>apparmor_socket_recvmsg (4 samples, 0.05%)</title><rect x="627.9" y="643.0" width="0.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="630.9" y="654.0"></text>
</g>
<g>
<title>inet6_recvmsg (265 samples, 3.00%)</title><rect x="628.5" y="643.0" width="35.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="631.5" y="654.0">ine..</text>
</g>
<g>
<title>tcp_recvmsg (259 samples, 2.93%)</title><rect x="629.3" y="627.0" width="34.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="632.3" y="638.0">tc..</text>
</g>
<g>
<title>__kfree_skb (14 samples, 0.16%)</title><rect x="635.1" y="611.0" width="1.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="638.1" y="622.0"></text>
</g>
<g>
<title>skb_release_all (12 samples, 0.14%)</title><rect x="635.4" y="595.0" width="1.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="638.4" y="606.0"></text>
</g>
<g>
<title>skb_release_head_state (6 samples, 0.07%)</title><rect x="635.7" y="579.0" width="0.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="638.7" y="590.0"></text>
</g>
<g>
<title>dst_release (6 samples, 0.07%)</title><rect x="635.7" y="563.0" width="0.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="638.7" y="574.0"></text>
</g>
<g>
<title>sock_rfree (4 samples, 0.05%)</title><rect x="636.5" y="579.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="639.5" y="590.0"></text>
</g>
<g>
<title>__skb_datagram_iter (2 samples, 0.02%)</title><rect x="637.0" y="611.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="640.0" y="622.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (5 samples, 0.06%)</title><rect x="637.3" y="611.0" width="0.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="640.3" y="622.0"></text>
</g>
<g>
<title>release_sock (2 samples, 0.02%)</title><rect x="638.1" y="611.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="641.1" y="622.0"></text>
</g>
<g>
<title>sk_wait_data (62 samples, 0.70%)</title><rect x="638.4" y="611.0" width="8.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="641.4" y="622.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (5 samples, 0.06%)</title><rect x="639.0" y="595.0" width="0.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="642.0" y="606.0"></text>
</g>
<g>
<title>add_wait_queue (6 samples, 0.07%)</title><rect x="639.8" y="595.0" width="0.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="642.8" y="606.0"></text>
</g>
<g>
<title>__lock_text_start (6 samples, 0.07%)</title><rect x="639.8" y="579.0" width="0.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="642.8" y="590.0"></text>
</g>
<g>
<title>remove_wait_queue (2 samples, 0.02%)</title><rect x="640.8" y="595.0" width="0.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="643.8" y="606.0"></text>
</g>
<g>
<title>__lock_text_start (2 samples, 0.02%)</title><rect x="640.8" y="579.0" width="0.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="643.8" y="590.0"></text>
</g>
<g>
<title>tcp_release_cb (2 samples, 0.02%)</title><rect x="641.2" y="595.0" width="0.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="644.2" y="606.0"></text>
</g>
<g>
<title>wait_woken (39 samples, 0.44%)</title><rect x="641.4" y="595.0" width="5.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="644.4" y="606.0"></text>
</g>
<g>
<title>__mod_timer (2 samples, 0.02%)</title><rect x="641.7" y="579.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="644.7" y="590.0"></text>
</g>
<g>
<title>schedule_timeout (34 samples, 0.39%)</title><rect x="642.1" y="579.0" width="4.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="645.1" y="590.0"></text>
</g>
<g>
<title>__mod_timer (23 samples, 0.26%)</title><rect x="642.1" y="563.0" width="3.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="645.1" y="574.0"></text>
</g>
<g>
<title>__lock_text_start (19 samples, 0.22%)</title><rect x="642.2" y="547.0" width="2.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="645.2" y="558.0"></text>
</g>
<g>
<title>lock_timer_base (3 samples, 0.03%)</title><rect x="644.8" y="547.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="647.8" y="558.0"></text>
</g>
<g>
<title>schedule (10 samples, 0.11%)</title><rect x="645.3" y="563.0" width="1.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="648.3" y="574.0"></text>
</g>
<g>
<title>__schedule (7 samples, 0.08%)</title><rect x="645.7" y="547.0" width="0.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="648.7" y="558.0"></text>
</g>
<g>
<title>finish_task_switch (4 samples, 0.05%)</title><rect x="646.1" y="531.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="649.1" y="542.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (110 samples, 1.25%)</title><rect x="646.6" y="611.0" width="14.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="649.6" y="622.0"></text>
</g>
<g>
<title>__skb_datagram_iter (109 samples, 1.23%)</title><rect x="646.6" y="595.0" width="14.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="649.6" y="606.0"></text>
</g>
<g>
<title>__check_object_size (2 samples, 0.02%)</title><rect x="650.1" y="579.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="653.1" y="590.0"></text>
</g>
<g>
<title>simple_copy_to_iter (79 samples, 0.89%)</title><rect x="650.6" y="579.0" width="10.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="653.6" y="590.0"></text>
</g>
<g>
<title>__check_object_size (21 samples, 0.24%)</title><rect x="650.8" y="563.0" width="2.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="653.8" y="574.0"></text>
</g>
<g>
<title>__virt_addr_valid (7 samples, 0.08%)</title><rect x="652.7" y="547.0" width="0.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="655.7" y="558.0"></text>
</g>
<g>
<title>__virt_addr_valid (3 samples, 0.03%)</title><rect x="653.6" y="563.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="656.6" y="574.0"></text>
</g>
<g>
<title>_copy_to_iter (47 samples, 0.53%)</title><rect x="654.0" y="563.0" width="6.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="657.0" y="574.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (40 samples, 0.45%)</title><rect x="654.5" y="547.0" width="5.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="657.5" y="558.0"></text>
</g>
<g>
<title>copyout (3 samples, 0.03%)</title><rect x="659.9" y="547.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="662.9" y="558.0"></text>
</g>
<g>
<title>check_stack_object (4 samples, 0.05%)</title><rect x="660.3" y="563.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="663.3" y="574.0"></text>
</g>
<g>
<title>copyout (3 samples, 0.03%)</title><rect x="660.8" y="563.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="663.8" y="574.0"></text>
</g>
<g>
<title>tcp_cleanup_rbuf (5 samples, 0.06%)</title><rect x="661.3" y="611.0" width="0.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="664.3" y="622.0"></text>
</g>
<g>
<title>tcp_rcv_space_adjust (12 samples, 0.14%)</title><rect x="662.1" y="611.0" width="1.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="665.1" y="622.0"></text>
</g>
<g>
<title>ktime_get (2 samples, 0.02%)</title><rect x="662.4" y="595.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="665.4" y="606.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (8 samples, 0.09%)</title><rect x="662.7" y="595.0" width="1.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="665.7" y="606.0"></text>
</g>
<g>
<title>read_tsc (5 samples, 0.06%)</title><rect x="663.1" y="579.0" width="0.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="666.1" y="590.0"></text>
</g>
<g>
<title>security_socket_recvmsg (6 samples, 0.07%)</title><rect x="663.9" y="643.0" width="0.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="666.9" y="654.0"></text>
</g>
<g>
<title>apparmor_socket_recvmsg (5 samples, 0.06%)</title><rect x="664.0" y="627.0" width="0.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="667.0" y="638.0"></text>
</g>
<g>
<title>aa_sk_perm (5 samples, 0.06%)</title><rect x="664.0" y="611.0" width="0.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="667.0" y="622.0"></text>
</g>
<g>
<title>sockfd_lookup_light (7 samples, 0.08%)</title><rect x="664.8" y="659.0" width="0.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="667.8" y="670.0"></text>
</g>
<g>
<title>__fdget (5 samples, 0.06%)</title><rect x="664.8" y="643.0" width="0.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="667.8" y="654.0"></text>
</g>
<g>
<title>__fget_light (5 samples, 0.06%)</title><rect x="664.8" y="627.0" width="0.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="667.8" y="638.0"></text>
</g>
<g>
<title>__fget (5 samples, 0.06%)</title><rect x="664.8" y="611.0" width="0.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="667.8" y="622.0"></text>
</g>
<g>
<title>__fget_light (2 samples, 0.02%)</title><rect x="665.5" y="643.0" width="0.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="668.5" y="654.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.writeFully (5 samples, 0.06%)</title><rect x="666.0" y="755.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="669.0" y="766.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readResponse (128 samples, 1.45%)</title><rect x="666.7" y="771.0" width="17.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="669.7" y="782.0"></text>
</g>
<g>
<title>java/lang/String.substring (12 samples, 0.14%)</title><rect x="667.2" y="755.0" width="1.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="670.2" y="766.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (6 samples, 0.07%)</title><rect x="668.0" y="739.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="671.0" y="750.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (6 samples, 0.07%)</title><rect x="668.0" y="723.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="671.0" y="734.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readLine (53 samples, 0.60%)</title><rect x="668.8" y="755.0" width="7.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="671.8" y="766.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (3 samples, 0.03%)</title><rect x="670.3" y="739.0" width="0.4" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="673.3" y="750.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (39 samples, 0.44%)</title><rect x="670.7" y="739.0" width="5.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="673.7" y="750.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (38 samples, 0.43%)</title><rect x="670.8" y="723.0" width="5.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="673.8" y="734.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (14 samples, 0.16%)</title><rect x="675.9" y="755.0" width="1.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="678.9" y="766.0"></text>
</g>
<g>
<title>one/nio/http/Response.addHeader (9 samples, 0.10%)</title><rect x="677.8" y="755.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="680.8" y="766.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2 samples, 0.02%)</title><rect x="678.7" y="739.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="681.7" y="750.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (36 samples, 0.41%)</title><rect x="679.0" y="755.0" width="4.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="682.0" y="766.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (20 samples, 0.23%)</title><rect x="681.1" y="739.0" width="2.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="684.1" y="750.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (20 samples, 0.23%)</title><rect x="681.1" y="723.0" width="2.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="684.1" y="734.0"></text>
</g>
<g>
<title>jbyte_arraycopy (3 samples, 0.03%)</title><rect x="683.0" y="707.0" width="0.4" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="686.0" y="718.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (3 samples, 0.03%)</title><rect x="683.4" y="707.0" width="0.4" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="686.4" y="718.0"></text>
</g>
<g>
<title>one/nio/http/Request.toBytes (65 samples, 0.74%)</title><rect x="683.8" y="771.0" width="8.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="686.8" y="782.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (30 samples, 0.34%)</title><rect x="688.5" y="755.0" width="4.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="691.5" y="766.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (30 samples, 0.34%)</title><rect x="688.5" y="739.0" width="4.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="691.5" y="750.0"></text>
</g>
<g>
<title>java/lang/String.charAt (30 samples, 0.34%)</title><rect x="688.5" y="723.0" width="4.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="691.5" y="734.0"></text>
</g>
<g>
<title>jbyte_arraycopy (2 samples, 0.02%)</title><rect x="691.5" y="707.0" width="0.3" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="694.5" y="718.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (5 samples, 0.06%)</title><rect x="691.8" y="707.0" width="0.7" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="694.8" y="718.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (10 samples, 0.11%)</title><rect x="692.5" y="771.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="695.5" y="782.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (7 samples, 0.08%)</title><rect x="692.9" y="755.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="695.9" y="766.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (7 samples, 0.08%)</title><rect x="692.9" y="739.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="695.9" y="750.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (2 samples, 0.02%)</title><rect x="693.5" y="723.0" width="0.3" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="696.5" y="734.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (2 samples, 0.02%)</title><rect x="693.8" y="771.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="696.8" y="782.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.setTimeout (289 samples, 3.27%)</title><rect x="694.1" y="771.0" width="38.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="697.1" y="782.0">one..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_setTimeout (3 samples, 0.03%)</title><rect x="695.8" y="755.0" width="0.4" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="698.8" y="766.0"></text>
</g>
<g>
<title>setsockopt (273 samples, 3.09%)</title><rect x="696.2" y="755.0" width="36.5" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="699.2" y="766.0">set..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (162 samples, 1.83%)</title><rect x="711.1" y="739.0" width="21.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="714.1" y="750.0">e..</text>
</g>
<g>
<title>__x64_sys_setsockopt (8 samples, 0.09%)</title><rect x="711.1" y="723.0" width="1.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="714.1" y="734.0"></text>
</g>
<g>
<title>do_syscall_64 (154 samples, 1.74%)</title><rect x="712.1" y="723.0" width="20.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="715.1" y="734.0"></text>
</g>
<g>
<title>__x64_sys_setsockopt (117 samples, 1.33%)</title><rect x="717.1" y="707.0" width="15.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="720.1" y="718.0"></text>
</g>
<g>
<title>__sys_setsockopt (114 samples, 1.29%)</title><rect x="717.1" y="691.0" width="15.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="720.1" y="702.0"></text>
</g>
<g>
<title>__cgroup_bpf_run_filter_setsockopt (3 samples, 0.03%)</title><rect x="718.1" y="675.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="721.1" y="686.0"></text>
</g>
<g>
<title>__get_user_4 (9 samples, 0.10%)</title><rect x="718.5" y="675.0" width="1.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="721.5" y="686.0"></text>
</g>
<g>
<title>apparmor_socket_setsockopt (6 samples, 0.07%)</title><rect x="719.7" y="675.0" width="0.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="722.7" y="686.0"></text>
</g>
<g>
<title>bpf_prog_array_is_empty (6 samples, 0.07%)</title><rect x="720.5" y="675.0" width="0.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="723.5" y="686.0"></text>
</g>
<g>
<title>fput_many (4 samples, 0.05%)</title><rect x="721.3" y="675.0" width="0.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="724.3" y="686.0"></text>
</g>
<g>
<title>release_sock (3 samples, 0.03%)</title><rect x="721.9" y="675.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="724.9" y="686.0"></text>
</g>
<g>
<title>security_socket_setsockopt (5 samples, 0.06%)</title><rect x="722.3" y="675.0" width="0.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="725.3" y="686.0"></text>
</g>
<g>
<title>apparmor_socket_setsockopt (3 samples, 0.03%)</title><rect x="722.5" y="659.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="725.5" y="670.0"></text>
</g>
<g>
<title>aa_sk_perm (3 samples, 0.03%)</title><rect x="722.5" y="643.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="725.5" y="654.0"></text>
</g>
<g>
<title>sock_setsockopt (44 samples, 0.50%)</title><rect x="722.9" y="675.0" width="5.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="725.9" y="686.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (8 samples, 0.09%)</title><rect x="724.0" y="659.0" width="1.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="727.0" y="670.0"></text>
</g>
<g>
<title>lock_sock_nested (2 samples, 0.02%)</title><rect x="725.2" y="659.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="728.2" y="670.0"></text>
</g>
<g>
<title>release_sock (5 samples, 0.06%)</title><rect x="725.5" y="659.0" width="0.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="728.5" y="670.0"></text>
</g>
<g>
<title>tcp_release_cb (2 samples, 0.02%)</title><rect x="725.9" y="643.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="728.9" y="654.0"></text>
</g>
<g>
<title>sock_set_timeout (18 samples, 0.20%)</title><rect x="726.2" y="659.0" width="2.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="729.2" y="670.0"></text>
</g>
<g>
<title>copy_user_generic_unrolled (2 samples, 0.02%)</title><rect x="728.3" y="643.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="731.3" y="654.0"></text>
</g>
<g>
<title>tcp_release_cb (2 samples, 0.02%)</title><rect x="728.6" y="659.0" width="0.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="731.6" y="670.0"></text>
</g>
<g>
<title>sockfd_lookup_light (26 samples, 0.29%)</title><rect x="728.8" y="675.0" width="3.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="731.8" y="686.0"></text>
</g>
<g>
<title>__fdget (21 samples, 0.24%)</title><rect x="729.1" y="659.0" width="2.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="732.1" y="670.0"></text>
</g>
<g>
<title>__fget_light (21 samples, 0.24%)</title><rect x="729.1" y="643.0" width="2.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="732.1" y="654.0"></text>
</g>
<g>
<title>__fget (21 samples, 0.24%)</title><rect x="729.1" y="627.0" width="2.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="732.1" y="638.0"></text>
</g>
<g>
<title>__fget_light (3 samples, 0.03%)</title><rect x="731.9" y="659.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="734.9" y="670.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.writeFully (1,011 samples, 11.45%)</title><rect x="732.7" y="771.0" width="135.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="735.7" y="782.0">one/nio/net/Nativ..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_writeFully (37 samples, 0.42%)</title><rect x="733.1" y="755.0" width="4.9" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="736.1" y="766.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (2 samples, 0.02%)</title><rect x="734.2" y="739.0" width="0.2" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="737.2" y="750.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (6 samples, 0.07%)</title><rect x="734.6" y="739.0" width="0.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="737.6" y="750.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (19 samples, 0.22%)</title><rect x="735.4" y="739.0" width="2.5" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="738.4" y="750.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (2 samples, 0.02%)</title><rect x="736.0" y="723.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="739.0" y="734.0"></text>
</g>
<g>
<title>ResourceMark::reset_to_mark() (3 samples, 0.03%)</title><rect x="736.3" y="723.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="739.3" y="734.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (2 samples, 0.02%)</title><rect x="736.7" y="723.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="739.7" y="734.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (3 samples, 0.03%)</title><rect x="737.0" y="723.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="740.0" y="734.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (4 samples, 0.05%)</title><rect x="737.4" y="723.0" width="0.5" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="740.4" y="734.0"></text>
</g>
<g>
<title>ResourceMark::reset_to_mark() (4 samples, 0.05%)</title><rect x="737.4" y="707.0" width="0.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="740.4" y="718.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (5 samples, 0.06%)</title><rect x="738.0" y="755.0" width="0.7" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="741.0" y="766.0"></text>
</g>
<g>
<title>__send (964 samples, 10.92%)</title><rect x="738.7" y="755.0" width="128.8" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="741.7" y="766.0">__send</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (914 samples, 10.35%)</title><rect x="745.4" y="739.0" width="122.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="748.4" y="750.0">entry_SYSCALL_6..</text>
</g>
<g>
<title>do_syscall_64 (913 samples, 10.34%)</title><rect x="745.5" y="723.0" width="122.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="748.5" y="734.0">do_syscall_64</text>
</g>
<g>
<title>__x64_sys_sendto (892 samples, 10.10%)</title><rect x="748.2" y="707.0" width="119.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="751.2" y="718.0">__x64_sys_sendto</text>
</g>
<g>
<title>__sys_sendto (889 samples, 10.07%)</title><rect x="748.2" y="691.0" width="118.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="751.2" y="702.0">__sys_sendto</text>
</g>
<g>
<title>fput_many (2 samples, 0.02%)</title><rect x="748.3" y="675.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="751.3" y="686.0"></text>
</g>
<g>
<title>sock_sendmsg (882 samples, 9.99%)</title><rect x="748.6" y="675.0" width="117.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="751.6" y="686.0">sock_sendmsg</text>
</g>
<g>
<title>apparmor_socket_sendmsg (5 samples, 0.06%)</title><rect x="749.1" y="659.0" width="0.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="752.1" y="670.0"></text>
</g>
<g>
<title>inet6_sendmsg (867 samples, 9.82%)</title><rect x="749.8" y="659.0" width="115.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="752.8" y="670.0">inet6_sendmsg</text>
</g>
<g>
<title>release_sock (2 samples, 0.02%)</title><rect x="749.9" y="643.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="752.9" y="654.0"></text>
</g>
<g>
<title>tcp_sendmsg (863 samples, 9.77%)</title><rect x="750.2" y="643.0" width="115.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="753.2" y="654.0">tcp_sendmsg</text>
</g>
<g>
<title>_raw_spin_lock_bh (2 samples, 0.02%)</title><rect x="750.5" y="627.0" width="0.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="753.5" y="638.0"></text>
</g>
<g>
<title>release_sock (5 samples, 0.06%)</title><rect x="750.7" y="627.0" width="0.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="753.7" y="638.0"></text>
</g>
<g>
<title>tcp_release_cb (2 samples, 0.02%)</title><rect x="751.1" y="611.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="754.1" y="622.0"></text>
</g>
<g>
<title>sock_zerocopy_put (2 samples, 0.02%)</title><rect x="751.5" y="627.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="754.5" y="638.0"></text>
</g>
<g>
<title>tcp_push (4 samples, 0.05%)</title><rect x="751.8" y="627.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="754.8" y="638.0"></text>
</g>
<g>
<title>tcp_rate_check_app_limited (5 samples, 0.06%)</title><rect x="752.3" y="627.0" width="0.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="755.3" y="638.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (834 samples, 9.45%)</title><rect x="753.1" y="627.0" width="111.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="756.1" y="638.0">tcp_sendmsg_l..</text>
</g>
<g>
<title>__check_object_size (3 samples, 0.03%)</title><rect x="755.8" y="611.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="758.8" y="622.0"></text>
</g>
<g>
<title>__virt_addr_valid (3 samples, 0.03%)</title><rect x="755.8" y="595.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="758.8" y="606.0"></text>
</g>
<g>
<title>_copy_from_iter_full (6 samples, 0.07%)</title><rect x="756.5" y="611.0" width="0.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="759.5" y="622.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (4 samples, 0.05%)</title><rect x="756.5" y="595.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="759.5" y="606.0"></text>
</g>
<g>
<title>iov_iter_advance (2 samples, 0.02%)</title><rect x="757.0" y="595.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="760.0" y="606.0"></text>
</g>
<g>
<title>sk_page_frag_refill (3 samples, 0.03%)</title><rect x="757.4" y="611.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="760.4" y="622.0"></text>
</g>
<g>
<title>skb_page_frag_refill (3 samples, 0.03%)</title><rect x="757.4" y="595.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="760.4" y="606.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (57 samples, 0.65%)</title><rect x="757.8" y="611.0" width="7.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="760.8" y="622.0"></text>
</g>
<g>
<title>__alloc_skb (52 samples, 0.59%)</title><rect x="758.2" y="595.0" width="7.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="761.2" y="606.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.0 (23 samples, 0.26%)</title><rect x="759.0" y="579.0" width="3.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="762.0" y="590.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (16 samples, 0.18%)</title><rect x="759.0" y="563.0" width="2.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="762.0" y="574.0"></text>
</g>
<g>
<title>__slab_alloc (3 samples, 0.03%)</title><rect x="760.1" y="547.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="763.1" y="558.0"></text>
</g>
<g>
<title>kmalloc_slab (5 samples, 0.06%)</title><rect x="760.5" y="547.0" width="0.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="763.5" y="558.0"></text>
</g>
<g>
<title>memset_erms (6 samples, 0.07%)</title><rect x="761.3" y="563.0" width="0.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="764.3" y="574.0"></text>
</g>
<g>
<title>__ksize (2 samples, 0.02%)</title><rect x="762.1" y="579.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="765.1" y="590.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (11 samples, 0.12%)</title><rect x="762.4" y="579.0" width="1.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="765.4" y="590.0"></text>
</g>
<g>
<title>ksize (6 samples, 0.07%)</title><rect x="763.8" y="579.0" width="0.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="766.8" y="590.0"></text>
</g>
<g>
<title>__ksize (6 samples, 0.07%)</title><rect x="763.8" y="563.0" width="0.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="766.8" y="574.0"></text>
</g>
<g>
<title>should_failslab (4 samples, 0.05%)</title><rect x="764.6" y="579.0" width="0.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="767.6" y="590.0"></text>
</g>
<g>
<title>skb_entail (12 samples, 0.14%)</title><rect x="765.4" y="611.0" width="1.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="768.4" y="622.0"></text>
</g>
<g>
<title>tcp_push (716 samples, 8.11%)</title><rect x="767.2" y="611.0" width="95.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="770.2" y="622.0">tcp_push</text>
</g>
<g>
<title>__tcp_push_pending_frames (716 samples, 8.11%)</title><rect x="767.2" y="595.0" width="95.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="770.2" y="606.0">__tcp_push_..</text>
</g>
<g>
<title>tcp_mtu_probe (3 samples, 0.03%)</title><rect x="767.4" y="579.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="770.4" y="590.0"></text>
</g>
<g>
<title>tcp_write_xmit (711 samples, 8.05%)</title><rect x="767.8" y="579.0" width="95.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="770.8" y="590.0">tcp_write_x..</text>
</g>
<g>
<title>__tcp_transmit_skb (655 samples, 7.42%)</title><rect x="770.0" y="563.0" width="87.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="773.0" y="574.0">__tcp_tran..</text>
</g>
<g>
<title>ip_queue_xmit (634 samples, 7.18%)</title><rect x="771.7" y="547.0" width="84.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="774.7" y="558.0">ip_queue_x..</text>
</g>
<g>
<title>__ip_queue_xmit (631 samples, 7.15%)</title><rect x="771.7" y="531.0" width="84.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="774.7" y="542.0">__ip_queue..</text>
</g>
<g>
<title>__sk_dst_check (2 samples, 0.02%)</title><rect x="773.7" y="515.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="776.7" y="526.0"></text>
</g>
<g>
<title>ipv4_dst_check (2 samples, 0.02%)</title><rect x="773.7" y="499.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="776.7" y="510.0"></text>
</g>
<g>
<title>ip_local_out (609 samples, 6.90%)</title><rect x="774.1" y="515.0" width="81.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="777.1" y="526.0">ip_local_..</text>
</g>
<g>
<title>__ip_local_out (3 samples, 0.03%)</title><rect x="774.3" y="499.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="777.3" y="510.0"></text>
</g>
<g>
<title>ip_output (604 samples, 6.84%)</title><rect x="774.7" y="499.0" width="80.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="777.7" y="510.0">ip_output</text>
</g>
<g>
<title>__ip_finish_output (2 samples, 0.02%)</title><rect x="775.9" y="483.0" width="0.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="778.9" y="494.0"></text>
</g>
<g>
<title>ip_finish_output (593 samples, 6.72%)</title><rect x="776.1" y="483.0" width="79.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="779.1" y="494.0">ip_finish..</text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (4 samples, 0.05%)</title><rect x="776.3" y="467.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="779.3" y="478.0"></text>
</g>
<g>
<title>__ip_finish_output (584 samples, 6.61%)</title><rect x="776.8" y="467.0" width="78.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="779.8" y="478.0">__ip_fini..</text>
</g>
<g>
<title>ip_finish_output2 (582 samples, 6.59%)</title><rect x="777.1" y="451.0" width="77.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="780.1" y="462.0">ip_finish..</text>
</g>
<g>
<title>__local_bh_enable_ip (517 samples, 5.86%)</title><rect x="778.0" y="435.0" width="69.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="781.0" y="446.0">__local..</text>
</g>
<g>
<title>do_softirq.part.0 (516 samples, 5.84%)</title><rect x="778.1" y="419.0" width="69.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="781.1" y="430.0">do_soft..</text>
</g>
<g>
<title>do_softirq_own_stack (512 samples, 5.80%)</title><rect x="778.7" y="403.0" width="68.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="781.7" y="414.0">do_soft..</text>
</g>
<g>
<title>__softirqentry_text_start (509 samples, 5.76%)</title><rect x="778.7" y="387.0" width="68.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="781.7" y="398.0">__softi..</text>
</g>
<g>
<title>__kfree_skb_flush (2 samples, 0.02%)</title><rect x="779.9" y="371.0" width="0.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="782.9" y="382.0"></text>
</g>
<g>
<title>net_rx_action (495 samples, 5.61%)</title><rect x="780.3" y="371.0" width="66.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="783.3" y="382.0">net_rx_..</text>
</g>
<g>
<title>process_backlog (492 samples, 5.57%)</title><rect x="780.7" y="355.0" width="65.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="783.7" y="366.0">process..</text>
</g>
<g>
<title>__netif_receive_skb (488 samples, 5.53%)</title><rect x="781.2" y="339.0" width="65.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="784.2" y="350.0">__netif..</text>
</g>
<g>
<title>__netif_receive_skb_one_core (487 samples, 5.52%)</title><rect x="781.3" y="323.0" width="65.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="784.3" y="334.0">__netif..</text>
</g>
<g>
<title>__netif_receive_skb_core (9 samples, 0.10%)</title><rect x="781.6" y="307.0" width="1.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="784.6" y="318.0"></text>
</g>
<g>
<title>ip_rcv (476 samples, 5.39%)</title><rect x="782.8" y="307.0" width="63.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="785.8" y="318.0">ip_rcv</text>
</g>
<g>
<title>ip_rcv_core.isra.0 (4 samples, 0.05%)</title><rect x="782.9" y="291.0" width="0.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="785.9" y="302.0"></text>
</g>
<g>
<title>ip_rcv_finish (471 samples, 5.33%)</title><rect x="783.5" y="291.0" width="62.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="786.5" y="302.0">ip_rcv..</text>
</g>
<g>
<title>ip_local_deliver (467 samples, 5.29%)</title><rect x="783.5" y="275.0" width="62.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="786.5" y="286.0">ip_loc..</text>
</g>
<g>
<title>ip_local_deliver_finish (465 samples, 5.27%)</title><rect x="783.6" y="259.0" width="62.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="786.6" y="270.0">ip_loc..</text>
</g>
<g>
<title>ip_protocol_deliver_rcu (463 samples, 5.24%)</title><rect x="783.7" y="243.0" width="61.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="786.7" y="254.0">ip_pro..</text>
</g>
<g>
<title>_raw_spin_lock (2 samples, 0.02%)</title><rect x="783.9" y="227.0" width="0.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="786.9" y="238.0"></text>
</g>
<g>
<title>tcp_v4_rcv (456 samples, 5.16%)</title><rect x="784.7" y="227.0" width="60.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="787.7" y="238.0">tcp_v4..</text>
</g>
<g>
<title>__inet_lookup_established (15 samples, 0.17%)</title><rect x="785.8" y="211.0" width="2.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="788.8" y="222.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (20 samples, 0.23%)</title><rect x="787.9" y="211.0" width="2.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="790.9" y="222.0"></text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (13 samples, 0.15%)</title><rect x="788.2" y="195.0" width="1.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="791.2" y="206.0"></text>
</g>
<g>
<title>apparmor_socket_sock_rcv_skb (2 samples, 0.02%)</title><rect x="789.9" y="195.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="792.9" y="206.0"></text>
</g>
<g>
<title>security_sock_rcv_skb (3 samples, 0.03%)</title><rect x="790.2" y="195.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="793.2" y="206.0"></text>
</g>
<g>
<title>tcp_rcv_established (2 samples, 0.02%)</title><rect x="790.6" y="211.0" width="0.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="793.6" y="222.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (410 samples, 4.64%)</title><rect x="790.8" y="211.0" width="54.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="793.8" y="222.0">tcp_v..</text>
</g>
<g>
<title>tcp_ack (2 samples, 0.02%)</title><rect x="791.0" y="195.0" width="0.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="794.0" y="206.0"></text>
</g>
<g>
<title>tcp_check_space (6 samples, 0.07%)</title><rect x="791.2" y="195.0" width="0.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="794.2" y="206.0"></text>
</g>
<g>
<title>tcp_rcv_established (398 samples, 4.51%)</title><rect x="792.4" y="195.0" width="53.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="795.4" y="206.0">tcp_r..</text>
</g>
<g>
<title>__tcp_ack_snd_check (8 samples, 0.09%)</title><rect x="794.3" y="179.0" width="1.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="797.3" y="190.0"></text>
</g>
<g>
<title>sk_reset_timer (2 samples, 0.02%)</title><rect x="794.4" y="163.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="797.4" y="174.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (5 samples, 0.06%)</title><rect x="794.7" y="163.0" width="0.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="797.7" y="174.0"></text>
</g>
<g>
<title>sk_reset_timer (4 samples, 0.05%)</title><rect x="794.8" y="147.0" width="0.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="797.8" y="158.0"></text>
</g>
<g>
<title>mod_timer (4 samples, 0.05%)</title><rect x="794.8" y="131.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="797.8" y="142.0"></text>
</g>
<g>
<title>bictcp_cong_avoid (6 samples, 0.07%)</title><rect x="795.5" y="179.0" width="0.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="798.5" y="190.0"></text>
</g>
<g>
<title>tcp_ack (97 samples, 1.10%)</title><rect x="796.7" y="179.0" width="13.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="799.7" y="190.0"></text>
</g>
<g>
<title>bictcp_acked (2 samples, 0.02%)</title><rect x="799.0" y="163.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="802.0" y="174.0"></text>
</g>
<g>
<title>rb_erase (2 samples, 0.02%)</title><rect x="799.4" y="163.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="802.4" y="174.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (66 samples, 0.75%)</title><rect x="799.7" y="163.0" width="8.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="802.7" y="174.0"></text>
</g>
<g>
<title>__kfree_skb (43 samples, 0.49%)</title><rect x="801.8" y="147.0" width="5.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="804.8" y="158.0"></text>
</g>
<g>
<title>kfree_skbmem (7 samples, 0.08%)</title><rect x="801.9" y="131.0" width="1.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="804.9" y="142.0"></text>
</g>
<g>
<title>kmem_cache_free (6 samples, 0.07%)</title><rect x="802.1" y="115.0" width="0.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="805.1" y="126.0"></text>
</g>
<g>
<title>__slab_free (5 samples, 0.06%)</title><rect x="802.2" y="99.0" width="0.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="805.2" y="110.0"></text>
</g>
<g>
<title>skb_release_all (33 samples, 0.37%)</title><rect x="803.0" y="131.0" width="4.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="806.0" y="142.0"></text>
</g>
<g>
<title>skb_release_data (31 samples, 0.35%)</title><rect x="803.1" y="115.0" width="4.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="806.1" y="126.0"></text>
</g>
<g>
<title>skb_free_head (11 samples, 0.12%)</title><rect x="805.8" y="99.0" width="1.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="808.8" y="110.0"></text>
</g>
<g>
<title>kfree (11 samples, 0.12%)</title><rect x="805.8" y="83.0" width="1.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="808.8" y="94.0"></text>
</g>
<g>
<title>__slab_free (3 samples, 0.03%)</title><rect x="806.9" y="67.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="809.9" y="78.0"></text>
</g>
<g>
<title>tcp_ack_update_rtt.isra.0 (2 samples, 0.02%)</title><rect x="807.9" y="147.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="810.9" y="158.0"></text>
</g>
<g>
<title>tcp_rack_advance (2 samples, 0.02%)</title><rect x="808.2" y="147.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="811.2" y="158.0"></text>
</g>
<g>
<title>tcp_update_pacing_rate (4 samples, 0.05%)</title><rect x="809.1" y="163.0" width="0.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="812.1" y="174.0"></text>
</g>
<g>
<title>tcp_data_ready (246 samples, 2.79%)</title><rect x="809.8" y="179.0" width="32.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="812.8" y="190.0">tc..</text>
</g>
<g>
<title>sock_def_readable (245 samples, 2.77%)</title><rect x="809.9" y="163.0" width="32.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="812.9" y="174.0">so..</text>
</g>
<g>
<title>__wake_up_sync_key (242 samples, 2.74%)</title><rect x="810.3" y="147.0" width="32.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="813.3" y="158.0">__..</text>
</g>
<g>
<title>__wake_up_common_lock (241 samples, 2.73%)</title><rect x="810.5" y="131.0" width="32.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="813.5" y="142.0">__..</text>
</g>
<g>
<title>__lock_text_start (238 samples, 2.70%)</title><rect x="810.7" y="115.0" width="31.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="813.7" y="126.0">__..</text>
</g>
<g>
<title>tcp_event_data_recv (4 samples, 0.05%)</title><rect x="842.7" y="179.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="845.7" y="190.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (6 samples, 0.07%)</title><rect x="843.2" y="179.0" width="0.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="846.2" y="190.0"></text>
</g>
<g>
<title>ktime_get (2 samples, 0.02%)</title><rect x="843.5" y="163.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="846.5" y="174.0"></text>
</g>
<g>
<title>read_tsc (2 samples, 0.02%)</title><rect x="843.8" y="163.0" width="0.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="846.8" y="174.0"></text>
</g>
<g>
<title>tcp_queue_rcv (5 samples, 0.06%)</title><rect x="844.0" y="179.0" width="0.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="847.0" y="190.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (4 samples, 0.05%)</title><rect x="844.8" y="179.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="847.8" y="190.0"></text>
</g>
<g>
<title>ip_rcv_finish_core.isra.0 (3 samples, 0.03%)</title><rect x="846.0" y="275.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="849.0" y="286.0"></text>
</g>
<g>
<title>process_backlog (2 samples, 0.02%)</title><rect x="846.4" y="371.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="849.4" y="382.0"></text>
</g>
<g>
<title>net_rx_action (3 samples, 0.03%)</title><rect x="846.7" y="387.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="849.7" y="398.0"></text>
</g>
<g>
<title>dev_queue_xmit (55 samples, 0.62%)</title><rect x="847.1" y="435.0" width="7.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="850.1" y="446.0"></text>
</g>
<g>
<title>__dev_queue_xmit (55 samples, 0.62%)</title><rect x="847.1" y="419.0" width="7.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="850.1" y="430.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (3 samples, 0.03%)</title><rect x="848.7" y="403.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="851.7" y="414.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (31 samples, 0.35%)</title><rect x="849.1" y="403.0" width="4.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="852.1" y="414.0"></text>
</g>
<g>
<title>loopback_xmit (25 samples, 0.28%)</title><rect x="849.2" y="387.0" width="3.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="852.2" y="398.0"></text>
</g>
<g>
<title>eth_type_trans (4 samples, 0.05%)</title><rect x="849.6" y="371.0" width="0.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="852.6" y="382.0"></text>
</g>
<g>
<title>netif_rx (10 samples, 0.11%)</title><rect x="850.2" y="371.0" width="1.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="853.2" y="382.0"></text>
</g>
<g>
<title>netif_rx_internal (9 samples, 0.10%)</title><rect x="850.3" y="355.0" width="1.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="853.3" y="366.0"></text>
</g>
<g>
<title>enqueue_to_backlog (8 samples, 0.09%)</title><rect x="850.4" y="339.0" width="1.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="853.4" y="350.0"></text>
</g>
<g>
<title>skb_clone_tx_timestamp (3 samples, 0.03%)</title><rect x="851.8" y="371.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="854.8" y="382.0"></text>
</g>
<g>
<title>tcp_wfree (3 samples, 0.03%)</title><rect x="852.2" y="371.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="855.2" y="382.0"></text>
</g>
<g>
<title>tcp_wfree (3 samples, 0.03%)</title><rect x="852.8" y="387.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="855.8" y="398.0"></text>
</g>
<g>
<title>loopback_xmit (3 samples, 0.03%)</title><rect x="853.2" y="403.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="856.2" y="414.0"></text>
</g>
<g>
<title>validate_xmit_skb (6 samples, 0.07%)</title><rect x="853.6" y="403.0" width="0.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="856.6" y="414.0"></text>
</g>
<g>
<title>netif_skb_features (3 samples, 0.03%)</title><rect x="854.0" y="387.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="857.0" y="398.0"></text>
</g>
<g>
<title>do_softirq.part.0 (3 samples, 0.03%)</title><rect x="854.4" y="435.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="857.4" y="446.0"></text>
</g>
<g>
<title>ipv4_mtu (3 samples, 0.03%)</title><rect x="855.0" y="467.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="858.0" y="478.0"></text>
</g>
<g>
<title>ipv4_dst_check (4 samples, 0.05%)</title><rect x="855.5" y="515.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="858.5" y="526.0"></text>
</g>
<g>
<title>ip_copy_addrs (2 samples, 0.02%)</title><rect x="856.0" y="531.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="859.0" y="542.0"></text>
</g>
<g>
<title>skb_clone (8 samples, 0.09%)</title><rect x="856.4" y="547.0" width="1.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="859.4" y="558.0"></text>
</g>
<g>
<title>__copy_skb_header (2 samples, 0.02%)</title><rect x="856.7" y="531.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="859.7" y="542.0"></text>
</g>
<g>
<title>__skb_clone (4 samples, 0.05%)</title><rect x="857.0" y="531.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="860.0" y="542.0"></text>
</g>
<g>
<title>__copy_skb_header (2 samples, 0.02%)</title><rect x="857.2" y="515.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="860.2" y="526.0"></text>
</g>
<g>
<title>bictcp_cwnd_event (4 samples, 0.05%)</title><rect x="857.8" y="563.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="860.8" y="574.0"></text>
</g>
<g>
<title>ktime_get (2 samples, 0.02%)</title><rect x="858.3" y="563.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="861.3" y="574.0"></text>
</g>
<g>
<title>read_tsc (5 samples, 0.06%)</title><rect x="858.7" y="563.0" width="0.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="861.7" y="574.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (15 samples, 0.17%)</title><rect x="859.5" y="563.0" width="2.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="862.5" y="574.0"></text>
</g>
<g>
<title>rb_insert_color (2 samples, 0.02%)</title><rect x="860.5" y="547.0" width="0.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="863.5" y="558.0"></text>
</g>
<g>
<title>tcp_rearm_rto (6 samples, 0.07%)</title><rect x="860.7" y="547.0" width="0.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="863.7" y="558.0"></text>
</g>
<g>
<title>sk_reset_timer (6 samples, 0.07%)</title><rect x="860.7" y="531.0" width="0.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="863.7" y="542.0"></text>
</g>
<g>
<title>mod_timer (6 samples, 0.07%)</title><rect x="860.7" y="515.0" width="0.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="863.7" y="526.0"></text>
</g>
<g>
<title>__lock_text_start (2 samples, 0.02%)</title><rect x="861.3" y="499.0" width="0.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="864.3" y="510.0"></text>
</g>
<g>
<title>tcp_mtu_probe (2 samples, 0.02%)</title><rect x="861.5" y="563.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="864.5" y="574.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (3 samples, 0.03%)</title><rect x="862.1" y="563.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="865.1" y="574.0"></text>
</g>
<g>
<title>tcp_update_skb_after_send (3 samples, 0.03%)</title><rect x="862.5" y="563.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="865.5" y="574.0"></text>
</g>
<g>
<title>tcp_send_mss (12 samples, 0.14%)</title><rect x="863.0" y="611.0" width="1.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="866.0" y="622.0"></text>
</g>
<g>
<title>ipv4_mtu (5 samples, 0.06%)</title><rect x="863.0" y="595.0" width="0.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="866.0" y="606.0"></text>
</g>
<g>
<title>tcp_current_mss (7 samples, 0.08%)</title><rect x="863.7" y="595.0" width="0.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="866.7" y="606.0"></text>
</g>
<g>
<title>ipv4_mtu (3 samples, 0.03%)</title><rect x="864.1" y="579.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="867.1" y="590.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (4 samples, 0.05%)</title><rect x="864.6" y="627.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="867.6" y="638.0"></text>
</g>
<g>
<title>tcp_tx_timestamp (3 samples, 0.03%)</title><rect x="865.1" y="627.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="868.1" y="638.0"></text>
</g>
<g>
<title>security_socket_sendmsg (4 samples, 0.05%)</title><rect x="865.8" y="659.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="868.8" y="670.0"></text>
</g>
<g>
<title>sockfd_lookup_light (4 samples, 0.05%)</title><rect x="866.5" y="675.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="869.5" y="686.0"></text>
</g>
<g>
<title>__fdget (4 samples, 0.05%)</title><rect x="866.5" y="659.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="869.5" y="670.0"></text>
</g>
<g>
<title>__fget_light (4 samples, 0.05%)</title><rect x="866.5" y="643.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="869.5" y="654.0"></text>
</g>
<g>
<title>__fget (4 samples, 0.05%)</title><rect x="866.5" y="627.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="869.5" y="638.0"></text>
</g>
<g>
<title>fput (2 samples, 0.02%)</title><rect x="867.0" y="691.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="870.0" y="702.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (2 samples, 0.02%)</title><rect x="867.5" y="755.0" width="0.3" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="870.5" y="766.0"></text>
</g>
<g>
<title>one/nio/pool/Pool.borrowObject (13 samples, 0.15%)</title><rect x="867.8" y="771.0" width="1.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="870.8" y="782.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (3 samples, 0.03%)</title><rect x="869.1" y="755.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="872.1" y="766.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (3 samples, 0.03%)</title><rect x="869.1" y="739.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="872.1" y="750.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (3 samples, 0.03%)</title><rect x="869.1" y="723.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="872.1" y="734.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.71] (3 samples, 0.03%)</title><rect x="869.1" y="707.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="872.1" y="718.0"></text>
</g>
<g>
<title>one/nio/pool/Pool.returnObject (17 samples, 0.19%)</title><rect x="869.5" y="771.0" width="2.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="872.5" y="782.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (4 samples, 0.05%)</title><rect x="871.1" y="755.0" width="0.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="874.1" y="766.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (4 samples, 0.05%)</title><rect x="871.1" y="739.0" width="0.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="874.1" y="750.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (4 samples, 0.05%)</title><rect x="871.1" y="723.0" width="0.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="874.1" y="734.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.71] (3 samples, 0.03%)</title><rect x="871.1" y="707.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="874.1" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivlev/ThreadController.toByteBuffer (8 samples, 0.09%)</title><rect x="871.8" y="835.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="874.8" y="846.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (8 samples, 0.09%)</title><rect x="871.8" y="819.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="874.8" y="830.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (8 samples, 0.09%)</title><rect x="871.8" y="803.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="874.8" y="814.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (2 samples, 0.02%)</title><rect x="872.6" y="787.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="875.6" y="798.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivlev/ThreadController$$Lambda$68/1575687844.run (2 samples, 0.02%)</title><rect x="872.9" y="883.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="875.9" y="894.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivlev/ThreadController.lambda$put$2 (2 samples, 0.02%)</title><rect x="872.9" y="867.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="875.9" y="878.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivlev/ThreadController.toByteBuffer (2 samples, 0.02%)</title><rect x="872.9" y="851.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="875.9" y="862.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (2 samples, 0.02%)</title><rect x="872.9" y="835.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="875.9" y="846.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (2 samples, 0.02%)</title><rect x="872.9" y="819.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="875.9" y="830.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (2,236 samples, 25.32%)</title><rect x="873.2" y="915.0" width="298.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="876.2" y="926.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*, JavaThread*) (3 samples, 0.03%)</title><rect x="874.5" y="899.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="877.5" y="910.0"></text>
</g>
<g>
<title>ObjectSynchronizer::slow_exit(oopDesc*, BasicLock*, Thread*) (2 samples, 0.02%)</title><rect x="874.6" y="883.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="877.6" y="894.0"></text>
</g>
<g>
<title>gettimeofday (4 samples, 0.05%)</title><rect x="875.0" y="899.0" width="0.6" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="878.0" y="910.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (6 samples, 0.07%)</title><rect x="875.6" y="899.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="878.6" y="910.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (751 samples, 8.51%)</title><rect x="876.4" y="899.0" width="100.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="879.4" y="910.0">one/nio/net/..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (734 samples, 8.31%)</title><rect x="878.6" y="883.0" width="98.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="881.6" y="894.0">one/nio/net/..</text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (19 samples, 0.22%)</title><rect x="882.2" y="867.0" width="2.6" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="885.2" y="878.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSelector_epollWait (11 samples, 0.12%)</title><rect x="884.8" y="867.0" width="1.4" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="887.8" y="878.0"></text>
</g>
<g>
<title>__pthread_cond_signal (2 samples, 0.02%)</title><rect x="886.2" y="867.0" width="0.3" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="889.2" y="878.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.02%)</title><rect x="886.2" y="851.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="889.2" y="862.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.02%)</title><rect x="886.2" y="835.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="889.2" y="846.0"></text>
</g>
<g>
<title>__x64_sys_futex (2 samples, 0.02%)</title><rect x="886.2" y="819.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="889.2" y="830.0"></text>
</g>
<g>
<title>do_futex (2 samples, 0.02%)</title><rect x="886.2" y="803.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="889.2" y="814.0"></text>
</g>
<g>
<title>futex_wake (2 samples, 0.02%)</title><rect x="886.2" y="787.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="889.2" y="798.0"></text>
</g>
<g>
<title>clock_gettime (25 samples, 0.28%)</title><rect x="886.5" y="867.0" width="3.4" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="889.5" y="878.0"></text>
</g>
<g>
<title>[vdso] (2 samples, 0.02%)</title><rect x="888.8" y="851.0" width="0.3" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="891.8" y="862.0"></text>
</g>
<g>
<title>clock_gettime (6 samples, 0.07%)</title><rect x="889.1" y="851.0" width="0.8" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="892.1" y="862.0"></text>
</g>
<g>
<title>[vdso] (5 samples, 0.06%)</title><rect x="889.2" y="835.0" width="0.7" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="892.2" y="846.0"></text>
</g>
<g>
<title>clock_gettime@plt (2 samples, 0.02%)</title><rect x="889.9" y="867.0" width="0.2" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="892.9" y="878.0"></text>
</g>
<g>
<title>epoll_wait (645 samples, 7.30%)</title><rect x="890.1" y="867.0" width="86.2" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="893.1" y="878.0">epoll_wait</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (400 samples, 4.53%)</title><rect x="922.9" y="851.0" width="53.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="925.9" y="862.0">entry..</text>
</g>
<g>
<title>__x64_sys_epoll_wait (3 samples, 0.03%)</title><rect x="922.9" y="835.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="925.9" y="846.0"></text>
</g>
<g>
<title>do_syscall_64 (396 samples, 4.48%)</title><rect x="923.4" y="835.0" width="52.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="926.4" y="846.0">do_sy..</text>
</g>
<g>
<title>__x64_sys_epoll_wait (361 samples, 4.09%)</title><rect x="927.7" y="819.0" width="48.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="930.7" y="830.0">__x6..</text>
</g>
<g>
<title>do_epoll_wait (351 samples, 3.98%)</title><rect x="927.7" y="803.0" width="46.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="930.7" y="814.0">do_e..</text>
</g>
<g>
<title>__fdget (16 samples, 0.18%)</title><rect x="929.8" y="787.0" width="2.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="932.8" y="798.0"></text>
</g>
<g>
<title>__fget_light (16 samples, 0.18%)</title><rect x="929.8" y="771.0" width="2.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="932.8" y="782.0"></text>
</g>
<g>
<title>__fget (15 samples, 0.17%)</title><rect x="929.9" y="755.0" width="2.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="932.9" y="766.0"></text>
</g>
<g>
<title>__fget_light (4 samples, 0.05%)</title><rect x="932.0" y="787.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="935.0" y="798.0"></text>
</g>
<g>
<title>ep_poll (273 samples, 3.09%)</title><rect x="932.6" y="787.0" width="36.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="935.6" y="798.0">ep_..</text>
</g>
<g>
<title>ep_scan_ready_list.constprop.0 (213 samples, 2.41%)</title><rect x="935.2" y="771.0" width="28.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="938.2" y="782.0">ep..</text>
</g>
<g>
<title>_cond_resched (4 samples, 0.05%)</title><rect x="938.4" y="755.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="941.4" y="766.0"></text>
</g>
<g>
<title>ep_send_events_proc (177 samples, 2.00%)</title><rect x="939.0" y="755.0" width="23.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="942.0" y="766.0">e..</text>
</g>
<g>
<title>ep_item_poll.isra.0 (103 samples, 1.17%)</title><rect x="946.5" y="739.0" width="13.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="949.5" y="750.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (2 samples, 0.02%)</title><rect x="948.1" y="723.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="951.1" y="734.0"></text>
</g>
<g>
<title>sock_poll (86 samples, 0.97%)</title><rect x="948.4" y="723.0" width="11.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="951.4" y="734.0"></text>
</g>
<g>
<title>tcp_poll (36 samples, 0.41%)</title><rect x="952.9" y="707.0" width="4.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="955.9" y="718.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (16 samples, 0.18%)</title><rect x="957.7" y="707.0" width="2.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="960.7" y="718.0"></text>
</g>
<g>
<title>tcp_poll (3 samples, 0.03%)</title><rect x="959.9" y="723.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="962.9" y="734.0"></text>
</g>
<g>
<title>sock_poll (18 samples, 0.20%)</title><rect x="960.3" y="739.0" width="2.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="963.3" y="750.0"></text>
</g>
<g>
<title>mutex_lock (7 samples, 0.08%)</title><rect x="962.7" y="755.0" width="0.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="965.7" y="766.0"></text>
</g>
<g>
<title>mutex_unlock (16 samples, 0.18%)</title><rect x="963.6" y="771.0" width="2.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="966.6" y="782.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (22 samples, 0.25%)</title><rect x="965.8" y="771.0" width="2.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="968.8" y="782.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (22 samples, 0.25%)</title><rect x="965.8" y="755.0" width="2.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="968.8" y="766.0"></text>
</g>
<g>
<title>schedule (20 samples, 0.23%)</title><rect x="966.0" y="739.0" width="2.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="969.0" y="750.0"></text>
</g>
<g>
<title>__schedule (16 samples, 0.18%)</title><rect x="966.6" y="723.0" width="2.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="969.6" y="734.0"></text>
</g>
<g>
<title>finish_task_switch (9 samples, 0.10%)</title><rect x="967.5" y="707.0" width="1.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="970.5" y="718.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (3 samples, 0.03%)</title><rect x="968.7" y="771.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="971.7" y="782.0"></text>
</g>
<g>
<title>fput_many (41 samples, 0.46%)</title><rect x="969.1" y="787.0" width="5.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="972.1" y="798.0"></text>
</g>
<g>
<title>fput (10 samples, 0.11%)</title><rect x="974.6" y="803.0" width="1.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="977.6" y="814.0"></text>
</g>
<g>
<title>do_epoll_wait (3 samples, 0.03%)</title><rect x="975.9" y="819.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="978.9" y="830.0"></text>
</g>
<g>
<title>epoll_wait@plt (3 samples, 0.03%)</title><rect x="976.3" y="867.0" width="0.4" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="979.3" y="878.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (1,452 samples, 16.44%)</title><rect x="976.7" y="899.0" width="194.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="979.7" y="910.0">one/nio/net/Session.process</text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (4 samples, 0.05%)</title><rect x="981.5" y="883.0" width="0.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="984.5" y="894.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (4 samples, 0.05%)</title><rect x="981.5" y="867.0" width="0.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="984.5" y="878.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (4 samples, 0.05%)</title><rect x="981.5" y="851.0" width="0.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="984.5" y="862.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.71] (2 samples, 0.02%)</title><rect x="981.5" y="835.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="984.5" y="846.0"></text>
</g>
<g>
<title>SpinPause (2 samples, 0.02%)</title><rect x="981.8" y="835.0" width="0.3" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="984.8" y="846.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (1,409 samples, 15.96%)</title><rect x="982.1" y="883.0" width="188.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="985.1" y="894.0">one/nio/http/HttpSession..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (895 samples, 10.14%)</title><rect x="982.1" y="867.0" width="119.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="985.1" y="878.0">one/nio/http/Ht..</text>
</g>
<g>
<title>RequestHandler1_put.handleRequest (3 samples, 0.03%)</title><rect x="986.7" y="851.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="989.7" y="862.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (2 samples, 0.02%)</title><rect x="987.3" y="851.0" width="0.2" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="990.3" y="862.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (6 samples, 0.07%)</title><rect x="987.5" y="851.0" width="0.8" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="990.5" y="862.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (614 samples, 6.95%)</title><rect x="988.3" y="851.0" width="82.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="991.3" y="862.0">one/nio/h..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (614 samples, 6.95%)</title><rect x="988.3" y="835.0" width="82.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="991.3" y="846.0">one/nio/h..</text>
</g>
<g>
<title>RequestHandler1_put.handleRequest (573 samples, 6.49%)</title><rect x="990.6" y="819.0" width="76.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="993.6" y="830.0">RequestH..</text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (48 samples, 0.54%)</title><rect x="990.6" y="803.0" width="6.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="993.6" y="814.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (48 samples, 0.54%)</title><rect x="990.6" y="787.0" width="6.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="993.6" y="798.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.02%)</title><rect x="993.4" y="771.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="996.4" y="782.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (2 samples, 0.02%)</title><rect x="993.4" y="755.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="996.4" y="766.0"></text>
</g>
<g>
<title>java/lang/String.substring (11 samples, 0.12%)</title><rect x="993.7" y="771.0" width="1.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="996.7" y="782.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (11 samples, 0.12%)</title><rect x="993.7" y="755.0" width="1.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="996.7" y="766.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (2 samples, 0.02%)</title><rect x="994.4" y="739.0" width="0.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="997.4" y="750.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (2 samples, 0.02%)</title><rect x="994.4" y="723.0" width="0.2" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="997.4" y="734.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (4 samples, 0.05%)</title><rect x="994.6" y="739.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="997.6" y="750.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (2 samples, 0.02%)</title><rect x="995.3" y="771.0" width="0.3" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="998.3" y="782.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (11 samples, 0.12%)</title><rect x="995.6" y="771.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="998.6" y="782.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (4 samples, 0.05%)</title><rect x="996.5" y="755.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="999.5" y="766.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (4 samples, 0.05%)</title><rect x="996.5" y="739.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="999.5" y="750.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (4 samples, 0.05%)</title><rect x="996.5" y="723.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="999.5" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivlev/ThreadController.put (525 samples, 5.95%)</title><rect x="997.0" y="803.0" width="70.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1000.0" y="814.0">ru/mail/..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (6 samples, 0.07%)</title><rect x="999.2" y="787.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1002.2" y="798.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (6 samples, 0.07%)</title><rect x="999.2" y="771.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1002.2" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivlev/ThreadController$$Lambda$68/1575687844.get$Lambda (6 samples, 0.07%)</title><rect x="999.2" y="755.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1002.2" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (5 samples, 0.06%)</title><rect x="999.3" y="739.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1002.3" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (495 samples, 5.61%)</title><rect x="1000.0" y="787.0" width="66.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1003.0" y="798.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (495 samples, 5.61%)</title><rect x="1000.0" y="771.0" width="66.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1003.0" y="782.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.enqueue (51 samples, 0.58%)</title><rect x="1000.0" y="755.0" width="6.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1003.0" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (51 samples, 0.58%)</title><rect x="1000.0" y="739.0" width="6.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1003.0" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (51 samples, 0.58%)</title><rect x="1000.0" y="723.0" width="6.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1003.0" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.transferForSignal (21 samples, 0.24%)</title><rect x="1004.0" y="707.0" width="2.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1007.0" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.enq (19 samples, 0.22%)</title><rect x="1004.2" y="691.0" width="2.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1007.2" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (29 samples, 0.33%)</title><rect x="1006.8" y="755.0" width="3.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1009.8" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (29 samples, 0.33%)</title><rect x="1006.8" y="739.0" width="3.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1009.8" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (27 samples, 0.31%)</title><rect x="1006.8" y="723.0" width="3.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1009.8" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (27 samples, 0.31%)</title><rect x="1006.8" y="707.0" width="3.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1009.8" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (27 samples, 0.31%)</title><rect x="1006.8" y="691.0" width="3.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1009.8" y="702.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (26 samples, 0.29%)</title><rect x="1006.9" y="675.0" width="3.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1009.9" y="686.0"></text>
</g>
<g>
<title>Unsafe_Park (7 samples, 0.08%)</title><rect x="1007.2" y="659.0" width="0.9" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="1010.2" y="670.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock (2 samples, 0.02%)</title><rect x="1007.5" y="643.0" width="0.2" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="1010.5" y="654.0"></text>
</g>
<g>
<title>java_lang_Thread::get_thread_status(oopDesc*) (2 samples, 0.02%)</title><rect x="1007.7" y="643.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1010.7" y="654.0"></text>
</g>
<g>
<title>[unknown] (16 samples, 0.18%)</title><rect x="1008.1" y="659.0" width="2.2" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="1011.1" y="670.0"></text>
</g>
<g>
<title>__GI___pthread_mutex_trylock (2 samples, 0.02%)</title><rect x="1008.1" y="643.0" width="0.3" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="1011.1" y="654.0"></text>
</g>
<g>
<title>__pthread_cond_wait (13 samples, 0.15%)</title><rect x="1008.4" y="643.0" width="1.7" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="1011.4" y="654.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (6 samples, 0.07%)</title><rect x="1009.3" y="627.0" width="0.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1012.3" y="638.0"></text>
</g>
<g>
<title>do_syscall_64 (6 samples, 0.07%)</title><rect x="1009.3" y="611.0" width="0.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1012.3" y="622.0"></text>
</g>
<g>
<title>__x64_sys_futex (5 samples, 0.06%)</title><rect x="1009.5" y="595.0" width="0.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1012.5" y="606.0"></text>
</g>
<g>
<title>do_futex (5 samples, 0.06%)</title><rect x="1009.5" y="579.0" width="0.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1012.5" y="590.0"></text>
</g>
<g>
<title>futex_wait (5 samples, 0.06%)</title><rect x="1009.5" y="563.0" width="0.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1012.5" y="574.0"></text>
</g>
<g>
<title>futex_wait_setup (4 samples, 0.05%)</title><rect x="1009.6" y="547.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1012.6" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.addWaiter (2 samples, 0.02%)</title><rect x="1010.4" y="723.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1013.4" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (415 samples, 4.70%)</title><rect x="1010.7" y="755.0" width="55.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1013.7" y="766.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (415 samples, 4.70%)</title><rect x="1010.7" y="739.0" width="55.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1013.7" y="750.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (415 samples, 4.70%)</title><rect x="1010.7" y="723.0" width="55.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1013.7" y="734.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (415 samples, 4.70%)</title><rect x="1010.7" y="707.0" width="55.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1013.7" y="718.0">java/..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (412 samples, 4.67%)</title><rect x="1011.1" y="691.0" width="55.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1014.1" y="702.0">jdk/i..</text>
</g>
<g>
<title>Parker::unpark() (2 samples, 0.02%)</title><rect x="1011.5" y="675.0" width="0.2" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1014.5" y="686.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (2 samples, 0.02%)</title><rect x="1011.7" y="675.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1014.7" y="686.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (2 samples, 0.02%)</title><rect x="1012.0" y="675.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1015.0" y="686.0"></text>
</g>
<g>
<title>ThreadsListHandle::~ThreadsListHandle() (2 samples, 0.02%)</title><rect x="1012.3" y="675.0" width="0.2" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1015.3" y="686.0"></text>
</g>
<g>
<title>Unsafe_Unpark (60 samples, 0.68%)</title><rect x="1012.5" y="675.0" width="8.1" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="1015.5" y="686.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (3 samples, 0.03%)</title><rect x="1014.0" y="659.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1017.0" y="670.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.235] (3 samples, 0.03%)</title><rect x="1014.4" y="659.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1017.4" y="670.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (4 samples, 0.05%)</title><rect x="1014.8" y="659.0" width="0.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1017.8" y="670.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (7 samples, 0.08%)</title><rect x="1015.3" y="659.0" width="1.0" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1018.3" y="670.0"></text>
</g>
<g>
<title>ThreadsListHandle::~ThreadsListHandle() (2 samples, 0.02%)</title><rect x="1016.3" y="659.0" width="0.2" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1019.3" y="670.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock (2 samples, 0.02%)</title><rect x="1016.5" y="659.0" width="0.3" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="1019.5" y="670.0"></text>
</g>
<g>
<title>java_lang_Thread::thread(oopDesc*) (3 samples, 0.03%)</title><rect x="1016.8" y="659.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1019.8" y="670.0"></text>
</g>
<g>
<title>oopDesc::address_field(int) const (2 samples, 0.02%)</title><rect x="1017.2" y="659.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1020.2" y="670.0"></text>
</g>
<g>
<title>pthread_mutex_lock (23 samples, 0.26%)</title><rect x="1017.5" y="659.0" width="3.1" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="1020.5" y="670.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.02%)</title><rect x="1020.6" y="675.0" width="0.2" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="1023.6" y="686.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/ld-2.31.so (2 samples, 0.02%)</title><rect x="1020.6" y="659.0" width="0.2" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="1023.6" y="670.0"></text>
</g>
<g>
<title>__pthread_cond_signal (331 samples, 3.75%)</title><rect x="1020.8" y="675.0" width="44.3" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="1023.8" y="686.0">__pt..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (277 samples, 3.14%)</title><rect x="1028.0" y="659.0" width="37.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1031.0" y="670.0">ent..</text>
</g>
<g>
<title>__x64_sys_futex (3 samples, 0.03%)</title><rect x="1028.0" y="643.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1031.0" y="654.0"></text>
</g>
<g>
<title>do_syscall_64 (274 samples, 3.10%)</title><rect x="1028.4" y="643.0" width="36.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1031.4" y="654.0">do_..</text>
</g>
<g>
<title>__x64_sys_futex (257 samples, 2.91%)</title><rect x="1030.6" y="627.0" width="34.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1033.6" y="638.0">__..</text>
</g>
<g>
<title>do_futex (256 samples, 2.90%)</title><rect x="1030.6" y="611.0" width="34.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1033.6" y="622.0">do..</text>
</g>
<g>
<title>_raw_spin_lock (2 samples, 0.02%)</title><rect x="1031.1" y="595.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1034.1" y="606.0"></text>
</g>
<g>
<title>futex_wake (242 samples, 2.74%)</title><rect x="1031.4" y="595.0" width="32.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1034.4" y="606.0">fu..</text>
</g>
<g>
<title>get_futex_key (3 samples, 0.03%)</title><rect x="1032.6" y="579.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1035.6" y="590.0"></text>
</g>
<g>
<title>get_futex_key_refs.isra.0 (2 samples, 0.02%)</title><rect x="1032.7" y="563.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1035.7" y="574.0"></text>
</g>
<g>
<title>mark_wake_futex (8 samples, 0.09%)</title><rect x="1033.0" y="579.0" width="1.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1036.0" y="590.0"></text>
</g>
<g>
<title>__unqueue_futex (3 samples, 0.03%)</title><rect x="1033.5" y="563.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1036.5" y="574.0"></text>
</g>
<g>
<title>wake_q_add_safe (3 samples, 0.03%)</title><rect x="1034.2" y="579.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1037.2" y="590.0"></text>
</g>
<g>
<title>wake_up_q (218 samples, 2.47%)</title><rect x="1034.6" y="579.0" width="29.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1037.6" y="590.0">wa..</text>
</g>
<g>
<title>try_to_wake_up (215 samples, 2.43%)</title><rect x="1035.0" y="563.0" width="28.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1038.0" y="574.0">tr..</text>
</g>
<g>
<title>__lock_text_start (214 samples, 2.42%)</title><rect x="1035.1" y="547.0" width="28.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1038.1" y="558.0">__..</text>
</g>
<g>
<title>get_futex_key (3 samples, 0.03%)</title><rect x="1063.7" y="595.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1066.7" y="606.0"></text>
</g>
<g>
<title>hash_futex (5 samples, 0.06%)</title><rect x="1064.1" y="595.0" width="0.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1067.1" y="606.0"></text>
</g>
<g>
<title>__tls_get_addr (4 samples, 0.05%)</title><rect x="1065.1" y="675.0" width="0.5" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="1068.1" y="686.0"></text>
</g>
<g>
<title>java_lang_Thread::park_event(oopDesc*) (4 samples, 0.05%)</title><rect x="1065.6" y="675.0" width="0.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1068.6" y="686.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (8 samples, 0.09%)</title><rect x="1066.1" y="787.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1069.1" y="798.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (23 samples, 0.26%)</title><rect x="1067.2" y="819.0" width="3.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1070.2" y="830.0"></text>
</g>
<g>
<title>java/util/HashMap.get (23 samples, 0.26%)</title><rect x="1067.2" y="803.0" width="3.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1070.2" y="814.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (10 samples, 0.11%)</title><rect x="1067.2" y="787.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1070.2" y="798.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (13 samples, 0.15%)</title><rect x="1068.5" y="787.0" width="1.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1071.5" y="798.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (13 samples, 0.15%)</title><rect x="1068.5" y="771.0" width="1.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1071.5" y="782.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (13 samples, 0.15%)</title><rect x="1068.5" y="755.0" width="1.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1071.5" y="766.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (2 samples, 0.02%)</title><rect x="1070.0" y="739.0" width="0.3" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="1073.0" y="750.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (71 samples, 0.80%)</title><rect x="1070.4" y="851.0" width="9.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1073.4" y="862.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (16 samples, 0.18%)</title><rect x="1070.9" y="835.0" width="2.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1073.9" y="846.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (3 samples, 0.03%)</title><rect x="1070.9" y="819.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1073.9" y="830.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_objArray(int, int, Thread*) (2 samples, 0.02%)</title><rect x="1071.1" y="803.0" width="0.2" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1074.1" y="814.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (2 samples, 0.02%)</title><rect x="1071.1" y="787.0" width="0.2" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1074.1" y="798.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (2 samples, 0.02%)</title><rect x="1071.1" y="771.0" width="0.2" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1074.1" y="782.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (2 samples, 0.02%)</title><rect x="1071.1" y="755.0" width="0.2" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1074.1" y="766.0"></text>
</g>
<g>
<title>ThreadLocalAllocBuffer::clear_before_allocation() (2 samples, 0.02%)</title><rect x="1071.1" y="739.0" width="0.2" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1074.1" y="750.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (13 samples, 0.15%)</title><rect x="1071.3" y="819.0" width="1.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1074.3" y="830.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (13 samples, 0.15%)</title><rect x="1071.3" y="803.0" width="1.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1074.3" y="814.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (13 samples, 0.15%)</title><rect x="1071.3" y="787.0" width="1.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1074.3" y="798.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (7 samples, 0.08%)</title><rect x="1072.1" y="771.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1075.1" y="782.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (31 samples, 0.35%)</title><rect x="1073.1" y="835.0" width="4.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1076.1" y="846.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (27 samples, 0.31%)</title><rect x="1073.6" y="819.0" width="3.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1076.6" y="830.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.startsWith (20 samples, 0.23%)</title><rect x="1077.2" y="835.0" width="2.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1080.2" y="846.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (43 samples, 0.49%)</title><rect x="1079.9" y="851.0" width="5.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1082.9" y="862.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (28 samples, 0.32%)</title><rect x="1080.8" y="835.0" width="3.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1083.8" y="846.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (28 samples, 0.32%)</title><rect x="1080.8" y="819.0" width="3.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1083.8" y="830.0"></text>
</g>
<g>
<title>java/lang/String.substring (6 samples, 0.07%)</title><rect x="1084.6" y="835.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1087.6" y="846.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (6 samples, 0.07%)</title><rect x="1084.6" y="819.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1087.6" y="830.0"></text>
</g>
<g>
<title>RequestHandler1_put.handleRequest (4 samples, 0.05%)</title><rect x="1084.8" y="803.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1087.8" y="814.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2 samples, 0.02%)</title><rect x="1085.4" y="835.0" width="0.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1088.4" y="846.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (120 samples, 1.36%)</title><rect x="1085.6" y="851.0" width="16.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1088.6" y="862.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (58 samples, 0.66%)</title><rect x="1093.9" y="835.0" width="7.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1096.9" y="846.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (3 samples, 0.03%)</title><rect x="1100.1" y="819.0" width="0.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1103.1" y="830.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (2 samples, 0.02%)</title><rect x="1100.2" y="803.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1103.2" y="814.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (2 samples, 0.02%)</title><rect x="1100.2" y="787.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1103.2" y="798.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (2 samples, 0.02%)</title><rect x="1100.2" y="771.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1103.2" y="782.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (2 samples, 0.02%)</title><rect x="1100.2" y="755.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1103.2" y="766.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (4 samples, 0.05%)</title><rect x="1100.6" y="819.0" width="0.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1103.6" y="830.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (4 samples, 0.05%)</title><rect x="1100.6" y="803.0" width="0.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1103.6" y="814.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (4 samples, 0.05%)</title><rect x="1100.6" y="787.0" width="0.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1103.6" y="798.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (3 samples, 0.03%)</title><rect x="1100.7" y="771.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1103.7" y="782.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (3 samples, 0.03%)</title><rect x="1100.7" y="755.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1103.7" y="766.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (2 samples, 0.02%)</title><rect x="1100.9" y="739.0" width="0.2" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1103.9" y="750.0"></text>
</g>
<g>
<title>G1CollectedHeap::attempt_allocation_slow(unsigned long) (2 samples, 0.02%)</title><rect x="1100.9" y="723.0" width="0.2" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1103.9" y="734.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (4 samples, 0.05%)</title><rect x="1101.1" y="819.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1104.1" y="830.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (4 samples, 0.05%)</title><rect x="1101.1" y="803.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1104.1" y="814.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (4 samples, 0.05%)</title><rect x="1101.1" y="787.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1104.1" y="798.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (4 samples, 0.05%)</title><rect x="1101.1" y="771.0" width="0.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1104.1" y="782.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (3 samples, 0.03%)</title><rect x="1101.3" y="755.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1104.3" y="766.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (3 samples, 0.03%)</title><rect x="1101.3" y="739.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1104.3" y="750.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (2 samples, 0.02%)</title><rect x="1101.7" y="867.0" width="0.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1104.7" y="878.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (512 samples, 5.80%)</title><rect x="1101.9" y="867.0" width="68.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1104.9" y="878.0">one/nio..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (504 samples, 5.71%)</title><rect x="1103.0" y="851.0" width="67.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1106.0" y="862.0">one/nio..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (88 samples, 1.00%)</title><rect x="1103.9" y="835.0" width="11.8" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="1106.9" y="846.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (10 samples, 0.11%)</title><rect x="1104.7" y="819.0" width="1.4" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="1107.7" y="830.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (5 samples, 0.06%)</title><rect x="1106.1" y="819.0" width="0.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1109.1" y="830.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (5 samples, 0.06%)</title><rect x="1106.7" y="819.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1109.7" y="830.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (6 samples, 0.07%)</title><rect x="1107.4" y="819.0" width="0.8" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1110.4" y="830.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (4 samples, 0.05%)</title><rect x="1108.2" y="819.0" width="0.5" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1111.2" y="830.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (51 samples, 0.58%)</title><rect x="1108.7" y="819.0" width="6.9" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="1111.7" y="830.0"></text>
</g>
<g>
<title>ResourceMark::reset_to_mark() (5 samples, 0.06%)</title><rect x="1110.0" y="803.0" width="0.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1113.0" y="814.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (7 samples, 0.08%)</title><rect x="1110.6" y="803.0" width="1.0" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1113.6" y="814.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (9 samples, 0.10%)</title><rect x="1111.6" y="803.0" width="1.2" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1114.6" y="814.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (21 samples, 0.24%)</title><rect x="1112.8" y="803.0" width="2.8" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="1115.8" y="814.0"></text>
</g>
<g>
<title>ResourceMark::reset_to_mark() (7 samples, 0.08%)</title><rect x="1114.6" y="787.0" width="1.0" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1117.6" y="798.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (5 samples, 0.06%)</title><rect x="1115.8" y="835.0" width="0.7" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="1118.8" y="846.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (7 samples, 0.08%)</title><rect x="1116.5" y="835.0" width="0.9" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="1119.5" y="846.0"></text>
</g>
<g>
<title>recv (396 samples, 4.48%)</title><rect x="1117.4" y="835.0" width="53.0" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="1120.4" y="846.0">recv</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (295 samples, 3.34%)</title><rect x="1130.9" y="819.0" width="39.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1133.9" y="830.0">ent..</text>
</g>
<g>
<title>__x64_sys_recvfrom (11 samples, 0.12%)</title><rect x="1130.9" y="803.0" width="1.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1133.9" y="814.0"></text>
</g>
<g>
<title>do_syscall_64 (284 samples, 3.22%)</title><rect x="1132.4" y="803.0" width="38.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1135.4" y="814.0">do_..</text>
</g>
<g>
<title>__sys_recvfrom (3 samples, 0.03%)</title><rect x="1137.6" y="787.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1140.6" y="798.0"></text>
</g>
<g>
<title>__x64_sys_recvfrom (242 samples, 2.74%)</title><rect x="1138.0" y="787.0" width="32.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1141.0" y="798.0">__..</text>
</g>
<g>
<title>__sys_recvfrom (231 samples, 2.62%)</title><rect x="1138.0" y="771.0" width="30.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1141.0" y="782.0">__..</text>
</g>
<g>
<title>__fdget (2 samples, 0.02%)</title><rect x="1139.2" y="755.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1142.2" y="766.0"></text>
</g>
<g>
<title>fput_many (2 samples, 0.02%)</title><rect x="1139.5" y="755.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1142.5" y="766.0"></text>
</g>
<g>
<title>sock_recvmsg (198 samples, 2.24%)</title><rect x="1139.8" y="755.0" width="26.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1142.8" y="766.0">s..</text>
</g>
<g>
<title>apparmor_socket_recvmsg (10 samples, 0.11%)</title><rect x="1139.8" y="739.0" width="1.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1142.8" y="750.0"></text>
</g>
<g>
<title>inet6_recvmsg (168 samples, 1.90%)</title><rect x="1141.1" y="739.0" width="22.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1144.1" y="750.0">i..</text>
</g>
<g>
<title>tcp_recvmsg (167 samples, 1.89%)</title><rect x="1141.2" y="723.0" width="22.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1144.2" y="734.0">t..</text>
</g>
<g>
<title>__kfree_skb (38 samples, 0.43%)</title><rect x="1145.4" y="707.0" width="5.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1148.4" y="718.0"></text>
</g>
<g>
<title>kfree_skbmem (3 samples, 0.03%)</title><rect x="1145.4" y="691.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1148.4" y="702.0"></text>
</g>
<g>
<title>skb_release_all (34 samples, 0.39%)</title><rect x="1145.8" y="691.0" width="4.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1148.8" y="702.0"></text>
</g>
<g>
<title>skb_release_data (5 samples, 0.06%)</title><rect x="1145.8" y="675.0" width="0.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1148.8" y="686.0"></text>
</g>
<g>
<title>skb_release_head_state (18 samples, 0.20%)</title><rect x="1146.4" y="675.0" width="2.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1149.4" y="686.0"></text>
</g>
<g>
<title>dst_release (18 samples, 0.20%)</title><rect x="1146.4" y="659.0" width="2.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1149.4" y="670.0"></text>
</g>
<g>
<title>sock_rfree (11 samples, 0.12%)</title><rect x="1148.8" y="675.0" width="1.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1151.8" y="686.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (7 samples, 0.08%)</title><rect x="1150.8" y="707.0" width="1.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1153.8" y="718.0"></text>
</g>
<g>
<title>lock_sock_nested (2 samples, 0.02%)</title><rect x="1151.9" y="707.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1154.9" y="718.0"></text>
</g>
<g>
<title>release_sock (5 samples, 0.06%)</title><rect x="1152.2" y="707.0" width="0.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1155.2" y="718.0"></text>
</g>
<g>
<title>tcp_release_cb (2 samples, 0.02%)</title><rect x="1152.6" y="691.0" width="0.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1155.6" y="702.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (50 samples, 0.57%)</title><rect x="1152.8" y="707.0" width="6.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1155.8" y="718.0"></text>
</g>
<g>
<title>__skb_datagram_iter (49 samples, 0.55%)</title><rect x="1153.0" y="691.0" width="6.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1156.0" y="702.0"></text>
</g>
<g>
<title>simple_copy_to_iter (39 samples, 0.44%)</title><rect x="1154.3" y="675.0" width="5.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1157.3" y="686.0"></text>
</g>
<g>
<title>__check_object_size (17 samples, 0.19%)</title><rect x="1154.3" y="659.0" width="2.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1157.3" y="670.0"></text>
</g>
<g>
<title>__virt_addr_valid (11 samples, 0.12%)</title><rect x="1155.1" y="643.0" width="1.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1158.1" y="654.0"></text>
</g>
<g>
<title>_copy_to_iter (20 samples, 0.23%)</title><rect x="1156.6" y="659.0" width="2.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1159.6" y="670.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (17 samples, 0.19%)</title><rect x="1157.0" y="643.0" width="2.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1160.0" y="654.0"></text>
</g>
<g>
<title>check_stack_object (2 samples, 0.02%)</title><rect x="1159.3" y="659.0" width="0.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1162.3" y="670.0"></text>
</g>
<g>
<title>tcp_cleanup_rbuf (16 samples, 0.18%)</title><rect x="1159.5" y="707.0" width="2.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1162.5" y="718.0"></text>
</g>
<g>
<title>__tcp_select_window (2 samples, 0.02%)</title><rect x="1159.9" y="691.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1162.9" y="702.0"></text>
</g>
<g>
<title>tcp_send_ack (11 samples, 0.12%)</title><rect x="1160.2" y="691.0" width="1.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1163.2" y="702.0"></text>
</g>
<g>
<title>__tcp_send_ack.part.0 (11 samples, 0.12%)</title><rect x="1160.2" y="675.0" width="1.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1163.2" y="686.0"></text>
</g>
<g>
<title>__alloc_skb (2 samples, 0.02%)</title><rect x="1160.2" y="659.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1163.2" y="670.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (9 samples, 0.10%)</title><rect x="1160.5" y="659.0" width="1.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1163.5" y="670.0"></text>
</g>
<g>
<title>ip_queue_xmit (8 samples, 0.09%)</title><rect x="1160.6" y="643.0" width="1.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1163.6" y="654.0"></text>
</g>
<g>
<title>__ip_queue_xmit (8 samples, 0.09%)</title><rect x="1160.6" y="627.0" width="1.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1163.6" y="638.0"></text>
</g>
<g>
<title>ip_local_out (8 samples, 0.09%)</title><rect x="1160.6" y="611.0" width="1.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1163.6" y="622.0"></text>
</g>
<g>
<title>ip_output (8 samples, 0.09%)</title><rect x="1160.6" y="595.0" width="1.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1163.6" y="606.0"></text>
</g>
<g>
<title>ip_finish_output (7 samples, 0.08%)</title><rect x="1160.7" y="579.0" width="1.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1163.7" y="590.0"></text>
</g>
<g>
<title>__ip_finish_output (7 samples, 0.08%)</title><rect x="1160.7" y="563.0" width="1.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1163.7" y="574.0"></text>
</g>
<g>
<title>ip_finish_output2 (7 samples, 0.08%)</title><rect x="1160.7" y="547.0" width="1.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1163.7" y="558.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (6 samples, 0.07%)</title><rect x="1160.7" y="531.0" width="0.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1163.7" y="542.0"></text>
</g>
<g>
<title>do_softirq.part.0 (6 samples, 0.07%)</title><rect x="1160.7" y="515.0" width="0.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1163.7" y="526.0"></text>
</g>
<g>
<title>do_softirq_own_stack (6 samples, 0.07%)</title><rect x="1160.7" y="499.0" width="0.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1163.7" y="510.0"></text>
</g>
<g>
<title>__softirqentry_text_start (6 samples, 0.07%)</title><rect x="1160.7" y="483.0" width="0.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1163.7" y="494.0"></text>
</g>
<g>
<title>net_rx_action (6 samples, 0.07%)</title><rect x="1160.7" y="467.0" width="0.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1163.7" y="478.0"></text>
</g>
<g>
<title>process_backlog (6 samples, 0.07%)</title><rect x="1160.7" y="451.0" width="0.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1163.7" y="462.0"></text>
</g>
<g>
<title>__netif_receive_skb (6 samples, 0.07%)</title><rect x="1160.7" y="435.0" width="0.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1163.7" y="446.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (6 samples, 0.07%)</title><rect x="1160.7" y="419.0" width="0.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1163.7" y="430.0"></text>
</g>
<g>
<title>ip_rcv (5 samples, 0.06%)</title><rect x="1160.9" y="403.0" width="0.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1163.9" y="414.0"></text>
</g>
<g>
<title>ip_rcv_finish (4 samples, 0.05%)</title><rect x="1161.0" y="387.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1164.0" y="398.0"></text>
</g>
<g>
<title>ip_local_deliver (4 samples, 0.05%)</title><rect x="1161.0" y="371.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1164.0" y="382.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (4 samples, 0.05%)</title><rect x="1161.0" y="355.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1164.0" y="366.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (4 samples, 0.05%)</title><rect x="1161.0" y="339.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1164.0" y="350.0"></text>
</g>
<g>
<title>tcp_v4_rcv (4 samples, 0.05%)</title><rect x="1161.0" y="323.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1164.0" y="334.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (3 samples, 0.03%)</title><rect x="1161.1" y="307.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1164.1" y="318.0"></text>
</g>
<g>
<title>tcp_rcv_established (2 samples, 0.02%)</title><rect x="1161.3" y="291.0" width="0.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1164.3" y="302.0"></text>
</g>
<g>
<title>tcp_ack (2 samples, 0.02%)</title><rect x="1161.3" y="275.0" width="0.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1164.3" y="286.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (2 samples, 0.02%)</title><rect x="1161.3" y="259.0" width="0.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1164.3" y="270.0"></text>
</g>
<g>
<title>__kfree_skb (2 samples, 0.02%)</title><rect x="1161.3" y="243.0" width="0.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1164.3" y="254.0"></text>
</g>
<g>
<title>tcp_rcv_space_adjust (13 samples, 0.15%)</title><rect x="1161.7" y="707.0" width="1.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1164.7" y="718.0"></text>
</g>
<g>
<title>ktime_get (3 samples, 0.03%)</title><rect x="1161.7" y="691.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1164.7" y="702.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (10 samples, 0.11%)</title><rect x="1162.1" y="691.0" width="1.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1165.1" y="702.0"></text>
</g>
<g>
<title>read_tsc (7 samples, 0.08%)</title><rect x="1162.5" y="675.0" width="0.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1165.5" y="686.0"></text>
</g>
<g>
<title>security_socket_recvmsg (19 samples, 0.22%)</title><rect x="1163.5" y="739.0" width="2.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1166.5" y="750.0"></text>
</g>
<g>
<title>apparmor_socket_recvmsg (15 samples, 0.17%)</title><rect x="1164.1" y="723.0" width="2.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1167.1" y="734.0"></text>
</g>
<g>
<title>aa_sk_perm (15 samples, 0.17%)</title><rect x="1164.1" y="707.0" width="2.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1167.1" y="718.0"></text>
</g>
<g>
<title>sockfd_lookup_light (20 samples, 0.23%)</title><rect x="1166.2" y="755.0" width="2.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1169.2" y="766.0"></text>
</g>
<g>
<title>__fdget (13 samples, 0.15%)</title><rect x="1166.2" y="739.0" width="1.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1169.2" y="750.0"></text>
</g>
<g>
<title>__fget_light (13 samples, 0.15%)</title><rect x="1166.2" y="723.0" width="1.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1169.2" y="734.0"></text>
</g>
<g>
<title>__fget (13 samples, 0.15%)</title><rect x="1166.2" y="707.0" width="1.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1169.2" y="718.0"></text>
</g>
<g>
<title>__fget_light (7 samples, 0.08%)</title><rect x="1168.0" y="739.0" width="0.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1171.0" y="750.0"></text>
</g>
<g>
<title>fput (2 samples, 0.02%)</title><rect x="1168.9" y="771.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1171.9" y="782.0"></text>
</g>
<g>
<title>import_single_range (8 samples, 0.09%)</title><rect x="1169.2" y="771.0" width="1.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1172.2" y="782.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (3 samples, 0.03%)</title><rect x="1170.4" y="883.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1173.4" y="894.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (9 samples, 0.10%)</title><rect x="1170.8" y="899.0" width="1.2" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1173.8" y="910.0"></text>
</g>
<g>
<title>gettimeofday (7 samples, 0.08%)</title><rect x="1171.0" y="883.0" width="1.0" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="1174.0" y="894.0"></text>
</g>
<g>
<title>[vdso] (6 samples, 0.07%)</title><rect x="1171.2" y="867.0" width="0.8" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="1174.2" y="878.0"></text>
</g>
<g>
<title>start_thread (135 samples, 1.53%)</title><rect x="1172.0" y="915.0" width="18.0" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="1175.0" y="926.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (135 samples, 1.53%)</title><rect x="1172.0" y="899.0" width="18.0" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="1175.0" y="910.0"></text>
</g>
<g>
<title>Thread::call_run() (135 samples, 1.53%)</title><rect x="1172.0" y="883.0" width="18.0" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1175.0" y="894.0"></text>
</g>
<g>
<title>GangWorker::loop() (88 samples, 1.00%)</title><rect x="1172.0" y="867.0" width="11.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1175.0" y="878.0"></text>
</g>
<g>
<title>G1FreeCollectionSetTask::work(unsigned int) (2 samples, 0.02%)</title><rect x="1172.0" y="851.0" width="0.2" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1175.0" y="862.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (84 samples, 0.95%)</title><rect x="1172.2" y="851.0" width="11.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1175.2" y="862.0"></text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (68 samples, 0.77%)</title><rect x="1172.2" y="835.0" width="9.1" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1175.2" y="846.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue() (15 samples, 0.17%)</title><rect x="1172.2" y="819.0" width="2.0" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1175.2" y="830.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (10 samples, 0.11%)</title><rect x="1172.9" y="803.0" width="1.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1175.9" y="814.0"></text>
</g>
<g>
<title>ParallelTaskTerminator::offer_termination(TerminatorTerminator*) (3 samples, 0.03%)</title><rect x="1174.2" y="819.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1177.2" y="830.0"></text>
</g>
<g>
<title>SpinPause (50 samples, 0.57%)</title><rect x="1174.6" y="819.0" width="6.7" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="1177.6" y="830.0"></text>
</g>
<g>
<title>G1RemSet::oops_into_collection_set_do(G1ParScanThreadState*, unsigned int) (7 samples, 0.08%)</title><rect x="1181.3" y="835.0" width="0.9" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1184.3" y="846.0"></text>
</g>
<g>
<title>G1RemSet::update_rem_set(G1ParScanThreadState*, unsigned int) (7 samples, 0.08%)</title><rect x="1181.3" y="819.0" width="0.9" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1184.3" y="830.0"></text>
</g>
<g>
<title>G1CollectedHeap::iterate_dirty_card_closure(CardTableEntryClosure*, unsigned int) (7 samples, 0.08%)</title><rect x="1181.3" y="803.0" width="0.9" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1184.3" y="814.0"></text>
</g>
<g>
<title>DirtyCardQueueSet::apply_closure_during_gc(CardTableEntryClosure*, unsigned int) (7 samples, 0.08%)</title><rect x="1181.3" y="787.0" width="0.9" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1184.3" y="798.0"></text>
</g>
<g>
<title>G1RefineCardClosure::do_card_ptr(signed char*, unsigned int) (5 samples, 0.06%)</title><rect x="1181.3" y="771.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1184.3" y="782.0"></text>
</g>
<g>
<title>G1RemSet::refine_card_during_gc(signed char*, G1ScanObjsDuringUpdateRSClosure*) [clone .part.124] (5 samples, 0.06%)</title><rect x="1181.3" y="755.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1184.3" y="766.0"></text>
</g>
<g>
<title>bool HeapRegion::oops_on_card_seq_iterate_careful&lt;true, G1ScanObjsDuringUpdateRSClosure&gt;(MemRegion, G1ScanObjsDuringUpdateRSClosure*) (5 samples, 0.06%)</title><rect x="1181.3" y="739.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1184.3" y="750.0"></text>
</g>
<g>
<title>void OopOopIterateDispatch&lt;G1ScanObjsDuringUpdateRSClosure&gt;::Table::oop_oop_iterate&lt;InstanceKlass, unsigned int&gt;(G1ScanObjsDuringUpdateRSClosure*, oopDesc*, Klass*) (3 samples, 0.03%)</title><rect x="1181.6" y="723.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1184.6" y="734.0"></text>
</g>
<g>
<title>G1RootProcessor::evacuate_roots(G1ParScanThreadState*, unsigned int) (9 samples, 0.10%)</title><rect x="1182.2" y="835.0" width="1.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1185.2" y="846.0"></text>
</g>
<g>
<title>G1RootProcessor::process_java_roots(G1RootClosures*, G1GCPhaseTimes*, unsigned int) (8 samples, 0.09%)</title><rect x="1182.2" y="819.0" width="1.1" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1185.2" y="830.0"></text>
</g>
<g>
<title>ClassLoaderDataGraph::roots_cld_do(CLDClosure*, CLDClosure*) (2 samples, 0.02%)</title><rect x="1182.2" y="803.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1185.2" y="814.0"></text>
</g>
<g>
<title>Threads::possibly_parallel_oops_do(bool, OopClosure*, CodeBlobClosure*) (6 samples, 0.07%)</title><rect x="1182.5" y="803.0" width="0.8" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1185.5" y="814.0"></text>
</g>
<g>
<title>JavaThread::oops_do(OopClosure*, CodeBlobClosure*) (5 samples, 0.06%)</title><rect x="1182.7" y="787.0" width="0.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1185.7" y="798.0"></text>
</g>
<g>
<title>frame::oops_do_internal(OopClosure*, CodeBlobClosure*, RegisterMap*, bool) (2 samples, 0.02%)</title><rect x="1182.7" y="771.0" width="0.2" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1185.7" y="782.0"></text>
</g>
<g>
<title>OopMapSet::oops_do(frame const*, RegisterMap const*, OopClosure*) (2 samples, 0.02%)</title><rect x="1182.7" y="755.0" width="0.2" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1185.7" y="766.0"></text>
</g>
<g>
<title>frame::oops_interpreted_do(OopClosure*, RegisterMap const*, bool) (3 samples, 0.03%)</title><rect x="1182.9" y="771.0" width="0.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1185.9" y="782.0"></text>
</g>
<g>
<title>JavaThread::run() (44 samples, 0.50%)</title><rect x="1183.7" y="867.0" width="5.9" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1186.7" y="878.0"></text>
</g>
<g>
<title>CompileBroker::compiler_thread_loop() (44 samples, 0.50%)</title><rect x="1183.7" y="851.0" width="5.9" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1186.7" y="862.0"></text>
</g>
<g>
<title>CompileBroker::invoke_compiler_on_method(CompileTask*) (44 samples, 0.50%)</title><rect x="1183.7" y="835.0" width="5.9" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1186.7" y="846.0"></text>
</g>
<g>
<title>C2Compiler::compile_method(ciEnv*, ciMethod*, int, DirectiveSet*) (43 samples, 0.49%)</title><rect x="1183.7" y="819.0" width="5.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1186.7" y="830.0"></text>
</g>
<g>
<title>Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool, DirectiveSet*) (43 samples, 0.49%)</title><rect x="1183.7" y="803.0" width="5.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1186.7" y="814.0"></text>
</g>
<g>
<title>Compile::Code_Gen() (32 samples, 0.36%)</title><rect x="1183.9" y="787.0" width="4.2" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1186.9" y="798.0"></text>
</g>
<g>
<title>Compile::fill_buffer(CodeBuffer*, unsigned int*) (2 samples, 0.02%)</title><rect x="1184.0" y="771.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1187.0" y="782.0"></text>
</g>
<g>
<title>Matcher::match() (4 samples, 0.05%)</title><rect x="1184.3" y="771.0" width="0.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1187.3" y="782.0"></text>
</g>
<g>
<title>Matcher::xform(Node*, int) (3 samples, 0.03%)</title><rect x="1184.4" y="755.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1187.4" y="766.0"></text>
</g>
<g>
<title>PhaseChaitin::Register_Allocate() (25 samples, 0.28%)</title><rect x="1184.8" y="771.0" width="3.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1187.8" y="782.0"></text>
</g>
<g>
<title>PhaseChaitin::Simplify() (3 samples, 0.03%)</title><rect x="1184.9" y="755.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1187.9" y="766.0"></text>
</g>
<g>
<title>PhaseChaitin::build_ifg_physical(ResourceArea*) (9 samples, 0.10%)</title><rect x="1185.3" y="755.0" width="1.2" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1188.3" y="766.0"></text>
</g>
<g>
<title>PhaseChaitin::add_input_to_liveout(Block*, Node*, IndexSet*, double, PhaseChaitin::Pressure&amp;, PhaseChaitin::Pressure&amp;) (2 samples, 0.02%)</title><rect x="1186.0" y="739.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1189.0" y="750.0"></text>
</g>
<g>
<title>PhaseChaitin::build_ifg_virtual() (2 samples, 0.02%)</title><rect x="1186.5" y="755.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1189.5" y="766.0"></text>
</g>
<g>
<title>PhaseChaitin::gather_lrg_masks(bool) (2 samples, 0.02%)</title><rect x="1186.8" y="755.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1189.8" y="766.0"></text>
</g>
<g>
<title>PhaseChaitin::post_allocate_copy_removal() (2 samples, 0.02%)</title><rect x="1187.2" y="755.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1190.2" y="766.0"></text>
</g>
<g>
<title>PhaseIFG::SquareUp() (2 samples, 0.02%)</title><rect x="1187.6" y="755.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1190.6" y="766.0"></text>
</g>
<g>
<title>PhaseLive::compute(unsigned int) (2 samples, 0.02%)</title><rect x="1187.9" y="755.0" width="0.2" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1190.9" y="766.0"></text>
</g>
<g>
<title>Compile::Optimize() (6 samples, 0.07%)</title><rect x="1188.1" y="787.0" width="0.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1191.1" y="798.0"></text>
</g>
<g>
<title>PhaseCCP::analyze() (2 samples, 0.02%)</title><rect x="1188.3" y="771.0" width="0.2" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1191.3" y="782.0"></text>
</g>
<g>
<title>Compile::remove_useless_nodes(Unique_Node_List&amp;) (2 samples, 0.02%)</title><rect x="1188.9" y="787.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1191.9" y="798.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.02%)</title><rect x="1189.2" y="787.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1192.2" y="798.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.02%)</title><rect x="1189.2" y="771.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1192.2" y="782.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.02%)</title><rect x="1189.2" y="755.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1192.2" y="766.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.02%)</title><rect x="1189.2" y="739.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1192.2" y="750.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.02%)</title><rect x="1189.2" y="723.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1192.2" y="734.0"></text>
</g>
<g>
<title>VMThread::run() (3 samples, 0.03%)</title><rect x="1189.6" y="867.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1192.6" y="878.0"></text>
</g>
<g>
<title>VMThread::loop() (3 samples, 0.03%)</title><rect x="1189.6" y="851.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1192.6" y="862.0"></text>
</g>
</g>
</svg>
