<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="966" onload="init(evt)" viewBox="0 0 1200 966" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="949"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="949"> </text>
<g id="frames">
<g>
<title>all (2,952 samples, 100.00%)</title><rect x="10.0" y="915.0" width="1180.0" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="13.0" y="926.0">all</text>
</g>
<g>
<title>java/lang/Thread.run (2,534 samples, 85.84%)</title><rect x="10.0" y="899.0" width="1012.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="13.0" y="910.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (2,534 samples, 85.84%)</title><rect x="10.0" y="883.0" width="1012.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="13.0" y="894.0">java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (2,534 samples, 85.84%)</title><rect x="10.0" y="867.0" width="1012.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="13.0" y="878.0">java/util/concurrent/ThreadPoolExecutor.runWorker</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (1 samples, 0.03%)</title><rect x="12.8" y="851.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="15.8" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (164 samples, 5.56%)</title><rect x="13.2" y="851.0" width="65.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="16.2" y="862.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (164 samples, 5.56%)</title><rect x="13.2" y="835.0" width="65.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="16.2" y="846.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (151 samples, 5.12%)</title><rect x="14.4" y="819.0" width="60.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="17.4" y="830.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.checkInterruptWhileWaiting (1 samples, 0.03%)</title><rect x="15.6" y="803.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="18.6" y="814.0"></text>
</g>
<g>
<title>java/lang/Thread.interrupted (1 samples, 0.03%)</title><rect x="15.6" y="787.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="18.6" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (1 samples, 0.03%)</title><rect x="15.6" y="771.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="18.6" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (5 samples, 0.17%)</title><rect x="16.0" y="803.0" width="2.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="19.0" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (5 samples, 0.17%)</title><rect x="16.0" y="787.0" width="2.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="19.0" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (5 samples, 0.17%)</title><rect x="16.0" y="771.0" width="2.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="19.0" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.fullyRelease (2 samples, 0.07%)</title><rect x="18.0" y="803.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="21.0" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (2 samples, 0.07%)</title><rect x="18.0" y="787.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="21.0" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (1 samples, 0.03%)</title><rect x="18.0" y="771.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="21.0" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (1 samples, 0.03%)</title><rect x="18.0" y="755.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="21.0" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.tryRelease (1 samples, 0.03%)</title><rect x="18.0" y="739.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="21.0" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.tryRelease (1 samples, 0.03%)</title><rect x="18.4" y="771.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="21.4" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (140 samples, 4.74%)</title><rect x="18.8" y="803.0" width="56.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="21.8" y="814.0">java/..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (138 samples, 4.67%)</title><rect x="19.6" y="787.0" width="55.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="22.6" y="798.0">jdk/i..</text>
</g>
<g>
<title>Parker::park(bool, long) (1 samples, 0.03%)</title><rect x="20.4" y="771.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="23.4" y="782.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.235] (2 samples, 0.07%)</title><rect x="20.8" y="771.0" width="0.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="23.8" y="782.0"></text>
</g>
<g>
<title>Unsafe_Park (61 samples, 2.07%)</title><rect x="21.6" y="771.0" width="24.4" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="24.6" y="782.0">U..</text>
</g>
<g>
<title>JavaFrameAnchor::make_walkable(JavaThread*) (1 samples, 0.03%)</title><rect x="22.4" y="755.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="25.4" y="766.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (2 samples, 0.07%)</title><rect x="22.8" y="755.0" width="0.8" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="25.8" y="766.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (24 samples, 0.81%)</title><rect x="23.6" y="755.0" width="9.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="26.6" y="766.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (5 samples, 0.17%)</title><rect x="26.8" y="739.0" width="2.0" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="29.8" y="750.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/ld-2.31.so (3 samples, 0.10%)</title><rect x="27.6" y="723.0" width="1.2" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="30.6" y="734.0"></text>
</g>
<g>
<title>__tls_get_addr (11 samples, 0.37%)</title><rect x="28.8" y="739.0" width="4.4" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="31.8" y="750.0"></text>
</g>
<g>
<title>Thread::is_interrupted(Thread*, bool) (1 samples, 0.03%)</title><rect x="33.2" y="755.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="36.2" y="766.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.235] (2 samples, 0.07%)</title><rect x="33.6" y="755.0" width="0.8" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="36.6" y="766.0"></text>
</g>
<g>
<title>__pthread_cond_wait (1 samples, 0.03%)</title><rect x="34.4" y="755.0" width="0.4" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="37.4" y="766.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock (21 samples, 0.71%)</title><rect x="34.8" y="755.0" width="8.4" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="37.8" y="766.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (6 samples, 0.20%)</title><rect x="40.8" y="739.0" width="2.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="43.8" y="750.0"></text>
</g>
<g>
<title>do_syscall_64 (6 samples, 0.20%)</title><rect x="40.8" y="723.0" width="2.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="43.8" y="734.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.03%)</title><rect x="42.8" y="707.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="45.8" y="718.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.03%)</title><rect x="42.8" y="691.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="45.8" y="702.0"></text>
</g>
<g>
<title>futex_wake (1 samples, 0.03%)</title><rect x="42.8" y="675.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="45.8" y="686.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.03%)</title><rect x="43.2" y="755.0" width="0.4" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="46.2" y="766.0"></text>
</g>
<g>
<title>java_lang_Thread::set_thread_status(oopDesc*, java_lang_Thread::ThreadStatus) (4 samples, 0.14%)</title><rect x="43.6" y="755.0" width="1.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="46.6" y="766.0"></text>
</g>
<g>
<title>os::is_interrupted(Thread*, bool) (1 samples, 0.03%)</title><rect x="45.2" y="755.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="48.2" y="766.0"></text>
</g>
<g>
<title>pthread_mutex_unlock@plt (1 samples, 0.03%)</title><rect x="45.6" y="755.0" width="0.4" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="48.6" y="766.0"></text>
</g>
<g>
<title>[unknown] (68 samples, 2.30%)</title><rect x="46.0" y="771.0" width="27.2" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="49.0" y="782.0">[..</text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/ld-2.31.so (6 samples, 0.20%)</title><rect x="46.0" y="755.0" width="2.4" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="49.0" y="766.0"></text>
</g>
<g>
<title>__GI___pthread_mutex_trylock (1 samples, 0.03%)</title><rect x="48.4" y="755.0" width="0.4" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="51.4" y="766.0"></text>
</g>
<g>
<title>__pthread_cond_wait (58 samples, 1.96%)</title><rect x="48.8" y="755.0" width="23.2" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="51.8" y="766.0">_..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (41 samples, 1.39%)</title><rect x="55.6" y="739.0" width="16.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="58.6" y="750.0"></text>
</g>
<g>
<title>do_syscall_64 (41 samples, 1.39%)</title><rect x="55.6" y="723.0" width="16.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="58.6" y="734.0"></text>
</g>
<g>
<title>__x64_sys_futex (33 samples, 1.12%)</title><rect x="58.8" y="707.0" width="13.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="61.8" y="718.0"></text>
</g>
<g>
<title>do_futex (30 samples, 1.02%)</title><rect x="60.0" y="691.0" width="12.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="63.0" y="702.0"></text>
</g>
<g>
<title>futex_wait (29 samples, 0.98%)</title><rect x="60.4" y="675.0" width="11.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="63.4" y="686.0"></text>
</g>
<g>
<title>futex_wait_queue_me (26 samples, 0.88%)</title><rect x="60.8" y="659.0" width="10.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="63.8" y="670.0"></text>
</g>
<g>
<title>rcu_all_qs (1 samples, 0.03%)</title><rect x="61.2" y="643.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="64.2" y="654.0"></text>
</g>
<g>
<title>schedule (24 samples, 0.81%)</title><rect x="61.6" y="643.0" width="9.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="64.6" y="654.0"></text>
</g>
<g>
<title>__schedule (24 samples, 0.81%)</title><rect x="61.6" y="627.0" width="9.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="64.6" y="638.0"></text>
</g>
<g>
<title>finish_task_switch (21 samples, 0.71%)</title><rect x="62.8" y="611.0" width="8.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="65.8" y="622.0"></text>
</g>
<g>
<title>apic_timer_interrupt (3 samples, 0.10%)</title><rect x="70.0" y="595.0" width="1.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="73.0" y="606.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (3 samples, 0.10%)</title><rect x="70.0" y="579.0" width="1.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="73.0" y="590.0"></text>
</g>
<g>
<title>irq_exit (3 samples, 0.10%)</title><rect x="70.0" y="563.0" width="1.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="73.0" y="574.0"></text>
</g>
<g>
<title>__softirqentry_text_start (3 samples, 0.10%)</title><rect x="70.0" y="547.0" width="1.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="73.0" y="558.0"></text>
</g>
<g>
<title>run_rebalance_domains (3 samples, 0.10%)</title><rect x="70.0" y="531.0" width="1.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="73.0" y="542.0"></text>
</g>
<g>
<title>update_blocked_averages (3 samples, 0.10%)</title><rect x="70.0" y="515.0" width="1.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="73.0" y="526.0"></text>
</g>
<g>
<title>__lock_text_start (3 samples, 0.10%)</title><rect x="70.0" y="499.0" width="1.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="73.0" y="510.0"></text>
</g>
<g>
<title>futex_wait_setup (2 samples, 0.07%)</title><rect x="71.2" y="659.0" width="0.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="74.2" y="670.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (2 samples, 0.07%)</title><rect x="72.0" y="755.0" width="0.8" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="75.0" y="766.0"></text>
</g>
<g>
<title>_pthread_cleanup_pop (1 samples, 0.03%)</title><rect x="72.8" y="755.0" width="0.4" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="75.8" y="766.0"></text>
</g>
<g>
<title>java_lang_Thread::set_thread_status(oopDesc*, java_lang_Thread::ThreadStatus) (4 samples, 0.14%)</title><rect x="73.2" y="771.0" width="1.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="76.2" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (10 samples, 0.34%)</title><rect x="74.8" y="819.0" width="4.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="77.8" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (10 samples, 0.34%)</title><rect x="74.8" y="803.0" width="4.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="77.8" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (10 samples, 0.34%)</title><rect x="74.8" y="787.0" width="4.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="77.8" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (10 samples, 0.34%)</title><rect x="74.8" y="771.0" width="4.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="77.8" y="782.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (10 samples, 0.34%)</title><rect x="74.8" y="755.0" width="4.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="77.8" y="766.0"></text>
</g>
<g>
<title>__pthread_cond_signal (10 samples, 0.34%)</title><rect x="74.8" y="739.0" width="4.0" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="77.8" y="750.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (8 samples, 0.27%)</title><rect x="75.6" y="723.0" width="3.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="78.6" y="734.0"></text>
</g>
<g>
<title>do_syscall_64 (8 samples, 0.27%)</title><rect x="75.6" y="707.0" width="3.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="78.6" y="718.0"></text>
</g>
<g>
<title>__x64_sys_futex (8 samples, 0.27%)</title><rect x="75.6" y="691.0" width="3.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="78.6" y="702.0"></text>
</g>
<g>
<title>do_futex (8 samples, 0.27%)</title><rect x="75.6" y="675.0" width="3.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="78.6" y="686.0"></text>
</g>
<g>
<title>futex_wake (8 samples, 0.27%)</title><rect x="75.6" y="659.0" width="3.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="78.6" y="670.0"></text>
</g>
<g>
<title>wake_up_q (8 samples, 0.27%)</title><rect x="75.6" y="643.0" width="3.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="78.6" y="654.0"></text>
</g>
<g>
<title>try_to_wake_up (8 samples, 0.27%)</title><rect x="75.6" y="627.0" width="3.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="78.6" y="638.0"></text>
</g>
<g>
<title>__lock_text_start (8 samples, 0.27%)</title><rect x="75.6" y="611.0" width="3.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="78.6" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivlev/ThreadController$$Lambda$74/1788524259.run (2,362 samples, 80.01%)</title><rect x="78.8" y="851.0" width="944.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="81.8" y="862.0">ru/mail/polis/service/ivlev/ThreadController$$Lambda$74/1788524259.run</text>
</g>
<g>
<title>ru/mail/polis/service/ivlev/ThreadController.lambda$get$1 (2,362 samples, 80.01%)</title><rect x="78.8" y="835.0" width="944.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="81.8" y="846.0">ru/mail/polis/service/ivlev/ThreadController.lambda$get$1</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (376 samples, 12.74%)</title><rect x="79.6" y="819.0" width="150.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="82.6" y="830.0">one/nio/http/HttpSe..</text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (7 samples, 0.24%)</title><rect x="82.8" y="803.0" width="2.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="85.8" y="814.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (7 samples, 0.24%)</title><rect x="82.8" y="787.0" width="2.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="85.8" y="798.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (7 samples, 0.24%)</title><rect x="82.8" y="771.0" width="2.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="85.8" y="782.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.07%)</title><rect x="83.2" y="755.0" width="0.7" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="86.2" y="766.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (2 samples, 0.07%)</title><rect x="83.2" y="739.0" width="0.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="86.2" y="750.0"></text>
</g>
<g>
<title>gettimeofday (2 samples, 0.07%)</title><rect x="83.9" y="755.0" width="0.8" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="86.9" y="766.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (2 samples, 0.07%)</title><rect x="84.7" y="755.0" width="0.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="87.7" y="766.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.03%)</title><rect x="84.7" y="739.0" width="0.4" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="87.7" y="750.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.03%)</title><rect x="85.1" y="739.0" width="0.4" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="88.1" y="750.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.03%)</title><rect x="85.1" y="723.0" width="0.4" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="88.1" y="734.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (356 samples, 12.06%)</title><rect x="85.5" y="803.0" width="142.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="88.5" y="814.0">one/nio/http/HttpS..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (8 samples, 0.27%)</title><rect x="85.5" y="787.0" width="3.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="88.5" y="798.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (1 samples, 0.03%)</title><rect x="88.3" y="771.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="91.3" y="782.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (1 samples, 0.03%)</title><rect x="88.3" y="755.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="91.3" y="766.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (1 samples, 0.03%)</title><rect x="88.3" y="739.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="91.3" y="750.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (1 samples, 0.03%)</title><rect x="88.3" y="723.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="91.3" y="734.0"></text>
</g>
<g>
<title>java/lang/String.charAt (1 samples, 0.03%)</title><rect x="88.3" y="707.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="91.3" y="718.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (348 samples, 11.79%)</title><rect x="88.7" y="787.0" width="139.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="91.7" y="798.0">one/nio/net/Sessi..</text>
</g>
<g>
<title>one/nio/net/Session.write (348 samples, 11.79%)</title><rect x="88.7" y="771.0" width="139.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="91.7" y="782.0">one/nio/net/Sessi..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (1 samples, 0.03%)</title><rect x="88.7" y="755.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="91.7" y="766.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (347 samples, 11.75%)</title><rect x="89.1" y="755.0" width="138.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="92.1" y="766.0">one/nio/net/Sessi..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (2 samples, 0.07%)</title><rect x="89.1" y="739.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="92.1" y="750.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (345 samples, 11.69%)</title><rect x="89.9" y="739.0" width="138.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="92.9" y="750.0">one/nio/net/Nativ..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (14 samples, 0.47%)</title><rect x="90.7" y="723.0" width="5.6" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="93.7" y="734.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (1 samples, 0.03%)</title><rect x="93.1" y="707.0" width="0.4" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="96.1" y="718.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.03%)</title><rect x="93.5" y="707.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="96.5" y="718.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (1 samples, 0.03%)</title><rect x="93.9" y="707.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="96.9" y="718.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (4 samples, 0.14%)</title><rect x="94.3" y="707.0" width="1.6" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="97.3" y="718.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (1 samples, 0.03%)</title><rect x="94.7" y="691.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="97.7" y="702.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (2 samples, 0.07%)</title><rect x="95.1" y="691.0" width="0.8" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="98.1" y="702.0"></text>
</g>
<g>
<title>ResourceMark::reset_to_mark() (1 samples, 0.03%)</title><rect x="95.5" y="675.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="98.5" y="686.0"></text>
</g>
<g>
<title>void AccessInternal::arraycopy_conjoint&lt;signed char&gt;(signed char*, signed char*, unsigned long) (1 samples, 0.03%)</title><rect x="95.9" y="707.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="98.9" y="718.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (1 samples, 0.03%)</title><rect x="96.3" y="723.0" width="0.4" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="99.3" y="734.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (1 samples, 0.03%)</title><rect x="96.7" y="723.0" width="0.4" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="99.7" y="734.0"></text>
</g>
<g>
<title>__send (323 samples, 10.94%)</title><rect x="97.1" y="723.0" width="129.2" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="100.1" y="734.0">__send</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (306 samples, 10.37%)</title><rect x="103.9" y="707.0" width="122.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="106.9" y="718.0">entry_SYSCALL_6..</text>
</g>
<g>
<title>__x64_sys_sendto (2 samples, 0.07%)</title><rect x="103.9" y="691.0" width="0.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="106.9" y="702.0"></text>
</g>
<g>
<title>do_syscall_64 (304 samples, 10.30%)</title><rect x="104.7" y="691.0" width="121.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="107.7" y="702.0">do_syscall_64</text>
</g>
<g>
<title>__sys_sendto (1 samples, 0.03%)</title><rect x="105.9" y="675.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="108.9" y="686.0"></text>
</g>
<g>
<title>__x64_sys_sendto (300 samples, 10.16%)</title><rect x="106.3" y="675.0" width="120.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="109.3" y="686.0">__x64_sys_sendto</text>
</g>
<g>
<title>__sys_sendto (299 samples, 10.13%)</title><rect x="106.3" y="659.0" width="119.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="109.3" y="670.0">__sys_sendto</text>
</g>
<g>
<title>__fdget (1 samples, 0.03%)</title><rect x="108.3" y="643.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="111.3" y="654.0"></text>
</g>
<g>
<title>fput_many (1 samples, 0.03%)</title><rect x="108.7" y="643.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="111.7" y="654.0"></text>
</g>
<g>
<title>sock_sendmsg (291 samples, 9.86%)</title><rect x="109.1" y="643.0" width="116.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="112.1" y="654.0">sock_sendmsg</text>
</g>
<g>
<title>apparmor_socket_sendmsg (3 samples, 0.10%)</title><rect x="109.5" y="627.0" width="1.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="112.5" y="638.0"></text>
</g>
<g>
<title>inet6_sendmsg (287 samples, 9.72%)</title><rect x="110.7" y="627.0" width="114.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="113.7" y="638.0">inet6_sendmsg</text>
</g>
<g>
<title>tcp_sendmsg (286 samples, 9.69%)</title><rect x="111.1" y="611.0" width="114.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="114.1" y="622.0">tcp_sendmsg</text>
</g>
<g>
<title>_raw_spin_lock_bh (2 samples, 0.07%)</title><rect x="111.1" y="595.0" width="0.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="114.1" y="606.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (1 samples, 0.03%)</title><rect x="111.9" y="595.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="114.9" y="606.0"></text>
</g>
<g>
<title>tcp_push (2 samples, 0.07%)</title><rect x="112.3" y="595.0" width="0.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="115.3" y="606.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (279 samples, 9.45%)</title><rect x="113.1" y="595.0" width="111.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="116.1" y="606.0">tcp_sendmsg_l..</text>
</g>
<g>
<title>__check_object_size (3 samples, 0.10%)</title><rect x="113.5" y="579.0" width="1.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="116.5" y="590.0"></text>
</g>
<g>
<title>__virt_addr_valid (3 samples, 0.10%)</title><rect x="113.5" y="563.0" width="1.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="116.5" y="574.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (1 samples, 0.03%)</title><rect x="114.7" y="579.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="117.7" y="590.0"></text>
</g>
<g>
<title>_copy_from_iter_full (2 samples, 0.07%)</title><rect x="115.1" y="579.0" width="0.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="118.1" y="590.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (1 samples, 0.03%)</title><rect x="115.1" y="563.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="118.1" y="574.0"></text>
</g>
<g>
<title>iov_iter_advance (1 samples, 0.03%)</title><rect x="115.5" y="563.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="118.5" y="574.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (16 samples, 0.54%)</title><rect x="115.9" y="579.0" width="6.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="118.9" y="590.0"></text>
</g>
<g>
<title>__alloc_skb (14 samples, 0.47%)</title><rect x="116.3" y="563.0" width="5.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="119.3" y="574.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.0 (5 samples, 0.17%)</title><rect x="117.5" y="547.0" width="2.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="120.5" y="558.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (2 samples, 0.07%)</title><rect x="117.5" y="531.0" width="0.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="120.5" y="542.0"></text>
</g>
<g>
<title>kmalloc_slab (2 samples, 0.07%)</title><rect x="117.5" y="515.0" width="0.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="120.5" y="526.0"></text>
</g>
<g>
<title>memset_erms (3 samples, 0.10%)</title><rect x="118.3" y="531.0" width="1.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="121.3" y="542.0"></text>
</g>
<g>
<title>__ksize (2 samples, 0.07%)</title><rect x="119.5" y="547.0" width="0.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="122.5" y="558.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (2 samples, 0.07%)</title><rect x="120.3" y="547.0" width="0.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="123.3" y="558.0"></text>
</g>
<g>
<title>ksize (1 samples, 0.03%)</title><rect x="121.1" y="547.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="124.1" y="558.0"></text>
</g>
<g>
<title>__ksize (1 samples, 0.03%)</title><rect x="121.1" y="531.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="124.1" y="542.0"></text>
</g>
<g>
<title>memset_erms (1 samples, 0.03%)</title><rect x="121.5" y="547.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="124.5" y="558.0"></text>
</g>
<g>
<title>ksize (1 samples, 0.03%)</title><rect x="121.9" y="563.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="124.9" y="574.0"></text>
</g>
<g>
<title>skb_entail (4 samples, 0.14%)</title><rect x="122.3" y="579.0" width="1.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="125.3" y="590.0"></text>
</g>
<g>
<title>skb_page_frag_refill (1 samples, 0.03%)</title><rect x="123.9" y="579.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="126.9" y="590.0"></text>
</g>
<g>
<title>tcp_push (246 samples, 8.33%)</title><rect x="124.3" y="579.0" width="98.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="127.3" y="590.0">tcp_push</text>
</g>
<g>
<title>__tcp_push_pending_frames (245 samples, 8.30%)</title><rect x="124.3" y="563.0" width="98.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="127.3" y="574.0">__tcp_push_..</text>
</g>
<g>
<title>__tcp_transmit_skb (1 samples, 0.03%)</title><rect x="124.3" y="547.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="127.3" y="558.0"></text>
</g>
<g>
<title>ktime_get (1 samples, 0.03%)</title><rect x="124.7" y="547.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="127.7" y="558.0"></text>
</g>
<g>
<title>tcp_small_queue_check.isra.0 (1 samples, 0.03%)</title><rect x="125.1" y="547.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="128.1" y="558.0"></text>
</g>
<g>
<title>tcp_write_xmit (242 samples, 8.20%)</title><rect x="125.5" y="547.0" width="96.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="128.5" y="558.0">tcp_write_x..</text>
</g>
<g>
<title>__tcp_transmit_skb (223 samples, 7.55%)</title><rect x="127.9" y="531.0" width="89.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="130.9" y="542.0">__tcp_tran..</text>
</g>
<g>
<title>__ip_queue_xmit (1 samples, 0.03%)</title><rect x="131.1" y="515.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="134.1" y="526.0"></text>
</g>
<g>
<title>__tcp_v4_send_check (1 samples, 0.03%)</title><rect x="131.5" y="515.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="134.5" y="526.0"></text>
</g>
<g>
<title>bictcp_cwnd_event (1 samples, 0.03%)</title><rect x="131.9" y="515.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="134.9" y="526.0"></text>
</g>
<g>
<title>ip_queue_xmit (205 samples, 6.94%)</title><rect x="132.3" y="515.0" width="82.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="135.3" y="526.0">ip_queue_..</text>
</g>
<g>
<title>__ip_queue_xmit (198 samples, 6.71%)</title><rect x="132.7" y="499.0" width="79.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="135.7" y="510.0">__ip_queu..</text>
</g>
<g>
<title>__sk_dst_check (2 samples, 0.07%)</title><rect x="132.7" y="483.0" width="0.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="135.7" y="494.0"></text>
</g>
<g>
<title>ipv4_dst_check (1 samples, 0.03%)</title><rect x="133.1" y="467.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="136.1" y="478.0"></text>
</g>
<g>
<title>ip_local_out (192 samples, 6.50%)</title><rect x="133.5" y="483.0" width="76.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="136.5" y="494.0">ip_local..</text>
</g>
<g>
<title>ip_output (189 samples, 6.40%)</title><rect x="134.3" y="467.0" width="75.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="137.3" y="478.0">ip_output</text>
</g>
<g>
<title>ip_finish_output (187 samples, 6.33%)</title><rect x="135.1" y="451.0" width="74.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="138.1" y="462.0">ip_finis..</text>
</g>
<g>
<title>__ip_finish_output (186 samples, 6.30%)</title><rect x="135.5" y="435.0" width="74.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="138.5" y="446.0">__ip_fin..</text>
</g>
<g>
<title>ip_finish_output2 (186 samples, 6.30%)</title><rect x="135.5" y="419.0" width="74.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="138.5" y="430.0">ip_finis..</text>
</g>
<g>
<title>__local_bh_enable_ip (160 samples, 5.42%)</title><rect x="137.5" y="403.0" width="64.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="140.5" y="414.0">__local..</text>
</g>
<g>
<title>do_softirq.part.0 (159 samples, 5.39%)</title><rect x="137.9" y="387.0" width="63.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="140.9" y="398.0">do_soft..</text>
</g>
<g>
<title>do_softirq_own_stack (157 samples, 5.32%)</title><rect x="138.7" y="371.0" width="62.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="141.7" y="382.0">do_sof..</text>
</g>
<g>
<title>__softirqentry_text_start (157 samples, 5.32%)</title><rect x="138.7" y="355.0" width="62.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="141.7" y="366.0">__soft..</text>
</g>
<g>
<title>__usecs_to_jiffies (1 samples, 0.03%)</title><rect x="140.7" y="339.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="143.7" y="350.0"></text>
</g>
<g>
<title>net_rx_action (150 samples, 5.08%)</title><rect x="141.1" y="339.0" width="60.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="144.1" y="350.0">net_rx..</text>
</g>
<g>
<title>process_backlog (149 samples, 5.05%)</title><rect x="141.5" y="323.0" width="59.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="144.5" y="334.0">proces..</text>
</g>
<g>
<title>__netif_receive_skb (146 samples, 4.95%)</title><rect x="142.7" y="307.0" width="58.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="145.7" y="318.0">__neti..</text>
</g>
<g>
<title>__netif_receive_skb_one_core (146 samples, 4.95%)</title><rect x="142.7" y="291.0" width="58.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="145.7" y="302.0">__neti..</text>
</g>
<g>
<title>__netif_receive_skb_core (3 samples, 0.10%)</title><rect x="143.5" y="275.0" width="1.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="146.5" y="286.0"></text>
</g>
<g>
<title>ip_rcv (141 samples, 4.78%)</title><rect x="144.7" y="275.0" width="56.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="147.7" y="286.0">ip_rcv</text>
</g>
<g>
<title>ip_local_deliver (2 samples, 0.07%)</title><rect x="144.7" y="259.0" width="0.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="147.7" y="270.0"></text>
</g>
<g>
<title>ip_rcv_core.isra.0 (1 samples, 0.03%)</title><rect x="145.5" y="259.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="148.5" y="270.0"></text>
</g>
<g>
<title>ip_rcv_finish (137 samples, 4.64%)</title><rect x="145.9" y="259.0" width="54.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="148.9" y="270.0">ip_rc..</text>
</g>
<g>
<title>ip_local_deliver (137 samples, 4.64%)</title><rect x="145.9" y="243.0" width="54.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="148.9" y="254.0">ip_lo..</text>
</g>
<g>
<title>ip_local_deliver_finish (136 samples, 4.61%)</title><rect x="145.9" y="227.0" width="54.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="148.9" y="238.0">ip_lo..</text>
</g>
<g>
<title>ip_protocol_deliver_rcu (135 samples, 4.57%)</title><rect x="145.9" y="211.0" width="54.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="148.9" y="222.0">ip_pr..</text>
</g>
<g>
<title>tcp_v4_rcv (133 samples, 4.51%)</title><rect x="146.7" y="195.0" width="53.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="149.7" y="206.0">tcp_v..</text>
</g>
<g>
<title>__inet_lookup_established (4 samples, 0.14%)</title><rect x="149.5" y="179.0" width="1.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="152.5" y="190.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (4 samples, 0.14%)</title><rect x="151.1" y="179.0" width="1.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="154.1" y="190.0"></text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (1 samples, 0.03%)</title><rect x="151.1" y="163.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="154.1" y="174.0"></text>
</g>
<g>
<title>apparmor_socket_sock_rcv_skb (2 samples, 0.07%)</title><rect x="151.5" y="163.0" width="0.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="154.5" y="174.0"></text>
</g>
<g>
<title>security_sock_rcv_skb (1 samples, 0.03%)</title><rect x="152.3" y="163.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="155.3" y="174.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (118 samples, 4.00%)</title><rect x="152.7" y="179.0" width="47.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="155.7" y="190.0">tcp_..</text>
</g>
<g>
<title>tcp_check_space (2 samples, 0.07%)</title><rect x="152.7" y="163.0" width="0.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="155.7" y="174.0"></text>
</g>
<g>
<title>tcp_rcv_established (116 samples, 3.93%)</title><rect x="153.5" y="163.0" width="46.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="156.5" y="174.0">tcp_..</text>
</g>
<g>
<title>__tcp_ack_snd_check (6 samples, 0.20%)</title><rect x="154.3" y="147.0" width="2.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="157.3" y="158.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (6 samples, 0.20%)</title><rect x="154.3" y="131.0" width="2.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="157.3" y="142.0"></text>
</g>
<g>
<title>sk_reset_timer (5 samples, 0.17%)</title><rect x="154.7" y="115.0" width="2.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="157.7" y="126.0"></text>
</g>
<g>
<title>lock_timer_base (1 samples, 0.03%)</title><rect x="154.7" y="99.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="157.7" y="110.0"></text>
</g>
<g>
<title>mod_timer (4 samples, 0.14%)</title><rect x="155.1" y="99.0" width="1.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="158.1" y="110.0"></text>
</g>
<g>
<title>__lock_text_start (3 samples, 0.10%)</title><rect x="155.5" y="83.0" width="1.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="158.5" y="94.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (1 samples, 0.03%)</title><rect x="156.7" y="147.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="159.7" y="158.0"></text>
</g>
<g>
<title>ktime_get_seconds (1 samples, 0.03%)</title><rect x="157.1" y="147.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="160.1" y="158.0"></text>
</g>
<g>
<title>tcp_ack (39 samples, 1.32%)</title><rect x="157.5" y="147.0" width="15.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="160.5" y="158.0"></text>
</g>
<g>
<title>__kfree_skb (4 samples, 0.14%)</title><rect x="159.5" y="131.0" width="1.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="162.5" y="142.0"></text>
</g>
<g>
<title>bictcp_cong_avoid (1 samples, 0.03%)</title><rect x="161.1" y="131.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="164.1" y="142.0"></text>
</g>
<g>
<title>rb_first (1 samples, 0.03%)</title><rect x="161.5" y="131.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="164.5" y="142.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (26 samples, 0.88%)</title><rect x="161.9" y="131.0" width="10.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="164.9" y="142.0"></text>
</g>
<g>
<title>__kfree_skb (18 samples, 0.61%)</title><rect x="163.5" y="115.0" width="7.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="166.5" y="126.0"></text>
</g>
<g>
<title>kfree_skbmem (5 samples, 0.17%)</title><rect x="163.5" y="99.0" width="2.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="166.5" y="110.0"></text>
</g>
<g>
<title>__slab_free (1 samples, 0.03%)</title><rect x="163.9" y="83.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="166.9" y="94.0"></text>
</g>
<g>
<title>kmem_cache_free (3 samples, 0.10%)</title><rect x="164.3" y="83.0" width="1.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="167.3" y="94.0"></text>
</g>
<g>
<title>__slab_free (1 samples, 0.03%)</title><rect x="165.1" y="67.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="168.1" y="78.0"></text>
</g>
<g>
<title>skb_release_all (12 samples, 0.41%)</title><rect x="165.5" y="99.0" width="4.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="168.5" y="110.0"></text>
</g>
<g>
<title>skb_release_data (12 samples, 0.41%)</title><rect x="165.5" y="83.0" width="4.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="168.5" y="94.0"></text>
</g>
<g>
<title>skb_free_head (6 samples, 0.20%)</title><rect x="167.9" y="67.0" width="2.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="170.9" y="78.0"></text>
</g>
<g>
<title>kfree (6 samples, 0.20%)</title><rect x="167.9" y="51.0" width="2.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="170.9" y="62.0"></text>
</g>
<g>
<title>__slab_free (2 samples, 0.07%)</title><rect x="169.5" y="35.0" width="0.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="172.5" y="46.0"></text>
</g>
<g>
<title>skb_release_head_state (1 samples, 0.03%)</title><rect x="170.3" y="99.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="173.3" y="110.0"></text>
</g>
<g>
<title>bictcp_acked (3 samples, 0.10%)</title><rect x="170.7" y="115.0" width="1.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="173.7" y="126.0"></text>
</g>
<g>
<title>tcp_ack_update_rtt.isra.0 (1 samples, 0.03%)</title><rect x="171.9" y="115.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="174.9" y="126.0"></text>
</g>
<g>
<title>tcp_rack_advance (1 samples, 0.03%)</title><rect x="172.3" y="131.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="175.3" y="142.0"></text>
</g>
<g>
<title>tcp_rate_gen (1 samples, 0.03%)</title><rect x="172.7" y="131.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="175.7" y="142.0"></text>
</g>
<g>
<title>tcp_data_ready (57 samples, 1.93%)</title><rect x="173.1" y="147.0" width="22.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="176.1" y="158.0">t..</text>
</g>
<g>
<title>sock_def_readable (57 samples, 1.93%)</title><rect x="173.1" y="131.0" width="22.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="176.1" y="142.0">s..</text>
</g>
<g>
<title>__wake_up_sync_key (57 samples, 1.93%)</title><rect x="173.1" y="115.0" width="22.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="176.1" y="126.0">_..</text>
</g>
<g>
<title>__wake_up_common_lock (57 samples, 1.93%)</title><rect x="173.1" y="99.0" width="22.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="176.1" y="110.0">_..</text>
</g>
<g>
<title>__lock_text_start (56 samples, 1.90%)</title><rect x="173.1" y="83.0" width="22.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="176.1" y="94.0">_..</text>
</g>
<g>
<title>_raw_spin_lock_irqsave (1 samples, 0.03%)</title><rect x="195.5" y="83.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="198.5" y="94.0"></text>
</g>
<g>
<title>tcp_event_data_recv (2 samples, 0.07%)</title><rect x="195.9" y="147.0" width="0.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="198.9" y="158.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (3 samples, 0.10%)</title><rect x="196.7" y="147.0" width="1.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="199.7" y="158.0"></text>
</g>
<g>
<title>read_tsc (3 samples, 0.10%)</title><rect x="196.7" y="131.0" width="1.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="199.7" y="142.0"></text>
</g>
<g>
<title>tcp_newly_delivered (1 samples, 0.03%)</title><rect x="197.9" y="147.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="200.9" y="158.0"></text>
</g>
<g>
<title>tcp_queue_rcv (2 samples, 0.07%)</title><rect x="198.3" y="147.0" width="0.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="201.3" y="158.0"></text>
</g>
<g>
<title>tcp_rack_update_reo_wnd (1 samples, 0.03%)</title><rect x="199.1" y="147.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="202.1" y="158.0"></text>
</g>
<g>
<title>tcp_update_pacing_rate (1 samples, 0.03%)</title><rect x="199.5" y="147.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="202.5" y="158.0"></text>
</g>
<g>
<title>tcp_v4_rcv (1 samples, 0.03%)</title><rect x="199.9" y="211.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="202.9" y="222.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (1 samples, 0.03%)</title><rect x="200.3" y="227.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="203.3" y="238.0"></text>
</g>
<g>
<title>ip_rcv_finish_core.isra.0 (1 samples, 0.03%)</title><rect x="200.7" y="259.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="203.7" y="270.0"></text>
</g>
<g>
<title>process_backlog (1 samples, 0.03%)</title><rect x="201.1" y="339.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="204.1" y="350.0"></text>
</g>
<g>
<title>dev_queue_xmit (20 samples, 0.68%)</title><rect x="201.5" y="403.0" width="8.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="204.5" y="414.0"></text>
</g>
<g>
<title>__dev_queue_xmit (18 samples, 0.61%)</title><rect x="201.5" y="387.0" width="7.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="204.5" y="398.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (1 samples, 0.03%)</title><rect x="202.7" y="371.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="205.7" y="382.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (10 samples, 0.34%)</title><rect x="203.1" y="371.0" width="4.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="206.1" y="382.0"></text>
</g>
<g>
<title>loopback_xmit (9 samples, 0.30%)</title><rect x="203.1" y="355.0" width="3.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="206.1" y="366.0"></text>
</g>
<g>
<title>eth_type_trans (2 samples, 0.07%)</title><rect x="203.5" y="339.0" width="0.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="206.5" y="350.0"></text>
</g>
<g>
<title>netif_rx (4 samples, 0.14%)</title><rect x="204.3" y="339.0" width="1.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="207.3" y="350.0"></text>
</g>
<g>
<title>netif_rx_internal (4 samples, 0.14%)</title><rect x="204.3" y="323.0" width="1.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="207.3" y="334.0"></text>
</g>
<g>
<title>enqueue_to_backlog (3 samples, 0.10%)</title><rect x="204.7" y="307.0" width="1.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="207.7" y="318.0"></text>
</g>
<g>
<title>netif_rx_internal (1 samples, 0.03%)</title><rect x="205.9" y="339.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="208.9" y="350.0"></text>
</g>
<g>
<title>tcp_wfree (1 samples, 0.03%)</title><rect x="206.3" y="339.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="209.3" y="350.0"></text>
</g>
<g>
<title>tcp_wfree (1 samples, 0.03%)</title><rect x="206.7" y="355.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="209.7" y="366.0"></text>
</g>
<g>
<title>validate_xmit_skb (3 samples, 0.10%)</title><rect x="207.1" y="371.0" width="1.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="210.1" y="382.0"></text>
</g>
<g>
<title>validate_xmit_xfrm (1 samples, 0.03%)</title><rect x="208.3" y="371.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="211.3" y="382.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (2 samples, 0.07%)</title><rect x="208.7" y="387.0" width="0.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="211.7" y="398.0"></text>
</g>
<g>
<title>do_softirq.part.0 (1 samples, 0.03%)</title><rect x="209.5" y="403.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="212.5" y="414.0"></text>
</g>
<g>
<title>ip_send_check (1 samples, 0.03%)</title><rect x="209.9" y="467.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="212.9" y="478.0"></text>
</g>
<g>
<title>ip_output (2 samples, 0.07%)</title><rect x="210.3" y="483.0" width="0.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="213.3" y="494.0"></text>
</g>
<g>
<title>ipv4_dst_check (2 samples, 0.07%)</title><rect x="211.1" y="483.0" width="0.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="214.1" y="494.0"></text>
</g>
<g>
<title>__sk_dst_check (3 samples, 0.10%)</title><rect x="211.9" y="499.0" width="1.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="214.9" y="510.0"></text>
</g>
<g>
<title>ip_copy_addrs (2 samples, 0.07%)</title><rect x="213.1" y="499.0" width="0.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="216.1" y="510.0"></text>
</g>
<g>
<title>ip_local_out (1 samples, 0.03%)</title><rect x="213.9" y="499.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="216.9" y="510.0"></text>
</g>
<g>
<title>skb_clone (4 samples, 0.14%)</title><rect x="214.3" y="515.0" width="1.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="217.3" y="526.0"></text>
</g>
<g>
<title>__copy_skb_header (1 samples, 0.03%)</title><rect x="214.3" y="499.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="217.3" y="510.0"></text>
</g>
<g>
<title>__skb_clone (3 samples, 0.10%)</title><rect x="214.7" y="499.0" width="1.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="217.7" y="510.0"></text>
</g>
<g>
<title>__copy_skb_header (1 samples, 0.03%)</title><rect x="215.5" y="483.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="218.5" y="494.0"></text>
</g>
<g>
<title>tcp_rate_skb_sent (1 samples, 0.03%)</title><rect x="215.9" y="515.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="218.9" y="526.0"></text>
</g>
<g>
<title>tcp_update_skb_after_send (2 samples, 0.07%)</title><rect x="216.3" y="515.0" width="0.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="219.3" y="526.0"></text>
</g>
<g>
<title>__usecs_to_jiffies (1 samples, 0.03%)</title><rect x="217.1" y="531.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="220.1" y="542.0"></text>
</g>
<g>
<title>bictcp_cwnd_event (2 samples, 0.07%)</title><rect x="217.5" y="531.0" width="0.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="220.5" y="542.0"></text>
</g>
<g>
<title>tcp_chrono_stop (1 samples, 0.03%)</title><rect x="218.3" y="531.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="221.3" y="542.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (5 samples, 0.17%)</title><rect x="218.7" y="531.0" width="2.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="221.7" y="542.0"></text>
</g>
<g>
<title>tcp_rearm_rto (3 samples, 0.10%)</title><rect x="219.5" y="515.0" width="1.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="222.5" y="526.0"></text>
</g>
<g>
<title>sk_reset_timer (3 samples, 0.10%)</title><rect x="219.5" y="499.0" width="1.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="222.5" y="510.0"></text>
</g>
<g>
<title>mod_timer (3 samples, 0.10%)</title><rect x="219.5" y="483.0" width="1.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="222.5" y="494.0"></text>
</g>
<g>
<title>__lock_text_start (3 samples, 0.10%)</title><rect x="219.5" y="467.0" width="1.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="222.5" y="478.0"></text>
</g>
<g>
<title>tcp_mtu_probe (2 samples, 0.07%)</title><rect x="220.7" y="531.0" width="0.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="223.7" y="542.0"></text>
</g>
<g>
<title>tcp_update_skb_after_send (2 samples, 0.07%)</title><rect x="221.5" y="531.0" width="0.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="224.5" y="542.0"></text>
</g>
<g>
<title>tcp_write_xmit (1 samples, 0.03%)</title><rect x="222.3" y="563.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="225.3" y="574.0"></text>
</g>
<g>
<title>tcp_rate_check_app_limited (1 samples, 0.03%)</title><rect x="222.7" y="579.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="225.7" y="590.0"></text>
</g>
<g>
<title>tcp_send_mss (4 samples, 0.14%)</title><rect x="223.1" y="579.0" width="1.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="226.1" y="590.0"></text>
</g>
<g>
<title>tcp_current_mss (4 samples, 0.14%)</title><rect x="223.1" y="563.0" width="1.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="226.1" y="574.0"></text>
</g>
<g>
<title>ipv4_mtu (1 samples, 0.03%)</title><rect x="224.3" y="547.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="227.3" y="558.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (2 samples, 0.07%)</title><rect x="224.7" y="595.0" width="0.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="227.7" y="606.0"></text>
</g>
<g>
<title>sockfd_lookup_light (1 samples, 0.03%)</title><rect x="225.5" y="643.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="228.5" y="654.0"></text>
</g>
<g>
<title>__fdget (1 samples, 0.03%)</title><rect x="225.5" y="627.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="228.5" y="638.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.03%)</title><rect x="225.5" y="611.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="228.5" y="622.0"></text>
</g>
<g>
<title>__fget (1 samples, 0.03%)</title><rect x="225.5" y="595.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="228.5" y="606.0"></text>
</g>
<g>
<title>sockfd_lookup_light (1 samples, 0.03%)</title><rect x="225.9" y="659.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="228.9" y="670.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (4 samples, 0.14%)</title><rect x="226.3" y="723.0" width="1.6" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="229.3" y="734.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (5 samples, 0.17%)</title><rect x="227.9" y="803.0" width="2.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="230.9" y="814.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (3 samples, 0.10%)</title><rect x="228.7" y="787.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="231.7" y="798.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (3 samples, 0.10%)</title><rect x="228.7" y="771.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="231.7" y="782.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (5 samples, 0.17%)</title><rect x="229.9" y="819.0" width="1.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="232.9" y="830.0"></text>
</g>
<g>
<title>ru/mail/polis/Record.getValue (1 samples, 0.03%)</title><rect x="231.8" y="819.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="234.8" y="830.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.get (1,957 samples, 66.29%)</title><rect x="232.2" y="819.0" width="782.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="235.2" y="830.0">ru/mail/polis/dao/DAO.get</text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (199 samples, 6.74%)</title><rect x="232.6" y="803.0" width="79.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="235.6" y="814.0">com/googl..</text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (196 samples, 6.64%)</title><rect x="233.8" y="787.0" width="78.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="236.8" y="798.0">com/googl..</text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (194 samples, 6.57%)</title><rect x="234.2" y="771.0" width="77.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="237.2" y="782.0">com/googl..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (193 samples, 6.54%)</title><rect x="234.6" y="755.0" width="77.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="237.6" y="766.0">com/googl..</text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (193 samples, 6.54%)</title><rect x="234.6" y="739.0" width="77.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="237.6" y="750.0">ru/mail/p..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (183 samples, 6.20%)</title><rect x="235.0" y="723.0" width="73.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="238.0" y="734.0">com/goog..</text>
</g>
<g>
<title>java/util/PriorityQueue.add (183 samples, 6.20%)</title><rect x="235.0" y="707.0" width="73.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="238.0" y="718.0">java/uti..</text>
</g>
<g>
<title>java/util/PriorityQueue.offer (183 samples, 6.20%)</title><rect x="235.0" y="691.0" width="73.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="238.0" y="702.0">java/uti..</text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (183 samples, 6.20%)</title><rect x="235.0" y="675.0" width="73.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="238.0" y="686.0">java/uti..</text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (182 samples, 6.17%)</title><rect x="235.4" y="659.0" width="72.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="238.4" y="670.0">java/uti..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (182 samples, 6.17%)</title><rect x="235.4" y="643.0" width="72.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="238.4" y="654.0">com/goog..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (182 samples, 6.17%)</title><rect x="235.4" y="627.0" width="72.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="238.4" y="638.0">com/goog..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (180 samples, 6.10%)</title><rect x="235.4" y="611.0" width="72.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="238.4" y="622.0">com/goog..</text>
</g>
<g>
<title>ru/mail/polis/SSTable$1.next (180 samples, 6.10%)</title><rect x="235.4" y="595.0" width="72.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="238.4" y="606.0">ru/mail/..</text>
</g>
<g>
<title>ru/mail/polis/SSTable$1.next (180 samples, 6.10%)</title><rect x="235.4" y="579.0" width="72.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="238.4" y="590.0">ru/mail/..</text>
</g>
<g>
<title>ru/mail/polis/SSTable.getCell (180 samples, 6.10%)</title><rect x="235.4" y="563.0" width="72.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="238.4" y="574.0">ru/mail/..</text>
</g>
<g>
<title>ru/mail/polis/SSTable.getOffset (62 samples, 2.10%)</title><rect x="235.8" y="547.0" width="24.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="238.8" y="558.0">r..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (62 samples, 2.10%)</title><rect x="235.8" y="531.0" width="24.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="238.8" y="542.0">s..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (61 samples, 2.07%)</title><rect x="236.2" y="515.0" width="24.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="239.2" y="526.0">s..</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (57 samples, 1.93%)</title><rect x="236.2" y="499.0" width="22.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="239.2" y="510.0">s..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (1 samples, 0.03%)</title><rect x="236.2" y="483.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="239.2" y="494.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (1 samples, 0.03%)</title><rect x="236.2" y="467.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="239.2" y="478.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.get (1 samples, 0.03%)</title><rect x="236.2" y="451.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="239.2" y="462.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (54 samples, 1.83%)</title><rect x="236.6" y="483.0" width="21.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="239.6" y="494.0">s..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (54 samples, 1.83%)</title><rect x="236.6" y="467.0" width="21.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="239.6" y="478.0">s..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (50 samples, 1.69%)</title><rect x="238.2" y="451.0" width="20.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="241.2" y="462.0"></text>
</g>
<g>
<title>__libc_pread64 (48 samples, 1.63%)</title><rect x="238.2" y="435.0" width="19.2" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="241.2" y="446.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (28 samples, 0.95%)</title><rect x="246.2" y="419.0" width="11.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="249.2" y="430.0"></text>
</g>
<g>
<title>__x64_sys_pread64 (1 samples, 0.03%)</title><rect x="246.2" y="403.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="249.2" y="414.0"></text>
</g>
<g>
<title>do_syscall_64 (27 samples, 0.91%)</title><rect x="246.6" y="403.0" width="10.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="249.6" y="414.0"></text>
</g>
<g>
<title>__x64_sys_pread64 (21 samples, 0.71%)</title><rect x="249.0" y="387.0" width="8.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="252.0" y="398.0"></text>
</g>
<g>
<title>ksys_pread64 (21 samples, 0.71%)</title><rect x="249.0" y="371.0" width="8.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="252.0" y="382.0"></text>
</g>
<g>
<title>__fdget (4 samples, 0.14%)</title><rect x="249.0" y="355.0" width="1.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="252.0" y="366.0"></text>
</g>
<g>
<title>__fget_light (4 samples, 0.14%)</title><rect x="249.0" y="339.0" width="1.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="252.0" y="350.0"></text>
</g>
<g>
<title>__fget (4 samples, 0.14%)</title><rect x="249.0" y="323.0" width="1.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="252.0" y="334.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.03%)</title><rect x="250.6" y="355.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="253.6" y="366.0"></text>
</g>
<g>
<title>vfs_read (16 samples, 0.54%)</title><rect x="251.0" y="355.0" width="6.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="254.0" y="366.0"></text>
</g>
<g>
<title>__vfs_read (11 samples, 0.37%)</title><rect x="251.8" y="339.0" width="4.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="254.8" y="350.0"></text>
</g>
<g>
<title>new_sync_read (11 samples, 0.37%)</title><rect x="251.8" y="323.0" width="4.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="254.8" y="334.0"></text>
</g>
<g>
<title>ext4_file_read_iter (10 samples, 0.34%)</title><rect x="252.2" y="307.0" width="4.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="255.2" y="318.0"></text>
</g>
<g>
<title>generic_file_read_iter (10 samples, 0.34%)</title><rect x="252.2" y="291.0" width="4.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="255.2" y="302.0"></text>
</g>
<g>
<title>generic_file_buffered_read (9 samples, 0.30%)</title><rect x="252.6" y="275.0" width="3.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="255.6" y="286.0"></text>
</g>
<g>
<title>copy_page_to_iter (2 samples, 0.07%)</title><rect x="253.0" y="259.0" width="0.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="256.0" y="270.0"></text>
</g>
<g>
<title>copy_user_generic_unrolled (1 samples, 0.03%)</title><rect x="253.4" y="243.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="256.4" y="254.0"></text>
</g>
<g>
<title>pagecache_get_page (4 samples, 0.14%)</title><rect x="253.8" y="259.0" width="1.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="256.8" y="270.0"></text>
</g>
<g>
<title>find_get_entry (3 samples, 0.10%)</title><rect x="253.8" y="243.0" width="1.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="256.8" y="254.0"></text>
</g>
<g>
<title>xas_start (2 samples, 0.07%)</title><rect x="254.2" y="227.0" width="0.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="257.2" y="238.0"></text>
</g>
<g>
<title>xas_load (1 samples, 0.03%)</title><rect x="255.0" y="243.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="258.0" y="254.0"></text>
</g>
<g>
<title>touch_atime (2 samples, 0.07%)</title><rect x="255.4" y="259.0" width="0.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="258.4" y="270.0"></text>
</g>
<g>
<title>atime_needs_update (1 samples, 0.03%)</title><rect x="255.4" y="243.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="258.4" y="254.0"></text>
</g>
<g>
<title>current_time (1 samples, 0.03%)</title><rect x="255.4" y="227.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="258.4" y="238.0"></text>
</g>
<g>
<title>current_time (1 samples, 0.03%)</title><rect x="255.8" y="243.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="258.8" y="254.0"></text>
</g>
<g>
<title>fsnotify (1 samples, 0.03%)</title><rect x="256.2" y="339.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="259.2" y="350.0"></text>
</g>
<g>
<title>rw_verify_area (2 samples, 0.07%)</title><rect x="256.6" y="339.0" width="0.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="259.6" y="350.0"></text>
</g>
<g>
<title>security_file_permission (2 samples, 0.07%)</title><rect x="256.6" y="323.0" width="0.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="259.6" y="334.0"></text>
</g>
<g>
<title>apparmor_file_permission (1 samples, 0.03%)</title><rect x="257.0" y="307.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="260.0" y="318.0"></text>
</g>
<g>
<title>common_file_perm (1 samples, 0.03%)</title><rect x="257.0" y="291.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="260.0" y="302.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (2 samples, 0.07%)</title><rect x="257.4" y="435.0" width="0.8" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="260.4" y="446.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (2 samples, 0.07%)</title><rect x="258.2" y="483.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="261.2" y="494.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (2 samples, 0.07%)</title><rect x="258.2" y="467.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="261.2" y="478.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (2 samples, 0.07%)</title><rect x="258.2" y="451.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="261.2" y="462.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$1.initialValue (2 samples, 0.07%)</title><rect x="258.2" y="435.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="261.2" y="446.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (2 samples, 0.07%)</title><rect x="259.0" y="499.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="262.0" y="510.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.remove (2 samples, 0.07%)</title><rect x="259.8" y="499.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="262.8" y="510.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (117 samples, 3.96%)</title><rect x="260.6" y="547.0" width="46.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="263.6" y="558.0">sun/..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (117 samples, 3.96%)</title><rect x="260.6" y="531.0" width="46.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="263.6" y="542.0">sun/..</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (105 samples, 3.56%)</title><rect x="261.0" y="515.0" width="42.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="264.0" y="526.0">sun..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (1 samples, 0.03%)</title><rect x="261.0" y="499.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="264.0" y="510.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (1 samples, 0.03%)</title><rect x="261.0" y="483.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="264.0" y="494.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.get (1 samples, 0.03%)</title><rect x="261.0" y="467.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="264.0" y="478.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (98 samples, 3.32%)</title><rect x="261.4" y="499.0" width="39.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="264.4" y="510.0">sun..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (98 samples, 3.32%)</title><rect x="261.4" y="483.0" width="39.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="264.4" y="494.0">sun..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (96 samples, 3.25%)</title><rect x="262.2" y="467.0" width="38.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="265.2" y="478.0">sun..</text>
</g>
<g>
<title>__libc_pread64 (88 samples, 2.98%)</title><rect x="263.4" y="451.0" width="35.2" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="266.4" y="462.0">__l..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (38 samples, 1.29%)</title><rect x="283.4" y="435.0" width="15.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="286.4" y="446.0"></text>
</g>
<g>
<title>__x64_sys_pread64 (2 samples, 0.07%)</title><rect x="283.4" y="419.0" width="0.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="286.4" y="430.0"></text>
</g>
<g>
<title>do_syscall_64 (36 samples, 1.22%)</title><rect x="284.2" y="419.0" width="14.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="287.2" y="430.0"></text>
</g>
<g>
<title>__x64_sys_pread64 (28 samples, 0.95%)</title><rect x="287.4" y="403.0" width="11.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="290.4" y="414.0"></text>
</g>
<g>
<title>ksys_pread64 (28 samples, 0.95%)</title><rect x="287.4" y="387.0" width="11.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="290.4" y="398.0"></text>
</g>
<g>
<title>__fdget (4 samples, 0.14%)</title><rect x="287.8" y="371.0" width="1.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="290.8" y="382.0"></text>
</g>
<g>
<title>__fget_light (4 samples, 0.14%)</title><rect x="287.8" y="355.0" width="1.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="290.8" y="366.0"></text>
</g>
<g>
<title>__fget (4 samples, 0.14%)</title><rect x="287.8" y="339.0" width="1.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="290.8" y="350.0"></text>
</g>
<g>
<title>__fget_light (2 samples, 0.07%)</title><rect x="289.4" y="371.0" width="0.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="292.4" y="382.0"></text>
</g>
<g>
<title>__vfs_read (1 samples, 0.03%)</title><rect x="290.2" y="371.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="293.2" y="382.0"></text>
</g>
<g>
<title>fput_many (2 samples, 0.07%)</title><rect x="290.6" y="371.0" width="0.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="293.6" y="382.0"></text>
</g>
<g>
<title>vfs_read (18 samples, 0.61%)</title><rect x="291.4" y="371.0" width="7.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="294.4" y="382.0"></text>
</g>
<g>
<title>__vfs_read (16 samples, 0.54%)</title><rect x="291.4" y="355.0" width="6.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="294.4" y="366.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (1 samples, 0.03%)</title><rect x="291.4" y="339.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="294.4" y="350.0"></text>
</g>
<g>
<title>ext4_file_read_iter (1 samples, 0.03%)</title><rect x="291.8" y="339.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="294.8" y="350.0"></text>
</g>
<g>
<title>new_sync_read (14 samples, 0.47%)</title><rect x="292.2" y="339.0" width="5.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="295.2" y="350.0"></text>
</g>
<g>
<title>ext4_file_read_iter (13 samples, 0.44%)</title><rect x="292.6" y="323.0" width="5.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="295.6" y="334.0"></text>
</g>
<g>
<title>generic_file_read_iter (11 samples, 0.37%)</title><rect x="293.4" y="307.0" width="4.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="296.4" y="318.0"></text>
</g>
<g>
<title>generic_file_buffered_read (11 samples, 0.37%)</title><rect x="293.4" y="291.0" width="4.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="296.4" y="302.0"></text>
</g>
<g>
<title>copy_page_to_iter (5 samples, 0.17%)</title><rect x="295.0" y="275.0" width="2.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="298.0" y="286.0"></text>
</g>
<g>
<title>copy_user_generic_unrolled (3 samples, 0.10%)</title><rect x="295.0" y="259.0" width="1.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="298.0" y="270.0"></text>
</g>
<g>
<title>copyout (2 samples, 0.07%)</title><rect x="296.2" y="259.0" width="0.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="299.2" y="270.0"></text>
</g>
<g>
<title>mark_page_accessed (1 samples, 0.03%)</title><rect x="297.0" y="275.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="300.0" y="286.0"></text>
</g>
<g>
<title>touch_atime (1 samples, 0.03%)</title><rect x="297.4" y="275.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="300.4" y="286.0"></text>
</g>
<g>
<title>atime_needs_update (1 samples, 0.03%)</title><rect x="297.4" y="259.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="300.4" y="270.0"></text>
</g>
<g>
<title>rw_verify_area (2 samples, 0.07%)</title><rect x="297.8" y="355.0" width="0.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="300.8" y="366.0"></text>
</g>
<g>
<title>apparmor_file_permission (2 samples, 0.07%)</title><rect x="297.8" y="339.0" width="0.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="300.8" y="350.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (2 samples, 0.07%)</title><rect x="298.6" y="451.0" width="0.8" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="301.6" y="462.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (2 samples, 0.07%)</title><rect x="299.4" y="451.0" width="0.8" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="302.4" y="462.0"></text>
</g>
<g>
<title>fdval (1 samples, 0.03%)</title><rect x="300.2" y="451.0" width="0.4" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="303.2" y="462.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (6 samples, 0.20%)</title><rect x="300.6" y="499.0" width="2.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="303.6" y="510.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (6 samples, 0.20%)</title><rect x="300.6" y="483.0" width="2.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="303.6" y="494.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (6 samples, 0.20%)</title><rect x="300.6" y="467.0" width="2.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="303.6" y="478.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$1.initialValue (6 samples, 0.20%)</title><rect x="300.6" y="451.0" width="2.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="303.6" y="462.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (10 samples, 0.34%)</title><rect x="303.0" y="515.0" width="4.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="306.0" y="526.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThread.current (4 samples, 0.14%)</title><rect x="305.4" y="499.0" width="1.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="308.4" y="510.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.remove (1 samples, 0.03%)</title><rect x="307.0" y="515.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="310.0" y="526.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (2 samples, 0.07%)</title><rect x="307.4" y="611.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="310.4" y="622.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (2 samples, 0.07%)</title><rect x="307.4" y="595.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="310.4" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/Cell.compareTo (2 samples, 0.07%)</title><rect x="307.4" y="579.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="310.4" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/Cell.compareTo (2 samples, 0.07%)</title><rect x="307.4" y="563.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="310.4" y="574.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (2 samples, 0.07%)</title><rect x="307.4" y="547.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="310.4" y="558.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (2 samples, 0.07%)</title><rect x="307.4" y="531.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="310.4" y="542.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (1 samples, 0.03%)</title><rect x="308.2" y="723.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="311.2" y="734.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.equals (8 samples, 0.27%)</title><rect x="308.6" y="723.0" width="3.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="311.6" y="734.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (6 samples, 0.20%)</title><rect x="309.4" y="707.0" width="2.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="312.4" y="718.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (5 samples, 0.17%)</title><rect x="309.8" y="691.0" width="2.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="312.8" y="702.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (1 samples, 0.03%)</title><rect x="311.8" y="771.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="314.8" y="782.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.next (1 samples, 0.03%)</title><rect x="312.2" y="803.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="315.2" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (1 samples, 0.03%)</title><rect x="312.2" y="787.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="315.2" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (1 samples, 0.03%)</title><rect x="312.2" y="771.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="315.2" y="782.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.equals (7 samples, 0.24%)</title><rect x="312.6" y="803.0" width="2.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="315.6" y="814.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (4 samples, 0.14%)</title><rect x="313.8" y="787.0" width="1.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="316.8" y="798.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (3 samples, 0.10%)</title><rect x="314.2" y="771.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="317.2" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$WriteLock.unlock (2 samples, 0.07%)</title><rect x="315.4" y="803.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="318.4" y="814.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.iterator (1,747 samples, 59.18%)</title><rect x="316.2" y="803.0" width="698.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="319.2" y="814.0">ru/mail/polis/dao/impl/DAOImpl.iterator</text>
</g>
<g>
<title>com/google/common/collect/Iterators.filter (1 samples, 0.03%)</title><rect x="316.2" y="787.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="319.2" y="798.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.transform (2 samples, 0.07%)</title><rect x="316.6" y="787.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="319.6" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.unlock (1 samples, 0.03%)</title><rect x="317.4" y="787.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="320.4" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$WriteLock.lock (136 samples, 4.61%)</title><rect x="317.8" y="787.0" width="54.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="320.8" y="798.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (136 samples, 4.61%)</title><rect x="317.8" y="771.0" width="54.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="320.8" y="782.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (129 samples, 4.37%)</title><rect x="320.2" y="755.0" width="51.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="323.2" y="766.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (128 samples, 4.34%)</title><rect x="320.6" y="739.0" width="51.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="323.6" y="750.0">java/..</text>
</g>
<g>
<title>java/lang/Thread.interrupted (1 samples, 0.03%)</title><rect x="320.6" y="723.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="323.6" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (127 samples, 4.30%)</title><rect x="321.0" y="723.0" width="50.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="324.0" y="734.0">java/..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (120 samples, 4.07%)</title><rect x="323.8" y="707.0" width="48.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="326.8" y="718.0">jdk/..</text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/ld-2.31.so (1 samples, 0.03%)</title><rect x="326.6" y="691.0" width="0.4" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="329.6" y="702.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (4 samples, 0.14%)</title><rect x="327.0" y="691.0" width="1.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="330.0" y="702.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.03%)</title><rect x="328.2" y="675.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="331.2" y="686.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.03%)</title><rect x="328.2" y="659.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="331.2" y="670.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.03%)</title><rect x="328.2" y="643.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="331.2" y="654.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.03%)</title><rect x="328.2" y="627.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="331.2" y="638.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.03%)</title><rect x="328.2" y="611.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="331.2" y="622.0"></text>
</g>
<g>
<title>update_blocked_averages (1 samples, 0.03%)</title><rect x="328.2" y="595.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="331.2" y="606.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.03%)</title><rect x="328.2" y="579.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="331.2" y="590.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.235] (1 samples, 0.03%)</title><rect x="328.6" y="691.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="331.6" y="702.0"></text>
</g>
<g>
<title>Unsafe_Park (52 samples, 1.76%)</title><rect x="329.0" y="691.0" width="20.8" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="332.0" y="702.0"></text>
</g>
<g>
<title>JavaFrameAnchor::make_walkable(JavaThread*) (1 samples, 0.03%)</title><rect x="330.6" y="675.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="333.6" y="686.0"></text>
</g>
<g>
<title>JavaThreadParkedState::JavaThreadParkedState(JavaThread*, bool) (1 samples, 0.03%)</title><rect x="331.0" y="675.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="334.0" y="686.0"></text>
</g>
<g>
<title>Monitor::unlock() (1 samples, 0.03%)</title><rect x="331.4" y="675.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="334.4" y="686.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (15 samples, 0.51%)</title><rect x="331.8" y="675.0" width="6.0" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="334.8" y="686.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (1 samples, 0.03%)</title><rect x="334.6" y="659.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="337.6" y="670.0"></text>
</g>
<g>
<title>Monitor::unlock() (3 samples, 0.10%)</title><rect x="335.0" y="659.0" width="1.2" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="338.0" y="670.0"></text>
</g>
<g>
<title>__tls_get_addr (3 samples, 0.10%)</title><rect x="336.2" y="659.0" width="1.2" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="339.2" y="670.0"></text>
</g>
<g>
<title>os::is_interrupted(Thread*, bool) (1 samples, 0.03%)</title><rect x="337.4" y="659.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="340.4" y="670.0"></text>
</g>
<g>
<title>Thread::is_interrupted(Thread*, bool) (1 samples, 0.03%)</title><rect x="337.8" y="675.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="340.8" y="686.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.03%)</title><rect x="338.2" y="675.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="341.2" y="686.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.235] (1 samples, 0.03%)</title><rect x="338.6" y="675.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="341.6" y="686.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock (25 samples, 0.85%)</title><rect x="339.0" y="675.0" width="10.0" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="342.0" y="686.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (8 samples, 0.27%)</title><rect x="345.8" y="659.0" width="3.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="348.8" y="670.0"></text>
</g>
<g>
<title>do_syscall_64 (8 samples, 0.27%)</title><rect x="345.8" y="643.0" width="3.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="348.8" y="654.0"></text>
</g>
<g>
<title>__x64_sys_futex (5 samples, 0.17%)</title><rect x="347.0" y="627.0" width="2.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="350.0" y="638.0"></text>
</g>
<g>
<title>do_futex (3 samples, 0.10%)</title><rect x="347.8" y="611.0" width="1.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="350.8" y="622.0"></text>
</g>
<g>
<title>futex_wake (3 samples, 0.10%)</title><rect x="347.8" y="595.0" width="1.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="350.8" y="606.0"></text>
</g>
<g>
<title>java_lang_Thread::set_thread_status(oopDesc*, java_lang_Thread::ThreadStatus) (2 samples, 0.07%)</title><rect x="349.0" y="675.0" width="0.8" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="352.0" y="686.0"></text>
</g>
<g>
<title>[unknown] (51 samples, 1.73%)</title><rect x="349.8" y="691.0" width="20.4" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="352.8" y="702.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/ld-2.31.so (1 samples, 0.03%)</title><rect x="349.8" y="675.0" width="0.4" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="352.8" y="686.0"></text>
</g>
<g>
<title>__GI___pthread_mutex_trylock (3 samples, 0.10%)</title><rect x="350.2" y="675.0" width="1.2" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="353.2" y="686.0"></text>
</g>
<g>
<title>__pthread_cond_wait (46 samples, 1.56%)</title><rect x="351.4" y="675.0" width="18.4" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="354.4" y="686.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (35 samples, 1.19%)</title><rect x="355.8" y="659.0" width="14.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="358.8" y="670.0"></text>
</g>
<g>
<title>do_syscall_64 (35 samples, 1.19%)</title><rect x="355.8" y="643.0" width="14.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="358.8" y="654.0"></text>
</g>
<g>
<title>__x64_sys_futex (30 samples, 1.02%)</title><rect x="357.8" y="627.0" width="12.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="360.8" y="638.0"></text>
</g>
<g>
<title>do_futex (29 samples, 0.98%)</title><rect x="357.8" y="611.0" width="11.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="360.8" y="622.0"></text>
</g>
<g>
<title>futex_wait (28 samples, 0.95%)</title><rect x="358.2" y="595.0" width="11.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="361.2" y="606.0"></text>
</g>
<g>
<title>futex_wait_queue_me (18 samples, 0.61%)</title><rect x="359.0" y="579.0" width="7.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="362.0" y="590.0"></text>
</g>
<g>
<title>schedule (14 samples, 0.47%)</title><rect x="360.6" y="563.0" width="5.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="363.6" y="574.0"></text>
</g>
<g>
<title>__schedule (14 samples, 0.47%)</title><rect x="360.6" y="547.0" width="5.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="363.6" y="558.0"></text>
</g>
<g>
<title>finish_task_switch (12 samples, 0.41%)</title><rect x="361.4" y="531.0" width="4.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="364.4" y="542.0"></text>
</g>
<g>
<title>futex_wait_setup (7 samples, 0.24%)</title><rect x="366.2" y="579.0" width="2.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="369.2" y="590.0"></text>
</g>
<g>
<title>get_futex_value_locked (2 samples, 0.07%)</title><rect x="368.2" y="563.0" width="0.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="371.2" y="574.0"></text>
</g>
<g>
<title>plist_add (1 samples, 0.03%)</title><rect x="369.0" y="579.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="372.0" y="590.0"></text>
</g>
<g>
<title>futex_wait (1 samples, 0.03%)</title><rect x="369.4" y="611.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="372.4" y="622.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (1 samples, 0.03%)</title><rect x="369.8" y="675.0" width="0.4" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="372.8" y="686.0"></text>
</g>
<g>
<title>java_lang_Thread::set_thread_status(oopDesc*, java_lang_Thread::ThreadStatus) (4 samples, 0.14%)</title><rect x="370.2" y="691.0" width="1.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="373.2" y="702.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (1 samples, 0.03%)</title><rect x="371.8" y="755.0" width="0.4" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="374.8" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$WriteLock.unlock (81 samples, 2.74%)</title><rect x="372.2" y="787.0" width="32.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="375.2" y="798.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (81 samples, 2.74%)</title><rect x="372.2" y="771.0" width="32.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="375.2" y="782.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (81 samples, 2.74%)</title><rect x="372.2" y="755.0" width="32.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="375.2" y="766.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (81 samples, 2.74%)</title><rect x="372.2" y="739.0" width="32.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="375.2" y="750.0">ja..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (81 samples, 2.74%)</title><rect x="372.2" y="723.0" width="32.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="375.2" y="734.0">jd..</text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.235] (1 samples, 0.03%)</title><rect x="372.2" y="707.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="375.2" y="718.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (1 samples, 0.03%)</title><rect x="372.6" y="707.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="375.6" y="718.0"></text>
</g>
<g>
<title>Unsafe_Unpark (15 samples, 0.51%)</title><rect x="373.0" y="707.0" width="5.9" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="376.0" y="718.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.03%)</title><rect x="374.2" y="691.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="377.2" y="702.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (2 samples, 0.07%)</title><rect x="374.6" y="691.0" width="0.8" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="377.6" y="702.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (3 samples, 0.10%)</title><rect x="375.4" y="691.0" width="1.2" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="378.4" y="702.0"></text>
</g>
<g>
<title>java_lang_Thread::thread(oopDesc*) (1 samples, 0.03%)</title><rect x="376.6" y="691.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="379.6" y="702.0"></text>
</g>
<g>
<title>oopDesc::address_field(int) const (3 samples, 0.10%)</title><rect x="377.0" y="691.0" width="1.2" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="380.0" y="702.0"></text>
</g>
<g>
<title>pthread_mutex_lock (2 samples, 0.07%)</title><rect x="378.2" y="691.0" width="0.7" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="381.2" y="702.0"></text>
</g>
<g>
<title>__pthread_cond_signal (64 samples, 2.17%)</title><rect x="378.9" y="707.0" width="25.6" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="381.9" y="718.0">_..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (51 samples, 1.73%)</title><rect x="384.1" y="691.0" width="20.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="387.1" y="702.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.03%)</title><rect x="384.1" y="675.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="387.1" y="686.0"></text>
</g>
<g>
<title>do_syscall_64 (50 samples, 1.69%)</title><rect x="384.5" y="675.0" width="20.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="387.5" y="686.0"></text>
</g>
<g>
<title>__x64_sys_futex (45 samples, 1.52%)</title><rect x="386.5" y="659.0" width="18.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="389.5" y="670.0"></text>
</g>
<g>
<title>do_futex (45 samples, 1.52%)</title><rect x="386.5" y="643.0" width="18.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="389.5" y="654.0"></text>
</g>
<g>
<title>_raw_spin_lock (1 samples, 0.03%)</title><rect x="386.5" y="627.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="389.5" y="638.0"></text>
</g>
<g>
<title>futex_wake (43 samples, 1.46%)</title><rect x="386.9" y="627.0" width="17.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="389.9" y="638.0"></text>
</g>
<g>
<title>mark_wake_futex (2 samples, 0.07%)</title><rect x="389.7" y="611.0" width="0.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="392.7" y="622.0"></text>
</g>
<g>
<title>wake_up_q (34 samples, 1.15%)</title><rect x="390.5" y="611.0" width="13.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="393.5" y="622.0"></text>
</g>
<g>
<title>try_to_wake_up (34 samples, 1.15%)</title><rect x="390.5" y="595.0" width="13.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="393.5" y="606.0"></text>
</g>
<g>
<title>__lock_text_start (33 samples, 1.12%)</title><rect x="390.9" y="579.0" width="13.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="393.9" y="590.0"></text>
</g>
<g>
<title>hash_futex (1 samples, 0.03%)</title><rect x="404.1" y="627.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="407.1" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.compactIterator (1,526 samples, 51.69%)</title><rect x="404.5" y="787.0" width="610.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="407.5" y="798.0">ru/mail/polis/dao/impl/DAOImpl.compactIterator</text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (208 samples, 7.05%)</title><rect x="404.9" y="771.0" width="83.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="407.9" y="782.0">com/googl..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (208 samples, 7.05%)</title><rect x="404.9" y="755.0" width="83.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="407.9" y="766.0">com/googl..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.peekingIterator (1 samples, 0.03%)</title><rect x="406.9" y="739.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="409.9" y="750.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.&lt;init&gt; (1 samples, 0.03%)</title><rect x="406.9" y="723.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="409.9" y="734.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (202 samples, 6.84%)</title><rect x="407.3" y="739.0" width="80.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="410.3" y="750.0">java/util..</text>
</g>
<g>
<title>java/util/PriorityQueue.offer (202 samples, 6.84%)</title><rect x="407.3" y="723.0" width="80.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="410.3" y="734.0">java/util..</text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (200 samples, 6.78%)</title><rect x="407.3" y="707.0" width="80.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="410.3" y="718.0">java/util..</text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (200 samples, 6.78%)</title><rect x="407.3" y="691.0" width="80.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="410.3" y="702.0">java/util..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (200 samples, 6.78%)</title><rect x="407.3" y="675.0" width="80.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="410.3" y="686.0">com/googl..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (200 samples, 6.78%)</title><rect x="407.3" y="659.0" width="80.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="410.3" y="670.0">com/googl..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (198 samples, 6.71%)</title><rect x="407.3" y="643.0" width="79.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="410.3" y="654.0">com/googl..</text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.next (2 samples, 0.07%)</title><rect x="407.7" y="627.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="410.7" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (2 samples, 0.07%)</title><rect x="407.7" y="611.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="410.7" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (2 samples, 0.07%)</title><rect x="407.7" y="595.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="410.7" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/SSTable$1.next (195 samples, 6.61%)</title><rect x="408.5" y="627.0" width="78.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="411.5" y="638.0">ru/mail/p..</text>
</g>
<g>
<title>ru/mail/polis/SSTable$1.next (195 samples, 6.61%)</title><rect x="408.5" y="611.0" width="78.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="411.5" y="622.0">ru/mail/p..</text>
</g>
<g>
<title>ru/mail/polis/SSTable.getCell (195 samples, 6.61%)</title><rect x="408.5" y="595.0" width="78.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="411.5" y="606.0">ru/mail/p..</text>
</g>
<g>
<title>ru/mail/polis/SSTable.getOffset (84 samples, 2.85%)</title><rect x="408.9" y="579.0" width="33.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="411.9" y="590.0">ru..</text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.next (4 samples, 0.14%)</title><rect x="409.7" y="563.0" width="1.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="412.7" y="574.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (78 samples, 2.64%)</title><rect x="411.3" y="563.0" width="31.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="414.3" y="574.0">su..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (77 samples, 2.61%)</title><rect x="411.7" y="547.0" width="30.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="414.7" y="558.0">su..</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (69 samples, 2.34%)</title><rect x="411.7" y="531.0" width="27.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="414.7" y="542.0">s..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (2 samples, 0.07%)</title><rect x="411.7" y="515.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="414.7" y="526.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (2 samples, 0.07%)</title><rect x="411.7" y="499.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="414.7" y="510.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.get (2 samples, 0.07%)</title><rect x="411.7" y="483.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="414.7" y="494.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (66 samples, 2.24%)</title><rect x="412.5" y="515.0" width="26.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="415.5" y="526.0">s..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (66 samples, 2.24%)</title><rect x="412.5" y="499.0" width="26.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="415.5" y="510.0">s..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (64 samples, 2.17%)</title><rect x="413.3" y="483.0" width="25.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="416.3" y="494.0">s..</text>
</g>
<g>
<title>__libc_pread64 (62 samples, 2.10%)</title><rect x="413.3" y="467.0" width="24.8" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="416.3" y="478.0">_..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (28 samples, 0.95%)</title><rect x="426.9" y="451.0" width="11.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="429.9" y="462.0"></text>
</g>
<g>
<title>__x64_sys_pread64 (2 samples, 0.07%)</title><rect x="426.9" y="435.0" width="0.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="429.9" y="446.0"></text>
</g>
<g>
<title>do_syscall_64 (26 samples, 0.88%)</title><rect x="427.7" y="435.0" width="10.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="430.7" y="446.0"></text>
</g>
<g>
<title>__x64_sys_pread64 (20 samples, 0.68%)</title><rect x="430.1" y="419.0" width="8.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="433.1" y="430.0"></text>
</g>
<g>
<title>ksys_pread64 (20 samples, 0.68%)</title><rect x="430.1" y="403.0" width="8.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="433.1" y="414.0"></text>
</g>
<g>
<title>__fdget (3 samples, 0.10%)</title><rect x="430.1" y="387.0" width="1.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="433.1" y="398.0"></text>
</g>
<g>
<title>__fget_light (3 samples, 0.10%)</title><rect x="430.1" y="371.0" width="1.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="433.1" y="382.0"></text>
</g>
<g>
<title>__fget (3 samples, 0.10%)</title><rect x="430.1" y="355.0" width="1.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="433.1" y="366.0"></text>
</g>
<g>
<title>vfs_read (17 samples, 0.58%)</title><rect x="431.3" y="387.0" width="6.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="434.3" y="398.0"></text>
</g>
<g>
<title>__vfs_read (12 samples, 0.41%)</title><rect x="431.7" y="371.0" width="4.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="434.7" y="382.0"></text>
</g>
<g>
<title>ext4_file_read_iter (1 samples, 0.03%)</title><rect x="431.7" y="355.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="434.7" y="366.0"></text>
</g>
<g>
<title>new_sync_read (11 samples, 0.37%)</title><rect x="432.1" y="355.0" width="4.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="435.1" y="366.0"></text>
</g>
<g>
<title>ext4_file_read_iter (10 samples, 0.34%)</title><rect x="432.5" y="339.0" width="4.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="435.5" y="350.0"></text>
</g>
<g>
<title>generic_file_read_iter (8 samples, 0.27%)</title><rect x="433.3" y="323.0" width="3.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="436.3" y="334.0"></text>
</g>
<g>
<title>generic_file_buffered_read (8 samples, 0.27%)</title><rect x="433.3" y="307.0" width="3.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="436.3" y="318.0"></text>
</g>
<g>
<title>copy_page_to_iter (3 samples, 0.10%)</title><rect x="434.5" y="291.0" width="1.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="437.5" y="302.0"></text>
</g>
<g>
<title>copy_user_generic_unrolled (2 samples, 0.07%)</title><rect x="434.9" y="275.0" width="0.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="437.9" y="286.0"></text>
</g>
<g>
<title>pagecache_get_page (1 samples, 0.03%)</title><rect x="435.7" y="291.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="438.7" y="302.0"></text>
</g>
<g>
<title>find_get_entry (1 samples, 0.03%)</title><rect x="435.7" y="275.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="438.7" y="286.0"></text>
</g>
<g>
<title>touch_atime (1 samples, 0.03%)</title><rect x="436.1" y="291.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="439.1" y="302.0"></text>
</g>
<g>
<title>atime_needs_update (1 samples, 0.03%)</title><rect x="436.1" y="275.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="439.1" y="286.0"></text>
</g>
<g>
<title>current_time (1 samples, 0.03%)</title><rect x="436.1" y="259.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="439.1" y="270.0"></text>
</g>
<g>
<title>timestamp_truncate (1 samples, 0.03%)</title><rect x="436.1" y="243.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="439.1" y="254.0"></text>
</g>
<g>
<title>rw_verify_area (4 samples, 0.14%)</title><rect x="436.5" y="371.0" width="1.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="439.5" y="382.0"></text>
</g>
<g>
<title>security_file_permission (4 samples, 0.14%)</title><rect x="436.5" y="355.0" width="1.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="439.5" y="366.0"></text>
</g>
<g>
<title>apparmor_file_permission (1 samples, 0.03%)</title><rect x="437.7" y="339.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="440.7" y="350.0"></text>
</g>
<g>
<title>common_file_perm (1 samples, 0.03%)</title><rect x="437.7" y="323.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="440.7" y="334.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (1 samples, 0.03%)</title><rect x="438.1" y="467.0" width="0.4" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="441.1" y="478.0"></text>
</g>
<g>
<title>fdval (1 samples, 0.03%)</title><rect x="438.5" y="467.0" width="0.4" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="441.5" y="478.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (1 samples, 0.03%)</title><rect x="438.9" y="515.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="441.9" y="526.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (1 samples, 0.03%)</title><rect x="438.9" y="499.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="441.9" y="510.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (1 samples, 0.03%)</title><rect x="438.9" y="483.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="441.9" y="494.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$1.initialValue (1 samples, 0.03%)</title><rect x="438.9" y="467.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="441.9" y="478.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (7 samples, 0.24%)</title><rect x="439.3" y="531.0" width="2.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="442.3" y="542.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThread.current (1 samples, 0.03%)</title><rect x="441.7" y="515.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="444.7" y="526.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.remove (1 samples, 0.03%)</title><rect x="442.1" y="531.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="445.1" y="542.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (110 samples, 3.73%)</title><rect x="442.5" y="579.0" width="44.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="445.5" y="590.0">sun/..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (109 samples, 3.69%)</title><rect x="442.9" y="563.0" width="43.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="445.9" y="574.0">sun/..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.endBlocking (1 samples, 0.03%)</title><rect x="443.3" y="547.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="446.3" y="558.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.end (1 samples, 0.03%)</title><rect x="443.3" y="531.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="446.3" y="542.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (1 samples, 0.03%)</title><rect x="443.3" y="515.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="446.3" y="526.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (97 samples, 3.29%)</title><rect x="443.7" y="547.0" width="38.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="446.7" y="558.0">sun..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (2 samples, 0.07%)</title><rect x="443.7" y="531.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="446.7" y="542.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (2 samples, 0.07%)</title><rect x="443.7" y="515.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="446.7" y="526.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.get (2 samples, 0.07%)</title><rect x="443.7" y="499.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="446.7" y="510.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.03%)</title><rect x="444.1" y="483.0" width="0.4" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="447.1" y="494.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (92 samples, 3.12%)</title><rect x="444.5" y="531.0" width="36.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="447.5" y="542.0">sun..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (92 samples, 3.12%)</title><rect x="444.5" y="515.0" width="36.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="447.5" y="526.0">sun..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (87 samples, 2.95%)</title><rect x="446.5" y="499.0" width="34.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="449.5" y="510.0">su..</text>
</g>
<g>
<title>__libc_pread64 (79 samples, 2.68%)</title><rect x="448.1" y="483.0" width="31.6" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="451.1" y="494.0">__..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (39 samples, 1.32%)</title><rect x="464.1" y="467.0" width="15.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="467.1" y="478.0"></text>
</g>
<g>
<title>do_syscall_64 (39 samples, 1.32%)</title><rect x="464.1" y="451.0" width="15.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="467.1" y="462.0"></text>
</g>
<g>
<title>__x64_sys_pread64 (30 samples, 1.02%)</title><rect x="467.7" y="435.0" width="12.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="470.7" y="446.0"></text>
</g>
<g>
<title>ksys_pread64 (30 samples, 1.02%)</title><rect x="467.7" y="419.0" width="12.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="470.7" y="430.0"></text>
</g>
<g>
<title>__fdget (5 samples, 0.17%)</title><rect x="467.7" y="403.0" width="2.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="470.7" y="414.0"></text>
</g>
<g>
<title>__fget_light (5 samples, 0.17%)</title><rect x="467.7" y="387.0" width="2.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="470.7" y="398.0"></text>
</g>
<g>
<title>__fget (5 samples, 0.17%)</title><rect x="467.7" y="371.0" width="2.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="470.7" y="382.0"></text>
</g>
<g>
<title>__fget_light (2 samples, 0.07%)</title><rect x="469.7" y="403.0" width="0.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="472.7" y="414.0"></text>
</g>
<g>
<title>fput_many (1 samples, 0.03%)</title><rect x="470.5" y="403.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="473.5" y="414.0"></text>
</g>
<g>
<title>vfs_read (22 samples, 0.75%)</title><rect x="470.9" y="403.0" width="8.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="473.9" y="414.0"></text>
</g>
<g>
<title>__vfs_read (16 samples, 0.54%)</title><rect x="471.3" y="387.0" width="6.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="474.3" y="398.0"></text>
</g>
<g>
<title>ext4_file_read_iter (2 samples, 0.07%)</title><rect x="471.3" y="371.0" width="0.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="474.3" y="382.0"></text>
</g>
<g>
<title>new_sync_read (14 samples, 0.47%)</title><rect x="472.1" y="371.0" width="5.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="475.1" y="382.0"></text>
</g>
<g>
<title>ext4_file_read_iter (13 samples, 0.44%)</title><rect x="472.5" y="355.0" width="5.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="475.5" y="366.0"></text>
</g>
<g>
<title>generic_file_read_iter (13 samples, 0.44%)</title><rect x="472.5" y="339.0" width="5.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="475.5" y="350.0"></text>
</g>
<g>
<title>generic_file_buffered_read (13 samples, 0.44%)</title><rect x="472.5" y="323.0" width="5.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="475.5" y="334.0"></text>
</g>
<g>
<title>atime_needs_update (1 samples, 0.03%)</title><rect x="474.5" y="307.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="477.5" y="318.0"></text>
</g>
<g>
<title>copy_page_to_iter (5 samples, 0.17%)</title><rect x="474.9" y="307.0" width="2.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="477.9" y="318.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (1 samples, 0.03%)</title><rect x="475.7" y="291.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="478.7" y="302.0"></text>
</g>
<g>
<title>copy_user_generic_unrolled (2 samples, 0.07%)</title><rect x="476.1" y="291.0" width="0.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="479.1" y="302.0"></text>
</g>
<g>
<title>pagecache_get_page (2 samples, 0.07%)</title><rect x="476.9" y="307.0" width="0.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="479.9" y="318.0"></text>
</g>
<g>
<title>find_get_entry (2 samples, 0.07%)</title><rect x="476.9" y="291.0" width="0.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="479.9" y="302.0"></text>
</g>
<g>
<title>rw_verify_area (5 samples, 0.17%)</title><rect x="477.7" y="387.0" width="2.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="480.7" y="398.0"></text>
</g>
<g>
<title>security_file_permission (5 samples, 0.17%)</title><rect x="477.7" y="371.0" width="2.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="480.7" y="382.0"></text>
</g>
<g>
<title>__fsnotify_parent (1 samples, 0.03%)</title><rect x="477.7" y="355.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="480.7" y="366.0"></text>
</g>
<g>
<title>apparmor_file_permission (2 samples, 0.07%)</title><rect x="478.1" y="355.0" width="0.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="481.1" y="366.0"></text>
</g>
<g>
<title>common_file_perm (2 samples, 0.07%)</title><rect x="478.1" y="339.0" width="0.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="481.1" y="350.0"></text>
</g>
<g>
<title>fsnotify (2 samples, 0.07%)</title><rect x="478.9" y="355.0" width="0.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="481.9" y="366.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (1 samples, 0.03%)</title><rect x="479.7" y="483.0" width="0.4" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="482.7" y="494.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (2 samples, 0.07%)</title><rect x="480.1" y="483.0" width="0.8" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="483.1" y="494.0"></text>
</g>
<g>
<title>fdval (1 samples, 0.03%)</title><rect x="480.9" y="483.0" width="0.4" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="483.9" y="494.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (3 samples, 0.10%)</title><rect x="481.3" y="531.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="484.3" y="542.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (3 samples, 0.10%)</title><rect x="481.3" y="515.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="484.3" y="526.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (3 samples, 0.10%)</title><rect x="481.3" y="499.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="484.3" y="510.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$1.initialValue (3 samples, 0.10%)</title><rect x="481.3" y="483.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="484.3" y="494.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (9 samples, 0.30%)</title><rect x="482.5" y="547.0" width="3.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="485.5" y="558.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThread.current (2 samples, 0.07%)</title><rect x="485.3" y="531.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="488.3" y="542.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.remove (1 samples, 0.03%)</title><rect x="486.1" y="547.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="489.1" y="558.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (2 samples, 0.07%)</title><rect x="486.5" y="643.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="489.5" y="654.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (2 samples, 0.07%)</title><rect x="486.5" y="627.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="489.5" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/Cell.compareTo (2 samples, 0.07%)</title><rect x="486.5" y="611.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="489.5" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/Cell.compareTo (2 samples, 0.07%)</title><rect x="486.5" y="595.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="489.5" y="606.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (2 samples, 0.07%)</title><rect x="486.5" y="579.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="489.5" y="590.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (2 samples, 0.07%)</title><rect x="486.5" y="563.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="489.5" y="574.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (2 samples, 0.07%)</title><rect x="487.3" y="707.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="490.3" y="718.0"></text>
</g>
<g>
<title>java/lang/Iterable.forEach (1,103 samples, 37.36%)</title><rect x="488.1" y="771.0" width="440.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="491.1" y="782.0">java/lang/Iterable.forEach</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (2 samples, 0.07%)</title><rect x="488.5" y="755.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="491.5" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl$$Lambda$77/485453178.accept (1,100 samples, 37.26%)</title><rect x="489.3" y="755.0" width="439.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="492.3" y="766.0">ru/mail/polis/dao/impl/DAOImpl$$Lambda$77/485453178.accept</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.lambda$compactIterator$7 (1,100 samples, 37.26%)</title><rect x="489.3" y="739.0" width="439.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="492.3" y="750.0">ru/mail/polis/dao/impl/DAOImpl.lambda$compactIterator$7</text>
</g>
<g>
<title>ru/mail/polis/SSTable.iterator (1,100 samples, 37.26%)</title><rect x="489.3" y="723.0" width="439.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="492.3" y="734.0">ru/mail/polis/SSTable.iterator</text>
</g>
<g>
<title>ru/mail/polis/SSTable$1.&lt;init&gt; (1,100 samples, 37.26%)</title><rect x="489.3" y="707.0" width="439.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="492.3" y="718.0">ru/mail/polis/SSTable$1.&lt;init&gt;</text>
</g>
<g>
<title>ru/mail/polis/SSTable.getPosition (1,098 samples, 37.20%)</title><rect x="490.1" y="691.0" width="438.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="493.1" y="702.0">ru/mail/polis/SSTable.getPosition</text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (11 samples, 0.37%)</title><rect x="491.3" y="675.0" width="4.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="494.3" y="686.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (10 samples, 0.34%)</title><rect x="491.7" y="659.0" width="4.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="494.7" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/SSTable.getKey (1,084 samples, 36.72%)</title><rect x="495.7" y="675.0" width="433.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="498.7" y="686.0">ru/mail/polis/SSTable.getKey</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (1 samples, 0.03%)</title><rect x="495.7" y="659.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="498.7" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/SSTable.getOffset (412 samples, 13.96%)</title><rect x="496.1" y="659.0" width="164.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="499.1" y="670.0">ru/mail/polis/SSTable..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (412 samples, 13.96%)</title><rect x="496.1" y="643.0" width="164.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="499.1" y="654.0">sun/nio/ch/FileChanne..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (404 samples, 13.69%)</title><rect x="499.3" y="627.0" width="161.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="502.3" y="638.0">sun/nio/ch/FileChanne..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.endBlocking (1 samples, 0.03%)</title><rect x="500.5" y="611.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="503.5" y="622.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.end (1 samples, 0.03%)</title><rect x="500.5" y="595.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="503.5" y="606.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (1 samples, 0.03%)</title><rect x="500.5" y="579.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="503.5" y="590.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (360 samples, 12.20%)</title><rect x="500.9" y="611.0" width="143.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="503.9" y="622.0">sun/nio/ch/IOUtil...</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (3 samples, 0.10%)</title><rect x="500.9" y="595.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="503.9" y="606.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (3 samples, 0.10%)</title><rect x="500.9" y="579.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="503.9" y="590.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.get (3 samples, 0.10%)</title><rect x="500.9" y="563.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="503.9" y="574.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (1 samples, 0.03%)</title><rect x="501.7" y="547.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="504.7" y="558.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (349 samples, 11.82%)</title><rect x="502.1" y="595.0" width="139.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="505.1" y="606.0">sun/nio/ch/IOUtil..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (349 samples, 11.82%)</title><rect x="502.1" y="579.0" width="139.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="505.1" y="590.0">sun/nio/ch/FileDi..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (327 samples, 11.08%)</title><rect x="510.9" y="563.0" width="130.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="513.9" y="574.0">sun/nio/ch/FileD..</text>
</g>
<g>
<title>Java_sun_nio_ch_FileDispatcherImpl_pread0 (2 samples, 0.07%)</title><rect x="512.1" y="547.0" width="0.8" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="515.1" y="558.0"></text>
</g>
<g>
<title>__libc_pread64 (308 samples, 10.43%)</title><rect x="512.9" y="547.0" width="123.1" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="515.9" y="558.0">__libc_pread64</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (176 samples, 5.96%)</title><rect x="565.6" y="531.0" width="70.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="568.6" y="542.0">entry_SY..</text>
</g>
<g>
<title>__x64_sys_pread64 (4 samples, 0.14%)</title><rect x="565.6" y="515.0" width="1.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="568.6" y="526.0"></text>
</g>
<g>
<title>do_syscall_64 (172 samples, 5.83%)</title><rect x="567.2" y="515.0" width="68.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="570.2" y="526.0">do_sysc..</text>
</g>
<g>
<title>__x64_sys_pread64 (128 samples, 4.34%)</title><rect x="584.0" y="499.0" width="51.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="587.0" y="510.0">__x64..</text>
</g>
<g>
<title>ksys_pread64 (128 samples, 4.34%)</title><rect x="584.0" y="483.0" width="51.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="587.0" y="494.0">ksys_..</text>
</g>
<g>
<title>__fdget (7 samples, 0.24%)</title><rect x="584.0" y="467.0" width="2.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="587.0" y="478.0"></text>
</g>
<g>
<title>__fget_light (7 samples, 0.24%)</title><rect x="584.0" y="451.0" width="2.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="587.0" y="462.0"></text>
</g>
<g>
<title>__fget (7 samples, 0.24%)</title><rect x="584.0" y="435.0" width="2.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="587.0" y="446.0"></text>
</g>
<g>
<title>__fget_light (4 samples, 0.14%)</title><rect x="586.8" y="467.0" width="1.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="589.8" y="478.0"></text>
</g>
<g>
<title>fput_many (1 samples, 0.03%)</title><rect x="588.4" y="467.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="591.4" y="478.0"></text>
</g>
<g>
<title>vfs_read (116 samples, 3.93%)</title><rect x="588.8" y="467.0" width="46.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="591.8" y="478.0">vfs_..</text>
</g>
<g>
<title>__fsnotify_parent (2 samples, 0.07%)</title><rect x="591.6" y="451.0" width="0.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="594.6" y="462.0"></text>
</g>
<g>
<title>__vfs_read (84 samples, 2.85%)</title><rect x="592.4" y="451.0" width="33.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="595.4" y="462.0">__..</text>
</g>
<g>
<title>ext4_file_read_iter (1 samples, 0.03%)</title><rect x="592.4" y="435.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="595.4" y="446.0"></text>
</g>
<g>
<title>new_sync_read (83 samples, 2.81%)</title><rect x="592.8" y="435.0" width="33.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="595.8" y="446.0">ne..</text>
</g>
<g>
<title>ext4_file_read_iter (78 samples, 2.64%)</title><rect x="594.8" y="419.0" width="31.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="597.8" y="430.0">ex..</text>
</g>
<g>
<title>generic_file_buffered_read (2 samples, 0.07%)</title><rect x="597.2" y="403.0" width="0.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="600.2" y="414.0"></text>
</g>
<g>
<title>generic_file_read_iter (70 samples, 2.37%)</title><rect x="598.0" y="403.0" width="28.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="601.0" y="414.0">g..</text>
</g>
<g>
<title>generic_file_buffered_read (70 samples, 2.37%)</title><rect x="598.0" y="387.0" width="28.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="601.0" y="398.0">g..</text>
</g>
<g>
<title>_cond_resched (1 samples, 0.03%)</title><rect x="603.6" y="371.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="606.6" y="382.0"></text>
</g>
<g>
<title>copy_page_to_iter (23 samples, 0.78%)</title><rect x="604.0" y="371.0" width="9.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="607.0" y="382.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (1 samples, 0.03%)</title><rect x="607.2" y="355.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="610.2" y="366.0"></text>
</g>
<g>
<title>copy_user_generic_unrolled (11 samples, 0.37%)</title><rect x="607.6" y="355.0" width="4.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="610.6" y="366.0"></text>
</g>
<g>
<title>copyout (3 samples, 0.10%)</title><rect x="612.0" y="355.0" width="1.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="615.0" y="366.0"></text>
</g>
<g>
<title>copyout (2 samples, 0.07%)</title><rect x="613.2" y="371.0" width="0.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="616.2" y="382.0"></text>
</g>
<g>
<title>pagecache_get_page (22 samples, 0.75%)</title><rect x="614.0" y="371.0" width="8.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="617.0" y="382.0"></text>
</g>
<g>
<title>find_get_entry (21 samples, 0.71%)</title><rect x="614.4" y="355.0" width="8.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="617.4" y="366.0"></text>
</g>
<g>
<title>PageHuge (2 samples, 0.07%)</title><rect x="619.2" y="339.0" width="0.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="622.2" y="350.0"></text>
</g>
<g>
<title>xas_load (3 samples, 0.10%)</title><rect x="620.0" y="339.0" width="1.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="623.0" y="350.0"></text>
</g>
<g>
<title>xas_start (4 samples, 0.14%)</title><rect x="621.2" y="339.0" width="1.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="624.2" y="350.0"></text>
</g>
<g>
<title>rcu_all_qs (1 samples, 0.03%)</title><rect x="622.8" y="371.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="625.8" y="382.0"></text>
</g>
<g>
<title>touch_atime (7 samples, 0.24%)</title><rect x="623.2" y="371.0" width="2.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="626.2" y="382.0"></text>
</g>
<g>
<title>atime_needs_update (6 samples, 0.20%)</title><rect x="623.6" y="355.0" width="2.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="626.6" y="366.0"></text>
</g>
<g>
<title>current_time (3 samples, 0.10%)</title><rect x="624.8" y="339.0" width="1.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="627.8" y="350.0"></text>
</g>
<g>
<title>timestamp_truncate (2 samples, 0.07%)</title><rect x="625.2" y="323.0" width="0.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="628.2" y="334.0"></text>
</g>
<g>
<title>fsnotify (2 samples, 0.07%)</title><rect x="626.0" y="451.0" width="0.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="629.0" y="462.0"></text>
</g>
<g>
<title>rw_verify_area (21 samples, 0.71%)</title><rect x="626.8" y="451.0" width="8.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="629.8" y="462.0"></text>
</g>
<g>
<title>apparmor_file_permission (1 samples, 0.03%)</title><rect x="627.2" y="435.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="630.2" y="446.0"></text>
</g>
<g>
<title>fsnotify (1 samples, 0.03%)</title><rect x="627.6" y="435.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="630.6" y="446.0"></text>
</g>
<g>
<title>security_file_permission (18 samples, 0.61%)</title><rect x="628.0" y="435.0" width="7.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="631.0" y="446.0"></text>
</g>
<g>
<title>__fsnotify_parent (4 samples, 0.14%)</title><rect x="629.2" y="419.0" width="1.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="632.2" y="430.0"></text>
</g>
<g>
<title>apparmor_file_permission (6 samples, 0.20%)</title><rect x="630.8" y="419.0" width="2.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="633.8" y="430.0"></text>
</g>
<g>
<title>common_file_perm (5 samples, 0.17%)</title><rect x="631.2" y="403.0" width="2.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="634.2" y="414.0"></text>
</g>
<g>
<title>aa_file_perm (1 samples, 0.03%)</title><rect x="632.8" y="387.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="635.8" y="398.0"></text>
</g>
<g>
<title>fsnotify (5 samples, 0.17%)</title><rect x="633.2" y="419.0" width="2.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="636.2" y="430.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.03%)</title><rect x="635.2" y="499.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="638.2" y="510.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.03%)</title><rect x="635.2" y="483.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="638.2" y="494.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.03%)</title><rect x="635.2" y="467.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="638.2" y="478.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.03%)</title><rect x="635.2" y="451.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="638.2" y="462.0"></text>
</g>
<g>
<title>run_timer_softirq (1 samples, 0.03%)</title><rect x="635.2" y="435.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="638.2" y="446.0"></text>
</g>
<g>
<title>__run_timers.part.0 (1 samples, 0.03%)</title><rect x="635.2" y="419.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="638.2" y="430.0"></text>
</g>
<g>
<title>ksys_pread64 (1 samples, 0.03%)</title><rect x="635.6" y="499.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="638.6" y="510.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (6 samples, 0.20%)</title><rect x="636.0" y="547.0" width="2.4" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="639.0" y="558.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (6 samples, 0.20%)</title><rect x="638.4" y="547.0" width="2.4" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="641.4" y="558.0"></text>
</g>
<g>
<title>fdval (2 samples, 0.07%)</title><rect x="640.8" y="547.0" width="0.8" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="643.8" y="558.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (8 samples, 0.27%)</title><rect x="641.6" y="595.0" width="3.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="644.6" y="606.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (8 samples, 0.27%)</title><rect x="641.6" y="579.0" width="3.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="644.6" y="590.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (8 samples, 0.27%)</title><rect x="641.6" y="563.0" width="3.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="644.6" y="574.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$1.initialValue (8 samples, 0.27%)</title><rect x="641.6" y="547.0" width="3.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="644.6" y="558.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThread.current (1 samples, 0.03%)</title><rect x="644.8" y="611.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="647.8" y="622.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (31 samples, 1.05%)</title><rect x="645.2" y="611.0" width="12.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="648.2" y="622.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (1 samples, 0.03%)</title><rect x="653.2" y="595.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="656.2" y="606.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThread.current (10 samples, 0.34%)</title><rect x="653.6" y="595.0" width="4.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="656.6" y="606.0"></text>
</g>
<g>
<title>Java_sun_nio_ch_NativeThread_current (1 samples, 0.03%)</title><rect x="655.2" y="579.0" width="0.4" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="658.2" y="590.0"></text>
</g>
<g>
<title>pthread_self (3 samples, 0.10%)</title><rect x="655.6" y="579.0" width="1.2" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="658.6" y="590.0"></text>
</g>
<g>
<title>pthread_self@plt (2 samples, 0.07%)</title><rect x="656.8" y="579.0" width="0.8" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="659.8" y="590.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.remove (8 samples, 0.27%)</title><rect x="657.6" y="611.0" width="3.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="660.6" y="622.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (671 samples, 22.73%)</title><rect x="660.8" y="659.0" width="268.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="663.8" y="670.0">sun/nio/ch/FileChannelImpl.read</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (669 samples, 22.66%)</title><rect x="661.6" y="643.0" width="267.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="664.6" y="654.0">sun/nio/ch/FileChannelImpl.readInter..</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (623 samples, 21.10%)</title><rect x="663.6" y="627.0" width="249.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="666.6" y="638.0">sun/nio/ch/IOUtil.read</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (9 samples, 0.30%)</title><rect x="663.6" y="611.0" width="3.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="666.6" y="622.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (9 samples, 0.30%)</title><rect x="663.6" y="595.0" width="3.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="666.6" y="606.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.get (9 samples, 0.30%)</title><rect x="663.6" y="579.0" width="3.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="666.6" y="590.0"></text>
</g>
<g>
<title>jbyte_arraycopy (1 samples, 0.03%)</title><rect x="664.8" y="563.0" width="0.4" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="667.8" y="574.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (2 samples, 0.07%)</title><rect x="665.2" y="563.0" width="0.8" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="668.2" y="574.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (2 samples, 0.07%)</title><rect x="666.0" y="563.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="669.0" y="574.0"></text>
</g>
<g>
<title>unsafe_arraycopy (1 samples, 0.03%)</title><rect x="666.8" y="563.0" width="0.4" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="669.8" y="574.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (595 samples, 20.16%)</title><rect x="667.2" y="611.0" width="237.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="670.2" y="622.0">sun/nio/ch/IOUtil.readIntoNativ..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (595 samples, 20.16%)</title><rect x="667.2" y="595.0" width="237.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="670.2" y="606.0">sun/nio/ch/FileDispatcherImpl.p..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (570 samples, 19.31%)</title><rect x="677.1" y="579.0" width="227.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="680.1" y="590.0">sun/nio/ch/FileDispatcherImpl...</text>
</g>
<g>
<title>Java_sun_nio_ch_FileDispatcherImpl_pread0 (2 samples, 0.07%)</title><rect x="682.7" y="563.0" width="0.8" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="685.7" y="574.0"></text>
</g>
<g>
<title>__libc_pread64 (539 samples, 18.26%)</title><rect x="683.5" y="563.0" width="215.5" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="686.5" y="574.0">__libc_pread64</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (291 samples, 9.86%)</title><rect x="782.7" y="547.0" width="116.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="785.7" y="558.0">entry_SYSCALL_..</text>
</g>
<g>
<title>__x64_sys_pread64 (8 samples, 0.27%)</title><rect x="782.7" y="531.0" width="3.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="785.7" y="542.0"></text>
</g>
<g>
<title>do_syscall_64 (283 samples, 9.59%)</title><rect x="785.9" y="531.0" width="113.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="788.9" y="542.0">do_syscall_64</text>
</g>
<g>
<title>__x64_sys_pread64 (208 samples, 7.05%)</title><rect x="815.5" y="515.0" width="83.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="818.5" y="526.0">__x64_sys..</text>
</g>
<g>
<title>ksys_pread64 (208 samples, 7.05%)</title><rect x="815.5" y="499.0" width="83.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="818.5" y="510.0">ksys_prea..</text>
</g>
<g>
<title>__fdget (15 samples, 0.51%)</title><rect x="816.7" y="483.0" width="5.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="819.7" y="494.0"></text>
</g>
<g>
<title>__fget_light (15 samples, 0.51%)</title><rect x="816.7" y="467.0" width="5.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="819.7" y="478.0"></text>
</g>
<g>
<title>__fget (15 samples, 0.51%)</title><rect x="816.7" y="451.0" width="5.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="819.7" y="462.0"></text>
</g>
<g>
<title>__fget_light (12 samples, 0.41%)</title><rect x="822.6" y="483.0" width="4.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="825.6" y="494.0"></text>
</g>
<g>
<title>__vfs_read (1 samples, 0.03%)</title><rect x="827.4" y="483.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="830.4" y="494.0"></text>
</g>
<g>
<title>fput (1 samples, 0.03%)</title><rect x="827.8" y="483.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="830.8" y="494.0"></text>
</g>
<g>
<title>fput_many (7 samples, 0.24%)</title><rect x="828.2" y="483.0" width="2.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="831.2" y="494.0"></text>
</g>
<g>
<title>fsnotify (1 samples, 0.03%)</title><rect x="831.0" y="483.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="834.0" y="494.0"></text>
</g>
<g>
<title>vfs_read (168 samples, 5.69%)</title><rect x="831.4" y="483.0" width="67.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="834.4" y="494.0">vfs_read</text>
</g>
<g>
<title>__fsnotify_parent (9 samples, 0.30%)</title><rect x="833.4" y="467.0" width="3.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="836.4" y="478.0"></text>
</g>
<g>
<title>__vfs_read (120 samples, 4.07%)</title><rect x="837.0" y="467.0" width="48.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="840.0" y="478.0">__vf..</text>
</g>
<g>
<title>__x86_indirect_thunk_rax (1 samples, 0.03%)</title><rect x="837.0" y="451.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="840.0" y="462.0"></text>
</g>
<g>
<title>ext4_file_read_iter (8 samples, 0.27%)</title><rect x="837.4" y="451.0" width="3.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="840.4" y="462.0"></text>
</g>
<g>
<title>iov_iter_init (1 samples, 0.03%)</title><rect x="840.6" y="451.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="843.6" y="462.0"></text>
</g>
<g>
<title>new_sync_read (110 samples, 3.73%)</title><rect x="841.0" y="451.0" width="44.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="844.0" y="462.0">new_..</text>
</g>
<g>
<title>ext4_file_read_iter (106 samples, 3.59%)</title><rect x="842.6" y="435.0" width="42.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="845.6" y="446.0">ext4..</text>
</g>
<g>
<title>generic_file_read_iter (98 samples, 3.32%)</title><rect x="845.8" y="419.0" width="39.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="848.8" y="430.0">gen..</text>
</g>
<g>
<title>generic_file_buffered_read (97 samples, 3.29%)</title><rect x="845.8" y="403.0" width="38.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="848.8" y="414.0">gen..</text>
</g>
<g>
<title>_cond_resched (2 samples, 0.07%)</title><rect x="852.6" y="387.0" width="0.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="855.6" y="398.0"></text>
</g>
<g>
<title>atime_needs_update (1 samples, 0.03%)</title><rect x="853.4" y="387.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="856.4" y="398.0"></text>
</g>
<g>
<title>copy_page_to_iter (44 samples, 1.49%)</title><rect x="853.8" y="387.0" width="17.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="856.8" y="398.0"></text>
</g>
<g>
<title>_cond_resched (3 samples, 0.10%)</title><rect x="857.4" y="371.0" width="1.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="860.4" y="382.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (6 samples, 0.20%)</title><rect x="858.6" y="371.0" width="2.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="861.6" y="382.0"></text>
</g>
<g>
<title>copy_user_generic_unrolled (21 samples, 0.71%)</title><rect x="861.0" y="371.0" width="8.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="864.0" y="382.0"></text>
</g>
<g>
<title>copyout (5 samples, 0.17%)</title><rect x="869.4" y="371.0" width="2.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="872.4" y="382.0"></text>
</g>
<g>
<title>mark_page_accessed (1 samples, 0.03%)</title><rect x="871.4" y="387.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="874.4" y="398.0"></text>
</g>
<g>
<title>pagecache_get_page (20 samples, 0.68%)</title><rect x="871.8" y="387.0" width="8.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="874.8" y="398.0"></text>
</g>
<g>
<title>find_get_entry (20 samples, 0.68%)</title><rect x="871.8" y="371.0" width="8.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="874.8" y="382.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.03%)</title><rect x="877.0" y="355.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="880.0" y="366.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.03%)</title><rect x="877.0" y="339.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="880.0" y="350.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.03%)</title><rect x="877.0" y="323.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="880.0" y="334.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.03%)</title><rect x="877.0" y="307.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="880.0" y="318.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.03%)</title><rect x="877.0" y="291.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="880.0" y="302.0"></text>
</g>
<g>
<title>update_blocked_averages (1 samples, 0.03%)</title><rect x="877.0" y="275.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="880.0" y="286.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.03%)</title><rect x="877.0" y="259.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="880.0" y="270.0"></text>
</g>
<g>
<title>xas_load (4 samples, 0.14%)</title><rect x="877.4" y="355.0" width="1.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="880.4" y="366.0"></text>
</g>
<g>
<title>xas_start (2 samples, 0.07%)</title><rect x="879.0" y="355.0" width="0.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="882.0" y="366.0"></text>
</g>
<g>
<title>touch_atime (12 samples, 0.41%)</title><rect x="879.8" y="387.0" width="4.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="882.8" y="398.0"></text>
</g>
<g>
<title>atime_needs_update (9 samples, 0.30%)</title><rect x="881.0" y="371.0" width="3.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="884.0" y="382.0"></text>
</g>
<g>
<title>current_time (4 samples, 0.14%)</title><rect x="883.0" y="355.0" width="1.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="886.0" y="366.0"></text>
</g>
<g>
<title>ktime_get_coarse_real_ts64 (3 samples, 0.10%)</title><rect x="883.4" y="339.0" width="1.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="886.4" y="350.0"></text>
</g>
<g>
<title>mark_page_accessed (1 samples, 0.03%)</title><rect x="884.6" y="403.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="887.6" y="414.0"></text>
</g>
<g>
<title>fsnotify (3 samples, 0.10%)</title><rect x="885.0" y="467.0" width="1.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="888.0" y="478.0"></text>
</g>
<g>
<title>new_sync_read (1 samples, 0.03%)</title><rect x="886.2" y="467.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="889.2" y="478.0"></text>
</g>
<g>
<title>rw_verify_area (30 samples, 1.02%)</title><rect x="886.6" y="467.0" width="12.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="889.6" y="478.0"></text>
</g>
<g>
<title>apparmor_file_permission (3 samples, 0.10%)</title><rect x="887.8" y="451.0" width="1.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="890.8" y="462.0"></text>
</g>
<g>
<title>security_file_permission (24 samples, 0.81%)</title><rect x="889.0" y="451.0" width="9.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="892.0" y="462.0"></text>
</g>
<g>
<title>__fsnotify_parent (2 samples, 0.07%)</title><rect x="890.6" y="435.0" width="0.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="893.6" y="446.0"></text>
</g>
<g>
<title>apparmor_file_permission (15 samples, 0.51%)</title><rect x="891.4" y="435.0" width="6.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="894.4" y="446.0"></text>
</g>
<g>
<title>common_file_perm (15 samples, 0.51%)</title><rect x="891.4" y="419.0" width="6.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="894.4" y="430.0"></text>
</g>
<g>
<title>aa_file_perm (3 samples, 0.10%)</title><rect x="896.2" y="403.0" width="1.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="899.2" y="414.0"></text>
</g>
<g>
<title>fsnotify (3 samples, 0.10%)</title><rect x="897.4" y="435.0" width="1.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="900.4" y="446.0"></text>
</g>
<g>
<title>ksys_pread64 (1 samples, 0.03%)</title><rect x="898.6" y="515.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="901.6" y="526.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (10 samples, 0.34%)</title><rect x="899.0" y="563.0" width="4.0" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="902.0" y="574.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (5 samples, 0.17%)</title><rect x="903.0" y="563.0" width="2.0" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="906.0" y="574.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (19 samples, 0.64%)</title><rect x="905.0" y="611.0" width="7.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="908.0" y="622.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (19 samples, 0.64%)</title><rect x="905.0" y="595.0" width="7.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="908.0" y="606.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (19 samples, 0.64%)</title><rect x="905.0" y="579.0" width="7.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="908.0" y="590.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$1.initialValue (19 samples, 0.64%)</title><rect x="905.0" y="563.0" width="7.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="908.0" y="574.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThread.current (1 samples, 0.03%)</title><rect x="912.6" y="627.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="915.6" y="638.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (35 samples, 1.19%)</title><rect x="913.0" y="627.0" width="14.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="916.0" y="638.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThread.current (8 samples, 0.27%)</title><rect x="923.8" y="611.0" width="3.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="926.8" y="622.0"></text>
</g>
<g>
<title>Java_sun_nio_ch_NativeThread_current (1 samples, 0.03%)</title><rect x="926.6" y="595.0" width="0.4" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="929.6" y="606.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.remove (5 samples, 0.17%)</title><rect x="927.0" y="627.0" width="2.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="930.0" y="638.0"></text>
</g>
<g>
<title>java/util/ArrayList$Itr.hasNext (3 samples, 0.10%)</title><rect x="929.0" y="771.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="932.0" y="782.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection.forEach (5 samples, 0.17%)</title><rect x="930.2" y="771.0" width="2.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="933.2" y="782.0"></text>
</g>
<g>
<title>java/lang/Iterable.forEach (5 samples, 0.17%)</title><rect x="930.2" y="755.0" width="2.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="933.2" y="766.0"></text>
</g>
<g>
<title>java/util/HashMap$HashIterator.hasNext (1 samples, 0.03%)</title><rect x="931.8" y="739.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="934.8" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock (2 samples, 0.07%)</title><rect x="932.2" y="771.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="935.2" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireShared (2 samples, 0.07%)</title><rect x="932.2" y="755.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="935.2" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryAcquireShared (2 samples, 0.07%)</title><rect x="932.2" y="739.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="935.2" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.fullTryAcquireShared (2 samples, 0.07%)</title><rect x="932.2" y="723.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="935.2" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.unlock (1 samples, 0.03%)</title><rect x="933.0" y="771.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="936.0" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.releaseShared (1 samples, 0.03%)</title><rect x="933.0" y="755.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="936.0" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doReleaseShared (1 samples, 0.03%)</title><rect x="933.0" y="739.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="936.0" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/MemTable.iterator (37 samples, 1.25%)</title><rect x="933.4" y="771.0" width="14.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="936.4" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$EntrySet.iterator (37 samples, 1.25%)</title><rect x="933.4" y="755.0" width="14.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="936.4" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.&lt;init&gt; (37 samples, 1.25%)</title><rect x="933.4" y="739.0" width="14.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="936.4" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.&lt;init&gt; (37 samples, 1.25%)</title><rect x="933.4" y="723.0" width="14.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="936.4" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.inBounds (3 samples, 0.10%)</title><rect x="933.4" y="707.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="936.4" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.tooLow (3 samples, 0.10%)</title><rect x="933.4" y="691.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="936.4" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (3 samples, 0.10%)</title><rect x="933.4" y="675.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="936.4" y="686.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (3 samples, 0.10%)</title><rect x="933.4" y="659.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="936.4" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.loNode (34 samples, 1.15%)</title><rect x="934.6" y="707.0" width="13.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="937.6" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findNear (34 samples, 1.15%)</title><rect x="934.6" y="691.0" width="13.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="937.6" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (1 samples, 0.03%)</title><rect x="934.6" y="675.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="937.6" y="686.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (1 samples, 0.03%)</title><rect x="934.6" y="659.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="937.6" y="670.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (1 samples, 0.03%)</title><rect x="934.6" y="643.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="937.6" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findPredecessor (33 samples, 1.12%)</title><rect x="935.0" y="675.0" width="13.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="938.0" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (25 samples, 0.85%)</title><rect x="937.4" y="659.0" width="10.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="940.4" y="670.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (25 samples, 0.85%)</title><rect x="937.4" y="643.0" width="10.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="940.4" y="654.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (11 samples, 0.37%)</title><rect x="943.0" y="627.0" width="4.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="946.0" y="638.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (11 samples, 0.37%)</title><rect x="943.0" y="611.0" width="4.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="946.0" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock (2 samples, 0.07%)</title><rect x="947.4" y="659.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="950.4" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (166 samples, 5.62%)</title><rect x="948.2" y="771.0" width="66.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="951.2" y="782.0">ru/mail..</text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (164 samples, 5.56%)</title><rect x="949.0" y="755.0" width="65.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="952.0" y="766.0">ru/mail..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (163 samples, 5.52%)</title><rect x="949.4" y="739.0" width="65.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="952.4" y="750.0">com/goo..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.next (1 samples, 0.03%)</title><rect x="949.4" y="723.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="952.4" y="734.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (162 samples, 5.49%)</title><rect x="949.8" y="723.0" width="64.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="952.8" y="734.0">java/ut..</text>
</g>
<g>
<title>java/util/PriorityQueue.offer (162 samples, 5.49%)</title><rect x="949.8" y="707.0" width="64.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="952.8" y="718.0">java/ut..</text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (162 samples, 5.49%)</title><rect x="949.8" y="691.0" width="64.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="952.8" y="702.0">java/ut..</text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (160 samples, 5.42%)</title><rect x="950.6" y="675.0" width="63.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="953.6" y="686.0">java/ut..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (160 samples, 5.42%)</title><rect x="950.6" y="659.0" width="63.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="953.6" y="670.0">com/goo..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (160 samples, 5.42%)</title><rect x="950.6" y="643.0" width="63.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="953.6" y="654.0">com/goo..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (157 samples, 5.32%)</title><rect x="950.6" y="627.0" width="62.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="953.6" y="638.0">com/go..</text>
</g>
<g>
<title>ru/mail/polis/SSTable$1.next (157 samples, 5.32%)</title><rect x="950.6" y="611.0" width="62.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="953.6" y="622.0">ru/mai..</text>
</g>
<g>
<title>ru/mail/polis/SSTable$1.next (157 samples, 5.32%)</title><rect x="950.6" y="595.0" width="62.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="953.6" y="606.0">ru/mai..</text>
</g>
<g>
<title>ru/mail/polis/SSTable.getCell (157 samples, 5.32%)</title><rect x="950.6" y="579.0" width="62.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="953.6" y="590.0">ru/mai..</text>
</g>
<g>
<title>ru/mail/polis/SSTable.getOffset (50 samples, 1.69%)</title><rect x="951.0" y="563.0" width="19.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="954.0" y="574.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (47 samples, 1.59%)</title><rect x="952.2" y="547.0" width="18.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="955.2" y="558.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (47 samples, 1.59%)</title><rect x="952.2" y="531.0" width="18.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="955.2" y="542.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (43 samples, 1.46%)</title><rect x="952.6" y="515.0" width="17.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="955.6" y="526.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (41 samples, 1.39%)</title><rect x="952.6" y="499.0" width="16.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="955.6" y="510.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (41 samples, 1.39%)</title><rect x="952.6" y="483.0" width="16.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="955.6" y="494.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (40 samples, 1.36%)</title><rect x="953.0" y="467.0" width="15.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="956.0" y="478.0"></text>
</g>
<g>
<title>__libc_pread64 (38 samples, 1.29%)</title><rect x="953.0" y="451.0" width="15.2" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="956.0" y="462.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (21 samples, 0.71%)</title><rect x="959.8" y="435.0" width="8.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="962.8" y="446.0"></text>
</g>
<g>
<title>__x64_sys_pread64 (1 samples, 0.03%)</title><rect x="959.8" y="419.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="962.8" y="430.0"></text>
</g>
<g>
<title>do_syscall_64 (20 samples, 0.68%)</title><rect x="960.2" y="419.0" width="8.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="963.2" y="430.0"></text>
</g>
<g>
<title>__x64_sys_pread64 (14 samples, 0.47%)</title><rect x="962.6" y="403.0" width="5.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="965.6" y="414.0"></text>
</g>
<g>
<title>ksys_pread64 (14 samples, 0.47%)</title><rect x="962.6" y="387.0" width="5.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="965.6" y="398.0"></text>
</g>
<g>
<title>__fdget (2 samples, 0.07%)</title><rect x="962.6" y="371.0" width="0.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="965.6" y="382.0"></text>
</g>
<g>
<title>__fget_light (2 samples, 0.07%)</title><rect x="962.6" y="355.0" width="0.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="965.6" y="366.0"></text>
</g>
<g>
<title>__fget (2 samples, 0.07%)</title><rect x="962.6" y="339.0" width="0.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="965.6" y="350.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.03%)</title><rect x="963.4" y="371.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="966.4" y="382.0"></text>
</g>
<g>
<title>rw_verify_area (1 samples, 0.03%)</title><rect x="963.8" y="371.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="966.8" y="382.0"></text>
</g>
<g>
<title>vfs_read (10 samples, 0.34%)</title><rect x="964.2" y="371.0" width="4.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="967.2" y="382.0"></text>
</g>
<g>
<title>__vfs_read (4 samples, 0.14%)</title><rect x="964.6" y="355.0" width="1.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="967.6" y="366.0"></text>
</g>
<g>
<title>new_sync_read (4 samples, 0.14%)</title><rect x="964.6" y="339.0" width="1.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="967.6" y="350.0"></text>
</g>
<g>
<title>ext4_file_read_iter (4 samples, 0.14%)</title><rect x="964.6" y="323.0" width="1.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="967.6" y="334.0"></text>
</g>
<g>
<title>generic_file_read_iter (4 samples, 0.14%)</title><rect x="964.6" y="307.0" width="1.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="967.6" y="318.0"></text>
</g>
<g>
<title>generic_file_buffered_read (4 samples, 0.14%)</title><rect x="964.6" y="291.0" width="1.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="967.6" y="302.0"></text>
</g>
<g>
<title>copy_page_to_iter (1 samples, 0.03%)</title><rect x="965.0" y="275.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="968.0" y="286.0"></text>
</g>
<g>
<title>copy_user_generic_unrolled (1 samples, 0.03%)</title><rect x="965.0" y="259.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="968.0" y="270.0"></text>
</g>
<g>
<title>pagecache_get_page (1 samples, 0.03%)</title><rect x="965.4" y="275.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="968.4" y="286.0"></text>
</g>
<g>
<title>find_get_entry (1 samples, 0.03%)</title><rect x="965.4" y="259.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="968.4" y="270.0"></text>
</g>
<g>
<title>touch_atime (1 samples, 0.03%)</title><rect x="965.8" y="275.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="968.8" y="286.0"></text>
</g>
<g>
<title>atime_needs_update (1 samples, 0.03%)</title><rect x="965.8" y="259.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="968.8" y="270.0"></text>
</g>
<g>
<title>current_time (1 samples, 0.03%)</title><rect x="965.8" y="243.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="968.8" y="254.0"></text>
</g>
<g>
<title>fsnotify (1 samples, 0.03%)</title><rect x="966.2" y="355.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="969.2" y="366.0"></text>
</g>
<g>
<title>rw_verify_area (4 samples, 0.14%)</title><rect x="966.6" y="355.0" width="1.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="969.6" y="366.0"></text>
</g>
<g>
<title>__fsnotify_parent (1 samples, 0.03%)</title><rect x="966.6" y="339.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="969.6" y="350.0"></text>
</g>
<g>
<title>apparmor_file_permission (1 samples, 0.03%)</title><rect x="967.0" y="339.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="970.0" y="350.0"></text>
</g>
<g>
<title>fsnotify (1 samples, 0.03%)</title><rect x="967.4" y="339.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="970.4" y="350.0"></text>
</g>
<g>
<title>security_file_permission (1 samples, 0.03%)</title><rect x="967.8" y="339.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="970.8" y="350.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (1 samples, 0.03%)</title><rect x="968.2" y="451.0" width="0.4" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="971.2" y="462.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (1 samples, 0.03%)</title><rect x="968.6" y="451.0" width="0.3" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="971.6" y="462.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (2 samples, 0.07%)</title><rect x="968.9" y="499.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="971.9" y="510.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (2 samples, 0.07%)</title><rect x="968.9" y="483.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="971.9" y="494.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (2 samples, 0.07%)</title><rect x="968.9" y="467.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="971.9" y="478.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$1.initialValue (2 samples, 0.07%)</title><rect x="968.9" y="451.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="971.9" y="462.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (3 samples, 0.10%)</title><rect x="969.7" y="515.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="972.7" y="526.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (106 samples, 3.59%)</title><rect x="970.9" y="563.0" width="42.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="973.9" y="574.0">sun/..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (106 samples, 3.59%)</title><rect x="970.9" y="547.0" width="42.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="973.9" y="558.0">sun/..</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (98 samples, 3.32%)</title><rect x="970.9" y="531.0" width="39.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="973.9" y="542.0">sun..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (4 samples, 0.14%)</title><rect x="970.9" y="515.0" width="1.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="973.9" y="526.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (4 samples, 0.14%)</title><rect x="970.9" y="499.0" width="1.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="973.9" y="510.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.get (4 samples, 0.14%)</title><rect x="970.9" y="483.0" width="1.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="973.9" y="494.0"></text>
</g>
<g>
<title>unsafe_arraycopy (1 samples, 0.03%)</title><rect x="972.1" y="467.0" width="0.4" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="975.1" y="478.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (91 samples, 3.08%)</title><rect x="972.5" y="515.0" width="36.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="975.5" y="526.0">sun..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (91 samples, 3.08%)</title><rect x="972.5" y="499.0" width="36.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="975.5" y="510.0">sun..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (86 samples, 2.91%)</title><rect x="974.5" y="483.0" width="34.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="977.5" y="494.0">su..</text>
</g>
<g>
<title>__libc_pread64 (81 samples, 2.74%)</title><rect x="975.3" y="467.0" width="32.4" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="978.3" y="478.0">__..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (34 samples, 1.15%)</title><rect x="994.1" y="451.0" width="13.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="997.1" y="462.0"></text>
</g>
<g>
<title>__x64_sys_pread64 (1 samples, 0.03%)</title><rect x="994.1" y="435.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="997.1" y="446.0"></text>
</g>
<g>
<title>do_syscall_64 (33 samples, 1.12%)</title><rect x="994.5" y="435.0" width="13.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="997.5" y="446.0"></text>
</g>
<g>
<title>__x64_sys_pread64 (18 samples, 0.61%)</title><rect x="1000.5" y="419.0" width="7.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1003.5" y="430.0"></text>
</g>
<g>
<title>ksys_pread64 (18 samples, 0.61%)</title><rect x="1000.5" y="403.0" width="7.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1003.5" y="414.0"></text>
</g>
<g>
<title>__fdget (1 samples, 0.03%)</title><rect x="1000.5" y="387.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1003.5" y="398.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.03%)</title><rect x="1000.5" y="371.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1003.5" y="382.0"></text>
</g>
<g>
<title>__fget (1 samples, 0.03%)</title><rect x="1000.5" y="355.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1003.5" y="366.0"></text>
</g>
<g>
<title>__fget_light (3 samples, 0.10%)</title><rect x="1000.9" y="387.0" width="1.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1003.9" y="398.0"></text>
</g>
<g>
<title>vfs_read (14 samples, 0.47%)</title><rect x="1002.1" y="387.0" width="5.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1005.1" y="398.0"></text>
</g>
<g>
<title>__vfs_read (10 samples, 0.34%)</title><rect x="1002.5" y="371.0" width="4.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1005.5" y="382.0"></text>
</g>
<g>
<title>new_sync_read (10 samples, 0.34%)</title><rect x="1002.5" y="355.0" width="4.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1005.5" y="366.0"></text>
</g>
<g>
<title>ext4_file_read_iter (8 samples, 0.27%)</title><rect x="1003.3" y="339.0" width="3.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1006.3" y="350.0"></text>
</g>
<g>
<title>generic_file_read_iter (8 samples, 0.27%)</title><rect x="1003.3" y="323.0" width="3.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1006.3" y="334.0"></text>
</g>
<g>
<title>generic_file_buffered_read (7 samples, 0.24%)</title><rect x="1003.7" y="307.0" width="2.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1006.7" y="318.0"></text>
</g>
<g>
<title>copy_page_to_iter (2 samples, 0.07%)</title><rect x="1005.3" y="291.0" width="0.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1008.3" y="302.0"></text>
</g>
<g>
<title>copy_user_generic_unrolled (1 samples, 0.03%)</title><rect x="1005.7" y="275.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1008.7" y="286.0"></text>
</g>
<g>
<title>pagecache_get_page (1 samples, 0.03%)</title><rect x="1006.1" y="291.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1009.1" y="302.0"></text>
</g>
<g>
<title>fsnotify (1 samples, 0.03%)</title><rect x="1006.5" y="371.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1009.5" y="382.0"></text>
</g>
<g>
<title>rw_verify_area (2 samples, 0.07%)</title><rect x="1006.9" y="371.0" width="0.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1009.9" y="382.0"></text>
</g>
<g>
<title>security_file_permission (2 samples, 0.07%)</title><rect x="1006.9" y="355.0" width="0.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1009.9" y="366.0"></text>
</g>
<g>
<title>fsnotify (2 samples, 0.07%)</title><rect x="1006.9" y="339.0" width="0.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1009.9" y="350.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (1 samples, 0.03%)</title><rect x="1007.7" y="467.0" width="0.4" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1010.7" y="478.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (2 samples, 0.07%)</title><rect x="1008.1" y="467.0" width="0.8" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="1011.1" y="478.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (3 samples, 0.10%)</title><rect x="1008.9" y="515.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1011.9" y="526.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (3 samples, 0.10%)</title><rect x="1008.9" y="499.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1011.9" y="510.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (3 samples, 0.10%)</title><rect x="1008.9" y="483.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1011.9" y="494.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$1.initialValue (3 samples, 0.10%)</title><rect x="1008.9" y="467.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1011.9" y="478.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThread.current (1 samples, 0.03%)</title><rect x="1010.1" y="531.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1013.1" y="542.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (6 samples, 0.20%)</title><rect x="1010.5" y="531.0" width="2.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1013.5" y="542.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThread.current (3 samples, 0.10%)</title><rect x="1011.7" y="515.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1014.7" y="526.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.remove (1 samples, 0.03%)</title><rect x="1012.9" y="531.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1015.9" y="542.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (3 samples, 0.10%)</title><rect x="1013.3" y="627.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1016.3" y="638.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (3 samples, 0.10%)</title><rect x="1013.3" y="611.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1016.3" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/Cell.compareTo (3 samples, 0.10%)</title><rect x="1013.3" y="595.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1016.3" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/Cell.compareTo (3 samples, 0.10%)</title><rect x="1013.3" y="579.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1016.3" y="590.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (1 samples, 0.03%)</title><rect x="1014.1" y="563.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1017.1" y="574.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (1 samples, 0.03%)</title><rect x="1014.1" y="547.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1017.1" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivlev/ThreadController.equalsUrlNode (13 samples, 0.44%)</title><rect x="1014.5" y="819.0" width="5.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1017.5" y="830.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/TopologyImpl.getNodeByKey (13 samples, 0.44%)</title><rect x="1014.5" y="803.0" width="5.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1017.5" y="814.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/TopologyImpl.getNodeByKey (9 samples, 0.30%)</title><rect x="1016.1" y="787.0" width="3.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1019.1" y="798.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (7 samples, 0.24%)</title><rect x="1016.5" y="771.0" width="2.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1019.5" y="782.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (7 samples, 0.24%)</title><rect x="1016.5" y="755.0" width="2.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1019.5" y="766.0"></text>
</g>
<g>
<title>jbyte_arraycopy (1 samples, 0.03%)</title><rect x="1018.1" y="739.0" width="0.4" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="1021.1" y="750.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (2 samples, 0.07%)</title><rect x="1018.5" y="739.0" width="0.8" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="1021.5" y="750.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.03%)</title><rect x="1019.3" y="771.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1022.3" y="782.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1019384604.invoke (1 samples, 0.03%)</title><rect x="1019.3" y="755.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1022.3" y="766.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.03%)</title><rect x="1019.3" y="739.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1022.3" y="750.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (1 samples, 0.03%)</title><rect x="1019.3" y="723.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1022.3" y="734.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (1 samples, 0.03%)</title><rect x="1019.3" y="707.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1022.3" y="718.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (1 samples, 0.03%)</title><rect x="1019.3" y="691.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1022.3" y="702.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (1 samples, 0.03%)</title><rect x="1019.3" y="675.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1022.3" y="686.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.03%)</title><rect x="1019.3" y="659.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1022.3" y="670.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.03%)</title><rect x="1019.3" y="643.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1022.3" y="654.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (1 samples, 0.03%)</title><rect x="1019.3" y="627.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1022.3" y="638.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (1 samples, 0.03%)</title><rect x="1019.3" y="611.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1022.3" y="622.0"></text>
</g>
<g>
<title>G1CollectedHeap::attempt_allocation_slow(unsigned long) (1 samples, 0.03%)</title><rect x="1019.3" y="595.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1022.3" y="606.0"></text>
</g>
<g>
<title>MutatorAllocRegion::retire(bool) (1 samples, 0.03%)</title><rect x="1019.3" y="579.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1022.3" y="590.0"></text>
</g>
<g>
<title>G1CollectedHeap::retire_mutator_alloc_region(HeapRegion*, unsigned long) (1 samples, 0.03%)</title><rect x="1019.3" y="563.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1022.3" y="574.0"></text>
</g>
<g>
<title>G1CollectionSet::add_eden_region(HeapRegion*) (1 samples, 0.03%)</title><rect x="1019.3" y="547.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1022.3" y="558.0"></text>
</g>
<g>
<title>OtherRegionsTable::occupied() const (1 samples, 0.03%)</title><rect x="1019.3" y="531.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1022.3" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivlev/ThreadController.sendResponseProxy (5 samples, 0.17%)</title><rect x="1019.7" y="819.0" width="2.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1022.7" y="830.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (1 samples, 0.03%)</title><rect x="1019.7" y="803.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1022.7" y="814.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivlev/ThreadController.proxy (4 samples, 0.14%)</title><rect x="1020.1" y="803.0" width="1.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1023.1" y="814.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (4 samples, 0.14%)</title><rect x="1020.1" y="787.0" width="1.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1023.1" y="798.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (4 samples, 0.14%)</title><rect x="1020.1" y="771.0" width="1.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1023.1" y="782.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.&lt;init&gt; (3 samples, 0.10%)</title><rect x="1020.1" y="755.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1023.1" y="766.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (3 samples, 0.10%)</title><rect x="1020.1" y="739.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1023.1" y="750.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (1 samples, 0.03%)</title><rect x="1020.1" y="723.0" width="0.4" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="1023.1" y="734.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.03%)</title><rect x="1020.1" y="707.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1023.1" y="718.0"></text>
</g>
<g>
<title>recv (2 samples, 0.07%)</title><rect x="1020.5" y="723.0" width="0.8" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="1023.5" y="734.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.07%)</title><rect x="1020.5" y="707.0" width="0.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1023.5" y="718.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.07%)</title><rect x="1020.5" y="691.0" width="0.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1023.5" y="702.0"></text>
</g>
<g>
<title>__x64_sys_recvfrom (2 samples, 0.07%)</title><rect x="1020.5" y="675.0" width="0.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1023.5" y="686.0"></text>
</g>
<g>
<title>__sys_recvfrom (2 samples, 0.07%)</title><rect x="1020.5" y="659.0" width="0.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1023.5" y="670.0"></text>
</g>
<g>
<title>sock_recvmsg (1 samples, 0.03%)</title><rect x="1020.9" y="643.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1023.9" y="654.0"></text>
</g>
<g>
<title>inet6_recvmsg (1 samples, 0.03%)</title><rect x="1020.9" y="627.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1023.9" y="638.0"></text>
</g>
<g>
<title>tcp_recvmsg (1 samples, 0.03%)</title><rect x="1020.9" y="611.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1023.9" y="622.0"></text>
</g>
<g>
<title>sk_wait_data (1 samples, 0.03%)</title><rect x="1020.9" y="595.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1023.9" y="606.0"></text>
</g>
<g>
<title>wait_woken (1 samples, 0.03%)</title><rect x="1020.9" y="579.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1023.9" y="590.0"></text>
</g>
<g>
<title>schedule_timeout (1 samples, 0.03%)</title><rect x="1020.9" y="563.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1023.9" y="574.0"></text>
</g>
<g>
<title>try_to_del_timer_sync (1 samples, 0.03%)</title><rect x="1020.9" y="547.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1023.9" y="558.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.writeFully (1 samples, 0.03%)</title><rect x="1021.3" y="755.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1024.3" y="766.0"></text>
</g>
<g>
<title>__send (1 samples, 0.03%)</title><rect x="1021.3" y="739.0" width="0.4" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="1024.3" y="750.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.03%)</title><rect x="1021.3" y="723.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1024.3" y="734.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.03%)</title><rect x="1021.3" y="707.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1024.3" y="718.0"></text>
</g>
<g>
<title>__x64_sys_sendto (1 samples, 0.03%)</title><rect x="1021.3" y="691.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1024.3" y="702.0"></text>
</g>
<g>
<title>__sys_sendto (1 samples, 0.03%)</title><rect x="1021.3" y="675.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1024.3" y="686.0"></text>
</g>
<g>
<title>sock_sendmsg (1 samples, 0.03%)</title><rect x="1021.3" y="659.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1024.3" y="670.0"></text>
</g>
<g>
<title>inet6_sendmsg (1 samples, 0.03%)</title><rect x="1021.3" y="643.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1024.3" y="654.0"></text>
</g>
<g>
<title>tcp_sendmsg (1 samples, 0.03%)</title><rect x="1021.3" y="627.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1024.3" y="638.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (1 samples, 0.03%)</title><rect x="1021.3" y="611.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1024.3" y="622.0"></text>
</g>
<g>
<title>tcp_push (1 samples, 0.03%)</title><rect x="1021.3" y="595.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1024.3" y="606.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (1 samples, 0.03%)</title><rect x="1021.3" y="579.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1024.3" y="590.0"></text>
</g>
<g>
<title>tcp_write_xmit (1 samples, 0.03%)</title><rect x="1021.3" y="563.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1024.3" y="574.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (1 samples, 0.03%)</title><rect x="1021.3" y="547.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1024.3" y="558.0"></text>
</g>
<g>
<title>ip_queue_xmit (1 samples, 0.03%)</title><rect x="1021.3" y="531.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1024.3" y="542.0"></text>
</g>
<g>
<title>__ip_queue_xmit (1 samples, 0.03%)</title><rect x="1021.3" y="515.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1024.3" y="526.0"></text>
</g>
<g>
<title>ip_local_out (1 samples, 0.03%)</title><rect x="1021.3" y="499.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1024.3" y="510.0"></text>
</g>
<g>
<title>ip_output (1 samples, 0.03%)</title><rect x="1021.3" y="483.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1024.3" y="494.0"></text>
</g>
<g>
<title>ip_finish_output (1 samples, 0.03%)</title><rect x="1021.3" y="467.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1024.3" y="478.0"></text>
</g>
<g>
<title>__ip_finish_output (1 samples, 0.03%)</title><rect x="1021.3" y="451.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1024.3" y="462.0"></text>
</g>
<g>
<title>ip_finish_output2 (1 samples, 0.03%)</title><rect x="1021.3" y="435.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1024.3" y="446.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (1 samples, 0.03%)</title><rect x="1021.3" y="419.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1024.3" y="430.0"></text>
</g>
<g>
<title>do_softirq.part.0 (1 samples, 0.03%)</title><rect x="1021.3" y="403.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1024.3" y="414.0"></text>
</g>
<g>
<title>do_softirq_own_stack (1 samples, 0.03%)</title><rect x="1021.3" y="387.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1024.3" y="398.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.03%)</title><rect x="1021.3" y="371.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1024.3" y="382.0"></text>
</g>
<g>
<title>net_rx_action (1 samples, 0.03%)</title><rect x="1021.3" y="355.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1024.3" y="366.0"></text>
</g>
<g>
<title>process_backlog (1 samples, 0.03%)</title><rect x="1021.3" y="339.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1024.3" y="350.0"></text>
</g>
<g>
<title>__netif_receive_skb (1 samples, 0.03%)</title><rect x="1021.3" y="323.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1024.3" y="334.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (1 samples, 0.03%)</title><rect x="1021.3" y="307.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1024.3" y="318.0"></text>
</g>
<g>
<title>ip_rcv (1 samples, 0.03%)</title><rect x="1021.3" y="291.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1024.3" y="302.0"></text>
</g>
<g>
<title>ip_rcv_finish (1 samples, 0.03%)</title><rect x="1021.3" y="275.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1024.3" y="286.0"></text>
</g>
<g>
<title>ip_local_deliver (1 samples, 0.03%)</title><rect x="1021.3" y="259.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1024.3" y="270.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (1 samples, 0.03%)</title><rect x="1021.3" y="243.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1024.3" y="254.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (1 samples, 0.03%)</title><rect x="1021.3" y="227.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1024.3" y="238.0"></text>
</g>
<g>
<title>tcp_v4_rcv (1 samples, 0.03%)</title><rect x="1021.3" y="211.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1024.3" y="222.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (1 samples, 0.03%)</title><rect x="1021.3" y="195.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1024.3" y="206.0"></text>
</g>
<g>
<title>tcp_rcv_established (1 samples, 0.03%)</title><rect x="1021.3" y="179.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1024.3" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivlev/ThreadController.toByteArray (3 samples, 0.10%)</title><rect x="1021.7" y="819.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1024.7" y="830.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (416 samples, 14.09%)</title><rect x="1022.9" y="899.0" width="166.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1025.9" y="910.0">one/nio/server/Select..</text>
</g>
<g>
<title>[unknown] (2 samples, 0.07%)</title><rect x="1023.7" y="883.0" width="0.8" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="1026.7" y="894.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.07%)</title><rect x="1023.7" y="867.0" width="0.8" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="1026.7" y="878.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (2 samples, 0.07%)</title><rect x="1023.7" y="851.0" width="0.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1026.7" y="862.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.03%)</title><rect x="1024.5" y="883.0" width="0.4" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="1027.5" y="894.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (3 samples, 0.10%)</title><rect x="1024.9" y="883.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1027.9" y="894.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (3 samples, 0.10%)</title><rect x="1026.1" y="883.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1029.1" y="894.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (3 samples, 0.10%)</title><rect x="1026.1" y="867.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1029.1" y="878.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.findNext (3 samples, 0.10%)</title><rect x="1026.1" y="851.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1029.1" y="862.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (138 samples, 4.67%)</title><rect x="1027.3" y="883.0" width="55.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1030.3" y="894.0">one/n..</text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (2 samples, 0.07%)</title><rect x="1030.1" y="867.0" width="0.8" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1033.1" y="878.0"></text>
</g>
<g>
<title>Klass::class_loader() const (1 samples, 0.03%)</title><rect x="1030.5" y="851.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1033.5" y="862.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (129 samples, 4.37%)</title><rect x="1030.9" y="867.0" width="51.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1033.9" y="878.0">one/n..</text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (3 samples, 0.10%)</title><rect x="1033.7" y="851.0" width="1.2" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="1036.7" y="862.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSelector_epollWait (3 samples, 0.10%)</title><rect x="1034.9" y="851.0" width="1.2" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="1037.9" y="862.0"></text>
</g>
<g>
<title>clock_gettime (20 samples, 0.68%)</title><rect x="1036.1" y="851.0" width="8.0" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="1039.1" y="862.0"></text>
</g>
<g>
<title>[vdso] (3 samples, 0.10%)</title><rect x="1042.1" y="835.0" width="1.2" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="1045.1" y="846.0"></text>
</g>
<g>
<title>clock_gettime (2 samples, 0.07%)</title><rect x="1043.3" y="835.0" width="0.8" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="1046.3" y="846.0"></text>
</g>
<g>
<title>[vdso] (2 samples, 0.07%)</title><rect x="1043.3" y="819.0" width="0.8" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="1046.3" y="830.0"></text>
</g>
<g>
<title>epoll_wait (96 samples, 3.25%)</title><rect x="1044.1" y="851.0" width="38.4" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="1047.1" y="862.0">epo..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (74 samples, 2.51%)</title><rect x="1052.9" y="835.0" width="29.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1055.9" y="846.0">en..</text>
</g>
<g>
<title>do_syscall_64 (74 samples, 2.51%)</title><rect x="1052.9" y="819.0" width="29.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1055.9" y="830.0">do..</text>
</g>
<g>
<title>__x64_sys_epoll_wait (68 samples, 2.30%)</title><rect x="1054.5" y="803.0" width="27.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1057.5" y="814.0">_..</text>
</g>
<g>
<title>do_epoll_wait (66 samples, 2.24%)</title><rect x="1054.5" y="787.0" width="26.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1057.5" y="798.0">d..</text>
</g>
<g>
<title>__fdget (3 samples, 0.10%)</title><rect x="1054.5" y="771.0" width="1.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1057.5" y="782.0"></text>
</g>
<g>
<title>__fget_light (3 samples, 0.10%)</title><rect x="1054.5" y="755.0" width="1.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1057.5" y="766.0"></text>
</g>
<g>
<title>__fget (3 samples, 0.10%)</title><rect x="1054.5" y="739.0" width="1.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1057.5" y="750.0"></text>
</g>
<g>
<title>ep_poll (59 samples, 2.00%)</title><rect x="1055.7" y="771.0" width="23.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1058.7" y="782.0">e..</text>
</g>
<g>
<title>ep_scan_ready_list.constprop.0 (24 samples, 0.81%)</title><rect x="1057.3" y="755.0" width="9.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1060.3" y="766.0"></text>
</g>
<g>
<title>ep_send_events_proc (18 samples, 0.61%)</title><rect x="1058.5" y="739.0" width="7.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1061.5" y="750.0"></text>
</g>
<g>
<title>ep_item_poll.isra.0 (12 samples, 0.41%)</title><rect x="1060.5" y="723.0" width="4.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1063.5" y="734.0"></text>
</g>
<g>
<title>sock_poll (12 samples, 0.41%)</title><rect x="1060.5" y="707.0" width="4.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1063.5" y="718.0"></text>
</g>
<g>
<title>tcp_poll (2 samples, 0.07%)</title><rect x="1063.7" y="691.0" width="0.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1066.7" y="702.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (2 samples, 0.07%)</title><rect x="1064.5" y="691.0" width="0.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1067.5" y="702.0"></text>
</g>
<g>
<title>sock_poll (1 samples, 0.03%)</title><rect x="1065.3" y="723.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1068.3" y="734.0"></text>
</g>
<g>
<title>mutex_lock (3 samples, 0.10%)</title><rect x="1065.7" y="739.0" width="1.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1068.7" y="750.0"></text>
</g>
<g>
<title>rcu_all_qs (1 samples, 0.03%)</title><rect x="1066.5" y="723.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1069.5" y="734.0"></text>
</g>
<g>
<title>ep_send_events_proc (2 samples, 0.07%)</title><rect x="1066.9" y="755.0" width="0.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1069.9" y="766.0"></text>
</g>
<g>
<title>mutex_lock (1 samples, 0.03%)</title><rect x="1067.7" y="755.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1070.7" y="766.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (28 samples, 0.95%)</title><rect x="1068.1" y="755.0" width="11.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1071.1" y="766.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.03%)</title><rect x="1068.1" y="739.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1071.1" y="750.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (27 samples, 0.91%)</title><rect x="1068.5" y="739.0" width="10.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1071.5" y="750.0"></text>
</g>
<g>
<title>schedule (25 samples, 0.85%)</title><rect x="1069.3" y="723.0" width="10.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1072.3" y="734.0"></text>
</g>
<g>
<title>__schedule (25 samples, 0.85%)</title><rect x="1069.3" y="707.0" width="10.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1072.3" y="718.0"></text>
</g>
<g>
<title>finish_task_switch (24 samples, 0.81%)</title><rect x="1069.7" y="691.0" width="9.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1072.7" y="702.0"></text>
</g>
<g>
<title>fput_many (3 samples, 0.10%)</title><rect x="1079.3" y="771.0" width="1.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1082.3" y="782.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (1 samples, 0.03%)</title><rect x="1080.5" y="771.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1083.5" y="782.0"></text>
</g>
<g>
<title>fput (2 samples, 0.07%)</title><rect x="1080.9" y="787.0" width="0.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1083.9" y="798.0"></text>
</g>
<g>
<title>do_epoll_wait (2 samples, 0.07%)</title><rect x="1081.7" y="803.0" width="0.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1084.7" y="814.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (266 samples, 9.01%)</title><rect x="1082.5" y="883.0" width="106.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1085.5" y="894.0">one/nio/net/S..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (266 samples, 9.01%)</title><rect x="1082.5" y="867.0" width="106.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1085.5" y="878.0">one/nio/http/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (148 samples, 5.01%)</title><rect x="1082.5" y="851.0" width="59.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1085.5" y="862.0">one/ni..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (125 samples, 4.23%)</title><rect x="1083.7" y="835.0" width="49.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1086.7" y="846.0">one/n..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (124 samples, 4.20%)</title><rect x="1084.1" y="819.0" width="49.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1087.1" y="830.0">one/n..</text>
</g>
<g>
<title>RequestHandler0_get.handleRequest (116 samples, 3.93%)</title><rect x="1084.5" y="803.0" width="46.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1087.5" y="814.0">Requ..</text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (9 samples, 0.30%)</title><rect x="1084.5" y="787.0" width="3.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1087.5" y="798.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (9 samples, 0.30%)</title><rect x="1084.5" y="771.0" width="3.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1087.5" y="782.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.03%)</title><rect x="1084.9" y="755.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1087.9" y="766.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (1 samples, 0.03%)</title><rect x="1084.9" y="739.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1087.9" y="750.0"></text>
</g>
<g>
<title>java/lang/String.substring (3 samples, 0.10%)</title><rect x="1085.3" y="755.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1088.3" y="766.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (3 samples, 0.10%)</title><rect x="1085.3" y="739.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1088.3" y="750.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (3 samples, 0.10%)</title><rect x="1085.3" y="723.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1088.3" y="734.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.03%)</title><rect x="1086.5" y="755.0" width="0.4" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="1089.5" y="766.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (3 samples, 0.10%)</title><rect x="1086.9" y="755.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1089.9" y="766.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.03%)</title><rect x="1087.7" y="739.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1090.7" y="750.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.03%)</title><rect x="1087.7" y="723.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1090.7" y="734.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (1 samples, 0.03%)</title><rect x="1087.7" y="707.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1090.7" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivlev/ThreadController.get (107 samples, 3.62%)</title><rect x="1088.1" y="787.0" width="42.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1091.1" y="798.0">ru/m..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (102 samples, 3.46%)</title><rect x="1089.3" y="771.0" width="40.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1092.3" y="782.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (102 samples, 3.46%)</title><rect x="1089.3" y="755.0" width="40.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1092.3" y="766.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.enqueue (2 samples, 0.07%)</title><rect x="1092.1" y="739.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1095.1" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (2 samples, 0.07%)</title><rect x="1092.1" y="723.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1095.1" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (2 samples, 0.07%)</title><rect x="1092.1" y="707.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1095.1" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.transferForSignal (2 samples, 0.07%)</title><rect x="1092.1" y="691.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1095.1" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (1 samples, 0.03%)</title><rect x="1092.9" y="739.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1095.9" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (1 samples, 0.03%)</title><rect x="1092.9" y="723.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1095.9" y="734.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (1 samples, 0.03%)</title><rect x="1092.9" y="707.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1095.9" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (92 samples, 3.12%)</title><rect x="1093.3" y="739.0" width="36.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1096.3" y="750.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (92 samples, 3.12%)</title><rect x="1093.3" y="723.0" width="36.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1096.3" y="734.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (92 samples, 3.12%)</title><rect x="1093.3" y="707.0" width="36.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1096.3" y="718.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (92 samples, 3.12%)</title><rect x="1093.3" y="691.0" width="36.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1096.3" y="702.0">jav..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (92 samples, 3.12%)</title><rect x="1093.3" y="675.0" width="36.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1096.3" y="686.0">jdk..</text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (1 samples, 0.03%)</title><rect x="1093.7" y="659.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1096.7" y="670.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (3 samples, 0.10%)</title><rect x="1094.1" y="659.0" width="1.2" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1097.1" y="670.0"></text>
</g>
<g>
<title>ThreadsListHandle::~ThreadsListHandle() (2 samples, 0.07%)</title><rect x="1095.3" y="659.0" width="0.8" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1098.3" y="670.0"></text>
</g>
<g>
<title>Unsafe_Unpark (7 samples, 0.24%)</title><rect x="1096.1" y="659.0" width="2.8" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="1099.1" y="670.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.235] (1 samples, 0.03%)</title><rect x="1096.5" y="643.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1099.5" y="654.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (1 samples, 0.03%)</title><rect x="1096.9" y="643.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1099.9" y="654.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (1 samples, 0.03%)</title><rect x="1097.3" y="643.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1100.3" y="654.0"></text>
</g>
<g>
<title>ThreadsListHandle::~ThreadsListHandle() (1 samples, 0.03%)</title><rect x="1097.7" y="643.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1100.7" y="654.0"></text>
</g>
<g>
<title>java_lang_Thread::thread(oopDesc*) (1 samples, 0.03%)</title><rect x="1098.1" y="643.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1101.1" y="654.0"></text>
</g>
<g>
<title>pthread_mutex_lock (1 samples, 0.03%)</title><rect x="1098.5" y="643.0" width="0.4" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="1101.5" y="654.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.07%)</title><rect x="1098.9" y="659.0" width="0.8" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="1101.9" y="670.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/ld-2.31.so (2 samples, 0.07%)</title><rect x="1098.9" y="643.0" width="0.8" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="1101.9" y="654.0"></text>
</g>
<g>
<title>__pthread_cond_signal (72 samples, 2.44%)</title><rect x="1099.7" y="659.0" width="28.7" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="1102.7" y="670.0">__..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (59 samples, 2.00%)</title><rect x="1104.9" y="643.0" width="23.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1107.9" y="654.0">e..</text>
</g>
<g>
<title>do_syscall_64 (59 samples, 2.00%)</title><rect x="1104.9" y="627.0" width="23.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1107.9" y="638.0">d..</text>
</g>
<g>
<title>__x64_sys_futex (59 samples, 2.00%)</title><rect x="1104.9" y="611.0" width="23.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1107.9" y="622.0">_..</text>
</g>
<g>
<title>do_futex (58 samples, 1.96%)</title><rect x="1105.3" y="595.0" width="23.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1108.3" y="606.0">d..</text>
</g>
<g>
<title>futex_wake (57 samples, 1.93%)</title><rect x="1105.3" y="579.0" width="22.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1108.3" y="590.0">f..</text>
</g>
<g>
<title>get_futex_key_refs.isra.0 (1 samples, 0.03%)</title><rect x="1105.7" y="563.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1108.7" y="574.0"></text>
</g>
<g>
<title>mark_wake_futex (4 samples, 0.14%)</title><rect x="1106.1" y="563.0" width="1.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1109.1" y="574.0"></text>
</g>
<g>
<title>__unqueue_futex (1 samples, 0.03%)</title><rect x="1107.3" y="547.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1110.3" y="558.0"></text>
</g>
<g>
<title>wake_q_add_safe (1 samples, 0.03%)</title><rect x="1107.7" y="563.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1110.7" y="574.0"></text>
</g>
<g>
<title>wake_up_q (50 samples, 1.69%)</title><rect x="1108.1" y="563.0" width="19.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1111.1" y="574.0"></text>
</g>
<g>
<title>try_to_wake_up (50 samples, 1.69%)</title><rect x="1108.1" y="547.0" width="19.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1111.1" y="558.0"></text>
</g>
<g>
<title>__lock_text_start (50 samples, 1.69%)</title><rect x="1108.1" y="531.0" width="19.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1111.1" y="542.0"></text>
</g>
<g>
<title>hash_futex (1 samples, 0.03%)</title><rect x="1128.0" y="579.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1131.0" y="590.0"></text>
</g>
<g>
<title>__tls_get_addr (4 samples, 0.14%)</title><rect x="1128.4" y="659.0" width="1.6" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="1131.4" y="670.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (2 samples, 0.07%)</title><rect x="1130.0" y="771.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1133.0" y="782.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (4 samples, 0.14%)</title><rect x="1130.8" y="803.0" width="1.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1133.8" y="814.0"></text>
</g>
<g>
<title>java/util/HashMap.get (4 samples, 0.14%)</title><rect x="1130.8" y="787.0" width="1.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1133.8" y="798.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (1 samples, 0.03%)</title><rect x="1130.8" y="771.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1133.8" y="782.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (3 samples, 0.10%)</title><rect x="1131.2" y="771.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1134.2" y="782.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (3 samples, 0.10%)</title><rect x="1131.2" y="755.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1134.2" y="766.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (3 samples, 0.10%)</title><rect x="1131.2" y="739.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1134.2" y="750.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (1 samples, 0.03%)</title><rect x="1132.0" y="723.0" width="0.4" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="1135.0" y="734.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (3 samples, 0.10%)</title><rect x="1132.4" y="803.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1135.4" y="814.0"></text>
</g>
<g>
<title>java/lang/String.substring (3 samples, 0.10%)</title><rect x="1132.4" y="787.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1135.4" y="798.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (3 samples, 0.10%)</title><rect x="1132.4" y="771.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1135.4" y="782.0"></text>
</g>
<g>
<title>itable stub (3 samples, 0.10%)</title><rect x="1132.4" y="755.0" width="1.2" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="1135.4" y="766.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (10 samples, 0.34%)</title><rect x="1133.6" y="835.0" width="4.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1136.6" y="846.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (2 samples, 0.07%)</title><rect x="1134.0" y="819.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1137.0" y="830.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.07%)</title><rect x="1134.0" y="803.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1137.0" y="814.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.07%)</title><rect x="1134.0" y="787.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1137.0" y="798.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (2 samples, 0.07%)</title><rect x="1134.0" y="771.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1137.0" y="782.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2 samples, 0.07%)</title><rect x="1134.0" y="755.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1137.0" y="766.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (4 samples, 0.14%)</title><rect x="1134.8" y="819.0" width="1.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1137.8" y="830.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (4 samples, 0.14%)</title><rect x="1134.8" y="803.0" width="1.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1137.8" y="814.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.startsWith (3 samples, 0.10%)</title><rect x="1136.4" y="819.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1139.4" y="830.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (5 samples, 0.17%)</title><rect x="1137.6" y="835.0" width="2.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1140.6" y="846.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (5 samples, 0.17%)</title><rect x="1139.6" y="835.0" width="2.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1142.6" y="846.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (1 samples, 0.03%)</title><rect x="1140.0" y="819.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1143.0" y="830.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (3 samples, 0.10%)</title><rect x="1140.4" y="819.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1143.4" y="830.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.03%)</title><rect x="1141.2" y="803.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1144.2" y="814.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.03%)</title><rect x="1141.2" y="787.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1144.2" y="798.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (1 samples, 0.03%)</title><rect x="1141.2" y="771.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1144.2" y="782.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (1 samples, 0.03%)</title><rect x="1141.2" y="755.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1144.2" y="766.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (1 samples, 0.03%)</title><rect x="1141.2" y="739.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1144.2" y="750.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (5 samples, 0.17%)</title><rect x="1141.6" y="851.0" width="2.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1144.6" y="862.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (113 samples, 3.83%)</title><rect x="1143.6" y="851.0" width="45.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1146.6" y="862.0">one/..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (110 samples, 3.73%)</title><rect x="1144.8" y="835.0" width="44.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1147.8" y="846.0">one/..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (19 samples, 0.64%)</title><rect x="1148.0" y="819.0" width="7.6" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="1151.0" y="830.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (4 samples, 0.14%)</title><rect x="1148.0" y="803.0" width="1.6" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="1151.0" y="814.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (5 samples, 0.17%)</title><rect x="1149.6" y="803.0" width="2.0" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1152.6" y="814.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (2 samples, 0.07%)</title><rect x="1151.6" y="803.0" width="0.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1154.6" y="814.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (1 samples, 0.03%)</title><rect x="1152.4" y="803.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1155.4" y="814.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (1 samples, 0.03%)</title><rect x="1152.8" y="803.0" width="0.4" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="1155.8" y="814.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (4 samples, 0.14%)</title><rect x="1153.2" y="803.0" width="1.6" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="1156.2" y="814.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (1 samples, 0.03%)</title><rect x="1153.2" y="787.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1156.2" y="798.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (2 samples, 0.07%)</title><rect x="1153.6" y="787.0" width="0.8" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1156.6" y="798.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (1 samples, 0.03%)</title><rect x="1154.4" y="787.0" width="0.4" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="1157.4" y="798.0"></text>
</g>
<g>
<title>ResourceMark::reset_to_mark() (1 samples, 0.03%)</title><rect x="1154.4" y="771.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1157.4" y="782.0"></text>
</g>
<g>
<title>void AccessInternal::arraycopy_conjoint&lt;signed char&gt;(signed char*, signed char*, unsigned long) (2 samples, 0.07%)</title><rect x="1154.8" y="803.0" width="0.8" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1157.8" y="814.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (1 samples, 0.03%)</title><rect x="1155.6" y="819.0" width="0.4" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="1158.6" y="830.0"></text>
</g>
<g>
<title>recv (82 samples, 2.78%)</title><rect x="1156.0" y="819.0" width="32.8" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="1159.0" y="830.0">recv</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (66 samples, 2.24%)</title><rect x="1162.4" y="803.0" width="26.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1165.4" y="814.0">e..</text>
</g>
<g>
<title>do_syscall_64 (66 samples, 2.24%)</title><rect x="1162.4" y="787.0" width="26.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1165.4" y="798.0">d..</text>
</g>
<g>
<title>__sys_recvfrom (3 samples, 0.10%)</title><rect x="1166.0" y="771.0" width="1.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1169.0" y="782.0"></text>
</g>
<g>
<title>__x64_sys_recvfrom (54 samples, 1.83%)</title><rect x="1167.2" y="771.0" width="21.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1170.2" y="782.0">_..</text>
</g>
<g>
<title>__sys_recvfrom (52 samples, 1.76%)</title><rect x="1167.2" y="755.0" width="20.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1170.2" y="766.0"></text>
</g>
<g>
<title>__fdget (1 samples, 0.03%)</title><rect x="1168.4" y="739.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1171.4" y="750.0"></text>
</g>
<g>
<title>fput_many (1 samples, 0.03%)</title><rect x="1168.8" y="739.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1171.8" y="750.0"></text>
</g>
<g>
<title>security_socket_recvmsg (1 samples, 0.03%)</title><rect x="1169.2" y="739.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1172.2" y="750.0"></text>
</g>
<g>
<title>sock_recvmsg (42 samples, 1.42%)</title><rect x="1169.6" y="739.0" width="16.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1172.6" y="750.0"></text>
</g>
<g>
<title>apparmor_socket_recvmsg (1 samples, 0.03%)</title><rect x="1169.6" y="723.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1172.6" y="734.0"></text>
</g>
<g>
<title>inet6_recvmsg (35 samples, 1.19%)</title><rect x="1170.0" y="723.0" width="14.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1173.0" y="734.0"></text>
</g>
<g>
<title>__kfree_skb (1 samples, 0.03%)</title><rect x="1170.4" y="707.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1173.4" y="718.0"></text>
</g>
<g>
<title>tcp_recvmsg (33 samples, 1.12%)</title><rect x="1170.8" y="707.0" width="13.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1173.8" y="718.0"></text>
</g>
<g>
<title>__kfree_skb (6 samples, 0.20%)</title><rect x="1174.0" y="691.0" width="2.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1177.0" y="702.0"></text>
</g>
<g>
<title>kfree_skbmem (2 samples, 0.07%)</title><rect x="1174.0" y="675.0" width="0.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1177.0" y="686.0"></text>
</g>
<g>
<title>skb_release_all (3 samples, 0.10%)</title><rect x="1174.8" y="675.0" width="1.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1177.8" y="686.0"></text>
</g>
<g>
<title>skb_release_head_state (1 samples, 0.03%)</title><rect x="1174.8" y="659.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1177.8" y="670.0"></text>
</g>
<g>
<title>dst_release (1 samples, 0.03%)</title><rect x="1174.8" y="643.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1177.8" y="654.0"></text>
</g>
<g>
<title>sock_rfree (2 samples, 0.07%)</title><rect x="1175.2" y="659.0" width="0.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1178.2" y="670.0"></text>
</g>
<g>
<title>skb_release_head_state (1 samples, 0.03%)</title><rect x="1176.0" y="675.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1179.0" y="686.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (2 samples, 0.07%)</title><rect x="1176.4" y="691.0" width="0.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1179.4" y="702.0"></text>
</g>
<g>
<title>_raw_spin_unlock_bh (1 samples, 0.03%)</title><rect x="1177.2" y="691.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1180.2" y="702.0"></text>
</g>
<g>
<title>kfree_skbmem (1 samples, 0.03%)</title><rect x="1177.6" y="691.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1180.6" y="702.0"></text>
</g>
<g>
<title>lock_sock_nested (1 samples, 0.03%)</title><rect x="1178.0" y="691.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1181.0" y="702.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (1 samples, 0.03%)</title><rect x="1178.0" y="675.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1181.0" y="686.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (11 samples, 0.37%)</title><rect x="1178.4" y="691.0" width="4.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1181.4" y="702.0"></text>
</g>
<g>
<title>__skb_datagram_iter (11 samples, 0.37%)</title><rect x="1178.4" y="675.0" width="4.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1181.4" y="686.0"></text>
</g>
<g>
<title>simple_copy_to_iter (9 samples, 0.30%)</title><rect x="1179.2" y="659.0" width="3.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1182.2" y="670.0"></text>
</g>
<g>
<title>__check_object_size (2 samples, 0.07%)</title><rect x="1179.2" y="643.0" width="0.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1182.2" y="654.0"></text>
</g>
<g>
<title>__virt_addr_valid (2 samples, 0.07%)</title><rect x="1179.2" y="627.0" width="0.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1182.2" y="638.0"></text>
</g>
<g>
<title>_copy_to_iter (6 samples, 0.20%)</title><rect x="1180.0" y="643.0" width="2.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1183.0" y="654.0"></text>
</g>
<g>
<title>copy_user_generic_unrolled (6 samples, 0.20%)</title><rect x="1180.0" y="627.0" width="2.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1183.0" y="638.0"></text>
</g>
<g>
<title>check_stack_object (1 samples, 0.03%)</title><rect x="1182.4" y="643.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1185.4" y="654.0"></text>
</g>
<g>
<title>tcp_cleanup_rbuf (3 samples, 0.10%)</title><rect x="1182.8" y="691.0" width="1.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1185.8" y="702.0"></text>
</g>
<g>
<title>security_socket_recvmsg (6 samples, 0.20%)</title><rect x="1184.0" y="723.0" width="2.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1187.0" y="734.0"></text>
</g>
<g>
<title>aa_sk_perm (2 samples, 0.07%)</title><rect x="1184.4" y="707.0" width="0.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1187.4" y="718.0"></text>
</g>
<g>
<title>apparmor_socket_recvmsg (3 samples, 0.10%)</title><rect x="1185.2" y="707.0" width="1.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1188.2" y="718.0"></text>
</g>
<g>
<title>aa_sk_perm (3 samples, 0.10%)</title><rect x="1185.2" y="691.0" width="1.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1188.2" y="702.0"></text>
</g>
<g>
<title>sockfd_lookup_light (4 samples, 0.14%)</title><rect x="1186.4" y="739.0" width="1.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1189.4" y="750.0"></text>
</g>
<g>
<title>__fdget (4 samples, 0.14%)</title><rect x="1186.4" y="723.0" width="1.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1189.4" y="734.0"></text>
</g>
<g>
<title>__fget_light (4 samples, 0.14%)</title><rect x="1186.4" y="707.0" width="1.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1189.4" y="718.0"></text>
</g>
<g>
<title>__fget (4 samples, 0.14%)</title><rect x="1186.4" y="691.0" width="1.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1189.4" y="702.0"></text>
</g>
<g>
<title>import_single_range (2 samples, 0.07%)</title><rect x="1188.0" y="755.0" width="0.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1191.0" y="766.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.03%)</title><rect x="1188.8" y="883.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1191.8" y="894.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.03%)</title><rect x="1188.8" y="867.0" width="0.4" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="1191.8" y="878.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.03%)</title><rect x="1188.8" y="851.0" width="0.4" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="1191.8" y="862.0"></text>
</g>
<g>
<title>start_thread (2 samples, 0.07%)</title><rect x="1189.2" y="899.0" width="0.8" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1192.2" y="910.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (2 samples, 0.07%)</title><rect x="1189.2" y="883.0" width="0.8" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="1192.2" y="894.0"></text>
</g>
<g>
<title>Thread::call_run() (2 samples, 0.07%)</title><rect x="1189.2" y="867.0" width="0.8" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1192.2" y="878.0"></text>
</g>
<g>
<title>GangWorker::loop() (1 samples, 0.03%)</title><rect x="1189.2" y="851.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1192.2" y="862.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (1 samples, 0.03%)</title><rect x="1189.2" y="835.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1192.2" y="846.0"></text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (1 samples, 0.03%)</title><rect x="1189.2" y="819.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1192.2" y="830.0"></text>
</g>
<g>
<title>SpinPause (1 samples, 0.03%)</title><rect x="1189.2" y="803.0" width="0.4" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="1192.2" y="814.0"></text>
</g>
<g>
<title>WatcherThread::run() (1 samples, 0.03%)</title><rect x="1189.6" y="851.0" width="0.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1192.6" y="862.0"></text>
</g>
<g>
<title>WatcherThread::sleep() const (1 samples, 0.03%)</title><rect x="1189.6" y="835.0" width="0.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1192.6" y="846.0"></text>
</g>
<g>
<title>Monitor::wait(bool, long, bool) (1 samples, 0.03%)</title><rect x="1189.6" y="819.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1192.6" y="830.0"></text>
</g>
<g>
<title>Monitor::IWait(Thread*, long) (1 samples, 0.03%)</title><rect x="1189.6" y="803.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1192.6" y="814.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock (1 samples, 0.03%)</title><rect x="1189.6" y="787.0" width="0.4" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="1192.6" y="798.0"></text>
</g>
</g>
</svg>
