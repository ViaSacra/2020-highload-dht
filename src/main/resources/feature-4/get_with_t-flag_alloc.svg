<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="518" onload="init(evt)" viewBox="0 0 1200 518" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="501"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="501"> </text>
<g id="frames">
<g>
<title>all (10,572 samples, 100.00%)</title><rect x="10.0" y="467.0" width="1180.0" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="13.0" y="478.0">all</text>
</g>
<g>
<title>[NIO Selector #0 tid=59607] (624 samples, 5.90%)</title><rect x="10.0" y="451.0" width="69.6" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="13.0" y="462.0">[NIO Se..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (624 samples, 5.90%)</title><rect x="10.0" y="435.0" width="69.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="13.0" y="446.0">one/nio..</text>
</g>
<g>
<title>one/nio/net/Session.process (624 samples, 5.90%)</title><rect x="10.0" y="419.0" width="69.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="13.0" y="430.0">one/nio..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (624 samples, 5.90%)</title><rect x="10.0" y="403.0" width="69.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="13.0" y="414.0">one/nio..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (624 samples, 5.90%)</title><rect x="10.0" y="387.0" width="69.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="13.0" y="398.0">one/nio..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (181 samples, 1.71%)</title><rect x="10.0" y="371.0" width="20.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="13.0" y="382.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (181 samples, 1.71%)</title><rect x="10.0" y="355.0" width="20.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="13.0" y="366.0"></text>
</g>
<g>
<title>RequestHandler0_get.handleRequest (97 samples, 0.92%)</title><rect x="10.0" y="339.0" width="10.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="13.0" y="350.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (44 samples, 0.42%)</title><rect x="10.0" y="323.0" width="4.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="13.0" y="334.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (44 samples, 0.42%)</title><rect x="10.0" y="307.0" width="4.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="13.0" y="318.0"></text>
</g>
<g>
<title>java/lang/String.substring (44 samples, 0.42%)</title><rect x="10.0" y="291.0" width="4.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="13.0" y="302.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (44 samples, 0.42%)</title><rect x="10.0" y="275.0" width="4.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="13.0" y="286.0"></text>
</g>
<g>
<title>java.lang.String (14 samples, 0.13%)</title><rect x="10.0" y="259.0" width="1.6" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="13.0" y="270.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (30 samples, 0.28%)</title><rect x="11.6" y="259.0" width="3.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="14.6" y="270.0"></text>
</g>
<g>
<title>byte[] (30 samples, 0.28%)</title><rect x="11.6" y="243.0" width="3.3" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="14.6" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivlev/ThreadController.get (53 samples, 0.50%)</title><rect x="14.9" y="323.0" width="5.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="17.9" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (53 samples, 0.50%)</title><rect x="14.9" y="307.0" width="5.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="17.9" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (53 samples, 0.50%)</title><rect x="14.9" y="291.0" width="5.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="17.9" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivlev/ThreadController$$Lambda$75/769197572.get$Lambda (53 samples, 0.50%)</title><rect x="14.9" y="275.0" width="5.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="17.9" y="286.0"></text>
</g>
<g>
<title>ru.mail.polis.service.ivlev.ThreadController$$Lambda$75 (53 samples, 0.50%)</title><rect x="14.9" y="259.0" width="5.9" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="17.9" y="270.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (84 samples, 0.79%)</title><rect x="20.8" y="339.0" width="9.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="23.8" y="350.0"></text>
</g>
<g>
<title>java/lang/String.substring (84 samples, 0.79%)</title><rect x="20.8" y="323.0" width="9.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="23.8" y="334.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (84 samples, 0.79%)</title><rect x="20.8" y="307.0" width="9.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="23.8" y="318.0"></text>
</g>
<g>
<title>java.lang.String (17 samples, 0.16%)</title><rect x="20.8" y="291.0" width="1.9" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="23.8" y="302.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (67 samples, 0.63%)</title><rect x="22.7" y="291.0" width="7.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="25.7" y="302.0"></text>
</g>
<g>
<title>byte[] (67 samples, 0.63%)</title><rect x="22.7" y="275.0" width="7.5" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="25.7" y="286.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (291 samples, 2.75%)</title><rect x="30.2" y="371.0" width="32.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="33.2" y="382.0">on..</text>
</g>
<g>
<title>one.nio.http.Request (77 samples, 0.73%)</title><rect x="30.2" y="355.0" width="8.6" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="33.2" y="366.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (69 samples, 0.65%)</title><rect x="38.8" y="355.0" width="7.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="41.8" y="366.0"></text>
</g>
<g>
<title>java.lang.String[] (69 samples, 0.65%)</title><rect x="38.8" y="339.0" width="7.7" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="41.8" y="350.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (145 samples, 1.37%)</title><rect x="46.5" y="355.0" width="16.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="49.5" y="366.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (145 samples, 1.37%)</title><rect x="46.5" y="339.0" width="16.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="49.5" y="350.0"></text>
</g>
<g>
<title>char[] (73 samples, 0.69%)</title><rect x="46.5" y="323.0" width="8.1" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="49.5" y="334.0"></text>
</g>
<g>
<title>java.lang.String (41 samples, 0.39%)</title><rect x="54.6" y="323.0" width="4.6" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="57.6" y="334.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (31 samples, 0.29%)</title><rect x="59.2" y="323.0" width="3.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="62.2" y="334.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (31 samples, 0.29%)</title><rect x="59.2" y="307.0" width="3.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="62.2" y="318.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (31 samples, 0.29%)</title><rect x="59.2" y="291.0" width="3.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="62.2" y="302.0"></text>
</g>
<g>
<title>byte[] (31 samples, 0.29%)</title><rect x="59.2" y="275.0" width="3.5" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="62.2" y="286.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (152 samples, 1.44%)</title><rect x="62.7" y="371.0" width="16.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="65.7" y="382.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (152 samples, 1.44%)</title><rect x="62.7" y="355.0" width="16.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="65.7" y="366.0"></text>
</g>
<g>
<title>char[] (62 samples, 0.59%)</title><rect x="62.7" y="339.0" width="6.9" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="65.7" y="350.0"></text>
</g>
<g>
<title>java.lang.String (38 samples, 0.36%)</title><rect x="69.6" y="339.0" width="4.2" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="72.6" y="350.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (52 samples, 0.49%)</title><rect x="73.8" y="339.0" width="5.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="76.8" y="350.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (52 samples, 0.49%)</title><rect x="73.8" y="323.0" width="5.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="76.8" y="334.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (52 samples, 0.49%)</title><rect x="73.8" y="307.0" width="5.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="76.8" y="318.0"></text>
</g>
<g>
<title>byte[] (52 samples, 0.49%)</title><rect x="73.8" y="291.0" width="5.8" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="76.8" y="302.0"></text>
</g>
<g>
<title>[NIO Selector #1 tid=59608] (629 samples, 5.95%)</title><rect x="79.6" y="451.0" width="70.3" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="82.6" y="462.0">[NIO Sel..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (629 samples, 5.95%)</title><rect x="79.6" y="435.0" width="70.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="82.6" y="446.0">one/nio/..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (42 samples, 0.40%)</title><rect x="79.6" y="419.0" width="4.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="82.6" y="430.0"></text>
</g>
<g>
<title>one.nio.net.NativeSelector$2 (42 samples, 0.40%)</title><rect x="79.6" y="403.0" width="4.7" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="82.6" y="414.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (587 samples, 5.55%)</title><rect x="84.3" y="419.0" width="65.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="87.3" y="430.0">one/nio..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (587 samples, 5.55%)</title><rect x="84.3" y="403.0" width="65.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="87.3" y="414.0">one/nio..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (587 samples, 5.55%)</title><rect x="84.3" y="387.0" width="65.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="87.3" y="398.0">one/nio..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (176 samples, 1.66%)</title><rect x="84.3" y="371.0" width="19.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="87.3" y="382.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (176 samples, 1.66%)</title><rect x="84.3" y="355.0" width="19.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="87.3" y="366.0"></text>
</g>
<g>
<title>RequestHandler0_get.handleRequest (108 samples, 1.02%)</title><rect x="84.3" y="339.0" width="12.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="87.3" y="350.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (52 samples, 0.49%)</title><rect x="84.3" y="323.0" width="5.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="87.3" y="334.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (52 samples, 0.49%)</title><rect x="84.3" y="307.0" width="5.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="87.3" y="318.0"></text>
</g>
<g>
<title>java/lang/String.substring (52 samples, 0.49%)</title><rect x="84.3" y="291.0" width="5.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="87.3" y="302.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (52 samples, 0.49%)</title><rect x="84.3" y="275.0" width="5.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="87.3" y="286.0"></text>
</g>
<g>
<title>java.lang.String (27 samples, 0.26%)</title><rect x="84.3" y="259.0" width="3.0" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="87.3" y="270.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (25 samples, 0.24%)</title><rect x="87.3" y="259.0" width="2.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="90.3" y="270.0"></text>
</g>
<g>
<title>byte[] (25 samples, 0.24%)</title><rect x="87.3" y="243.0" width="2.8" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="90.3" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivlev/ThreadController.get (56 samples, 0.53%)</title><rect x="90.1" y="323.0" width="6.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="93.1" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (56 samples, 0.53%)</title><rect x="90.1" y="307.0" width="6.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="93.1" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (56 samples, 0.53%)</title><rect x="90.1" y="291.0" width="6.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="93.1" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivlev/ThreadController$$Lambda$75/769197572.get$Lambda (56 samples, 0.53%)</title><rect x="90.1" y="275.0" width="6.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="93.1" y="286.0"></text>
</g>
<g>
<title>ru.mail.polis.service.ivlev.ThreadController$$Lambda$75 (56 samples, 0.53%)</title><rect x="90.1" y="259.0" width="6.3" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="93.1" y="270.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (68 samples, 0.64%)</title><rect x="96.4" y="339.0" width="7.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="99.4" y="350.0"></text>
</g>
<g>
<title>java/lang/String.substring (68 samples, 0.64%)</title><rect x="96.4" y="323.0" width="7.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="99.4" y="334.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (68 samples, 0.64%)</title><rect x="96.4" y="307.0" width="7.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="99.4" y="318.0"></text>
</g>
<g>
<title>java.lang.String (24 samples, 0.23%)</title><rect x="96.4" y="291.0" width="2.7" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="99.4" y="302.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (44 samples, 0.42%)</title><rect x="99.1" y="291.0" width="4.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="102.1" y="302.0"></text>
</g>
<g>
<title>byte[] (44 samples, 0.42%)</title><rect x="99.1" y="275.0" width="4.9" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="102.1" y="286.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (286 samples, 2.71%)</title><rect x="104.0" y="371.0" width="31.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="107.0" y="382.0">on..</text>
</g>
<g>
<title>one.nio.http.Request (32 samples, 0.30%)</title><rect x="104.0" y="355.0" width="3.6" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="107.0" y="366.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (98 samples, 0.93%)</title><rect x="107.6" y="355.0" width="10.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="110.6" y="366.0"></text>
</g>
<g>
<title>java.lang.String[] (98 samples, 0.93%)</title><rect x="107.6" y="339.0" width="10.9" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="110.6" y="350.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (156 samples, 1.48%)</title><rect x="118.5" y="355.0" width="17.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="121.5" y="366.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (156 samples, 1.48%)</title><rect x="118.5" y="339.0" width="17.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="121.5" y="350.0"></text>
</g>
<g>
<title>char[] (68 samples, 0.64%)</title><rect x="118.5" y="323.0" width="7.6" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="121.5" y="334.0"></text>
</g>
<g>
<title>java.lang.String (43 samples, 0.41%)</title><rect x="126.1" y="323.0" width="4.8" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="129.1" y="334.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (45 samples, 0.43%)</title><rect x="130.9" y="323.0" width="5.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="133.9" y="334.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (45 samples, 0.43%)</title><rect x="130.9" y="307.0" width="5.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="133.9" y="318.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (45 samples, 0.43%)</title><rect x="130.9" y="291.0" width="5.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="133.9" y="302.0"></text>
</g>
<g>
<title>byte[] (45 samples, 0.43%)</title><rect x="130.9" y="275.0" width="5.0" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="133.9" y="286.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (125 samples, 1.18%)</title><rect x="135.9" y="371.0" width="14.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="138.9" y="382.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (125 samples, 1.18%)</title><rect x="135.9" y="355.0" width="14.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="138.9" y="366.0"></text>
</g>
<g>
<title>char[] (40 samples, 0.38%)</title><rect x="135.9" y="339.0" width="4.5" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="138.9" y="350.0"></text>
</g>
<g>
<title>java.lang.String (29 samples, 0.27%)</title><rect x="140.4" y="339.0" width="3.2" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="143.4" y="350.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (56 samples, 0.53%)</title><rect x="143.6" y="339.0" width="6.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="146.6" y="350.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (56 samples, 0.53%)</title><rect x="143.6" y="323.0" width="6.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="146.6" y="334.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (56 samples, 0.53%)</title><rect x="143.6" y="307.0" width="6.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="146.6" y="318.0"></text>
</g>
<g>
<title>byte[] (56 samples, 0.53%)</title><rect x="143.6" y="291.0" width="6.3" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="146.6" y="302.0"></text>
</g>
<g>
<title>[NIO Selector #2 tid=59609] (637 samples, 6.03%)</title><rect x="149.9" y="451.0" width="71.1" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="152.9" y="462.0">[NIO Sel..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (637 samples, 6.03%)</title><rect x="149.9" y="435.0" width="71.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="152.9" y="446.0">one/nio/..</text>
</g>
<g>
<title>one/nio/net/Session.process (637 samples, 6.03%)</title><rect x="149.9" y="419.0" width="71.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="152.9" y="430.0">one/nio/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (637 samples, 6.03%)</title><rect x="149.9" y="403.0" width="71.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="152.9" y="414.0">one/nio/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (637 samples, 6.03%)</title><rect x="149.9" y="387.0" width="71.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="152.9" y="398.0">one/nio/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (200 samples, 1.89%)</title><rect x="149.9" y="371.0" width="22.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="152.9" y="382.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (200 samples, 1.89%)</title><rect x="149.9" y="355.0" width="22.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="152.9" y="366.0">o..</text>
</g>
<g>
<title>RequestHandler0_get.handleRequest (112 samples, 1.06%)</title><rect x="149.9" y="339.0" width="12.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="152.9" y="350.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (54 samples, 0.51%)</title><rect x="149.9" y="323.0" width="6.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="152.9" y="334.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (54 samples, 0.51%)</title><rect x="149.9" y="307.0" width="6.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="152.9" y="318.0"></text>
</g>
<g>
<title>java/lang/String.substring (54 samples, 0.51%)</title><rect x="149.9" y="291.0" width="6.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="152.9" y="302.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (54 samples, 0.51%)</title><rect x="149.9" y="275.0" width="6.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="152.9" y="286.0"></text>
</g>
<g>
<title>java.lang.String (26 samples, 0.25%)</title><rect x="149.9" y="259.0" width="2.9" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="152.9" y="270.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (28 samples, 0.26%)</title><rect x="152.8" y="259.0" width="3.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="155.8" y="270.0"></text>
</g>
<g>
<title>byte[] (28 samples, 0.26%)</title><rect x="152.8" y="243.0" width="3.1" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="155.8" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivlev/ThreadController.get (58 samples, 0.55%)</title><rect x="155.9" y="323.0" width="6.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="158.9" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (58 samples, 0.55%)</title><rect x="155.9" y="307.0" width="6.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="158.9" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (58 samples, 0.55%)</title><rect x="155.9" y="291.0" width="6.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="158.9" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivlev/ThreadController$$Lambda$75/769197572.get$Lambda (58 samples, 0.55%)</title><rect x="155.9" y="275.0" width="6.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="158.9" y="286.0"></text>
</g>
<g>
<title>ru.mail.polis.service.ivlev.ThreadController$$Lambda$75 (58 samples, 0.55%)</title><rect x="155.9" y="259.0" width="6.5" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="158.9" y="270.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (88 samples, 0.83%)</title><rect x="162.4" y="339.0" width="9.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="165.4" y="350.0"></text>
</g>
<g>
<title>java/lang/String.substring (88 samples, 0.83%)</title><rect x="162.4" y="323.0" width="9.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="165.4" y="334.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (88 samples, 0.83%)</title><rect x="162.4" y="307.0" width="9.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="165.4" y="318.0"></text>
</g>
<g>
<title>java.lang.String (36 samples, 0.34%)</title><rect x="162.4" y="291.0" width="4.0" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="165.4" y="302.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (52 samples, 0.49%)</title><rect x="166.4" y="291.0" width="5.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="169.4" y="302.0"></text>
</g>
<g>
<title>byte[] (52 samples, 0.49%)</title><rect x="166.4" y="275.0" width="5.8" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="169.4" y="286.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (311 samples, 2.94%)</title><rect x="172.2" y="371.0" width="34.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="175.2" y="382.0">on..</text>
</g>
<g>
<title>one.nio.http.Request (61 samples, 0.58%)</title><rect x="172.2" y="355.0" width="6.8" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="175.2" y="366.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (99 samples, 0.94%)</title><rect x="179.0" y="355.0" width="11.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="182.0" y="366.0"></text>
</g>
<g>
<title>java.lang.String[] (99 samples, 0.94%)</title><rect x="179.0" y="339.0" width="11.0" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="182.0" y="350.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (151 samples, 1.43%)</title><rect x="190.0" y="355.0" width="16.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="193.0" y="366.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (151 samples, 1.43%)</title><rect x="190.0" y="339.0" width="16.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="193.0" y="350.0"></text>
</g>
<g>
<title>char[] (63 samples, 0.60%)</title><rect x="190.0" y="323.0" width="7.1" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="193.0" y="334.0"></text>
</g>
<g>
<title>java.lang.String (45 samples, 0.43%)</title><rect x="197.1" y="323.0" width="5.0" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="200.1" y="334.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (43 samples, 0.41%)</title><rect x="202.1" y="323.0" width="4.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="205.1" y="334.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (43 samples, 0.41%)</title><rect x="202.1" y="307.0" width="4.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="205.1" y="318.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (43 samples, 0.41%)</title><rect x="202.1" y="291.0" width="4.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="205.1" y="302.0"></text>
</g>
<g>
<title>byte[] (43 samples, 0.41%)</title><rect x="202.1" y="275.0" width="4.8" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="205.1" y="286.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (126 samples, 1.19%)</title><rect x="206.9" y="371.0" width="14.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="209.9" y="382.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (126 samples, 1.19%)</title><rect x="206.9" y="355.0" width="14.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="209.9" y="366.0"></text>
</g>
<g>
<title>char[] (32 samples, 0.30%)</title><rect x="206.9" y="339.0" width="3.6" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="209.9" y="350.0"></text>
</g>
<g>
<title>java.lang.String (49 samples, 0.46%)</title><rect x="210.5" y="339.0" width="5.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="213.5" y="350.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (45 samples, 0.43%)</title><rect x="215.9" y="339.0" width="5.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="218.9" y="350.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (45 samples, 0.43%)</title><rect x="215.9" y="323.0" width="5.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="218.9" y="334.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (45 samples, 0.43%)</title><rect x="215.9" y="307.0" width="5.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="218.9" y="318.0"></text>
</g>
<g>
<title>byte[] (45 samples, 0.43%)</title><rect x="215.9" y="291.0" width="5.1" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="218.9" y="302.0"></text>
</g>
<g>
<title>[NIO Selector #3 tid=59610] (641 samples, 6.06%)</title><rect x="221.0" y="451.0" width="71.5" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="224.0" y="462.0">[NIO Sel..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (641 samples, 6.06%)</title><rect x="221.0" y="435.0" width="71.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="224.0" y="446.0">one/nio/..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (50 samples, 0.47%)</title><rect x="221.0" y="419.0" width="5.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="224.0" y="430.0"></text>
</g>
<g>
<title>one.nio.net.NativeSelector$2 (50 samples, 0.47%)</title><rect x="221.0" y="403.0" width="5.5" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="224.0" y="414.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (591 samples, 5.59%)</title><rect x="226.5" y="419.0" width="66.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="229.5" y="430.0">one/nio..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (591 samples, 5.59%)</title><rect x="226.5" y="403.0" width="66.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="229.5" y="414.0">one/nio..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (591 samples, 5.59%)</title><rect x="226.5" y="387.0" width="66.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="229.5" y="398.0">one/nio..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (189 samples, 1.79%)</title><rect x="226.5" y="371.0" width="21.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="229.5" y="382.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (189 samples, 1.79%)</title><rect x="226.5" y="355.0" width="21.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="229.5" y="366.0">o..</text>
</g>
<g>
<title>RequestHandler0_get.handleRequest (104 samples, 0.98%)</title><rect x="226.5" y="339.0" width="11.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="229.5" y="350.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (62 samples, 0.59%)</title><rect x="226.5" y="323.0" width="7.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="229.5" y="334.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (62 samples, 0.59%)</title><rect x="226.5" y="307.0" width="7.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="229.5" y="318.0"></text>
</g>
<g>
<title>java/lang/String.substring (62 samples, 0.59%)</title><rect x="226.5" y="291.0" width="7.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="229.5" y="302.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (62 samples, 0.59%)</title><rect x="226.5" y="275.0" width="7.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="229.5" y="286.0"></text>
</g>
<g>
<title>java.lang.String (37 samples, 0.35%)</title><rect x="226.5" y="259.0" width="4.2" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="229.5" y="270.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (25 samples, 0.24%)</title><rect x="230.7" y="259.0" width="2.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="233.7" y="270.0"></text>
</g>
<g>
<title>byte[] (25 samples, 0.24%)</title><rect x="230.7" y="243.0" width="2.8" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="233.7" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivlev/ThreadController.get (42 samples, 0.40%)</title><rect x="233.5" y="323.0" width="4.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="236.5" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (42 samples, 0.40%)</title><rect x="233.5" y="307.0" width="4.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="236.5" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (42 samples, 0.40%)</title><rect x="233.5" y="291.0" width="4.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="236.5" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivlev/ThreadController$$Lambda$75/769197572.get$Lambda (42 samples, 0.40%)</title><rect x="233.5" y="275.0" width="4.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="236.5" y="286.0"></text>
</g>
<g>
<title>ru.mail.polis.service.ivlev.ThreadController$$Lambda$75 (42 samples, 0.40%)</title><rect x="233.5" y="259.0" width="4.6" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="236.5" y="270.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (85 samples, 0.80%)</title><rect x="238.1" y="339.0" width="9.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="241.1" y="350.0"></text>
</g>
<g>
<title>java/lang/String.substring (85 samples, 0.80%)</title><rect x="238.1" y="323.0" width="9.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="241.1" y="334.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (85 samples, 0.80%)</title><rect x="238.1" y="307.0" width="9.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="241.1" y="318.0"></text>
</g>
<g>
<title>java.lang.String (40 samples, 0.38%)</title><rect x="238.1" y="291.0" width="4.5" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="241.1" y="302.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (45 samples, 0.43%)</title><rect x="242.6" y="291.0" width="5.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="245.6" y="302.0"></text>
</g>
<g>
<title>byte[] (45 samples, 0.43%)</title><rect x="242.6" y="275.0" width="5.0" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="245.6" y="286.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (288 samples, 2.72%)</title><rect x="247.6" y="371.0" width="32.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="250.6" y="382.0">on..</text>
</g>
<g>
<title>one.nio.http.Request (40 samples, 0.38%)</title><rect x="247.6" y="355.0" width="4.5" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="250.6" y="366.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (99 samples, 0.94%)</title><rect x="252.1" y="355.0" width="11.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="255.1" y="366.0"></text>
</g>
<g>
<title>java.lang.String[] (99 samples, 0.94%)</title><rect x="252.1" y="339.0" width="11.0" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="255.1" y="350.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (149 samples, 1.41%)</title><rect x="263.1" y="355.0" width="16.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="266.1" y="366.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (149 samples, 1.41%)</title><rect x="263.1" y="339.0" width="16.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="266.1" y="350.0"></text>
</g>
<g>
<title>char[] (88 samples, 0.83%)</title><rect x="263.1" y="323.0" width="9.9" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="266.1" y="334.0"></text>
</g>
<g>
<title>java.lang.String (21 samples, 0.20%)</title><rect x="273.0" y="323.0" width="2.3" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="276.0" y="334.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (40 samples, 0.38%)</title><rect x="275.3" y="323.0" width="4.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="278.3" y="334.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (40 samples, 0.38%)</title><rect x="275.3" y="307.0" width="4.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="278.3" y="318.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (40 samples, 0.38%)</title><rect x="275.3" y="291.0" width="4.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="278.3" y="302.0"></text>
</g>
<g>
<title>byte[] (40 samples, 0.38%)</title><rect x="275.3" y="275.0" width="4.5" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="278.3" y="286.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (114 samples, 1.08%)</title><rect x="279.8" y="371.0" width="12.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="282.8" y="382.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (114 samples, 1.08%)</title><rect x="279.8" y="355.0" width="12.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="282.8" y="366.0"></text>
</g>
<g>
<title>char[] (52 samples, 0.49%)</title><rect x="279.8" y="339.0" width="5.8" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="282.8" y="350.0"></text>
</g>
<g>
<title>java.lang.String (20 samples, 0.19%)</title><rect x="285.6" y="339.0" width="2.2" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="288.6" y="350.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (42 samples, 0.40%)</title><rect x="287.8" y="339.0" width="4.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="290.8" y="350.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (42 samples, 0.40%)</title><rect x="287.8" y="323.0" width="4.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="290.8" y="334.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (42 samples, 0.40%)</title><rect x="287.8" y="307.0" width="4.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="290.8" y="318.0"></text>
</g>
<g>
<title>byte[] (42 samples, 0.40%)</title><rect x="287.8" y="291.0" width="4.7" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="290.8" y="302.0"></text>
</g>
<g>
<title>[NIO Selector #4 tid=59611] (626 samples, 5.92%)</title><rect x="292.5" y="451.0" width="69.9" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="295.5" y="462.0">[NIO Se..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (626 samples, 5.92%)</title><rect x="292.5" y="435.0" width="69.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="295.5" y="446.0">one/nio..</text>
</g>
<g>
<title>one/nio/net/Session.process (626 samples, 5.92%)</title><rect x="292.5" y="419.0" width="69.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="295.5" y="430.0">one/nio..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (626 samples, 5.92%)</title><rect x="292.5" y="403.0" width="69.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="295.5" y="414.0">one/nio..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (626 samples, 5.92%)</title><rect x="292.5" y="387.0" width="69.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="295.5" y="398.0">one/nio..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (203 samples, 1.92%)</title><rect x="292.5" y="371.0" width="22.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="295.5" y="382.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (203 samples, 1.92%)</title><rect x="292.5" y="355.0" width="22.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="295.5" y="366.0">o..</text>
</g>
<g>
<title>RequestHandler0_get.handleRequest (123 samples, 1.16%)</title><rect x="292.5" y="339.0" width="13.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="295.5" y="350.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (81 samples, 0.77%)</title><rect x="292.5" y="323.0" width="9.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="295.5" y="334.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (81 samples, 0.77%)</title><rect x="292.5" y="307.0" width="9.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="295.5" y="318.0"></text>
</g>
<g>
<title>java/lang/String.substring (81 samples, 0.77%)</title><rect x="292.5" y="291.0" width="9.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="295.5" y="302.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (81 samples, 0.77%)</title><rect x="292.5" y="275.0" width="9.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="295.5" y="286.0"></text>
</g>
<g>
<title>java.lang.String (43 samples, 0.41%)</title><rect x="292.5" y="259.0" width="4.8" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="295.5" y="270.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (38 samples, 0.36%)</title><rect x="297.3" y="259.0" width="4.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="300.3" y="270.0"></text>
</g>
<g>
<title>byte[] (38 samples, 0.36%)</title><rect x="297.3" y="243.0" width="4.2" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="300.3" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivlev/ThreadController.get (42 samples, 0.40%)</title><rect x="301.5" y="323.0" width="4.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="304.5" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (42 samples, 0.40%)</title><rect x="301.5" y="307.0" width="4.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="304.5" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (42 samples, 0.40%)</title><rect x="301.5" y="291.0" width="4.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="304.5" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivlev/ThreadController$$Lambda$75/769197572.get$Lambda (42 samples, 0.40%)</title><rect x="301.5" y="275.0" width="4.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="304.5" y="286.0"></text>
</g>
<g>
<title>ru.mail.polis.service.ivlev.ThreadController$$Lambda$75 (42 samples, 0.40%)</title><rect x="301.5" y="259.0" width="4.7" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="304.5" y="270.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (80 samples, 0.76%)</title><rect x="306.2" y="339.0" width="9.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="309.2" y="350.0"></text>
</g>
<g>
<title>java/lang/String.substring (80 samples, 0.76%)</title><rect x="306.2" y="323.0" width="9.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="309.2" y="334.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (80 samples, 0.76%)</title><rect x="306.2" y="307.0" width="9.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="309.2" y="318.0"></text>
</g>
<g>
<title>java.lang.String (30 samples, 0.28%)</title><rect x="306.2" y="291.0" width="3.4" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="309.2" y="302.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (50 samples, 0.47%)</title><rect x="309.6" y="291.0" width="5.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="312.6" y="302.0"></text>
</g>
<g>
<title>byte[] (50 samples, 0.47%)</title><rect x="309.6" y="275.0" width="5.6" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="312.6" y="286.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (283 samples, 2.68%)</title><rect x="315.2" y="371.0" width="31.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="318.2" y="382.0">on..</text>
</g>
<g>
<title>one.nio.http.Request (55 samples, 0.52%)</title><rect x="315.2" y="355.0" width="6.1" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="318.2" y="366.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (95 samples, 0.90%)</title><rect x="321.3" y="355.0" width="10.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="324.3" y="366.0"></text>
</g>
<g>
<title>java.lang.String[] (95 samples, 0.90%)</title><rect x="321.3" y="339.0" width="10.6" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="324.3" y="350.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (133 samples, 1.26%)</title><rect x="331.9" y="355.0" width="14.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="334.9" y="366.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (133 samples, 1.26%)</title><rect x="331.9" y="339.0" width="14.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="334.9" y="350.0"></text>
</g>
<g>
<title>char[] (68 samples, 0.64%)</title><rect x="331.9" y="323.0" width="7.6" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="334.9" y="334.0"></text>
</g>
<g>
<title>java.lang.String (29 samples, 0.27%)</title><rect x="339.5" y="323.0" width="3.2" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="342.5" y="334.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (36 samples, 0.34%)</title><rect x="342.7" y="323.0" width="4.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="345.7" y="334.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (36 samples, 0.34%)</title><rect x="342.7" y="307.0" width="4.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="345.7" y="318.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (36 samples, 0.34%)</title><rect x="342.7" y="291.0" width="4.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="345.7" y="302.0"></text>
</g>
<g>
<title>byte[] (36 samples, 0.34%)</title><rect x="342.7" y="275.0" width="4.0" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="345.7" y="286.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (140 samples, 1.32%)</title><rect x="346.7" y="371.0" width="15.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="349.7" y="382.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (140 samples, 1.32%)</title><rect x="346.7" y="355.0" width="15.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="349.7" y="366.0"></text>
</g>
<g>
<title>char[] (62 samples, 0.59%)</title><rect x="346.7" y="339.0" width="7.0" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="349.7" y="350.0"></text>
</g>
<g>
<title>java.lang.String (48 samples, 0.45%)</title><rect x="353.7" y="339.0" width="5.3" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="356.7" y="350.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (30 samples, 0.28%)</title><rect x="359.0" y="339.0" width="3.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="362.0" y="350.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (30 samples, 0.28%)</title><rect x="359.0" y="323.0" width="3.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="362.0" y="334.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (30 samples, 0.28%)</title><rect x="359.0" y="307.0" width="3.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="362.0" y="318.0"></text>
</g>
<g>
<title>byte[] (30 samples, 0.28%)</title><rect x="359.0" y="291.0" width="3.4" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="362.0" y="302.0"></text>
</g>
<g>
<title>[NIO Selector #5 tid=59612] (639 samples, 6.04%)</title><rect x="362.4" y="451.0" width="71.3" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="365.4" y="462.0">[NIO Sel..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (639 samples, 6.04%)</title><rect x="362.4" y="435.0" width="71.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="365.4" y="446.0">one/nio/..</text>
</g>
<g>
<title>one/nio/net/Session.process (639 samples, 6.04%)</title><rect x="362.4" y="419.0" width="71.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="365.4" y="430.0">one/nio/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (639 samples, 6.04%)</title><rect x="362.4" y="403.0" width="71.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="365.4" y="414.0">one/nio/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (639 samples, 6.04%)</title><rect x="362.4" y="387.0" width="71.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="365.4" y="398.0">one/nio/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (179 samples, 1.69%)</title><rect x="362.4" y="371.0" width="19.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="365.4" y="382.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (179 samples, 1.69%)</title><rect x="362.4" y="355.0" width="19.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="365.4" y="366.0"></text>
</g>
<g>
<title>RequestHandler0_get.handleRequest (105 samples, 0.99%)</title><rect x="362.4" y="339.0" width="11.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="365.4" y="350.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (52 samples, 0.49%)</title><rect x="362.4" y="323.0" width="5.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="365.4" y="334.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (52 samples, 0.49%)</title><rect x="362.4" y="307.0" width="5.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="365.4" y="318.0"></text>
</g>
<g>
<title>java/lang/String.substring (52 samples, 0.49%)</title><rect x="362.4" y="291.0" width="5.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="365.4" y="302.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (52 samples, 0.49%)</title><rect x="362.4" y="275.0" width="5.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="365.4" y="286.0"></text>
</g>
<g>
<title>java.lang.String (14 samples, 0.13%)</title><rect x="362.4" y="259.0" width="1.5" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="365.4" y="270.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (38 samples, 0.36%)</title><rect x="363.9" y="259.0" width="4.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="366.9" y="270.0"></text>
</g>
<g>
<title>byte[] (38 samples, 0.36%)</title><rect x="363.9" y="243.0" width="4.3" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="366.9" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivlev/ThreadController.get (53 samples, 0.50%)</title><rect x="368.2" y="323.0" width="5.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="371.2" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (53 samples, 0.50%)</title><rect x="368.2" y="307.0" width="5.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="371.2" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (53 samples, 0.50%)</title><rect x="368.2" y="291.0" width="5.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="371.2" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivlev/ThreadController$$Lambda$75/769197572.get$Lambda (53 samples, 0.50%)</title><rect x="368.2" y="275.0" width="5.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="371.2" y="286.0"></text>
</g>
<g>
<title>ru.mail.polis.service.ivlev.ThreadController$$Lambda$75 (53 samples, 0.50%)</title><rect x="368.2" y="259.0" width="5.9" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="371.2" y="270.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (74 samples, 0.70%)</title><rect x="374.1" y="339.0" width="8.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="377.1" y="350.0"></text>
</g>
<g>
<title>java/lang/String.substring (74 samples, 0.70%)</title><rect x="374.1" y="323.0" width="8.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="377.1" y="334.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (74 samples, 0.70%)</title><rect x="374.1" y="307.0" width="8.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="377.1" y="318.0"></text>
</g>
<g>
<title>java.lang.String (26 samples, 0.25%)</title><rect x="374.1" y="291.0" width="2.9" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="377.1" y="302.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (48 samples, 0.45%)</title><rect x="377.0" y="291.0" width="5.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="380.0" y="302.0"></text>
</g>
<g>
<title>byte[] (48 samples, 0.45%)</title><rect x="377.0" y="275.0" width="5.3" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="380.0" y="286.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (321 samples, 3.04%)</title><rect x="382.3" y="371.0" width="35.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="385.3" y="382.0">one..</text>
</g>
<g>
<title>one.nio.http.Request (48 samples, 0.45%)</title><rect x="382.3" y="355.0" width="5.4" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="385.3" y="366.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (122 samples, 1.15%)</title><rect x="387.7" y="355.0" width="13.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="390.7" y="366.0"></text>
</g>
<g>
<title>java.lang.String[] (122 samples, 1.15%)</title><rect x="387.7" y="339.0" width="13.6" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="390.7" y="350.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (151 samples, 1.43%)</title><rect x="401.3" y="355.0" width="16.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="404.3" y="366.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (151 samples, 1.43%)</title><rect x="401.3" y="339.0" width="16.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="404.3" y="350.0"></text>
</g>
<g>
<title>char[] (73 samples, 0.69%)</title><rect x="401.3" y="323.0" width="8.2" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="404.3" y="334.0"></text>
</g>
<g>
<title>java.lang.String (22 samples, 0.21%)</title><rect x="409.5" y="323.0" width="2.4" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="412.5" y="334.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (56 samples, 0.53%)</title><rect x="411.9" y="323.0" width="6.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="414.9" y="334.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (56 samples, 0.53%)</title><rect x="411.9" y="307.0" width="6.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="414.9" y="318.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (56 samples, 0.53%)</title><rect x="411.9" y="291.0" width="6.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="414.9" y="302.0"></text>
</g>
<g>
<title>byte[] (56 samples, 0.53%)</title><rect x="411.9" y="275.0" width="6.3" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="414.9" y="286.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (139 samples, 1.31%)</title><rect x="418.2" y="371.0" width="15.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="421.2" y="382.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (139 samples, 1.31%)</title><rect x="418.2" y="355.0" width="15.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="421.2" y="366.0"></text>
</g>
<g>
<title>char[] (46 samples, 0.44%)</title><rect x="418.2" y="339.0" width="5.1" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="421.2" y="350.0"></text>
</g>
<g>
<title>java.lang.String (17 samples, 0.16%)</title><rect x="423.3" y="339.0" width="1.9" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="426.3" y="350.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (76 samples, 0.72%)</title><rect x="425.2" y="339.0" width="8.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="428.2" y="350.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (76 samples, 0.72%)</title><rect x="425.2" y="323.0" width="8.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="428.2" y="334.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (76 samples, 0.72%)</title><rect x="425.2" y="307.0" width="8.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="428.2" y="318.0"></text>
</g>
<g>
<title>byte[] (76 samples, 0.72%)</title><rect x="425.2" y="291.0" width="8.5" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="428.2" y="302.0"></text>
</g>
<g>
<title>[NIO Selector #6 tid=59613] (642 samples, 6.07%)</title><rect x="433.7" y="451.0" width="71.6" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="436.7" y="462.0">[NIO Sel..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (642 samples, 6.07%)</title><rect x="433.7" y="435.0" width="71.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="436.7" y="446.0">one/nio/..</text>
</g>
<g>
<title>one/nio/net/Session.process (642 samples, 6.07%)</title><rect x="433.7" y="419.0" width="71.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="436.7" y="430.0">one/nio/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (642 samples, 6.07%)</title><rect x="433.7" y="403.0" width="71.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="436.7" y="414.0">one/nio/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (642 samples, 6.07%)</title><rect x="433.7" y="387.0" width="71.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="436.7" y="398.0">one/nio/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (190 samples, 1.80%)</title><rect x="433.7" y="371.0" width="21.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="436.7" y="382.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (190 samples, 1.80%)</title><rect x="433.7" y="355.0" width="21.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="436.7" y="366.0">o..</text>
</g>
<g>
<title>RequestHandler0_get.handleRequest (97 samples, 0.92%)</title><rect x="433.7" y="339.0" width="10.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="436.7" y="350.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (57 samples, 0.54%)</title><rect x="433.7" y="323.0" width="6.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="436.7" y="334.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (57 samples, 0.54%)</title><rect x="433.7" y="307.0" width="6.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="436.7" y="318.0"></text>
</g>
<g>
<title>java/lang/String.substring (57 samples, 0.54%)</title><rect x="433.7" y="291.0" width="6.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="436.7" y="302.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (57 samples, 0.54%)</title><rect x="433.7" y="275.0" width="6.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="436.7" y="286.0"></text>
</g>
<g>
<title>java.lang.String (29 samples, 0.27%)</title><rect x="433.7" y="259.0" width="3.2" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="436.7" y="270.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (28 samples, 0.26%)</title><rect x="436.9" y="259.0" width="3.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="439.9" y="270.0"></text>
</g>
<g>
<title>byte[] (28 samples, 0.26%)</title><rect x="436.9" y="243.0" width="3.2" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="439.9" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivlev/ThreadController.get (40 samples, 0.38%)</title><rect x="440.1" y="323.0" width="4.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="443.1" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (40 samples, 0.38%)</title><rect x="440.1" y="307.0" width="4.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="443.1" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (40 samples, 0.38%)</title><rect x="440.1" y="291.0" width="4.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="443.1" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivlev/ThreadController$$Lambda$75/769197572.get$Lambda (40 samples, 0.38%)</title><rect x="440.1" y="275.0" width="4.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="443.1" y="286.0"></text>
</g>
<g>
<title>ru.mail.polis.service.ivlev.ThreadController$$Lambda$75 (40 samples, 0.38%)</title><rect x="440.1" y="259.0" width="4.4" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="443.1" y="270.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (93 samples, 0.88%)</title><rect x="444.5" y="339.0" width="10.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="447.5" y="350.0"></text>
</g>
<g>
<title>java/lang/String.substring (93 samples, 0.88%)</title><rect x="444.5" y="323.0" width="10.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="447.5" y="334.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (93 samples, 0.88%)</title><rect x="444.5" y="307.0" width="10.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="447.5" y="318.0"></text>
</g>
<g>
<title>java.lang.String (53 samples, 0.50%)</title><rect x="444.5" y="291.0" width="5.9" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="447.5" y="302.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (40 samples, 0.38%)</title><rect x="450.4" y="291.0" width="4.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="453.4" y="302.0"></text>
</g>
<g>
<title>byte[] (40 samples, 0.38%)</title><rect x="450.4" y="275.0" width="4.5" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="453.4" y="286.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (335 samples, 3.17%)</title><rect x="454.9" y="371.0" width="37.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="457.9" y="382.0">one..</text>
</g>
<g>
<title>one.nio.http.Request (72 samples, 0.68%)</title><rect x="454.9" y="355.0" width="8.0" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="457.9" y="366.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (106 samples, 1.00%)</title><rect x="462.9" y="355.0" width="11.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="465.9" y="366.0"></text>
</g>
<g>
<title>java.lang.String[] (106 samples, 1.00%)</title><rect x="462.9" y="339.0" width="11.9" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="465.9" y="350.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (157 samples, 1.49%)</title><rect x="474.8" y="355.0" width="17.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="477.8" y="366.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (157 samples, 1.49%)</title><rect x="474.8" y="339.0" width="17.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="477.8" y="350.0"></text>
</g>
<g>
<title>char[] (102 samples, 0.96%)</title><rect x="474.8" y="323.0" width="11.4" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="477.8" y="334.0"></text>
</g>
<g>
<title>java.lang.String (30 samples, 0.28%)</title><rect x="486.2" y="323.0" width="3.3" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="489.2" y="334.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (25 samples, 0.24%)</title><rect x="489.5" y="323.0" width="2.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="492.5" y="334.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (25 samples, 0.24%)</title><rect x="489.5" y="307.0" width="2.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="492.5" y="318.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (25 samples, 0.24%)</title><rect x="489.5" y="291.0" width="2.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="492.5" y="302.0"></text>
</g>
<g>
<title>byte[] (25 samples, 0.24%)</title><rect x="489.5" y="275.0" width="2.8" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="492.5" y="286.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (117 samples, 1.11%)</title><rect x="492.3" y="371.0" width="13.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="495.3" y="382.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (117 samples, 1.11%)</title><rect x="492.3" y="355.0" width="13.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="495.3" y="366.0"></text>
</g>
<g>
<title>char[] (54 samples, 0.51%)</title><rect x="492.3" y="339.0" width="6.0" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="495.3" y="350.0"></text>
</g>
<g>
<title>java.lang.String (22 samples, 0.21%)</title><rect x="498.3" y="339.0" width="2.5" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="501.3" y="350.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (41 samples, 0.39%)</title><rect x="500.8" y="339.0" width="4.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="503.8" y="350.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (41 samples, 0.39%)</title><rect x="500.8" y="323.0" width="4.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="503.8" y="334.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (41 samples, 0.39%)</title><rect x="500.8" y="307.0" width="4.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="503.8" y="318.0"></text>
</g>
<g>
<title>byte[] (41 samples, 0.39%)</title><rect x="500.8" y="291.0" width="4.5" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="503.8" y="302.0"></text>
</g>
<g>
<title>[NIO Selector #7 tid=59614] (644 samples, 6.09%)</title><rect x="505.3" y="451.0" width="71.9" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="508.3" y="462.0">[NIO Sel..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (644 samples, 6.09%)</title><rect x="505.3" y="435.0" width="71.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="508.3" y="446.0">one/nio/..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (46 samples, 0.44%)</title><rect x="505.3" y="419.0" width="5.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="508.3" y="430.0"></text>
</g>
<g>
<title>one.nio.net.NativeSelector$2 (46 samples, 0.44%)</title><rect x="505.3" y="403.0" width="5.2" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="508.3" y="414.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (598 samples, 5.66%)</title><rect x="510.5" y="419.0" width="66.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="513.5" y="430.0">one/nio..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (598 samples, 5.66%)</title><rect x="510.5" y="403.0" width="66.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="513.5" y="414.0">one/nio..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (598 samples, 5.66%)</title><rect x="510.5" y="387.0" width="66.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="513.5" y="398.0">one/nio..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (192 samples, 1.82%)</title><rect x="510.5" y="371.0" width="21.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="513.5" y="382.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (192 samples, 1.82%)</title><rect x="510.5" y="355.0" width="21.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="513.5" y="366.0">o..</text>
</g>
<g>
<title>RequestHandler0_get.handleRequest (77 samples, 0.73%)</title><rect x="510.5" y="339.0" width="8.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="513.5" y="350.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (31 samples, 0.29%)</title><rect x="510.5" y="323.0" width="3.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="513.5" y="334.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (31 samples, 0.29%)</title><rect x="510.5" y="307.0" width="3.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="513.5" y="318.0"></text>
</g>
<g>
<title>java/lang/String.substring (31 samples, 0.29%)</title><rect x="510.5" y="291.0" width="3.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="513.5" y="302.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (31 samples, 0.29%)</title><rect x="510.5" y="275.0" width="3.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="513.5" y="286.0"></text>
</g>
<g>
<title>java.lang.String (20 samples, 0.19%)</title><rect x="510.5" y="259.0" width="2.2" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="513.5" y="270.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (11 samples, 0.10%)</title><rect x="512.7" y="259.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="515.7" y="270.0"></text>
</g>
<g>
<title>byte[] (11 samples, 0.10%)</title><rect x="512.7" y="243.0" width="1.2" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="515.7" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivlev/ThreadController.get (46 samples, 0.44%)</title><rect x="513.9" y="323.0" width="5.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="516.9" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (46 samples, 0.44%)</title><rect x="513.9" y="307.0" width="5.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="516.9" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (46 samples, 0.44%)</title><rect x="513.9" y="291.0" width="5.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="516.9" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivlev/ThreadController$$Lambda$75/769197572.get$Lambda (46 samples, 0.44%)</title><rect x="513.9" y="275.0" width="5.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="516.9" y="286.0"></text>
</g>
<g>
<title>ru.mail.polis.service.ivlev.ThreadController$$Lambda$75 (46 samples, 0.44%)</title><rect x="513.9" y="259.0" width="5.2" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="516.9" y="270.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (115 samples, 1.09%)</title><rect x="519.1" y="339.0" width="12.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="522.1" y="350.0"></text>
</g>
<g>
<title>java/lang/String.substring (115 samples, 1.09%)</title><rect x="519.1" y="323.0" width="12.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="522.1" y="334.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (115 samples, 1.09%)</title><rect x="519.1" y="307.0" width="12.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="522.1" y="318.0"></text>
</g>
<g>
<title>java.lang.String (34 samples, 0.32%)</title><rect x="519.1" y="291.0" width="3.8" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="522.1" y="302.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (81 samples, 0.77%)</title><rect x="522.9" y="291.0" width="9.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="525.9" y="302.0"></text>
</g>
<g>
<title>byte[] (81 samples, 0.77%)</title><rect x="522.9" y="275.0" width="9.0" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="525.9" y="286.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (337 samples, 3.19%)</title><rect x="531.9" y="371.0" width="37.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="534.9" y="382.0">one..</text>
</g>
<g>
<title>one.nio.http.Request (25 samples, 0.24%)</title><rect x="531.9" y="355.0" width="2.8" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="534.9" y="366.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (155 samples, 1.47%)</title><rect x="534.7" y="355.0" width="17.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="537.7" y="366.0"></text>
</g>
<g>
<title>java.lang.String[] (155 samples, 1.47%)</title><rect x="534.7" y="339.0" width="17.3" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="537.7" y="350.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (157 samples, 1.49%)</title><rect x="552.0" y="355.0" width="17.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="555.0" y="366.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (157 samples, 1.49%)</title><rect x="552.0" y="339.0" width="17.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="555.0" y="350.0"></text>
</g>
<g>
<title>char[] (112 samples, 1.06%)</title><rect x="552.0" y="323.0" width="12.5" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="555.0" y="334.0"></text>
</g>
<g>
<title>java.lang.String (19 samples, 0.18%)</title><rect x="564.5" y="323.0" width="2.1" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="567.5" y="334.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (26 samples, 0.25%)</title><rect x="566.6" y="323.0" width="2.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="569.6" y="334.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (26 samples, 0.25%)</title><rect x="566.6" y="307.0" width="2.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="569.6" y="318.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (26 samples, 0.25%)</title><rect x="566.6" y="291.0" width="2.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="569.6" y="302.0"></text>
</g>
<g>
<title>byte[] (26 samples, 0.25%)</title><rect x="566.6" y="275.0" width="2.9" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="569.6" y="286.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (69 samples, 0.65%)</title><rect x="569.5" y="371.0" width="7.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="572.5" y="382.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (69 samples, 0.65%)</title><rect x="569.5" y="355.0" width="7.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="572.5" y="366.0"></text>
</g>
<g>
<title>char[] (23 samples, 0.22%)</title><rect x="569.5" y="339.0" width="2.6" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="572.5" y="350.0"></text>
</g>
<g>
<title>java.lang.String (17 samples, 0.16%)</title><rect x="572.1" y="339.0" width="1.9" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="575.1" y="350.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (29 samples, 0.27%)</title><rect x="574.0" y="339.0" width="3.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="577.0" y="350.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (29 samples, 0.27%)</title><rect x="574.0" y="323.0" width="3.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="577.0" y="334.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (29 samples, 0.27%)</title><rect x="574.0" y="307.0" width="3.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="577.0" y="318.0"></text>
</g>
<g>
<title>byte[] (29 samples, 0.27%)</title><rect x="574.0" y="291.0" width="3.2" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="577.0" y="302.0"></text>
</g>
<g>
<title>[worker_0 tid=59716] (690 samples, 6.53%)</title><rect x="577.2" y="451.0" width="77.0" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="580.2" y="462.0">[worker_0..</text>
</g>
<g>
<title>java/lang/Thread.run (690 samples, 6.53%)</title><rect x="577.2" y="435.0" width="77.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="580.2" y="446.0">java/lang..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (690 samples, 6.53%)</title><rect x="577.2" y="419.0" width="77.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="580.2" y="430.0">java/util..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (690 samples, 6.53%)</title><rect x="577.2" y="403.0" width="77.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="580.2" y="414.0">java/util..</text>
</g>
<g>
<title>ru/mail/polis/service/ivlev/ThreadController$$Lambda$75/769197572.run (689 samples, 6.52%)</title><rect x="577.3" y="387.0" width="76.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="580.3" y="398.0">ru/mail/..</text>
</g>
<g>
<title>ru/mail/polis/service/ivlev/ThreadController.lambda$get$1 (689 samples, 6.52%)</title><rect x="577.3" y="371.0" width="76.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="580.3" y="382.0">ru/mail/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (17 samples, 0.16%)</title><rect x="577.6" y="355.0" width="1.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="580.6" y="366.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (17 samples, 0.16%)</title><rect x="577.6" y="339.0" width="1.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="580.6" y="350.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (14 samples, 0.13%)</title><rect x="577.6" y="323.0" width="1.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="580.6" y="334.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (14 samples, 0.13%)</title><rect x="577.6" y="307.0" width="1.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="580.6" y="318.0"></text>
</g>
<g>
<title>byte[] (14 samples, 0.13%)</title><rect x="577.6" y="291.0" width="1.5" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="580.6" y="302.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (3 samples, 0.03%)</title><rect x="579.1" y="323.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="582.1" y="334.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (3 samples, 0.03%)</title><rect x="579.1" y="307.0" width="0.4" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="582.1" y="318.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (12 samples, 0.11%)</title><rect x="579.5" y="355.0" width="1.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="582.5" y="366.0"></text>
</g>
<g>
<title>byte[] (7 samples, 0.07%)</title><rect x="579.5" y="339.0" width="0.7" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="582.5" y="350.0"></text>
</g>
<g>
<title>java.lang.String[] (3 samples, 0.03%)</title><rect x="580.2" y="339.0" width="0.4" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="583.2" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.get (623 samples, 5.89%)</title><rect x="580.8" y="355.0" width="69.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="583.8" y="366.0">ru/mail..</text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (79 samples, 0.75%)</title><rect x="580.8" y="339.0" width="8.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="583.8" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (79 samples, 0.75%)</title><rect x="580.8" y="323.0" width="8.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="583.8" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (79 samples, 0.75%)</title><rect x="580.8" y="307.0" width="8.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="583.8" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (79 samples, 0.75%)</title><rect x="580.8" y="291.0" width="8.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="583.8" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (79 samples, 0.75%)</title><rect x="580.8" y="275.0" width="8.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="583.8" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (67 samples, 0.63%)</title><rect x="580.8" y="259.0" width="7.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="583.8" y="270.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (67 samples, 0.63%)</title><rect x="580.8" y="243.0" width="7.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="583.8" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (67 samples, 0.63%)</title><rect x="580.8" y="227.0" width="7.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="583.8" y="238.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (67 samples, 0.63%)</title><rect x="580.8" y="211.0" width="7.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="583.8" y="222.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (67 samples, 0.63%)</title><rect x="580.8" y="195.0" width="7.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="583.8" y="206.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (67 samples, 0.63%)</title><rect x="580.8" y="179.0" width="7.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="583.8" y="190.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (67 samples, 0.63%)</title><rect x="580.8" y="163.0" width="7.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="583.8" y="174.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (64 samples, 0.61%)</title><rect x="580.8" y="147.0" width="7.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="583.8" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/SSTable$1.next (64 samples, 0.61%)</title><rect x="580.8" y="131.0" width="7.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="583.8" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/SSTable$1.next (64 samples, 0.61%)</title><rect x="580.8" y="115.0" width="7.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="583.8" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/SSTable.getCell (64 samples, 0.61%)</title><rect x="580.8" y="99.0" width="7.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="583.8" y="110.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (40 samples, 0.38%)</title><rect x="580.8" y="83.0" width="4.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="583.8" y="94.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (24 samples, 0.23%)</title><rect x="580.8" y="67.0" width="2.7" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="583.8" y="78.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (16 samples, 0.15%)</title><rect x="583.5" y="67.0" width="1.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="586.5" y="78.0"></text>
</g>
<g>
<title>byte[] (16 samples, 0.15%)</title><rect x="583.5" y="51.0" width="1.8" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="586.5" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/SSTable.getOffset (20 samples, 0.19%)</title><rect x="585.7" y="83.0" width="2.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="588.7" y="94.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (20 samples, 0.19%)</title><rect x="585.7" y="67.0" width="2.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="588.7" y="78.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (15 samples, 0.14%)</title><rect x="585.7" y="51.0" width="1.7" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="588.7" y="62.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (5 samples, 0.05%)</title><rect x="587.4" y="51.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="590.4" y="62.0"></text>
</g>
<g>
<title>byte[] (5 samples, 0.05%)</title><rect x="587.4" y="35.0" width="0.5" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="590.4" y="46.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (3 samples, 0.03%)</title><rect x="587.9" y="147.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="590.9" y="158.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (3 samples, 0.03%)</title><rect x="587.9" y="131.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="590.9" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/Cell.compareTo (3 samples, 0.03%)</title><rect x="587.9" y="115.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="590.9" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/Cell.compareTo (3 samples, 0.03%)</title><rect x="587.9" y="99.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="590.9" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/Cell.getKey (3 samples, 0.03%)</title><rect x="587.9" y="83.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="590.9" y="94.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (3 samples, 0.03%)</title><rect x="587.9" y="67.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="590.9" y="78.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (3 samples, 0.03%)</title><rect x="587.9" y="51.0" width="0.4" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="590.9" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl$$Lambda$79/1480278998.apply (12 samples, 0.11%)</title><rect x="588.3" y="259.0" width="1.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="591.3" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/Cell.getKey (12 samples, 0.11%)</title><rect x="588.3" y="243.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="591.3" y="254.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (12 samples, 0.11%)</title><rect x="588.3" y="227.0" width="1.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="591.3" y="238.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (12 samples, 0.11%)</title><rect x="588.3" y="211.0" width="1.3" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="591.3" y="222.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.next (17 samples, 0.16%)</title><rect x="589.6" y="339.0" width="1.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="592.6" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$6.transform (17 samples, 0.16%)</title><rect x="589.6" y="323.0" width="1.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="592.6" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl$$Lambda$81/1054613018.apply (17 samples, 0.16%)</title><rect x="589.6" y="307.0" width="1.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="592.6" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.lambda$iterator$4 (17 samples, 0.16%)</title><rect x="589.6" y="291.0" width="1.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="592.6" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/Cell.getKey (7 samples, 0.07%)</title><rect x="589.6" y="275.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="592.6" y="286.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (7 samples, 0.07%)</title><rect x="589.6" y="259.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="592.6" y="270.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (7 samples, 0.07%)</title><rect x="589.6" y="243.0" width="0.8" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="592.6" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/Record.of (4 samples, 0.04%)</title><rect x="590.4" y="275.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="593.4" y="286.0"></text>
</g>
<g>
<title>ru.mail.polis.Record (4 samples, 0.04%)</title><rect x="590.4" y="259.0" width="0.4" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="593.4" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/Value.getData (6 samples, 0.06%)</title><rect x="590.8" y="275.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="593.8" y="286.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (6 samples, 0.06%)</title><rect x="590.8" y="259.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="593.8" y="270.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (6 samples, 0.06%)</title><rect x="590.8" y="243.0" width="0.7" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="593.8" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/Record.getKey (7 samples, 0.07%)</title><rect x="591.5" y="339.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="594.5" y="350.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (7 samples, 0.07%)</title><rect x="591.5" y="323.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="594.5" y="334.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (7 samples, 0.07%)</title><rect x="591.5" y="307.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="594.5" y="318.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (7 samples, 0.07%)</title><rect x="591.5" y="291.0" width="0.8" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="594.5" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.iterator (520 samples, 4.92%)</title><rect x="592.3" y="339.0" width="58.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="595.3" y="350.0">ru/mai..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.filter (6 samples, 0.06%)</title><rect x="592.3" y="323.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="595.3" y="334.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$5 (6 samples, 0.06%)</title><rect x="592.3" y="307.0" width="0.7" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="595.3" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.transform (3 samples, 0.03%)</title><rect x="593.0" y="323.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="596.0" y="334.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$6 (3 samples, 0.03%)</title><rect x="593.0" y="307.0" width="0.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="596.0" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.compactIterator (509 samples, 4.81%)</title><rect x="593.5" y="323.0" width="56.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="596.5" y="334.0">ru/mai..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (86 samples, 0.81%)</title><rect x="593.5" y="307.0" width="9.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="596.5" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (86 samples, 0.81%)</title><rect x="593.5" y="291.0" width="9.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="596.5" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.peekingIterator (6 samples, 0.06%)</title><rect x="593.7" y="275.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="596.7" y="286.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$PeekingImpl (6 samples, 0.06%)</title><rect x="593.7" y="259.0" width="0.7" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="596.7" y="270.0"></text>
</g>
<g>
<title>java.util.PriorityQueue (4 samples, 0.04%)</title><rect x="594.4" y="275.0" width="0.5" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="597.4" y="286.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.&lt;init&gt; (5 samples, 0.05%)</title><rect x="594.9" y="275.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="597.9" y="286.0"></text>
</g>
<g>
<title>java.lang.Object[] (5 samples, 0.05%)</title><rect x="594.9" y="259.0" width="0.5" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="597.9" y="270.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (69 samples, 0.65%)</title><rect x="595.4" y="275.0" width="7.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="598.4" y="286.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (69 samples, 0.65%)</title><rect x="595.4" y="259.0" width="7.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="598.4" y="270.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (69 samples, 0.65%)</title><rect x="595.4" y="243.0" width="7.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="598.4" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (69 samples, 0.65%)</title><rect x="595.4" y="227.0" width="7.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="598.4" y="238.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (69 samples, 0.65%)</title><rect x="595.4" y="211.0" width="7.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="598.4" y="222.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (69 samples, 0.65%)</title><rect x="595.4" y="195.0" width="7.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="598.4" y="206.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (65 samples, 0.61%)</title><rect x="595.4" y="179.0" width="7.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="598.4" y="190.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.next (5 samples, 0.05%)</title><rect x="595.4" y="163.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="598.4" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (4 samples, 0.04%)</title><rect x="595.5" y="147.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="598.5" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (4 samples, 0.04%)</title><rect x="595.5" y="131.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="598.5" y="142.0"></text>
</g>
<g>
<title>java.util.AbstractMap$SimpleImmutableEntry (4 samples, 0.04%)</title><rect x="595.5" y="115.0" width="0.5" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="598.5" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/SSTable$1.next (60 samples, 0.57%)</title><rect x="596.0" y="163.0" width="6.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="599.0" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/SSTable$1.next (60 samples, 0.57%)</title><rect x="596.0" y="147.0" width="6.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="599.0" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/SSTable.getCell (60 samples, 0.57%)</title><rect x="596.0" y="131.0" width="6.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="599.0" y="142.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (38 samples, 0.36%)</title><rect x="596.0" y="115.0" width="4.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="599.0" y="126.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (22 samples, 0.21%)</title><rect x="596.0" y="99.0" width="2.4" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="599.0" y="110.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (16 samples, 0.15%)</title><rect x="598.4" y="99.0" width="1.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="601.4" y="110.0"></text>
</g>
<g>
<title>byte[] (16 samples, 0.15%)</title><rect x="598.4" y="83.0" width="1.8" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="601.4" y="94.0"></text>
</g>
<g>
<title>ru.mail.polis.Cell (3 samples, 0.03%)</title><rect x="600.2" y="115.0" width="0.4" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="603.2" y="126.0"></text>
</g>
<g>
<title>ru.mail.polis.Value (5 samples, 0.05%)</title><rect x="600.6" y="115.0" width="0.5" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="603.6" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/SSTable.getOffset (14 samples, 0.13%)</title><rect x="601.1" y="115.0" width="1.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="604.1" y="126.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (14 samples, 0.13%)</title><rect x="601.1" y="99.0" width="1.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="604.1" y="110.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (10 samples, 0.09%)</title><rect x="601.1" y="83.0" width="1.1" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="604.1" y="94.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (4 samples, 0.04%)</title><rect x="602.2" y="83.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="605.2" y="94.0"></text>
</g>
<g>
<title>byte[] (4 samples, 0.04%)</title><rect x="602.2" y="67.0" width="0.5" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="605.2" y="78.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (4 samples, 0.04%)</title><rect x="602.7" y="179.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="605.7" y="190.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (4 samples, 0.04%)</title><rect x="602.7" y="163.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="605.7" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/Cell.compareTo (4 samples, 0.04%)</title><rect x="602.7" y="147.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="605.7" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/Cell.compareTo (4 samples, 0.04%)</title><rect x="602.7" y="131.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="605.7" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/Cell.getKey (4 samples, 0.04%)</title><rect x="602.7" y="115.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="605.7" y="126.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (4 samples, 0.04%)</title><rect x="602.7" y="99.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="605.7" y="110.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (4 samples, 0.04%)</title><rect x="602.7" y="83.0" width="0.4" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="605.7" y="94.0"></text>
</g>
<g>
<title>java.util.ArrayList (15 samples, 0.14%)</title><rect x="603.1" y="307.0" width="1.7" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="606.1" y="318.0"></text>
</g>
<g>
<title>java/lang/Iterable.forEach (311 samples, 2.94%)</title><rect x="604.8" y="307.0" width="34.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="607.8" y="318.0">ja..</text>
</g>
<g>
<title>java/util/AbstractMap$2.iterator (6 samples, 0.06%)</title><rect x="604.8" y="291.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="607.8" y="302.0"></text>
</g>
<g>
<title>java.util.AbstractMap$2$1 (3 samples, 0.03%)</title><rect x="604.8" y="275.0" width="0.3" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="607.8" y="286.0"></text>
</g>
<g>
<title>java/util/AbstractMap$2$1.&lt;init&gt; (3 samples, 0.03%)</title><rect x="605.1" y="275.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="608.1" y="286.0"></text>
</g>
<g>
<title>java/util/TreeMap$DescendingSubMap$DescendingEntrySetView.iterator (3 samples, 0.03%)</title><rect x="605.1" y="259.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="608.1" y="270.0"></text>
</g>
<g>
<title>java.util.TreeMap$NavigableSubMap$DescendingSubMapEntryIterator (3 samples, 0.03%)</title><rect x="605.1" y="243.0" width="0.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="608.1" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl$$Lambda$77/345748904.accept (305 samples, 2.88%)</title><rect x="605.5" y="291.0" width="34.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="608.5" y="302.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.lambda$compactIterator$7 (305 samples, 2.88%)</title><rect x="605.5" y="275.0" width="34.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="608.5" y="286.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/SSTable.iterator (305 samples, 2.88%)</title><rect x="605.5" y="259.0" width="34.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="608.5" y="270.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/SSTable$1.&lt;init&gt; (304 samples, 2.88%)</title><rect x="605.6" y="243.0" width="33.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="608.6" y="254.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/SSTable.getPosition (304 samples, 2.88%)</title><rect x="605.6" y="227.0" width="33.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="608.6" y="238.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/SSTable.getKey (304 samples, 2.88%)</title><rect x="605.6" y="211.0" width="33.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="608.6" y="222.0">ru..</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (202 samples, 1.91%)</title><rect x="605.6" y="195.0" width="22.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="608.6" y="206.0">j..</text>
</g>
<g>
<title>java.nio.HeapByteBuffer (145 samples, 1.37%)</title><rect x="605.6" y="179.0" width="16.2" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="608.6" y="190.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (57 samples, 0.54%)</title><rect x="621.8" y="179.0" width="6.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="624.8" y="190.0"></text>
</g>
<g>
<title>byte[] (57 samples, 0.54%)</title><rect x="621.8" y="163.0" width="6.3" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="624.8" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/SSTable.getOffset (102 samples, 0.96%)</title><rect x="628.1" y="195.0" width="11.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="631.1" y="206.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (102 samples, 0.96%)</title><rect x="628.1" y="179.0" width="11.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="631.1" y="190.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (67 samples, 0.63%)</title><rect x="628.1" y="163.0" width="7.5" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="631.1" y="174.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (35 samples, 0.33%)</title><rect x="635.6" y="163.0" width="3.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="638.6" y="174.0"></text>
</g>
<g>
<title>byte[] (35 samples, 0.33%)</title><rect x="635.6" y="147.0" width="3.9" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="638.6" y="158.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (6 samples, 0.06%)</title><rect x="639.5" y="307.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="642.5" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (6 samples, 0.06%)</title><rect x="639.5" y="291.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="642.5" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl$$Lambda$78/1013735398.get$Lambda (4 samples, 0.04%)</title><rect x="639.7" y="275.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="642.7" y="286.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.impl.DAOImpl$$Lambda$78 (4 samples, 0.04%)</title><rect x="639.7" y="259.0" width="0.5" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="642.7" y="270.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (5 samples, 0.05%)</title><rect x="640.2" y="307.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="643.2" y="318.0"></text>
</g>
<g>
<title>java.lang.Object[] (5 samples, 0.05%)</title><rect x="640.2" y="291.0" width="0.5" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="643.2" y="302.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection.forEach (6 samples, 0.06%)</title><rect x="640.7" y="307.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="643.7" y="318.0"></text>
</g>
<g>
<title>java/lang/Iterable.forEach (6 samples, 0.06%)</title><rect x="640.7" y="291.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="643.7" y="302.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (6 samples, 0.06%)</title><rect x="640.7" y="275.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="643.7" y="286.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (6 samples, 0.06%)</title><rect x="640.7" y="259.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="643.7" y="270.0"></text>
</g>
<g>
<title>java.util.HashMap$KeyIterator (6 samples, 0.06%)</title><rect x="640.7" y="243.0" width="0.7" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="643.7" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/MemTable.iterator (16 samples, 0.15%)</title><rect x="641.4" y="307.0" width="1.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="644.4" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.transform (6 samples, 0.06%)</title><rect x="641.4" y="291.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="644.4" y="302.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$6 (6 samples, 0.06%)</title><rect x="641.4" y="275.0" width="0.7" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="644.4" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$EntrySet.iterator (5 samples, 0.05%)</title><rect x="642.1" y="291.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="645.1" y="302.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapEntryIterator (5 samples, 0.05%)</title><rect x="642.1" y="275.0" width="0.5" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="645.1" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (5 samples, 0.05%)</title><rect x="642.6" y="291.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="645.6" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (5 samples, 0.05%)</title><rect x="642.6" y="275.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="645.6" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (5 samples, 0.05%)</title><rect x="642.6" y="259.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="645.6" y="270.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap (5 samples, 0.05%)</title><rect x="642.6" y="243.0" width="0.6" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="645.6" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (64 samples, 0.61%)</title><rect x="643.2" y="307.0" width="7.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="646.2" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (62 samples, 0.59%)</title><rect x="643.4" y="291.0" width="6.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="646.4" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (62 samples, 0.59%)</title><rect x="643.4" y="275.0" width="6.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="646.4" y="286.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (62 samples, 0.59%)</title><rect x="643.4" y="259.0" width="6.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="646.4" y="270.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (62 samples, 0.59%)</title><rect x="643.4" y="243.0" width="6.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="646.4" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (62 samples, 0.59%)</title><rect x="643.4" y="227.0" width="6.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="646.4" y="238.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (62 samples, 0.59%)</title><rect x="643.4" y="211.0" width="6.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="646.4" y="222.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (62 samples, 0.59%)</title><rect x="643.4" y="195.0" width="6.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="646.4" y="206.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (62 samples, 0.59%)</title><rect x="643.4" y="179.0" width="6.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="646.4" y="190.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (53 samples, 0.50%)</title><rect x="643.4" y="163.0" width="5.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="646.4" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/SSTable$1.next (53 samples, 0.50%)</title><rect x="643.4" y="147.0" width="5.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="646.4" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/SSTable$1.next (53 samples, 0.50%)</title><rect x="643.4" y="131.0" width="5.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="646.4" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/SSTable.getCell (53 samples, 0.50%)</title><rect x="643.4" y="115.0" width="5.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="646.4" y="126.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (33 samples, 0.31%)</title><rect x="643.4" y="99.0" width="3.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="646.4" y="110.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (19 samples, 0.18%)</title><rect x="643.4" y="83.0" width="2.1" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="646.4" y="94.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (14 samples, 0.13%)</title><rect x="645.5" y="83.0" width="1.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="648.5" y="94.0"></text>
</g>
<g>
<title>byte[] (14 samples, 0.13%)</title><rect x="645.5" y="67.0" width="1.6" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="648.5" y="78.0"></text>
</g>
<g>
<title>ru.mail.polis.Cell (4 samples, 0.04%)</title><rect x="647.1" y="99.0" width="0.4" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="650.1" y="110.0"></text>
</g>
<g>
<title>ru.mail.polis.Value (4 samples, 0.04%)</title><rect x="647.5" y="99.0" width="0.5" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="650.5" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/SSTable.getOffset (12 samples, 0.11%)</title><rect x="648.0" y="99.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="651.0" y="110.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (12 samples, 0.11%)</title><rect x="648.0" y="83.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="651.0" y="94.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (7 samples, 0.07%)</title><rect x="648.0" y="67.0" width="0.8" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="651.0" y="78.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (5 samples, 0.05%)</title><rect x="648.8" y="67.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="651.8" y="78.0"></text>
</g>
<g>
<title>byte[] (5 samples, 0.05%)</title><rect x="648.8" y="51.0" width="0.5" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="651.8" y="62.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (9 samples, 0.09%)</title><rect x="649.3" y="163.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="652.3" y="174.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (9 samples, 0.09%)</title><rect x="649.3" y="147.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="652.3" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/Cell.compareTo (9 samples, 0.09%)</title><rect x="649.3" y="131.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="652.3" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/Cell.compareTo (9 samples, 0.09%)</title><rect x="649.3" y="115.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="652.3" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/Cell.getKey (9 samples, 0.09%)</title><rect x="649.3" y="99.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="652.3" y="110.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (9 samples, 0.09%)</title><rect x="649.3" y="83.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="652.3" y="94.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (9 samples, 0.09%)</title><rect x="649.3" y="67.0" width="1.0" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="652.3" y="78.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivlev/ThreadController.equalsUrlNode (21 samples, 0.20%)</title><rect x="650.3" y="355.0" width="2.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="653.3" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/TopologyImpl.getNodeByKey (21 samples, 0.20%)</title><rect x="650.3" y="339.0" width="2.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="653.3" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/TopologyImpl.getNodeByKey (21 samples, 0.20%)</title><rect x="650.3" y="323.0" width="2.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="653.3" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (21 samples, 0.20%)</title><rect x="650.3" y="307.0" width="2.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="653.3" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1019384604.invoke (21 samples, 0.20%)</title><rect x="650.3" y="291.0" width="2.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="653.3" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (21 samples, 0.20%)</title><rect x="650.3" y="275.0" width="2.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="653.3" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (21 samples, 0.20%)</title><rect x="650.3" y="259.0" width="2.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="653.3" y="270.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (21 samples, 0.20%)</title><rect x="650.3" y="243.0" width="2.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="653.3" y="254.0"></text>
</g>
<g>
<title>byte[] (21 samples, 0.20%)</title><rect x="650.3" y="227.0" width="2.4" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="653.3" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivlev/ThreadController.toByteArray (5 samples, 0.05%)</title><rect x="652.7" y="355.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="655.7" y="366.0"></text>
</g>
<g>
<title>byte[] (5 samples, 0.05%)</title><rect x="652.7" y="339.0" width="0.5" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="655.7" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivlev/ThreadController.toByteBuffer (9 samples, 0.09%)</title><rect x="653.2" y="355.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="656.2" y="366.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (8 samples, 0.08%)</title><rect x="653.4" y="339.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="656.4" y="350.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (8 samples, 0.08%)</title><rect x="653.4" y="323.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="656.4" y="334.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (8 samples, 0.08%)</title><rect x="653.4" y="307.0" width="0.8" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="656.4" y="318.0"></text>
</g>
<g>
<title>[worker_1 tid=59715] (686 samples, 6.49%)</title><rect x="654.2" y="451.0" width="76.6" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="657.2" y="462.0">[worker_..</text>
</g>
<g>
<title>java/lang/Thread.run (686 samples, 6.49%)</title><rect x="654.2" y="435.0" width="76.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="657.2" y="446.0">java/lan..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (686 samples, 6.49%)</title><rect x="654.2" y="419.0" width="76.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="657.2" y="430.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (686 samples, 6.49%)</title><rect x="654.2" y="403.0" width="76.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="657.2" y="414.0">java/uti..</text>
</g>
<g>
<title>ru/mail/polis/service/ivlev/ThreadController$$Lambda$75/769197572.run (686 samples, 6.49%)</title><rect x="654.2" y="387.0" width="76.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="657.2" y="398.0">ru/mail/..</text>
</g>
<g>
<title>ru/mail/polis/service/ivlev/ThreadController.lambda$get$1 (686 samples, 6.49%)</title><rect x="654.2" y="371.0" width="76.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="657.2" y="382.0">ru/mail/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (13 samples, 0.12%)</title><rect x="654.4" y="355.0" width="1.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="657.4" y="366.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (13 samples, 0.12%)</title><rect x="654.4" y="339.0" width="1.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="657.4" y="350.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (10 samples, 0.09%)</title><rect x="654.4" y="323.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="657.4" y="334.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (10 samples, 0.09%)</title><rect x="654.4" y="307.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="657.4" y="318.0"></text>
</g>
<g>
<title>byte[] (10 samples, 0.09%)</title><rect x="654.4" y="291.0" width="1.1" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="657.4" y="302.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (3 samples, 0.03%)</title><rect x="655.5" y="323.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="658.5" y="334.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (3 samples, 0.03%)</title><rect x="655.5" y="307.0" width="0.3" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="658.5" y="318.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (8 samples, 0.08%)</title><rect x="655.8" y="355.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="658.8" y="366.0"></text>
</g>
<g>
<title>byte[] (3 samples, 0.03%)</title><rect x="655.8" y="339.0" width="0.3" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="658.8" y="350.0"></text>
</g>
<g>
<title>java.lang.String (3 samples, 0.03%)</title><rect x="656.4" y="339.0" width="0.3" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="659.4" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.get (636 samples, 6.02%)</title><rect x="656.7" y="355.0" width="71.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="659.7" y="366.0">ru/mail/..</text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (74 samples, 0.70%)</title><rect x="656.7" y="339.0" width="8.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="659.7" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (74 samples, 0.70%)</title><rect x="656.7" y="323.0" width="8.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="659.7" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (74 samples, 0.70%)</title><rect x="656.7" y="307.0" width="8.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="659.7" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (74 samples, 0.70%)</title><rect x="656.7" y="291.0" width="8.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="659.7" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (74 samples, 0.70%)</title><rect x="656.7" y="275.0" width="8.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="659.7" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (67 samples, 0.63%)</title><rect x="656.7" y="259.0" width="7.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="659.7" y="270.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (67 samples, 0.63%)</title><rect x="656.7" y="243.0" width="7.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="659.7" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (67 samples, 0.63%)</title><rect x="656.7" y="227.0" width="7.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="659.7" y="238.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (67 samples, 0.63%)</title><rect x="656.7" y="211.0" width="7.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="659.7" y="222.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (67 samples, 0.63%)</title><rect x="656.7" y="195.0" width="7.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="659.7" y="206.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (67 samples, 0.63%)</title><rect x="656.7" y="179.0" width="7.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="659.7" y="190.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (67 samples, 0.63%)</title><rect x="656.7" y="163.0" width="7.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="659.7" y="174.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (63 samples, 0.60%)</title><rect x="656.7" y="147.0" width="7.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="659.7" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/SSTable$1.next (63 samples, 0.60%)</title><rect x="656.7" y="131.0" width="7.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="659.7" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/SSTable$1.next (63 samples, 0.60%)</title><rect x="656.7" y="115.0" width="7.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="659.7" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/SSTable.getCell (63 samples, 0.60%)</title><rect x="656.7" y="99.0" width="7.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="659.7" y="110.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (33 samples, 0.31%)</title><rect x="656.7" y="83.0" width="3.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="659.7" y="94.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (20 samples, 0.19%)</title><rect x="656.7" y="67.0" width="2.2" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="659.7" y="78.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (13 samples, 0.12%)</title><rect x="658.9" y="67.0" width="1.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="661.9" y="78.0"></text>
</g>
<g>
<title>byte[] (13 samples, 0.12%)</title><rect x="658.9" y="51.0" width="1.5" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="661.9" y="62.0"></text>
</g>
<g>
<title>ru.mail.polis.Cell (5 samples, 0.05%)</title><rect x="660.4" y="83.0" width="0.5" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="663.4" y="94.0"></text>
</g>
<g>
<title>ru.mail.polis.Value (6 samples, 0.06%)</title><rect x="660.9" y="83.0" width="0.7" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="663.9" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/SSTable.getOffset (19 samples, 0.18%)</title><rect x="661.6" y="83.0" width="2.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="664.6" y="94.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (19 samples, 0.18%)</title><rect x="661.6" y="67.0" width="2.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="664.6" y="78.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (12 samples, 0.11%)</title><rect x="661.6" y="51.0" width="1.4" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="664.6" y="62.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (7 samples, 0.07%)</title><rect x="663.0" y="51.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="666.0" y="62.0"></text>
</g>
<g>
<title>byte[] (7 samples, 0.07%)</title><rect x="663.0" y="35.0" width="0.7" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="666.0" y="46.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (4 samples, 0.04%)</title><rect x="663.7" y="147.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="666.7" y="158.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (4 samples, 0.04%)</title><rect x="663.7" y="131.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="666.7" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/Cell.compareTo (4 samples, 0.04%)</title><rect x="663.7" y="115.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="666.7" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/Cell.compareTo (4 samples, 0.04%)</title><rect x="663.7" y="99.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="666.7" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/Cell.getKey (4 samples, 0.04%)</title><rect x="663.7" y="83.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="666.7" y="94.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (4 samples, 0.04%)</title><rect x="663.7" y="67.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="666.7" y="78.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (4 samples, 0.04%)</title><rect x="663.7" y="51.0" width="0.5" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="666.7" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl$$Lambda$79/1480278998.apply (7 samples, 0.07%)</title><rect x="664.2" y="259.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="667.2" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/Cell.getKey (7 samples, 0.07%)</title><rect x="664.2" y="243.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="667.2" y="254.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (7 samples, 0.07%)</title><rect x="664.2" y="227.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="667.2" y="238.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (7 samples, 0.07%)</title><rect x="664.2" y="211.0" width="0.8" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="667.2" y="222.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.next (19 samples, 0.18%)</title><rect x="665.0" y="339.0" width="2.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="668.0" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$6.transform (19 samples, 0.18%)</title><rect x="665.0" y="323.0" width="2.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="668.0" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl$$Lambda$81/1054613018.apply (19 samples, 0.18%)</title><rect x="665.0" y="307.0" width="2.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="668.0" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.lambda$iterator$4 (19 samples, 0.18%)</title><rect x="665.0" y="291.0" width="2.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="668.0" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/Cell.getKey (8 samples, 0.08%)</title><rect x="665.0" y="275.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="668.0" y="286.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (8 samples, 0.08%)</title><rect x="665.0" y="259.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="668.0" y="270.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (8 samples, 0.08%)</title><rect x="665.0" y="243.0" width="0.9" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="668.0" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/Value.getData (10 samples, 0.09%)</title><rect x="666.0" y="275.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="669.0" y="286.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (10 samples, 0.09%)</title><rect x="666.0" y="259.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="669.0" y="270.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (10 samples, 0.09%)</title><rect x="666.0" y="243.0" width="1.1" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="669.0" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/Record.getKey (6 samples, 0.06%)</title><rect x="667.1" y="339.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="670.1" y="350.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (6 samples, 0.06%)</title><rect x="667.1" y="323.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="670.1" y="334.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (6 samples, 0.06%)</title><rect x="667.1" y="307.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="670.1" y="318.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (6 samples, 0.06%)</title><rect x="667.1" y="291.0" width="0.7" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="670.1" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.iterator (537 samples, 5.08%)</title><rect x="667.8" y="339.0" width="59.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="670.8" y="350.0">ru/mai..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.transform (5 samples, 0.05%)</title><rect x="668.0" y="323.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="671.0" y="334.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$6 (5 samples, 0.05%)</title><rect x="668.0" y="307.0" width="0.5" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="671.0" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$WriteLock.lock (4 samples, 0.04%)</title><rect x="668.5" y="323.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="671.5" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (4 samples, 0.04%)</title><rect x="668.5" y="307.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="671.5" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.addWaiter (4 samples, 0.04%)</title><rect x="668.5" y="291.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="671.5" y="302.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (4 samples, 0.04%)</title><rect x="668.5" y="275.0" width="0.5" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="671.5" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.compactIterator (526 samples, 4.98%)</title><rect x="669.0" y="323.0" width="58.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="672.0" y="334.0">ru/mai..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (82 samples, 0.78%)</title><rect x="669.0" y="307.0" width="9.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="672.0" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (80 samples, 0.76%)</title><rect x="669.2" y="291.0" width="8.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="672.2" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.peekingIterator (7 samples, 0.07%)</title><rect x="669.3" y="275.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="672.3" y="286.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$PeekingImpl (7 samples, 0.07%)</title><rect x="669.3" y="259.0" width="0.8" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="672.3" y="270.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.&lt;init&gt; (3 samples, 0.03%)</title><rect x="670.3" y="275.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="673.3" y="286.0"></text>
</g>
<g>
<title>java.lang.Object[] (3 samples, 0.03%)</title><rect x="670.3" y="259.0" width="0.4" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="673.3" y="270.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (67 samples, 0.63%)</title><rect x="670.7" y="275.0" width="7.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="673.7" y="286.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (67 samples, 0.63%)</title><rect x="670.7" y="259.0" width="7.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="673.7" y="270.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (67 samples, 0.63%)</title><rect x="670.7" y="243.0" width="7.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="673.7" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (67 samples, 0.63%)</title><rect x="670.7" y="227.0" width="7.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="673.7" y="238.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (67 samples, 0.63%)</title><rect x="670.7" y="211.0" width="7.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="673.7" y="222.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (67 samples, 0.63%)</title><rect x="670.7" y="195.0" width="7.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="673.7" y="206.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (63 samples, 0.60%)</title><rect x="670.7" y="179.0" width="7.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="673.7" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/SSTable$1.next (61 samples, 0.58%)</title><rect x="670.9" y="163.0" width="6.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="673.9" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/SSTable$1.next (61 samples, 0.58%)</title><rect x="670.9" y="147.0" width="6.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="673.9" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/SSTable.getCell (61 samples, 0.58%)</title><rect x="670.9" y="131.0" width="6.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="673.9" y="142.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (41 samples, 0.39%)</title><rect x="670.9" y="115.0" width="4.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="673.9" y="126.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (28 samples, 0.26%)</title><rect x="670.9" y="99.0" width="3.1" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="673.9" y="110.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (13 samples, 0.12%)</title><rect x="674.0" y="99.0" width="1.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="677.0" y="110.0"></text>
</g>
<g>
<title>byte[] (13 samples, 0.12%)</title><rect x="674.0" y="83.0" width="1.5" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="677.0" y="94.0"></text>
</g>
<g>
<title>ru.mail.polis.Cell (3 samples, 0.03%)</title><rect x="675.5" y="115.0" width="0.3" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="678.5" y="126.0"></text>
</g>
<g>
<title>ru.mail.polis.Value (3 samples, 0.03%)</title><rect x="675.8" y="115.0" width="0.3" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="678.8" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/SSTable.getOffset (14 samples, 0.13%)</title><rect x="676.1" y="115.0" width="1.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="679.1" y="126.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (14 samples, 0.13%)</title><rect x="676.1" y="99.0" width="1.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="679.1" y="110.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (9 samples, 0.09%)</title><rect x="676.1" y="83.0" width="1.0" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="679.1" y="94.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (5 samples, 0.05%)</title><rect x="677.1" y="83.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="680.1" y="94.0"></text>
</g>
<g>
<title>byte[] (5 samples, 0.05%)</title><rect x="677.1" y="67.0" width="0.6" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="680.1" y="78.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (4 samples, 0.04%)</title><rect x="677.7" y="179.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="680.7" y="190.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (4 samples, 0.04%)</title><rect x="677.7" y="163.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="680.7" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/Cell.compareTo (4 samples, 0.04%)</title><rect x="677.7" y="147.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="680.7" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/Cell.compareTo (4 samples, 0.04%)</title><rect x="677.7" y="131.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="680.7" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/Cell.getKey (4 samples, 0.04%)</title><rect x="677.7" y="115.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="680.7" y="126.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (4 samples, 0.04%)</title><rect x="677.7" y="99.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="680.7" y="110.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (4 samples, 0.04%)</title><rect x="677.7" y="83.0" width="0.4" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="680.7" y="94.0"></text>
</g>
<g>
<title>java.util.ArrayList (9 samples, 0.09%)</title><rect x="678.1" y="307.0" width="1.0" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="681.1" y="318.0"></text>
</g>
<g>
<title>java/lang/Iterable.forEach (326 samples, 3.08%)</title><rect x="679.1" y="307.0" width="36.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="682.1" y="318.0">jav..</text>
</g>
<g>
<title>java/util/AbstractMap$2.iterator (9 samples, 0.09%)</title><rect x="679.1" y="291.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="682.1" y="302.0"></text>
</g>
<g>
<title>java.util.AbstractMap$2$1 (5 samples, 0.05%)</title><rect x="679.1" y="275.0" width="0.6" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="682.1" y="286.0"></text>
</g>
<g>
<title>java/util/AbstractMap$2$1.&lt;init&gt; (4 samples, 0.04%)</title><rect x="679.7" y="275.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="682.7" y="286.0"></text>
</g>
<g>
<title>java/util/TreeMap$DescendingSubMap$DescendingEntrySetView.iterator (4 samples, 0.04%)</title><rect x="679.7" y="259.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="682.7" y="270.0"></text>
</g>
<g>
<title>java.util.TreeMap$NavigableSubMap$DescendingSubMapEntryIterator (4 samples, 0.04%)</title><rect x="679.7" y="243.0" width="0.4" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="682.7" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl$$Lambda$77/345748904.accept (317 samples, 3.00%)</title><rect x="680.1" y="291.0" width="35.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="683.1" y="302.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.lambda$compactIterator$7 (317 samples, 3.00%)</title><rect x="680.1" y="275.0" width="35.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="683.1" y="286.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/SSTable.iterator (317 samples, 3.00%)</title><rect x="680.1" y="259.0" width="35.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="683.1" y="270.0">ru/..</text>
</g>
<g>
<title>ru.mail.polis.SSTable$1 (3 samples, 0.03%)</title><rect x="680.1" y="243.0" width="0.4" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="683.1" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/SSTable$1.&lt;init&gt; (314 samples, 2.97%)</title><rect x="680.5" y="243.0" width="35.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="683.5" y="254.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/SSTable.getPosition (314 samples, 2.97%)</title><rect x="680.5" y="227.0" width="35.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="683.5" y="238.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/SSTable.getKey (314 samples, 2.97%)</title><rect x="680.5" y="211.0" width="35.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="683.5" y="222.0">ru/..</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (201 samples, 1.90%)</title><rect x="680.5" y="195.0" width="22.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="683.5" y="206.0">j..</text>
</g>
<g>
<title>java.nio.HeapByteBuffer (133 samples, 1.26%)</title><rect x="680.5" y="179.0" width="14.8" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="683.5" y="190.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (68 samples, 0.64%)</title><rect x="695.3" y="179.0" width="7.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="698.3" y="190.0"></text>
</g>
<g>
<title>byte[] (68 samples, 0.64%)</title><rect x="695.3" y="163.0" width="7.6" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="698.3" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/SSTable.getOffset (113 samples, 1.07%)</title><rect x="702.9" y="195.0" width="12.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="705.9" y="206.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (113 samples, 1.07%)</title><rect x="702.9" y="179.0" width="12.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="705.9" y="190.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (74 samples, 0.70%)</title><rect x="702.9" y="163.0" width="8.3" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="705.9" y="174.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (39 samples, 0.37%)</title><rect x="711.2" y="163.0" width="4.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="714.2" y="174.0"></text>
</g>
<g>
<title>byte[] (39 samples, 0.37%)</title><rect x="711.2" y="147.0" width="4.3" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="714.2" y="158.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (5 samples, 0.05%)</title><rect x="715.5" y="307.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="718.5" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (5 samples, 0.05%)</title><rect x="715.5" y="291.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="718.5" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl$$Lambda$78/1013735398.get$Lambda (3 samples, 0.03%)</title><rect x="715.7" y="275.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="718.7" y="286.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.impl.DAOImpl$$Lambda$78 (3 samples, 0.03%)</title><rect x="715.7" y="259.0" width="0.4" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="718.7" y="270.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (3 samples, 0.03%)</title><rect x="716.1" y="307.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="719.1" y="318.0"></text>
</g>
<g>
<title>java.lang.Object[] (3 samples, 0.03%)</title><rect x="716.1" y="291.0" width="0.3" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="719.1" y="302.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection.forEach (4 samples, 0.04%)</title><rect x="716.4" y="307.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="719.4" y="318.0"></text>
</g>
<g>
<title>java/lang/Iterable.forEach (4 samples, 0.04%)</title><rect x="716.4" y="291.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="719.4" y="302.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (4 samples, 0.04%)</title><rect x="716.4" y="275.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="719.4" y="286.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (4 samples, 0.04%)</title><rect x="716.4" y="259.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="719.4" y="270.0"></text>
</g>
<g>
<title>java.util.HashMap$KeyIterator (4 samples, 0.04%)</title><rect x="716.4" y="243.0" width="0.5" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="719.4" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/MemTable.iterator (22 samples, 0.21%)</title><rect x="716.9" y="307.0" width="2.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="719.9" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$EntrySet.iterator (6 samples, 0.06%)</title><rect x="717.1" y="291.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="720.1" y="302.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapEntryIterator (6 samples, 0.06%)</title><rect x="717.1" y="275.0" width="0.7" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="720.1" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.entrySet (5 samples, 0.05%)</title><rect x="717.8" y="291.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="720.8" y="302.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$EntrySet (5 samples, 0.05%)</title><rect x="717.8" y="275.0" width="0.5" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="720.8" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (9 samples, 0.09%)</title><rect x="718.3" y="291.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="721.3" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (9 samples, 0.09%)</title><rect x="718.3" y="275.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="721.3" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (9 samples, 0.09%)</title><rect x="718.3" y="259.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="721.3" y="270.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap (9 samples, 0.09%)</title><rect x="718.3" y="243.0" width="1.0" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="721.3" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (75 samples, 0.71%)</title><rect x="719.3" y="307.0" width="8.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="722.3" y="318.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.Iters$CollapseEqualsIterator (6 samples, 0.06%)</title><rect x="719.3" y="291.0" width="0.7" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="722.3" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (69 samples, 0.65%)</title><rect x="720.0" y="291.0" width="7.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="723.0" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (69 samples, 0.65%)</title><rect x="720.0" y="275.0" width="7.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="723.0" y="286.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (69 samples, 0.65%)</title><rect x="720.0" y="259.0" width="7.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="723.0" y="270.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (69 samples, 0.65%)</title><rect x="720.0" y="243.0" width="7.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="723.0" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (69 samples, 0.65%)</title><rect x="720.0" y="227.0" width="7.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="723.0" y="238.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (69 samples, 0.65%)</title><rect x="720.0" y="211.0" width="7.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="723.0" y="222.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (69 samples, 0.65%)</title><rect x="720.0" y="195.0" width="7.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="723.0" y="206.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (69 samples, 0.65%)</title><rect x="720.0" y="179.0" width="7.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="723.0" y="190.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (59 samples, 0.56%)</title><rect x="720.0" y="163.0" width="6.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="723.0" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/SSTable$1.next (59 samples, 0.56%)</title><rect x="720.0" y="147.0" width="6.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="723.0" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/SSTable$1.next (59 samples, 0.56%)</title><rect x="720.0" y="131.0" width="6.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="723.0" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/SSTable.getCell (59 samples, 0.56%)</title><rect x="720.0" y="115.0" width="6.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="723.0" y="126.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (35 samples, 0.33%)</title><rect x="720.0" y="99.0" width="3.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="723.0" y="110.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (25 samples, 0.24%)</title><rect x="720.0" y="83.0" width="2.8" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="723.0" y="94.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (10 samples, 0.09%)</title><rect x="722.8" y="83.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="725.8" y="94.0"></text>
</g>
<g>
<title>byte[] (10 samples, 0.09%)</title><rect x="722.8" y="67.0" width="1.1" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="725.8" y="78.0"></text>
</g>
<g>
<title>ru.mail.polis.Cell (8 samples, 0.08%)</title><rect x="723.9" y="99.0" width="0.9" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="726.9" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/SSTable.getOffset (14 samples, 0.13%)</title><rect x="725.0" y="99.0" width="1.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="728.0" y="110.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (14 samples, 0.13%)</title><rect x="725.0" y="83.0" width="1.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="728.0" y="94.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (7 samples, 0.07%)</title><rect x="725.0" y="67.0" width="0.8" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="728.0" y="78.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (7 samples, 0.07%)</title><rect x="725.8" y="67.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="728.8" y="78.0"></text>
</g>
<g>
<title>byte[] (7 samples, 0.07%)</title><rect x="725.8" y="51.0" width="0.8" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="728.8" y="62.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (10 samples, 0.09%)</title><rect x="726.6" y="163.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="729.6" y="174.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (10 samples, 0.09%)</title><rect x="726.6" y="147.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="729.6" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/Cell.compareTo (10 samples, 0.09%)</title><rect x="726.6" y="131.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="729.6" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/Cell.compareTo (10 samples, 0.09%)</title><rect x="726.6" y="115.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="729.6" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/Cell.getKey (10 samples, 0.09%)</title><rect x="726.6" y="99.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="729.6" y="110.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (10 samples, 0.09%)</title><rect x="726.6" y="83.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="729.6" y="94.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (10 samples, 0.09%)</title><rect x="726.6" y="67.0" width="1.1" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="729.6" y="78.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivlev/ThreadController.equalsUrlNode (18 samples, 0.17%)</title><rect x="727.7" y="355.0" width="2.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="730.7" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/TopologyImpl.getNodeByKey (18 samples, 0.17%)</title><rect x="727.7" y="339.0" width="2.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="730.7" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/TopologyImpl.getNodeByKey (18 samples, 0.17%)</title><rect x="727.7" y="323.0" width="2.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="730.7" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (18 samples, 0.17%)</title><rect x="727.7" y="307.0" width="2.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="730.7" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1019384604.invoke (18 samples, 0.17%)</title><rect x="727.7" y="291.0" width="2.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="730.7" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (18 samples, 0.17%)</title><rect x="727.7" y="275.0" width="2.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="730.7" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (18 samples, 0.17%)</title><rect x="727.7" y="259.0" width="2.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="730.7" y="270.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (18 samples, 0.17%)</title><rect x="727.7" y="243.0" width="2.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="730.7" y="254.0"></text>
</g>
<g>
<title>byte[] (18 samples, 0.17%)</title><rect x="727.7" y="227.0" width="2.0" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="730.7" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivlev/ThreadController.toByteArray (3 samples, 0.03%)</title><rect x="729.7" y="355.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="732.7" y="366.0"></text>
</g>
<g>
<title>byte[] (3 samples, 0.03%)</title><rect x="729.7" y="339.0" width="0.3" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="732.7" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivlev/ThreadController.toByteBuffer (7 samples, 0.07%)</title><rect x="730.0" y="355.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="733.0" y="366.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (3 samples, 0.03%)</title><rect x="730.0" y="339.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="733.0" y="350.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (3 samples, 0.03%)</title><rect x="730.0" y="323.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="733.0" y="334.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (3 samples, 0.03%)</title><rect x="730.0" y="307.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="733.0" y="318.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (3 samples, 0.03%)</title><rect x="730.0" y="291.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="733.0" y="302.0"></text>
</g>
<g>
<title>byte[] (3 samples, 0.03%)</title><rect x="730.0" y="275.0" width="0.4" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="733.0" y="286.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (4 samples, 0.04%)</title><rect x="730.4" y="339.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="733.4" y="350.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (4 samples, 0.04%)</title><rect x="730.4" y="323.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="733.4" y="334.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (4 samples, 0.04%)</title><rect x="730.4" y="307.0" width="0.4" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="733.4" y="318.0"></text>
</g>
<g>
<title>[worker_2 tid=59717] (696 samples, 6.58%)</title><rect x="730.8" y="451.0" width="77.7" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="733.8" y="462.0">[worker_2..</text>
</g>
<g>
<title>java/lang/Thread.run (696 samples, 6.58%)</title><rect x="730.8" y="435.0" width="77.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="733.8" y="446.0">java/lang..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (696 samples, 6.58%)</title><rect x="730.8" y="419.0" width="77.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="733.8" y="430.0">java/util..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (696 samples, 6.58%)</title><rect x="730.8" y="403.0" width="77.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="733.8" y="414.0">java/util..</text>
</g>
<g>
<title>ru/mail/polis/service/ivlev/ThreadController$$Lambda$75/769197572.run (696 samples, 6.58%)</title><rect x="730.8" y="387.0" width="77.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="733.8" y="398.0">ru/mail/p..</text>
</g>
<g>
<title>ru/mail/polis/service/ivlev/ThreadController.lambda$get$1 (696 samples, 6.58%)</title><rect x="730.8" y="371.0" width="77.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="733.8" y="382.0">ru/mail/p..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (13 samples, 0.12%)</title><rect x="731.0" y="355.0" width="1.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="734.0" y="366.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (13 samples, 0.12%)</title><rect x="731.0" y="339.0" width="1.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="734.0" y="350.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (11 samples, 0.10%)</title><rect x="731.0" y="323.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="734.0" y="334.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (11 samples, 0.10%)</title><rect x="731.0" y="307.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="734.0" y="318.0"></text>
</g>
<g>
<title>byte[] (11 samples, 0.10%)</title><rect x="731.0" y="291.0" width="1.3" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="734.0" y="302.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (8 samples, 0.08%)</title><rect x="732.5" y="355.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="735.5" y="366.0"></text>
</g>
<g>
<title>byte[] (4 samples, 0.04%)</title><rect x="732.5" y="339.0" width="0.4" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="735.5" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.get (640 samples, 6.05%)</title><rect x="733.4" y="355.0" width="71.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="736.4" y="366.0">ru/mail/..</text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (83 samples, 0.79%)</title><rect x="733.4" y="339.0" width="9.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="736.4" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (83 samples, 0.79%)</title><rect x="733.4" y="323.0" width="9.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="736.4" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (83 samples, 0.79%)</title><rect x="733.4" y="307.0" width="9.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="736.4" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (83 samples, 0.79%)</title><rect x="733.4" y="291.0" width="9.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="736.4" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (83 samples, 0.79%)</title><rect x="733.4" y="275.0" width="9.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="736.4" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (68 samples, 0.64%)</title><rect x="733.4" y="259.0" width="7.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="736.4" y="270.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (68 samples, 0.64%)</title><rect x="733.4" y="243.0" width="7.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="736.4" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (68 samples, 0.64%)</title><rect x="733.4" y="227.0" width="7.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="736.4" y="238.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (68 samples, 0.64%)</title><rect x="733.4" y="211.0" width="7.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="736.4" y="222.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (68 samples, 0.64%)</title><rect x="733.4" y="195.0" width="7.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="736.4" y="206.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (68 samples, 0.64%)</title><rect x="733.4" y="179.0" width="7.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="736.4" y="190.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (68 samples, 0.64%)</title><rect x="733.4" y="163.0" width="7.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="736.4" y="174.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (60 samples, 0.57%)</title><rect x="733.4" y="147.0" width="6.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="736.4" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/SSTable$1.next (60 samples, 0.57%)</title><rect x="733.4" y="131.0" width="6.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="736.4" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/SSTable$1.next (60 samples, 0.57%)</title><rect x="733.4" y="115.0" width="6.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="736.4" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/SSTable.getCell (60 samples, 0.57%)</title><rect x="733.4" y="99.0" width="6.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="736.4" y="110.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (35 samples, 0.33%)</title><rect x="733.4" y="83.0" width="3.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="736.4" y="94.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (23 samples, 0.22%)</title><rect x="733.4" y="67.0" width="2.5" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="736.4" y="78.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (12 samples, 0.11%)</title><rect x="735.9" y="67.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="738.9" y="78.0"></text>
</g>
<g>
<title>byte[] (12 samples, 0.11%)</title><rect x="735.9" y="51.0" width="1.4" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="738.9" y="62.0"></text>
</g>
<g>
<title>ru.mail.polis.Value (3 samples, 0.03%)</title><rect x="737.5" y="83.0" width="0.3" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="740.5" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/SSTable.getOffset (20 samples, 0.19%)</title><rect x="737.8" y="83.0" width="2.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="740.8" y="94.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (20 samples, 0.19%)</title><rect x="737.8" y="67.0" width="2.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="740.8" y="78.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (15 samples, 0.14%)</title><rect x="737.8" y="51.0" width="1.7" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="740.8" y="62.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (5 samples, 0.05%)</title><rect x="739.5" y="51.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="742.5" y="62.0"></text>
</g>
<g>
<title>byte[] (5 samples, 0.05%)</title><rect x="739.5" y="35.0" width="0.6" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="742.5" y="46.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (8 samples, 0.08%)</title><rect x="740.1" y="147.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="743.1" y="158.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (8 samples, 0.08%)</title><rect x="740.1" y="131.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="743.1" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/Cell.compareTo (8 samples, 0.08%)</title><rect x="740.1" y="115.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="743.1" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/Cell.compareTo (8 samples, 0.08%)</title><rect x="740.1" y="99.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="743.1" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/Cell.getKey (8 samples, 0.08%)</title><rect x="740.1" y="83.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="743.1" y="94.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (8 samples, 0.08%)</title><rect x="740.1" y="67.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="743.1" y="78.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (8 samples, 0.08%)</title><rect x="740.1" y="51.0" width="0.9" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="743.1" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl$$Lambda$79/1480278998.apply (15 samples, 0.14%)</title><rect x="741.0" y="259.0" width="1.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="744.0" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/Cell.getKey (15 samples, 0.14%)</title><rect x="741.0" y="243.0" width="1.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="744.0" y="254.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (15 samples, 0.14%)</title><rect x="741.0" y="227.0" width="1.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="744.0" y="238.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (15 samples, 0.14%)</title><rect x="741.0" y="211.0" width="1.6" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="744.0" y="222.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.next (11 samples, 0.10%)</title><rect x="742.6" y="339.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="745.6" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$6.transform (11 samples, 0.10%)</title><rect x="742.6" y="323.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="745.6" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl$$Lambda$81/1054613018.apply (11 samples, 0.10%)</title><rect x="742.6" y="307.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="745.6" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.lambda$iterator$4 (11 samples, 0.10%)</title><rect x="742.6" y="291.0" width="1.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="745.6" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/Cell.getKey (4 samples, 0.04%)</title><rect x="742.6" y="275.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="745.6" y="286.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (4 samples, 0.04%)</title><rect x="742.6" y="259.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="745.6" y="270.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (4 samples, 0.04%)</title><rect x="742.6" y="243.0" width="0.5" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="745.6" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/Record.of (3 samples, 0.03%)</title><rect x="743.1" y="275.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="746.1" y="286.0"></text>
</g>
<g>
<title>ru.mail.polis.Record (3 samples, 0.03%)</title><rect x="743.1" y="259.0" width="0.3" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="746.1" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/Value.getData (4 samples, 0.04%)</title><rect x="743.4" y="275.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="746.4" y="286.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (4 samples, 0.04%)</title><rect x="743.4" y="259.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="746.4" y="270.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (4 samples, 0.04%)</title><rect x="743.4" y="243.0" width="0.5" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="746.4" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/Record.getKey (3 samples, 0.03%)</title><rect x="743.9" y="339.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="746.9" y="350.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (3 samples, 0.03%)</title><rect x="743.9" y="323.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="746.9" y="334.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (3 samples, 0.03%)</title><rect x="743.9" y="307.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="746.9" y="318.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (3 samples, 0.03%)</title><rect x="743.9" y="291.0" width="0.3" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="746.9" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.iterator (543 samples, 5.14%)</title><rect x="744.2" y="339.0" width="60.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="747.2" y="350.0">ru/mai..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.filter (6 samples, 0.06%)</title><rect x="744.2" y="323.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="747.2" y="334.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$5 (6 samples, 0.06%)</title><rect x="744.2" y="307.0" width="0.7" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="747.2" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.transform (5 samples, 0.05%)</title><rect x="744.9" y="323.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="747.9" y="334.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$6 (5 samples, 0.05%)</title><rect x="744.9" y="307.0" width="0.5" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="747.9" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$WriteLock.lock (3 samples, 0.03%)</title><rect x="745.4" y="323.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="748.4" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (3 samples, 0.03%)</title><rect x="745.4" y="307.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="748.4" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.addWaiter (3 samples, 0.03%)</title><rect x="745.4" y="291.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="748.4" y="302.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (3 samples, 0.03%)</title><rect x="745.4" y="275.0" width="0.4" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="748.4" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.compactIterator (529 samples, 5.00%)</title><rect x="745.8" y="323.0" width="59.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="748.8" y="334.0">ru/mai..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (95 samples, 0.90%)</title><rect x="745.8" y="307.0" width="10.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="748.8" y="318.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator (4 samples, 0.04%)</title><rect x="745.8" y="291.0" width="0.4" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="748.8" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (91 samples, 0.86%)</title><rect x="746.2" y="291.0" width="10.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="749.2" y="302.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator$1 (4 samples, 0.04%)</title><rect x="746.2" y="275.0" width="0.5" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="749.2" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.peekingIterator (7 samples, 0.07%)</title><rect x="746.7" y="275.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="749.7" y="286.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$PeekingImpl (7 samples, 0.07%)</title><rect x="746.7" y="259.0" width="0.7" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="749.7" y="270.0"></text>
</g>
<g>
<title>java.util.PriorityQueue (3 samples, 0.03%)</title><rect x="747.4" y="275.0" width="0.4" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="750.4" y="286.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.&lt;init&gt; (3 samples, 0.03%)</title><rect x="747.8" y="275.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="750.8" y="286.0"></text>
</g>
<g>
<title>java.lang.Object[] (3 samples, 0.03%)</title><rect x="747.8" y="259.0" width="0.3" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="750.8" y="270.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (74 samples, 0.70%)</title><rect x="748.1" y="275.0" width="8.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="751.1" y="286.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (74 samples, 0.70%)</title><rect x="748.1" y="259.0" width="8.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="751.1" y="270.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (74 samples, 0.70%)</title><rect x="748.1" y="243.0" width="8.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="751.1" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (74 samples, 0.70%)</title><rect x="748.1" y="227.0" width="8.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="751.1" y="238.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (74 samples, 0.70%)</title><rect x="748.1" y="211.0" width="8.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="751.1" y="222.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (74 samples, 0.70%)</title><rect x="748.1" y="195.0" width="8.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="751.1" y="206.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (70 samples, 0.66%)</title><rect x="748.1" y="179.0" width="7.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="751.1" y="190.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.next (5 samples, 0.05%)</title><rect x="748.1" y="163.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="751.1" y="174.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$6.transform (3 samples, 0.03%)</title><rect x="748.1" y="147.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="751.1" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/MemTable$$Lambda$73/2060859065.apply (3 samples, 0.03%)</title><rect x="748.1" y="131.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="751.1" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/MemTable.lambda$iterator$0 (3 samples, 0.03%)</title><rect x="748.1" y="115.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="751.1" y="126.0"></text>
</g>
<g>
<title>ru.mail.polis.Cell (3 samples, 0.03%)</title><rect x="748.1" y="99.0" width="0.3" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="751.1" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/SSTable$1.next (65 samples, 0.61%)</title><rect x="748.7" y="163.0" width="7.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="751.7" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/SSTable$1.next (65 samples, 0.61%)</title><rect x="748.7" y="147.0" width="7.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="751.7" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/SSTable.getCell (65 samples, 0.61%)</title><rect x="748.7" y="131.0" width="7.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="751.7" y="142.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (37 samples, 0.35%)</title><rect x="748.7" y="115.0" width="4.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="751.7" y="126.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (27 samples, 0.26%)</title><rect x="748.7" y="99.0" width="3.0" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="751.7" y="110.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (10 samples, 0.09%)</title><rect x="751.7" y="99.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="754.7" y="110.0"></text>
</g>
<g>
<title>byte[] (10 samples, 0.09%)</title><rect x="751.7" y="83.0" width="1.1" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="754.7" y="94.0"></text>
</g>
<g>
<title>ru.mail.polis.Cell (3 samples, 0.03%)</title><rect x="752.8" y="115.0" width="0.3" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="755.8" y="126.0"></text>
</g>
<g>
<title>ru.mail.polis.Value (9 samples, 0.09%)</title><rect x="753.1" y="115.0" width="1.0" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="756.1" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/SSTable.getOffset (16 samples, 0.15%)</title><rect x="754.1" y="115.0" width="1.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="757.1" y="126.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (16 samples, 0.15%)</title><rect x="754.1" y="99.0" width="1.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="757.1" y="110.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (10 samples, 0.09%)</title><rect x="754.1" y="83.0" width="1.2" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="757.1" y="94.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (6 samples, 0.06%)</title><rect x="755.3" y="83.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="758.3" y="94.0"></text>
</g>
<g>
<title>byte[] (6 samples, 0.06%)</title><rect x="755.3" y="67.0" width="0.6" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="758.3" y="78.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (4 samples, 0.04%)</title><rect x="755.9" y="179.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="758.9" y="190.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (4 samples, 0.04%)</title><rect x="755.9" y="163.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="758.9" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/Cell.compareTo (4 samples, 0.04%)</title><rect x="755.9" y="147.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="758.9" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/Cell.compareTo (4 samples, 0.04%)</title><rect x="755.9" y="131.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="758.9" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/Cell.getKey (4 samples, 0.04%)</title><rect x="755.9" y="115.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="758.9" y="126.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (4 samples, 0.04%)</title><rect x="755.9" y="99.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="758.9" y="110.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (4 samples, 0.04%)</title><rect x="755.9" y="83.0" width="0.5" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="758.9" y="94.0"></text>
</g>
<g>
<title>java.util.ArrayList (10 samples, 0.09%)</title><rect x="756.4" y="307.0" width="1.1" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="759.4" y="318.0"></text>
</g>
<g>
<title>java/lang/Iterable.forEach (317 samples, 3.00%)</title><rect x="757.5" y="307.0" width="35.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="760.5" y="318.0">jav..</text>
</g>
<g>
<title>java/util/AbstractMap$2.iterator (6 samples, 0.06%)</title><rect x="757.5" y="291.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="760.5" y="302.0"></text>
</g>
<g>
<title>java/util/AbstractMap$2$1.&lt;init&gt; (4 samples, 0.04%)</title><rect x="757.7" y="275.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="760.7" y="286.0"></text>
</g>
<g>
<title>java/util/TreeMap$DescendingSubMap$DescendingEntrySetView.iterator (4 samples, 0.04%)</title><rect x="757.7" y="259.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="760.7" y="270.0"></text>
</g>
<g>
<title>java.util.TreeMap$NavigableSubMap$DescendingSubMapEntryIterator (4 samples, 0.04%)</title><rect x="757.7" y="243.0" width="0.5" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="760.7" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl$$Lambda$77/345748904.accept (311 samples, 2.94%)</title><rect x="758.2" y="291.0" width="34.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="761.2" y="302.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.lambda$compactIterator$7 (311 samples, 2.94%)</title><rect x="758.2" y="275.0" width="34.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="761.2" y="286.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/SSTable.iterator (311 samples, 2.94%)</title><rect x="758.2" y="259.0" width="34.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="761.2" y="270.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/SSTable$1.&lt;init&gt; (309 samples, 2.92%)</title><rect x="758.4" y="243.0" width="34.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="761.4" y="254.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/SSTable.getPosition (309 samples, 2.92%)</title><rect x="758.4" y="227.0" width="34.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="761.4" y="238.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/SSTable.getKey (309 samples, 2.92%)</title><rect x="758.4" y="211.0" width="34.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="761.4" y="222.0">ru..</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (198 samples, 1.87%)</title><rect x="758.4" y="195.0" width="22.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="761.4" y="206.0">j..</text>
</g>
<g>
<title>java.nio.HeapByteBuffer (124 samples, 1.17%)</title><rect x="758.4" y="179.0" width="13.8" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="761.4" y="190.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (74 samples, 0.70%)</title><rect x="772.2" y="179.0" width="8.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="775.2" y="190.0"></text>
</g>
<g>
<title>byte[] (74 samples, 0.70%)</title><rect x="772.2" y="163.0" width="8.3" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="775.2" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/SSTable.getOffset (111 samples, 1.05%)</title><rect x="780.5" y="195.0" width="12.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="783.5" y="206.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (111 samples, 1.05%)</title><rect x="780.5" y="179.0" width="12.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="783.5" y="190.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (79 samples, 0.75%)</title><rect x="780.5" y="163.0" width="8.8" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="783.5" y="174.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (32 samples, 0.30%)</title><rect x="789.3" y="163.0" width="3.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="792.3" y="174.0"></text>
</g>
<g>
<title>byte[] (32 samples, 0.30%)</title><rect x="789.3" y="147.0" width="3.6" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="792.3" y="158.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (4 samples, 0.04%)</title><rect x="792.9" y="307.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="795.9" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (4 samples, 0.04%)</title><rect x="792.9" y="291.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="795.9" y="302.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (5 samples, 0.05%)</title><rect x="793.3" y="307.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="796.3" y="318.0"></text>
</g>
<g>
<title>java.lang.Object[] (5 samples, 0.05%)</title><rect x="793.3" y="291.0" width="0.6" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="796.3" y="302.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection.forEach (3 samples, 0.03%)</title><rect x="793.9" y="307.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="796.9" y="318.0"></text>
</g>
<g>
<title>java/lang/Iterable.forEach (3 samples, 0.03%)</title><rect x="793.9" y="291.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="796.9" y="302.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (3 samples, 0.03%)</title><rect x="793.9" y="275.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="796.9" y="286.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (3 samples, 0.03%)</title><rect x="793.9" y="259.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="796.9" y="270.0"></text>
</g>
<g>
<title>java.util.HashMap$KeyIterator (3 samples, 0.03%)</title><rect x="793.9" y="243.0" width="0.3" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="796.9" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/MemTable.iterator (11 samples, 0.10%)</title><rect x="794.2" y="307.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="797.2" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.transform (5 samples, 0.05%)</title><rect x="794.2" y="291.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="797.2" y="302.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$6 (5 samples, 0.05%)</title><rect x="794.2" y="275.0" width="0.6" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="797.2" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (4 samples, 0.04%)</title><rect x="795.0" y="291.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="798.0" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (4 samples, 0.04%)</title><rect x="795.0" y="275.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="798.0" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (4 samples, 0.04%)</title><rect x="795.0" y="259.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="798.0" y="270.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap (4 samples, 0.04%)</title><rect x="795.0" y="243.0" width="0.4" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="798.0" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (84 samples, 0.79%)</title><rect x="795.4" y="307.0" width="9.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="798.4" y="318.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.Iters$CollapseEqualsIterator (3 samples, 0.03%)</title><rect x="795.4" y="291.0" width="0.4" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="798.4" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (81 samples, 0.77%)</title><rect x="795.8" y="291.0" width="9.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="798.8" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (81 samples, 0.77%)</title><rect x="795.8" y="275.0" width="9.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="798.8" y="286.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (81 samples, 0.77%)</title><rect x="795.8" y="259.0" width="9.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="798.8" y="270.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (81 samples, 0.77%)</title><rect x="795.8" y="243.0" width="9.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="798.8" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (81 samples, 0.77%)</title><rect x="795.8" y="227.0" width="9.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="798.8" y="238.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (81 samples, 0.77%)</title><rect x="795.8" y="211.0" width="9.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="798.8" y="222.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (81 samples, 0.77%)</title><rect x="795.8" y="195.0" width="9.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="798.8" y="206.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (81 samples, 0.77%)</title><rect x="795.8" y="179.0" width="9.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="798.8" y="190.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (75 samples, 0.71%)</title><rect x="795.8" y="163.0" width="8.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="798.8" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/SSTable$1.next (75 samples, 0.71%)</title><rect x="795.8" y="147.0" width="8.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="798.8" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/SSTable$1.next (75 samples, 0.71%)</title><rect x="795.8" y="131.0" width="8.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="798.8" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/SSTable.getCell (75 samples, 0.71%)</title><rect x="795.8" y="115.0" width="8.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="798.8" y="126.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (35 samples, 0.33%)</title><rect x="795.8" y="99.0" width="3.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="798.8" y="110.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (22 samples, 0.21%)</title><rect x="795.8" y="83.0" width="2.4" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="798.8" y="94.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (13 samples, 0.12%)</title><rect x="798.2" y="83.0" width="1.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="801.2" y="94.0"></text>
</g>
<g>
<title>byte[] (13 samples, 0.12%)</title><rect x="798.2" y="67.0" width="1.5" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="801.2" y="78.0"></text>
</g>
<g>
<title>ru.mail.polis.Cell (4 samples, 0.04%)</title><rect x="799.7" y="99.0" width="0.4" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="802.7" y="110.0"></text>
</g>
<g>
<title>ru.mail.polis.Value (6 samples, 0.06%)</title><rect x="800.1" y="99.0" width="0.7" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="803.1" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/SSTable.getOffset (30 samples, 0.28%)</title><rect x="800.8" y="99.0" width="3.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="803.8" y="110.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (30 samples, 0.28%)</title><rect x="800.8" y="83.0" width="3.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="803.8" y="94.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (19 samples, 0.18%)</title><rect x="800.8" y="67.0" width="2.1" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="803.8" y="78.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (11 samples, 0.10%)</title><rect x="802.9" y="67.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="805.9" y="78.0"></text>
</g>
<g>
<title>byte[] (11 samples, 0.10%)</title><rect x="802.9" y="51.0" width="1.2" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="805.9" y="62.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (6 samples, 0.06%)</title><rect x="804.1" y="163.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="807.1" y="174.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (6 samples, 0.06%)</title><rect x="804.1" y="147.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="807.1" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/Cell.compareTo (6 samples, 0.06%)</title><rect x="804.1" y="131.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="807.1" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/Cell.compareTo (6 samples, 0.06%)</title><rect x="804.1" y="115.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="807.1" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/Cell.getKey (6 samples, 0.06%)</title><rect x="804.1" y="99.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="807.1" y="110.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (6 samples, 0.06%)</title><rect x="804.1" y="83.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="807.1" y="94.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (6 samples, 0.06%)</title><rect x="804.1" y="67.0" width="0.7" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="807.1" y="78.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivlev/ThreadController.equalsUrlNode (25 samples, 0.24%)</title><rect x="804.8" y="355.0" width="2.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="807.8" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/TopologyImpl.getNodeByKey (25 samples, 0.24%)</title><rect x="804.8" y="339.0" width="2.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="807.8" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/TopologyImpl.getNodeByKey (25 samples, 0.24%)</title><rect x="804.8" y="323.0" width="2.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="807.8" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (25 samples, 0.24%)</title><rect x="804.8" y="307.0" width="2.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="807.8" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1019384604.invoke (25 samples, 0.24%)</title><rect x="804.8" y="291.0" width="2.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="807.8" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (25 samples, 0.24%)</title><rect x="804.8" y="275.0" width="2.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="807.8" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (25 samples, 0.24%)</title><rect x="804.8" y="259.0" width="2.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="807.8" y="270.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (25 samples, 0.24%)</title><rect x="804.8" y="243.0" width="2.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="807.8" y="254.0"></text>
</g>
<g>
<title>byte[] (25 samples, 0.24%)</title><rect x="804.8" y="227.0" width="2.8" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="807.8" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivlev/ThreadController.toByteBuffer (8 samples, 0.08%)</title><rect x="807.6" y="355.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="810.6" y="366.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (3 samples, 0.03%)</title><rect x="807.6" y="339.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="810.6" y="350.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (3 samples, 0.03%)</title><rect x="807.6" y="323.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="810.6" y="334.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (3 samples, 0.03%)</title><rect x="807.6" y="307.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="810.6" y="318.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (3 samples, 0.03%)</title><rect x="807.6" y="291.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="810.6" y="302.0"></text>
</g>
<g>
<title>byte[] (3 samples, 0.03%)</title><rect x="807.6" y="275.0" width="0.3" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="810.6" y="286.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (5 samples, 0.05%)</title><rect x="807.9" y="339.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="810.9" y="350.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (5 samples, 0.05%)</title><rect x="807.9" y="323.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="810.9" y="334.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (5 samples, 0.05%)</title><rect x="807.9" y="307.0" width="0.6" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="810.9" y="318.0"></text>
</g>
<g>
<title>[worker_3 tid=59721] (688 samples, 6.51%)</title><rect x="808.5" y="451.0" width="76.8" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="811.5" y="462.0">[worker_..</text>
</g>
<g>
<title>java/lang/Thread.run (688 samples, 6.51%)</title><rect x="808.5" y="435.0" width="76.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="811.5" y="446.0">java/lan..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (688 samples, 6.51%)</title><rect x="808.5" y="419.0" width="76.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="811.5" y="430.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (688 samples, 6.51%)</title><rect x="808.5" y="403.0" width="76.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="811.5" y="414.0">java/uti..</text>
</g>
<g>
<title>ru/mail/polis/service/ivlev/ThreadController$$Lambda$75/769197572.run (687 samples, 6.50%)</title><rect x="808.6" y="387.0" width="76.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="811.6" y="398.0">ru/mail/..</text>
</g>
<g>
<title>ru/mail/polis/service/ivlev/ThreadController.lambda$get$1 (687 samples, 6.50%)</title><rect x="808.6" y="371.0" width="76.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="811.6" y="382.0">ru/mail/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (14 samples, 0.13%)</title><rect x="808.8" y="355.0" width="1.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="811.8" y="366.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (14 samples, 0.13%)</title><rect x="808.8" y="339.0" width="1.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="811.8" y="350.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (9 samples, 0.09%)</title><rect x="808.8" y="323.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="811.8" y="334.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (9 samples, 0.09%)</title><rect x="808.8" y="307.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="811.8" y="318.0"></text>
</g>
<g>
<title>byte[] (9 samples, 0.09%)</title><rect x="808.8" y="291.0" width="1.0" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="811.8" y="302.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (5 samples, 0.05%)</title><rect x="809.8" y="323.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="812.8" y="334.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (5 samples, 0.05%)</title><rect x="809.8" y="307.0" width="0.6" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="812.8" y="318.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (12 samples, 0.11%)</title><rect x="810.4" y="355.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="813.4" y="366.0"></text>
</g>
<g>
<title>byte[] (5 samples, 0.05%)</title><rect x="810.4" y="339.0" width="0.6" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="813.4" y="350.0"></text>
</g>
<g>
<title>java.lang.String[] (3 samples, 0.03%)</title><rect x="811.0" y="339.0" width="0.3" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="814.0" y="350.0"></text>
</g>
<g>
<title>java.lang.String (4 samples, 0.04%)</title><rect x="811.3" y="339.0" width="0.4" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="814.3" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.get (627 samples, 5.93%)</title><rect x="811.7" y="355.0" width="70.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="814.7" y="366.0">ru/mail..</text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (60 samples, 0.57%)</title><rect x="811.7" y="339.0" width="6.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="814.7" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (60 samples, 0.57%)</title><rect x="811.7" y="323.0" width="6.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="814.7" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (60 samples, 0.57%)</title><rect x="811.7" y="307.0" width="6.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="814.7" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (60 samples, 0.57%)</title><rect x="811.7" y="291.0" width="6.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="814.7" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (60 samples, 0.57%)</title><rect x="811.7" y="275.0" width="6.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="814.7" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (50 samples, 0.47%)</title><rect x="811.7" y="259.0" width="5.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="814.7" y="270.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (50 samples, 0.47%)</title><rect x="811.7" y="243.0" width="5.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="814.7" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (50 samples, 0.47%)</title><rect x="811.7" y="227.0" width="5.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="814.7" y="238.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (50 samples, 0.47%)</title><rect x="811.7" y="211.0" width="5.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="814.7" y="222.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (50 samples, 0.47%)</title><rect x="811.7" y="195.0" width="5.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="814.7" y="206.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (50 samples, 0.47%)</title><rect x="811.7" y="179.0" width="5.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="814.7" y="190.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (50 samples, 0.47%)</title><rect x="811.7" y="163.0" width="5.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="814.7" y="174.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (47 samples, 0.44%)</title><rect x="811.7" y="147.0" width="5.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="814.7" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/SSTable$1.next (47 samples, 0.44%)</title><rect x="811.7" y="131.0" width="5.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="814.7" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/SSTable$1.next (47 samples, 0.44%)</title><rect x="811.7" y="115.0" width="5.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="814.7" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/SSTable.getCell (47 samples, 0.44%)</title><rect x="811.7" y="99.0" width="5.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="814.7" y="110.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (30 samples, 0.28%)</title><rect x="811.7" y="83.0" width="3.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="814.7" y="94.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (16 samples, 0.15%)</title><rect x="811.7" y="67.0" width="1.8" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="814.7" y="78.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (14 samples, 0.13%)</title><rect x="813.5" y="67.0" width="1.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="816.5" y="78.0"></text>
</g>
<g>
<title>byte[] (14 samples, 0.13%)</title><rect x="813.5" y="51.0" width="1.6" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="816.5" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/SSTable.getOffset (14 samples, 0.13%)</title><rect x="815.4" y="83.0" width="1.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="818.4" y="94.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (14 samples, 0.13%)</title><rect x="815.4" y="67.0" width="1.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="818.4" y="78.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (7 samples, 0.07%)</title><rect x="815.4" y="51.0" width="0.8" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="818.4" y="62.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (7 samples, 0.07%)</title><rect x="816.2" y="51.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="819.2" y="62.0"></text>
</g>
<g>
<title>byte[] (7 samples, 0.07%)</title><rect x="816.2" y="35.0" width="0.8" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="819.2" y="46.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (3 samples, 0.03%)</title><rect x="817.0" y="147.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="820.0" y="158.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (3 samples, 0.03%)</title><rect x="817.0" y="131.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="820.0" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/Cell.compareTo (3 samples, 0.03%)</title><rect x="817.0" y="115.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="820.0" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/Cell.compareTo (3 samples, 0.03%)</title><rect x="817.0" y="99.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="820.0" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/Cell.getKey (3 samples, 0.03%)</title><rect x="817.0" y="83.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="820.0" y="94.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (3 samples, 0.03%)</title><rect x="817.0" y="67.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="820.0" y="78.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (3 samples, 0.03%)</title><rect x="817.0" y="51.0" width="0.3" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="820.0" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl$$Lambda$79/1480278998.apply (10 samples, 0.09%)</title><rect x="817.3" y="259.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="820.3" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/Cell.getKey (10 samples, 0.09%)</title><rect x="817.3" y="243.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="820.3" y="254.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (10 samples, 0.09%)</title><rect x="817.3" y="227.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="820.3" y="238.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (10 samples, 0.09%)</title><rect x="817.3" y="211.0" width="1.1" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="820.3" y="222.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.next (10 samples, 0.09%)</title><rect x="818.4" y="339.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="821.4" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$6.transform (10 samples, 0.09%)</title><rect x="818.4" y="323.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="821.4" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl$$Lambda$81/1054613018.apply (10 samples, 0.09%)</title><rect x="818.4" y="307.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="821.4" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.lambda$iterator$4 (10 samples, 0.09%)</title><rect x="818.4" y="291.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="821.4" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/Value.getData (8 samples, 0.08%)</title><rect x="818.7" y="275.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="821.7" y="286.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (8 samples, 0.08%)</title><rect x="818.7" y="259.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="821.7" y="270.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (8 samples, 0.08%)</title><rect x="818.7" y="243.0" width="0.8" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="821.7" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/Record.getKey (5 samples, 0.05%)</title><rect x="819.5" y="339.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="822.5" y="350.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (5 samples, 0.05%)</title><rect x="819.5" y="323.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="822.5" y="334.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (5 samples, 0.05%)</title><rect x="819.5" y="307.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="822.5" y="318.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (5 samples, 0.05%)</title><rect x="819.5" y="291.0" width="0.6" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="822.5" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.iterator (552 samples, 5.22%)</title><rect x="820.1" y="339.0" width="61.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="823.1" y="350.0">ru/mai..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.filter (5 samples, 0.05%)</title><rect x="820.1" y="323.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="823.1" y="334.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$5 (5 samples, 0.05%)</title><rect x="820.1" y="307.0" width="0.6" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="823.1" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.transform (5 samples, 0.05%)</title><rect x="820.7" y="323.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="823.7" y="334.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$6 (5 samples, 0.05%)</title><rect x="820.7" y="307.0" width="0.5" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="823.7" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.compactIterator (540 samples, 5.11%)</title><rect x="821.4" y="323.0" width="60.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="824.4" y="334.0">ru/mai..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (94 samples, 0.89%)</title><rect x="821.4" y="307.0" width="10.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="824.4" y="318.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator (3 samples, 0.03%)</title><rect x="821.4" y="291.0" width="0.4" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="824.4" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (91 samples, 0.86%)</title><rect x="821.8" y="291.0" width="10.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="824.8" y="302.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator$1 (3 samples, 0.03%)</title><rect x="821.8" y="275.0" width="0.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="824.8" y="286.0"></text>
</g>
<g>
<title>java.util.PriorityQueue (3 samples, 0.03%)</title><rect x="822.3" y="275.0" width="0.4" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="825.3" y="286.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.&lt;init&gt; (4 samples, 0.04%)</title><rect x="822.7" y="275.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="825.7" y="286.0"></text>
</g>
<g>
<title>java.lang.Object[] (4 samples, 0.04%)</title><rect x="822.7" y="259.0" width="0.4" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="825.7" y="270.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (79 samples, 0.75%)</title><rect x="823.1" y="275.0" width="8.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="826.1" y="286.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (79 samples, 0.75%)</title><rect x="823.1" y="259.0" width="8.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="826.1" y="270.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (79 samples, 0.75%)</title><rect x="823.1" y="243.0" width="8.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="826.1" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (79 samples, 0.75%)</title><rect x="823.1" y="227.0" width="8.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="826.1" y="238.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (79 samples, 0.75%)</title><rect x="823.1" y="211.0" width="8.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="826.1" y="222.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (79 samples, 0.75%)</title><rect x="823.1" y="195.0" width="8.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="826.1" y="206.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (76 samples, 0.72%)</title><rect x="823.1" y="179.0" width="8.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="826.1" y="190.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.next (6 samples, 0.06%)</title><rect x="823.1" y="163.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="826.1" y="174.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$6.transform (4 samples, 0.04%)</title><rect x="823.1" y="147.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="826.1" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/MemTable$$Lambda$73/2060859065.apply (4 samples, 0.04%)</title><rect x="823.1" y="131.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="826.1" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/MemTable.lambda$iterator$0 (4 samples, 0.04%)</title><rect x="823.1" y="115.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="826.1" y="126.0"></text>
</g>
<g>
<title>ru.mail.polis.Cell (4 samples, 0.04%)</title><rect x="823.1" y="99.0" width="0.5" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="826.1" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/SSTable$1.next (70 samples, 0.66%)</title><rect x="823.8" y="163.0" width="7.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="826.8" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/SSTable$1.next (70 samples, 0.66%)</title><rect x="823.8" y="147.0" width="7.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="826.8" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/SSTable.getCell (70 samples, 0.66%)</title><rect x="823.8" y="131.0" width="7.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="826.8" y="142.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (42 samples, 0.40%)</title><rect x="823.8" y="115.0" width="4.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="826.8" y="126.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (28 samples, 0.26%)</title><rect x="823.8" y="99.0" width="3.1" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="826.8" y="110.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (14 samples, 0.13%)</title><rect x="826.9" y="99.0" width="1.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="829.9" y="110.0"></text>
</g>
<g>
<title>byte[] (14 samples, 0.13%)</title><rect x="826.9" y="83.0" width="1.6" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="829.9" y="94.0"></text>
</g>
<g>
<title>ru.mail.polis.Cell (3 samples, 0.03%)</title><rect x="828.5" y="115.0" width="0.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="831.5" y="126.0"></text>
</g>
<g>
<title>ru.mail.polis.Value (4 samples, 0.04%)</title><rect x="828.8" y="115.0" width="0.5" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="831.8" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/SSTable.getOffset (21 samples, 0.20%)</title><rect x="829.3" y="115.0" width="2.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="832.3" y="126.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (21 samples, 0.20%)</title><rect x="829.3" y="99.0" width="2.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="832.3" y="110.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (17 samples, 0.16%)</title><rect x="829.3" y="83.0" width="1.9" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="832.3" y="94.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (4 samples, 0.04%)</title><rect x="831.2" y="83.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="834.2" y="94.0"></text>
</g>
<g>
<title>byte[] (4 samples, 0.04%)</title><rect x="831.2" y="67.0" width="0.4" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="834.2" y="78.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (3 samples, 0.03%)</title><rect x="831.6" y="179.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="834.6" y="190.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (3 samples, 0.03%)</title><rect x="831.6" y="163.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="834.6" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/Cell.compareTo (3 samples, 0.03%)</title><rect x="831.6" y="147.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="834.6" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/Cell.compareTo (3 samples, 0.03%)</title><rect x="831.6" y="131.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="834.6" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/Cell.getKey (3 samples, 0.03%)</title><rect x="831.6" y="115.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="834.6" y="126.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (3 samples, 0.03%)</title><rect x="831.6" y="99.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="834.6" y="110.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (3 samples, 0.03%)</title><rect x="831.6" y="83.0" width="0.3" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="834.6" y="94.0"></text>
</g>
<g>
<title>java.util.ArrayList (7 samples, 0.07%)</title><rect x="831.9" y="307.0" width="0.8" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="834.9" y="318.0"></text>
</g>
<g>
<title>java/lang/Iterable.forEach (351 samples, 3.32%)</title><rect x="832.7" y="307.0" width="39.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="835.7" y="318.0">jav..</text>
</g>
<g>
<title>java/util/AbstractMap$2.iterator (8 samples, 0.08%)</title><rect x="832.7" y="291.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="835.7" y="302.0"></text>
</g>
<g>
<title>java.util.AbstractMap$2$1 (3 samples, 0.03%)</title><rect x="832.7" y="275.0" width="0.4" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="835.7" y="286.0"></text>
</g>
<g>
<title>java/util/AbstractMap$2$1.&lt;init&gt; (5 samples, 0.05%)</title><rect x="833.1" y="275.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="836.1" y="286.0"></text>
</g>
<g>
<title>java/util/TreeMap$DescendingSubMap$DescendingEntrySetView.iterator (5 samples, 0.05%)</title><rect x="833.1" y="259.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="836.1" y="270.0"></text>
</g>
<g>
<title>java.util.TreeMap$NavigableSubMap$DescendingSubMapEntryIterator (5 samples, 0.05%)</title><rect x="833.1" y="243.0" width="0.5" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="836.1" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl$$Lambda$77/345748904.accept (343 samples, 3.24%)</title><rect x="833.6" y="291.0" width="38.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="836.6" y="302.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.lambda$compactIterator$7 (343 samples, 3.24%)</title><rect x="833.6" y="275.0" width="38.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="836.6" y="286.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/SSTable.iterator (343 samples, 3.24%)</title><rect x="833.6" y="259.0" width="38.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="836.6" y="270.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/SSTable$1.&lt;init&gt; (343 samples, 3.24%)</title><rect x="833.6" y="243.0" width="38.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="836.6" y="254.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/SSTable.getPosition (343 samples, 3.24%)</title><rect x="833.6" y="227.0" width="38.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="836.6" y="238.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/SSTable.getKey (343 samples, 3.24%)</title><rect x="833.6" y="211.0" width="38.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="836.6" y="222.0">ru/..</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (228 samples, 2.16%)</title><rect x="833.6" y="195.0" width="25.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="836.6" y="206.0">j..</text>
</g>
<g>
<title>java.nio.HeapByteBuffer (168 samples, 1.59%)</title><rect x="833.6" y="179.0" width="18.8" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="836.6" y="190.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (60 samples, 0.57%)</title><rect x="852.4" y="179.0" width="6.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="855.4" y="190.0"></text>
</g>
<g>
<title>byte[] (60 samples, 0.57%)</title><rect x="852.4" y="163.0" width="6.7" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="855.4" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/SSTable.getOffset (115 samples, 1.09%)</title><rect x="859.1" y="195.0" width="12.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="862.1" y="206.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (115 samples, 1.09%)</title><rect x="859.1" y="179.0" width="12.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="862.1" y="190.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (85 samples, 0.80%)</title><rect x="859.1" y="163.0" width="9.4" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="862.1" y="174.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (30 samples, 0.28%)</title><rect x="868.5" y="163.0" width="3.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="871.5" y="174.0"></text>
</g>
<g>
<title>byte[] (30 samples, 0.28%)</title><rect x="868.5" y="147.0" width="3.4" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="871.5" y="158.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (8 samples, 0.08%)</title><rect x="871.9" y="307.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="874.9" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (8 samples, 0.08%)</title><rect x="871.9" y="291.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="874.9" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl$$Lambda$77/345748904.get$Lambda (3 samples, 0.03%)</title><rect x="871.9" y="275.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="874.9" y="286.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.impl.DAOImpl$$Lambda$77 (3 samples, 0.03%)</title><rect x="871.9" y="259.0" width="0.3" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="874.9" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl$$Lambda$78/1013735398.get$Lambda (5 samples, 0.05%)</title><rect x="872.2" y="275.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="875.2" y="286.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.impl.DAOImpl$$Lambda$78 (5 samples, 0.05%)</title><rect x="872.2" y="259.0" width="0.6" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="875.2" y="270.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (3 samples, 0.03%)</title><rect x="872.8" y="307.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="875.8" y="318.0"></text>
</g>
<g>
<title>java.lang.Object[] (3 samples, 0.03%)</title><rect x="872.8" y="291.0" width="0.3" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="875.8" y="302.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection.forEach (9 samples, 0.09%)</title><rect x="873.1" y="307.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="876.1" y="318.0"></text>
</g>
<g>
<title>java/lang/Iterable.forEach (9 samples, 0.09%)</title><rect x="873.1" y="291.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="876.1" y="302.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (9 samples, 0.09%)</title><rect x="873.1" y="275.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="876.1" y="286.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (9 samples, 0.09%)</title><rect x="873.1" y="259.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="876.1" y="270.0"></text>
</g>
<g>
<title>java.util.HashMap$KeyIterator (9 samples, 0.09%)</title><rect x="873.1" y="243.0" width="1.0" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="876.1" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/MemTable.iterator (12 samples, 0.11%)</title><rect x="874.1" y="307.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="877.1" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$EntrySet.iterator (3 samples, 0.03%)</title><rect x="874.2" y="291.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="877.2" y="302.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapEntryIterator (3 samples, 0.03%)</title><rect x="874.2" y="275.0" width="0.4" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="877.2" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (7 samples, 0.07%)</title><rect x="874.7" y="291.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="877.7" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (7 samples, 0.07%)</title><rect x="874.7" y="275.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="877.7" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (7 samples, 0.07%)</title><rect x="874.7" y="259.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="877.7" y="270.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap (7 samples, 0.07%)</title><rect x="874.7" y="243.0" width="0.8" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="877.7" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (56 samples, 0.53%)</title><rect x="875.5" y="307.0" width="6.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="878.5" y="318.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.Iters$CollapseEqualsIterator (4 samples, 0.04%)</title><rect x="875.5" y="291.0" width="0.4" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="878.5" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (52 samples, 0.49%)</title><rect x="875.9" y="291.0" width="5.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="878.9" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (52 samples, 0.49%)</title><rect x="875.9" y="275.0" width="5.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="878.9" y="286.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (52 samples, 0.49%)</title><rect x="875.9" y="259.0" width="5.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="878.9" y="270.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (52 samples, 0.49%)</title><rect x="875.9" y="243.0" width="5.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="878.9" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (52 samples, 0.49%)</title><rect x="875.9" y="227.0" width="5.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="878.9" y="238.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (52 samples, 0.49%)</title><rect x="875.9" y="211.0" width="5.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="878.9" y="222.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (52 samples, 0.49%)</title><rect x="875.9" y="195.0" width="5.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="878.9" y="206.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (52 samples, 0.49%)</title><rect x="875.9" y="179.0" width="5.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="878.9" y="190.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (50 samples, 0.47%)</title><rect x="875.9" y="163.0" width="5.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="878.9" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/SSTable$1.next (50 samples, 0.47%)</title><rect x="875.9" y="147.0" width="5.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="878.9" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/SSTable$1.next (50 samples, 0.47%)</title><rect x="875.9" y="131.0" width="5.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="878.9" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/SSTable.getCell (50 samples, 0.47%)</title><rect x="875.9" y="115.0" width="5.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="878.9" y="126.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (34 samples, 0.32%)</title><rect x="875.9" y="99.0" width="3.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="878.9" y="110.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (23 samples, 0.22%)</title><rect x="875.9" y="83.0" width="2.6" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="878.9" y="94.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (11 samples, 0.10%)</title><rect x="878.5" y="83.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="881.5" y="94.0"></text>
</g>
<g>
<title>byte[] (11 samples, 0.10%)</title><rect x="878.5" y="67.0" width="1.2" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="881.5" y="78.0"></text>
</g>
<g>
<title>ru/mail/polis/SSTable.getOffset (14 samples, 0.13%)</title><rect x="879.9" y="99.0" width="1.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="882.9" y="110.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (14 samples, 0.13%)</title><rect x="879.9" y="83.0" width="1.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="882.9" y="94.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (10 samples, 0.09%)</title><rect x="879.9" y="67.0" width="1.1" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="882.9" y="78.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (4 samples, 0.04%)</title><rect x="881.0" y="67.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="884.0" y="78.0"></text>
</g>
<g>
<title>byte[] (4 samples, 0.04%)</title><rect x="881.0" y="51.0" width="0.5" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="884.0" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivlev/ThreadController.equalsUrlNode (24 samples, 0.23%)</title><rect x="881.7" y="355.0" width="2.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="884.7" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/TopologyImpl.getNodeByKey (24 samples, 0.23%)</title><rect x="881.7" y="339.0" width="2.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="884.7" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/TopologyImpl.getNodeByKey (24 samples, 0.23%)</title><rect x="881.7" y="323.0" width="2.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="884.7" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (24 samples, 0.23%)</title><rect x="881.7" y="307.0" width="2.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="884.7" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1019384604.invoke (24 samples, 0.23%)</title><rect x="881.7" y="291.0" width="2.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="884.7" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (24 samples, 0.23%)</title><rect x="881.7" y="275.0" width="2.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="884.7" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (24 samples, 0.23%)</title><rect x="881.7" y="259.0" width="2.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="884.7" y="270.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (24 samples, 0.23%)</title><rect x="881.7" y="243.0" width="2.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="884.7" y="254.0"></text>
</g>
<g>
<title>byte[] (24 samples, 0.23%)</title><rect x="881.7" y="227.0" width="2.7" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="884.7" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivlev/ThreadController.toByteBuffer (7 samples, 0.07%)</title><rect x="884.5" y="355.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="887.5" y="366.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (4 samples, 0.04%)</title><rect x="884.5" y="339.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="887.5" y="350.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (4 samples, 0.04%)</title><rect x="884.5" y="323.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="887.5" y="334.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (4 samples, 0.04%)</title><rect x="884.5" y="307.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="887.5" y="318.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (4 samples, 0.04%)</title><rect x="884.5" y="291.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="887.5" y="302.0"></text>
</g>
<g>
<title>byte[] (4 samples, 0.04%)</title><rect x="884.5" y="275.0" width="0.5" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="887.5" y="286.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (3 samples, 0.03%)</title><rect x="885.0" y="339.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="888.0" y="350.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (3 samples, 0.03%)</title><rect x="885.0" y="323.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="888.0" y="334.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (3 samples, 0.03%)</title><rect x="885.0" y="307.0" width="0.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="888.0" y="318.0"></text>
</g>
<g>
<title>[worker_4 tid=59722] (684 samples, 6.47%)</title><rect x="885.3" y="451.0" width="76.3" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="888.3" y="462.0">[worker_..</text>
</g>
<g>
<title>java/lang/Thread.run (684 samples, 6.47%)</title><rect x="885.3" y="435.0" width="76.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="888.3" y="446.0">java/lan..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (684 samples, 6.47%)</title><rect x="885.3" y="419.0" width="76.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="888.3" y="430.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (684 samples, 6.47%)</title><rect x="885.3" y="403.0" width="76.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="888.3" y="414.0">java/uti..</text>
</g>
<g>
<title>ru/mail/polis/service/ivlev/ThreadController$$Lambda$75/769197572.run (684 samples, 6.47%)</title><rect x="885.3" y="387.0" width="76.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="888.3" y="398.0">ru/mail/..</text>
</g>
<g>
<title>ru/mail/polis/service/ivlev/ThreadController.lambda$get$1 (684 samples, 6.47%)</title><rect x="885.3" y="371.0" width="76.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="888.3" y="382.0">ru/mail/..</text>
</g>
<g>
<title>one.nio.http.Response (5 samples, 0.05%)</title><rect x="885.3" y="355.0" width="0.5" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="888.3" y="366.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (19 samples, 0.18%)</title><rect x="885.8" y="355.0" width="2.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="888.8" y="366.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (19 samples, 0.18%)</title><rect x="885.8" y="339.0" width="2.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="888.8" y="350.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (15 samples, 0.14%)</title><rect x="885.8" y="323.0" width="1.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="888.8" y="334.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (15 samples, 0.14%)</title><rect x="885.8" y="307.0" width="1.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="888.8" y="318.0"></text>
</g>
<g>
<title>byte[] (15 samples, 0.14%)</title><rect x="885.8" y="291.0" width="1.7" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="888.8" y="302.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (4 samples, 0.04%)</title><rect x="887.5" y="323.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="890.5" y="334.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (4 samples, 0.04%)</title><rect x="887.5" y="307.0" width="0.5" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="890.5" y="318.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (10 samples, 0.09%)</title><rect x="888.0" y="355.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="891.0" y="366.0"></text>
</g>
<g>
<title>byte[] (6 samples, 0.06%)</title><rect x="888.0" y="339.0" width="0.6" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="891.0" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.get (620 samples, 5.86%)</title><rect x="889.1" y="355.0" width="69.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="892.1" y="366.0">ru/mail..</text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (74 samples, 0.70%)</title><rect x="889.1" y="339.0" width="8.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="892.1" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (74 samples, 0.70%)</title><rect x="889.1" y="323.0" width="8.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="892.1" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (74 samples, 0.70%)</title><rect x="889.1" y="307.0" width="8.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="892.1" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (74 samples, 0.70%)</title><rect x="889.1" y="291.0" width="8.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="892.1" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (74 samples, 0.70%)</title><rect x="889.1" y="275.0" width="8.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="892.1" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (62 samples, 0.59%)</title><rect x="889.1" y="259.0" width="6.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="892.1" y="270.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (62 samples, 0.59%)</title><rect x="889.1" y="243.0" width="6.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="892.1" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (62 samples, 0.59%)</title><rect x="889.1" y="227.0" width="6.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="892.1" y="238.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (62 samples, 0.59%)</title><rect x="889.1" y="211.0" width="6.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="892.1" y="222.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (62 samples, 0.59%)</title><rect x="889.1" y="195.0" width="6.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="892.1" y="206.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (62 samples, 0.59%)</title><rect x="889.1" y="179.0" width="6.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="892.1" y="190.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (62 samples, 0.59%)</title><rect x="889.1" y="163.0" width="6.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="892.1" y="174.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (60 samples, 0.57%)</title><rect x="889.1" y="147.0" width="6.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="892.1" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/SSTable$1.next (60 samples, 0.57%)</title><rect x="889.1" y="131.0" width="6.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="892.1" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/SSTable$1.next (60 samples, 0.57%)</title><rect x="889.1" y="115.0" width="6.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="892.1" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/SSTable.getCell (60 samples, 0.57%)</title><rect x="889.1" y="99.0" width="6.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="892.1" y="110.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (37 samples, 0.35%)</title><rect x="889.1" y="83.0" width="4.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="892.1" y="94.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (27 samples, 0.26%)</title><rect x="889.1" y="67.0" width="3.0" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="892.1" y="78.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (10 samples, 0.09%)</title><rect x="892.1" y="67.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="895.1" y="78.0"></text>
</g>
<g>
<title>byte[] (10 samples, 0.09%)</title><rect x="892.1" y="51.0" width="1.1" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="895.1" y="62.0"></text>
</g>
<g>
<title>ru.mail.polis.Cell (3 samples, 0.03%)</title><rect x="893.2" y="83.0" width="0.3" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="896.2" y="94.0"></text>
</g>
<g>
<title>ru.mail.polis.Value (3 samples, 0.03%)</title><rect x="893.5" y="83.0" width="0.4" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="896.5" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/SSTable.getOffset (17 samples, 0.16%)</title><rect x="893.9" y="83.0" width="1.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="896.9" y="94.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (17 samples, 0.16%)</title><rect x="893.9" y="67.0" width="1.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="896.9" y="78.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (12 samples, 0.11%)</title><rect x="893.9" y="51.0" width="1.3" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="896.9" y="62.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (5 samples, 0.05%)</title><rect x="895.2" y="51.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="898.2" y="62.0"></text>
</g>
<g>
<title>byte[] (5 samples, 0.05%)</title><rect x="895.2" y="35.0" width="0.6" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="898.2" y="46.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl$$Lambda$79/1480278998.apply (12 samples, 0.11%)</title><rect x="896.0" y="259.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="899.0" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/Cell.getKey (12 samples, 0.11%)</title><rect x="896.0" y="243.0" width="1.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="899.0" y="254.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (12 samples, 0.11%)</title><rect x="896.0" y="227.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="899.0" y="238.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (12 samples, 0.11%)</title><rect x="896.0" y="211.0" width="1.3" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="899.0" y="222.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.next (15 samples, 0.14%)</title><rect x="897.3" y="339.0" width="1.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="900.3" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$6.transform (15 samples, 0.14%)</title><rect x="897.3" y="323.0" width="1.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="900.3" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl$$Lambda$81/1054613018.apply (15 samples, 0.14%)</title><rect x="897.3" y="307.0" width="1.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="900.3" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.lambda$iterator$4 (15 samples, 0.14%)</title><rect x="897.3" y="291.0" width="1.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="900.3" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/Cell.getKey (7 samples, 0.07%)</title><rect x="897.3" y="275.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="900.3" y="286.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (7 samples, 0.07%)</title><rect x="897.3" y="259.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="900.3" y="270.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (7 samples, 0.07%)</title><rect x="897.3" y="243.0" width="0.8" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="900.3" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/Value.getData (7 samples, 0.07%)</title><rect x="898.2" y="275.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="901.2" y="286.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (7 samples, 0.07%)</title><rect x="898.2" y="259.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="901.2" y="270.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (7 samples, 0.07%)</title><rect x="898.2" y="243.0" width="0.8" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="901.2" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/Record.getKey (6 samples, 0.06%)</title><rect x="899.0" y="339.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="902.0" y="350.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (6 samples, 0.06%)</title><rect x="899.0" y="323.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="902.0" y="334.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (6 samples, 0.06%)</title><rect x="899.0" y="307.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="902.0" y="318.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (6 samples, 0.06%)</title><rect x="899.0" y="291.0" width="0.7" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="902.0" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.iterator (525 samples, 4.97%)</title><rect x="899.7" y="339.0" width="58.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="902.7" y="350.0">ru/mai..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.filter (5 samples, 0.05%)</title><rect x="899.7" y="323.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="902.7" y="334.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$5 (5 samples, 0.05%)</title><rect x="899.7" y="307.0" width="0.5" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="902.7" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.transform (3 samples, 0.03%)</title><rect x="900.2" y="323.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="903.2" y="334.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$6 (3 samples, 0.03%)</title><rect x="900.2" y="307.0" width="0.4" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="903.2" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$WriteLock.lock (5 samples, 0.05%)</title><rect x="900.6" y="323.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="903.6" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (5 samples, 0.05%)</title><rect x="900.6" y="307.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="903.6" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.addWaiter (5 samples, 0.05%)</title><rect x="900.6" y="291.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="903.6" y="302.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (5 samples, 0.05%)</title><rect x="900.6" y="275.0" width="0.5" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="903.6" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.compactIterator (512 samples, 4.84%)</title><rect x="901.1" y="323.0" width="57.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="904.1" y="334.0">ru/mai..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (94 samples, 0.89%)</title><rect x="901.1" y="307.0" width="10.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="904.1" y="318.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator (3 samples, 0.03%)</title><rect x="901.1" y="291.0" width="0.4" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="904.1" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (91 samples, 0.86%)</title><rect x="901.5" y="291.0" width="10.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="904.5" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.peekingIterator (7 samples, 0.07%)</title><rect x="901.7" y="275.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="904.7" y="286.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$PeekingImpl (7 samples, 0.07%)</title><rect x="901.7" y="259.0" width="0.8" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="904.7" y="270.0"></text>
</g>
<g>
<title>java.util.PriorityQueue (6 samples, 0.06%)</title><rect x="902.5" y="275.0" width="0.6" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="905.5" y="286.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (76 samples, 0.72%)</title><rect x="903.1" y="275.0" width="8.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="906.1" y="286.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (76 samples, 0.72%)</title><rect x="903.1" y="259.0" width="8.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="906.1" y="270.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (76 samples, 0.72%)</title><rect x="903.1" y="243.0" width="8.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="906.1" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (76 samples, 0.72%)</title><rect x="903.1" y="227.0" width="8.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="906.1" y="238.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (76 samples, 0.72%)</title><rect x="903.1" y="211.0" width="8.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="906.1" y="222.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (76 samples, 0.72%)</title><rect x="903.1" y="195.0" width="8.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="906.1" y="206.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (68 samples, 0.64%)</title><rect x="903.1" y="179.0" width="7.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="906.1" y="190.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.next (6 samples, 0.06%)</title><rect x="903.1" y="163.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="906.1" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (4 samples, 0.04%)</title><rect x="903.4" y="147.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="906.4" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (4 samples, 0.04%)</title><rect x="903.4" y="131.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="906.4" y="142.0"></text>
</g>
<g>
<title>java.util.AbstractMap$SimpleImmutableEntry (4 samples, 0.04%)</title><rect x="903.4" y="115.0" width="0.4" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="906.4" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/SSTable$1.next (62 samples, 0.59%)</title><rect x="903.8" y="163.0" width="6.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="906.8" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/SSTable$1.next (62 samples, 0.59%)</title><rect x="903.8" y="147.0" width="6.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="906.8" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/SSTable.getCell (62 samples, 0.59%)</title><rect x="903.8" y="131.0" width="6.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="906.8" y="142.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (33 samples, 0.31%)</title><rect x="903.8" y="115.0" width="3.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="906.8" y="126.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (19 samples, 0.18%)</title><rect x="903.8" y="99.0" width="2.1" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="906.8" y="110.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (14 samples, 0.13%)</title><rect x="905.9" y="99.0" width="1.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="908.9" y="110.0"></text>
</g>
<g>
<title>byte[] (14 samples, 0.13%)</title><rect x="905.9" y="83.0" width="1.6" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="908.9" y="94.0"></text>
</g>
<g>
<title>ru.mail.polis.Cell (5 samples, 0.05%)</title><rect x="907.5" y="115.0" width="0.6" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="910.5" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/SSTable.getOffset (22 samples, 0.21%)</title><rect x="908.3" y="115.0" width="2.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="911.3" y="126.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (22 samples, 0.21%)</title><rect x="908.3" y="99.0" width="2.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="911.3" y="110.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (13 samples, 0.12%)</title><rect x="908.3" y="83.0" width="1.4" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="911.3" y="94.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (9 samples, 0.09%)</title><rect x="909.7" y="83.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="912.7" y="94.0"></text>
</g>
<g>
<title>byte[] (9 samples, 0.09%)</title><rect x="909.7" y="67.0" width="1.0" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="912.7" y="78.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (8 samples, 0.08%)</title><rect x="910.7" y="179.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="913.7" y="190.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (8 samples, 0.08%)</title><rect x="910.7" y="163.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="913.7" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/Cell.compareTo (8 samples, 0.08%)</title><rect x="910.7" y="147.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="913.7" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/Cell.compareTo (8 samples, 0.08%)</title><rect x="910.7" y="131.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="913.7" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/Cell.getKey (8 samples, 0.08%)</title><rect x="910.7" y="115.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="913.7" y="126.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (8 samples, 0.08%)</title><rect x="910.7" y="99.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="913.7" y="110.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (8 samples, 0.08%)</title><rect x="910.7" y="83.0" width="0.9" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="913.7" y="94.0"></text>
</g>
<g>
<title>java.util.ArrayList (13 samples, 0.12%)</title><rect x="911.6" y="307.0" width="1.5" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="914.6" y="318.0"></text>
</g>
<g>
<title>java/lang/Iterable.forEach (313 samples, 2.96%)</title><rect x="913.1" y="307.0" width="34.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="916.1" y="318.0">ja..</text>
</g>
<g>
<title>java/util/AbstractMap$2.iterator (9 samples, 0.09%)</title><rect x="913.1" y="291.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="916.1" y="302.0"></text>
</g>
<g>
<title>java.util.AbstractMap$2$1 (3 samples, 0.03%)</title><rect x="913.1" y="275.0" width="0.3" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="916.1" y="286.0"></text>
</g>
<g>
<title>java/util/AbstractMap$2$1.&lt;init&gt; (6 samples, 0.06%)</title><rect x="913.4" y="275.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="916.4" y="286.0"></text>
</g>
<g>
<title>java/util/TreeMap$DescendingSubMap$DescendingEntrySetView.iterator (6 samples, 0.06%)</title><rect x="913.4" y="259.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="916.4" y="270.0"></text>
</g>
<g>
<title>java.util.TreeMap$NavigableSubMap$DescendingSubMapEntryIterator (6 samples, 0.06%)</title><rect x="913.4" y="243.0" width="0.7" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="916.4" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl$$Lambda$77/345748904.accept (304 samples, 2.88%)</title><rect x="914.1" y="291.0" width="33.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="917.1" y="302.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.lambda$compactIterator$7 (304 samples, 2.88%)</title><rect x="914.1" y="275.0" width="33.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="917.1" y="286.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/SSTable.iterator (304 samples, 2.88%)</title><rect x="914.1" y="259.0" width="33.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="917.1" y="270.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/SSTable$1.&lt;init&gt; (304 samples, 2.88%)</title><rect x="914.1" y="243.0" width="33.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="917.1" y="254.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/SSTable.getPosition (304 samples, 2.88%)</title><rect x="914.1" y="227.0" width="33.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="917.1" y="238.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/SSTable.getKey (304 samples, 2.88%)</title><rect x="914.1" y="211.0" width="33.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="917.1" y="222.0">ru..</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (211 samples, 2.00%)</title><rect x="914.1" y="195.0" width="23.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="917.1" y="206.0">j..</text>
</g>
<g>
<title>java.nio.HeapByteBuffer (141 samples, 1.33%)</title><rect x="914.1" y="179.0" width="15.7" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="917.1" y="190.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (70 samples, 0.66%)</title><rect x="929.8" y="179.0" width="7.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="932.8" y="190.0"></text>
</g>
<g>
<title>byte[] (70 samples, 0.66%)</title><rect x="929.8" y="163.0" width="7.8" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="932.8" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/SSTable.getOffset (93 samples, 0.88%)</title><rect x="937.6" y="195.0" width="10.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="940.6" y="206.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (93 samples, 0.88%)</title><rect x="937.6" y="179.0" width="10.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="940.6" y="190.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (67 samples, 0.63%)</title><rect x="937.6" y="163.0" width="7.5" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="940.6" y="174.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (26 samples, 0.25%)</title><rect x="945.1" y="163.0" width="2.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="948.1" y="174.0"></text>
</g>
<g>
<title>byte[] (26 samples, 0.25%)</title><rect x="945.1" y="147.0" width="2.9" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="948.1" y="158.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (7 samples, 0.07%)</title><rect x="948.0" y="307.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="951.0" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (7 samples, 0.07%)</title><rect x="948.0" y="291.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="951.0" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl$$Lambda$77/345748904.get$Lambda (5 samples, 0.05%)</title><rect x="948.0" y="275.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="951.0" y="286.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.impl.DAOImpl$$Lambda$77 (5 samples, 0.05%)</title><rect x="948.0" y="259.0" width="0.6" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="951.0" y="270.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (5 samples, 0.05%)</title><rect x="948.8" y="307.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="951.8" y="318.0"></text>
</g>
<g>
<title>java.lang.Object[] (5 samples, 0.05%)</title><rect x="948.8" y="291.0" width="0.6" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="951.8" y="302.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection.forEach (5 samples, 0.05%)</title><rect x="949.4" y="307.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="952.4" y="318.0"></text>
</g>
<g>
<title>java/lang/Iterable.forEach (5 samples, 0.05%)</title><rect x="949.4" y="291.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="952.4" y="302.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (5 samples, 0.05%)</title><rect x="949.4" y="275.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="952.4" y="286.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (5 samples, 0.05%)</title><rect x="949.4" y="259.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="952.4" y="270.0"></text>
</g>
<g>
<title>java.util.HashMap$KeyIterator (5 samples, 0.05%)</title><rect x="949.4" y="243.0" width="0.5" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="952.4" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/MemTable.iterator (15 samples, 0.14%)</title><rect x="949.9" y="307.0" width="1.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="952.9" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.transform (5 samples, 0.05%)</title><rect x="949.9" y="291.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="952.9" y="302.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$6 (5 samples, 0.05%)</title><rect x="949.9" y="275.0" width="0.6" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="952.9" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$EntrySet.iterator (4 samples, 0.04%)</title><rect x="950.5" y="291.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="953.5" y="302.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapEntryIterator (4 samples, 0.04%)</title><rect x="950.5" y="275.0" width="0.4" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="953.5" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (5 samples, 0.05%)</title><rect x="951.0" y="291.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="954.0" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (5 samples, 0.05%)</title><rect x="951.0" y="275.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="954.0" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (5 samples, 0.05%)</title><rect x="951.0" y="259.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="954.0" y="270.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap (5 samples, 0.05%)</title><rect x="951.0" y="243.0" width="0.6" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="954.0" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (60 samples, 0.57%)</title><rect x="951.6" y="307.0" width="6.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="954.6" y="318.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.Iters$CollapseEqualsIterator (3 samples, 0.03%)</title><rect x="951.6" y="291.0" width="0.3" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="954.6" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (57 samples, 0.54%)</title><rect x="951.9" y="291.0" width="6.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="954.9" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (57 samples, 0.54%)</title><rect x="951.9" y="275.0" width="6.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="954.9" y="286.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (57 samples, 0.54%)</title><rect x="951.9" y="259.0" width="6.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="954.9" y="270.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (57 samples, 0.54%)</title><rect x="951.9" y="243.0" width="6.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="954.9" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (57 samples, 0.54%)</title><rect x="951.9" y="227.0" width="6.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="954.9" y="238.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (57 samples, 0.54%)</title><rect x="951.9" y="211.0" width="6.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="954.9" y="222.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (57 samples, 0.54%)</title><rect x="951.9" y="195.0" width="6.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="954.9" y="206.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (57 samples, 0.54%)</title><rect x="951.9" y="179.0" width="6.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="954.9" y="190.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (50 samples, 0.47%)</title><rect x="951.9" y="163.0" width="5.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="954.9" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/SSTable$1.next (50 samples, 0.47%)</title><rect x="951.9" y="147.0" width="5.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="954.9" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/SSTable$1.next (50 samples, 0.47%)</title><rect x="951.9" y="131.0" width="5.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="954.9" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/SSTable.getCell (50 samples, 0.47%)</title><rect x="951.9" y="115.0" width="5.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="954.9" y="126.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (32 samples, 0.30%)</title><rect x="951.9" y="99.0" width="3.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="954.9" y="110.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (20 samples, 0.19%)</title><rect x="951.9" y="83.0" width="2.3" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="954.9" y="94.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (12 samples, 0.11%)</title><rect x="954.2" y="83.0" width="1.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="957.2" y="94.0"></text>
</g>
<g>
<title>byte[] (12 samples, 0.11%)</title><rect x="954.2" y="67.0" width="1.3" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="957.2" y="78.0"></text>
</g>
<g>
<title>ru.mail.polis.Value (3 samples, 0.03%)</title><rect x="955.7" y="99.0" width="0.4" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="958.7" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/SSTable.getOffset (13 samples, 0.12%)</title><rect x="956.1" y="99.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="959.1" y="110.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (13 samples, 0.12%)</title><rect x="956.1" y="83.0" width="1.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="959.1" y="94.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (6 samples, 0.06%)</title><rect x="956.1" y="67.0" width="0.6" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="959.1" y="78.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (7 samples, 0.07%)</title><rect x="956.7" y="67.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="959.7" y="78.0"></text>
</g>
<g>
<title>byte[] (7 samples, 0.07%)</title><rect x="956.7" y="51.0" width="0.8" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="959.7" y="62.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (7 samples, 0.07%)</title><rect x="957.5" y="163.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="960.5" y="174.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (7 samples, 0.07%)</title><rect x="957.5" y="147.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="960.5" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/Cell.compareTo (7 samples, 0.07%)</title><rect x="957.5" y="131.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="960.5" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/Cell.compareTo (7 samples, 0.07%)</title><rect x="957.5" y="115.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="960.5" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/Cell.getKey (7 samples, 0.07%)</title><rect x="957.5" y="99.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="960.5" y="110.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (7 samples, 0.07%)</title><rect x="957.5" y="83.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="960.5" y="94.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (7 samples, 0.07%)</title><rect x="957.5" y="67.0" width="0.8" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="960.5" y="78.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivlev/ThreadController.equalsUrlNode (18 samples, 0.17%)</title><rect x="958.3" y="355.0" width="2.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="961.3" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/TopologyImpl.getNodeByKey (18 samples, 0.17%)</title><rect x="958.3" y="339.0" width="2.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="961.3" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/TopologyImpl.getNodeByKey (18 samples, 0.17%)</title><rect x="958.3" y="323.0" width="2.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="961.3" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (18 samples, 0.17%)</title><rect x="958.3" y="307.0" width="2.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="961.3" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1019384604.invoke (18 samples, 0.17%)</title><rect x="958.3" y="291.0" width="2.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="961.3" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (18 samples, 0.17%)</title><rect x="958.3" y="275.0" width="2.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="961.3" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (18 samples, 0.17%)</title><rect x="958.3" y="259.0" width="2.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="961.3" y="270.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (18 samples, 0.17%)</title><rect x="958.3" y="243.0" width="2.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="961.3" y="254.0"></text>
</g>
<g>
<title>byte[] (18 samples, 0.17%)</title><rect x="958.3" y="227.0" width="2.0" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="961.3" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivlev/ThreadController.toByteBuffer (10 samples, 0.09%)</title><rect x="960.5" y="355.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="963.5" y="366.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (9 samples, 0.09%)</title><rect x="960.6" y="339.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="963.6" y="350.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (9 samples, 0.09%)</title><rect x="960.6" y="323.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="963.6" y="334.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (9 samples, 0.09%)</title><rect x="960.6" y="307.0" width="1.0" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="963.6" y="318.0"></text>
</g>
<g>
<title>[worker_5 tid=59720] (689 samples, 6.52%)</title><rect x="961.6" y="451.0" width="76.9" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="964.6" y="462.0">[worker_..</text>
</g>
<g>
<title>java/lang/Thread.run (689 samples, 6.52%)</title><rect x="961.6" y="435.0" width="76.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="964.6" y="446.0">java/lan..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (689 samples, 6.52%)</title><rect x="961.6" y="419.0" width="76.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="964.6" y="430.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (689 samples, 6.52%)</title><rect x="961.6" y="403.0" width="76.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="964.6" y="414.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (3 samples, 0.03%)</title><rect x="961.6" y="387.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="964.6" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (3 samples, 0.03%)</title><rect x="961.6" y="371.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="964.6" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (3 samples, 0.03%)</title><rect x="961.6" y="355.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="964.6" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (3 samples, 0.03%)</title><rect x="961.6" y="339.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="964.6" y="350.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (3 samples, 0.03%)</title><rect x="961.6" y="323.0" width="0.4" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="964.6" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivlev/ThreadController$$Lambda$75/769197572.run (686 samples, 6.49%)</title><rect x="962.0" y="387.0" width="76.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="965.0" y="398.0">ru/mail/..</text>
</g>
<g>
<title>ru/mail/polis/service/ivlev/ThreadController.lambda$get$1 (686 samples, 6.49%)</title><rect x="962.0" y="371.0" width="76.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="965.0" y="382.0">ru/mail/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (9 samples, 0.09%)</title><rect x="962.2" y="355.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="965.2" y="366.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (9 samples, 0.09%)</title><rect x="962.2" y="339.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="965.2" y="350.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (7 samples, 0.07%)</title><rect x="962.2" y="323.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="965.2" y="334.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (7 samples, 0.07%)</title><rect x="962.2" y="307.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="965.2" y="318.0"></text>
</g>
<g>
<title>byte[] (7 samples, 0.07%)</title><rect x="962.2" y="291.0" width="0.8" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="965.2" y="302.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (10 samples, 0.09%)</title><rect x="963.2" y="355.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="966.2" y="366.0"></text>
</g>
<g>
<title>byte[] (3 samples, 0.03%)</title><rect x="963.2" y="339.0" width="0.3" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="966.2" y="350.0"></text>
</g>
<g>
<title>java.lang.String (6 samples, 0.06%)</title><rect x="963.6" y="339.0" width="0.7" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="966.6" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.get (641 samples, 6.06%)</title><rect x="964.3" y="355.0" width="71.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="967.3" y="366.0">ru/mail/..</text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (73 samples, 0.69%)</title><rect x="964.3" y="339.0" width="8.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="967.3" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (73 samples, 0.69%)</title><rect x="964.3" y="323.0" width="8.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="967.3" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (73 samples, 0.69%)</title><rect x="964.3" y="307.0" width="8.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="967.3" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (73 samples, 0.69%)</title><rect x="964.3" y="291.0" width="8.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="967.3" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (73 samples, 0.69%)</title><rect x="964.3" y="275.0" width="8.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="967.3" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (64 samples, 0.61%)</title><rect x="964.3" y="259.0" width="7.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="967.3" y="270.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (64 samples, 0.61%)</title><rect x="964.3" y="243.0" width="7.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="967.3" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (64 samples, 0.61%)</title><rect x="964.3" y="227.0" width="7.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="967.3" y="238.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (64 samples, 0.61%)</title><rect x="964.3" y="211.0" width="7.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="967.3" y="222.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (64 samples, 0.61%)</title><rect x="964.3" y="195.0" width="7.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="967.3" y="206.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (64 samples, 0.61%)</title><rect x="964.3" y="179.0" width="7.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="967.3" y="190.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (64 samples, 0.61%)</title><rect x="964.3" y="163.0" width="7.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="967.3" y="174.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (57 samples, 0.54%)</title><rect x="964.3" y="147.0" width="6.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="967.3" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/SSTable$1.next (57 samples, 0.54%)</title><rect x="964.3" y="131.0" width="6.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="967.3" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/SSTable$1.next (57 samples, 0.54%)</title><rect x="964.3" y="115.0" width="6.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="967.3" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/SSTable.getCell (57 samples, 0.54%)</title><rect x="964.3" y="99.0" width="6.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="967.3" y="110.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (40 samples, 0.38%)</title><rect x="964.3" y="83.0" width="4.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="967.3" y="94.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (27 samples, 0.26%)</title><rect x="964.3" y="67.0" width="3.0" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="967.3" y="78.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (13 samples, 0.12%)</title><rect x="967.3" y="67.0" width="1.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="970.3" y="78.0"></text>
</g>
<g>
<title>byte[] (13 samples, 0.12%)</title><rect x="967.3" y="51.0" width="1.5" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="970.3" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/SSTable.getOffset (16 samples, 0.15%)</title><rect x="968.9" y="83.0" width="1.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="971.9" y="94.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (16 samples, 0.15%)</title><rect x="968.9" y="67.0" width="1.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="971.9" y="78.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (12 samples, 0.11%)</title><rect x="968.9" y="51.0" width="1.3" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="971.9" y="62.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (4 samples, 0.04%)</title><rect x="970.2" y="51.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="973.2" y="62.0"></text>
</g>
<g>
<title>byte[] (4 samples, 0.04%)</title><rect x="970.2" y="35.0" width="0.5" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="973.2" y="46.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (7 samples, 0.07%)</title><rect x="970.7" y="147.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="973.7" y="158.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (7 samples, 0.07%)</title><rect x="970.7" y="131.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="973.7" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/Cell.compareTo (7 samples, 0.07%)</title><rect x="970.7" y="115.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="973.7" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/Cell.compareTo (7 samples, 0.07%)</title><rect x="970.7" y="99.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="973.7" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/Cell.getKey (7 samples, 0.07%)</title><rect x="970.7" y="83.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="973.7" y="94.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (7 samples, 0.07%)</title><rect x="970.7" y="67.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="973.7" y="78.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (7 samples, 0.07%)</title><rect x="970.7" y="51.0" width="0.8" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="973.7" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl$$Lambda$79/1480278998.apply (9 samples, 0.09%)</title><rect x="971.5" y="259.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="974.5" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/Cell.getKey (9 samples, 0.09%)</title><rect x="971.5" y="243.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="974.5" y="254.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (9 samples, 0.09%)</title><rect x="971.5" y="227.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="974.5" y="238.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (9 samples, 0.09%)</title><rect x="971.5" y="211.0" width="1.0" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="974.5" y="222.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.next (16 samples, 0.15%)</title><rect x="972.5" y="339.0" width="1.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="975.5" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$6.transform (16 samples, 0.15%)</title><rect x="972.5" y="323.0" width="1.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="975.5" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl$$Lambda$81/1054613018.apply (16 samples, 0.15%)</title><rect x="972.5" y="307.0" width="1.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="975.5" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.lambda$iterator$4 (16 samples, 0.15%)</title><rect x="972.5" y="291.0" width="1.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="975.5" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/Cell.getKey (10 samples, 0.09%)</title><rect x="972.5" y="275.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="975.5" y="286.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (10 samples, 0.09%)</title><rect x="972.5" y="259.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="975.5" y="270.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (10 samples, 0.09%)</title><rect x="972.5" y="243.0" width="1.1" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="975.5" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/Value.getData (5 samples, 0.05%)</title><rect x="973.7" y="275.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="976.7" y="286.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (5 samples, 0.05%)</title><rect x="973.7" y="259.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="976.7" y="270.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (5 samples, 0.05%)</title><rect x="973.7" y="243.0" width="0.5" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="976.7" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/Record.getKey (4 samples, 0.04%)</title><rect x="974.2" y="339.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="977.2" y="350.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (4 samples, 0.04%)</title><rect x="974.2" y="323.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="977.2" y="334.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (4 samples, 0.04%)</title><rect x="974.2" y="307.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="977.2" y="318.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (4 samples, 0.04%)</title><rect x="974.2" y="291.0" width="0.5" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="977.2" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.iterator (548 samples, 5.18%)</title><rect x="974.7" y="339.0" width="61.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="977.7" y="350.0">ru/mai..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.filter (4 samples, 0.04%)</title><rect x="974.7" y="323.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="977.7" y="334.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$5 (4 samples, 0.04%)</title><rect x="974.7" y="307.0" width="0.4" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="977.7" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.transform (4 samples, 0.04%)</title><rect x="975.1" y="323.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="978.1" y="334.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$6 (4 samples, 0.04%)</title><rect x="975.1" y="307.0" width="0.5" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="978.1" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.compactIterator (539 samples, 5.10%)</title><rect x="975.7" y="323.0" width="60.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="978.7" y="334.0">ru/mai..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (96 samples, 0.91%)</title><rect x="975.7" y="307.0" width="10.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="978.7" y="318.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator (3 samples, 0.03%)</title><rect x="975.7" y="291.0" width="0.3" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="978.7" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (93 samples, 0.88%)</title><rect x="976.0" y="291.0" width="10.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="979.0" y="302.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator$1 (4 samples, 0.04%)</title><rect x="976.0" y="275.0" width="0.5" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="979.0" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.peekingIterator (8 samples, 0.08%)</title><rect x="976.5" y="275.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="979.5" y="286.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$PeekingImpl (8 samples, 0.08%)</title><rect x="976.5" y="259.0" width="0.9" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="979.5" y="270.0"></text>
</g>
<g>
<title>java.util.PriorityQueue (4 samples, 0.04%)</title><rect x="977.4" y="275.0" width="0.4" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="980.4" y="286.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (76 samples, 0.72%)</title><rect x="977.9" y="275.0" width="8.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="980.9" y="286.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (76 samples, 0.72%)</title><rect x="977.9" y="259.0" width="8.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="980.9" y="270.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (76 samples, 0.72%)</title><rect x="977.9" y="243.0" width="8.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="980.9" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (76 samples, 0.72%)</title><rect x="977.9" y="227.0" width="8.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="980.9" y="238.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (76 samples, 0.72%)</title><rect x="977.9" y="211.0" width="8.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="980.9" y="222.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (76 samples, 0.72%)</title><rect x="977.9" y="195.0" width="8.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="980.9" y="206.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (67 samples, 0.63%)</title><rect x="977.9" y="179.0" width="7.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="980.9" y="190.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.next (3 samples, 0.03%)</title><rect x="977.9" y="163.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="980.9" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/SSTable$1.next (64 samples, 0.61%)</title><rect x="978.3" y="163.0" width="7.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="981.3" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/SSTable$1.next (64 samples, 0.61%)</title><rect x="978.3" y="147.0" width="7.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="981.3" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/SSTable.getCell (64 samples, 0.61%)</title><rect x="978.3" y="131.0" width="7.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="981.3" y="142.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (41 samples, 0.39%)</title><rect x="978.3" y="115.0" width="4.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="981.3" y="126.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (31 samples, 0.29%)</title><rect x="978.3" y="99.0" width="3.4" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="981.3" y="110.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (10 samples, 0.09%)</title><rect x="981.7" y="99.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="984.7" y="110.0"></text>
</g>
<g>
<title>byte[] (10 samples, 0.09%)</title><rect x="981.7" y="83.0" width="1.1" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="984.7" y="94.0"></text>
</g>
<g>
<title>ru.mail.polis.Cell (4 samples, 0.04%)</title><rect x="982.8" y="115.0" width="0.5" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="985.8" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/SSTable.getOffset (18 samples, 0.17%)</title><rect x="983.4" y="115.0" width="2.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="986.4" y="126.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (18 samples, 0.17%)</title><rect x="983.4" y="99.0" width="2.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="986.4" y="110.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (16 samples, 0.15%)</title><rect x="983.4" y="83.0" width="1.8" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="986.4" y="94.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (9 samples, 0.09%)</title><rect x="985.4" y="179.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="988.4" y="190.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (9 samples, 0.09%)</title><rect x="985.4" y="163.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="988.4" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/Cell.compareTo (9 samples, 0.09%)</title><rect x="985.4" y="147.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="988.4" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/Cell.compareTo (9 samples, 0.09%)</title><rect x="985.4" y="131.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="988.4" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/Cell.getKey (9 samples, 0.09%)</title><rect x="985.4" y="115.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="988.4" y="126.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (9 samples, 0.09%)</title><rect x="985.4" y="99.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="988.4" y="110.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (9 samples, 0.09%)</title><rect x="985.4" y="83.0" width="1.0" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="988.4" y="94.0"></text>
</g>
<g>
<title>java.util.ArrayList (10 samples, 0.09%)</title><rect x="986.4" y="307.0" width="1.1" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="989.4" y="318.0"></text>
</g>
<g>
<title>java/lang/Iterable.forEach (334 samples, 3.16%)</title><rect x="987.5" y="307.0" width="37.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="990.5" y="318.0">jav..</text>
</g>
<g>
<title>java/util/AbstractMap$2.iterator (12 samples, 0.11%)</title><rect x="987.5" y="291.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="990.5" y="302.0"></text>
</g>
<g>
<title>java.util.AbstractMap$2$1 (4 samples, 0.04%)</title><rect x="987.5" y="275.0" width="0.5" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="990.5" y="286.0"></text>
</g>
<g>
<title>java/util/AbstractMap$2$1.&lt;init&gt; (8 samples, 0.08%)</title><rect x="988.0" y="275.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="991.0" y="286.0"></text>
</g>
<g>
<title>java/util/TreeMap$DescendingSubMap$DescendingEntrySetView.iterator (8 samples, 0.08%)</title><rect x="988.0" y="259.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="991.0" y="270.0"></text>
</g>
<g>
<title>java.util.TreeMap$NavigableSubMap$DescendingSubMapEntryIterator (8 samples, 0.08%)</title><rect x="988.0" y="243.0" width="0.9" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="991.0" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl$$Lambda$77/345748904.accept (322 samples, 3.05%)</title><rect x="988.9" y="291.0" width="35.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="991.9" y="302.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.lambda$compactIterator$7 (322 samples, 3.05%)</title><rect x="988.9" y="275.0" width="35.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="991.9" y="286.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/SSTable.iterator (322 samples, 3.05%)</title><rect x="988.9" y="259.0" width="35.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="991.9" y="270.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/SSTable$1.&lt;init&gt; (321 samples, 3.04%)</title><rect x="989.0" y="243.0" width="35.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="992.0" y="254.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/SSTable.getPosition (321 samples, 3.04%)</title><rect x="989.0" y="227.0" width="35.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="992.0" y="238.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/SSTable.getKey (321 samples, 3.04%)</title><rect x="989.0" y="211.0" width="35.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="992.0" y="222.0">ru/..</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (201 samples, 1.90%)</title><rect x="989.0" y="195.0" width="22.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="992.0" y="206.0">j..</text>
</g>
<g>
<title>java.nio.HeapByteBuffer (137 samples, 1.30%)</title><rect x="989.0" y="179.0" width="15.3" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="992.0" y="190.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (64 samples, 0.61%)</title><rect x="1004.3" y="179.0" width="7.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1007.3" y="190.0"></text>
</g>
<g>
<title>byte[] (64 samples, 0.61%)</title><rect x="1004.3" y="163.0" width="7.1" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="1007.3" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/SSTable.getOffset (120 samples, 1.14%)</title><rect x="1011.4" y="195.0" width="13.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1014.4" y="206.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (120 samples, 1.14%)</title><rect x="1011.4" y="179.0" width="13.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1014.4" y="190.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (83 samples, 0.79%)</title><rect x="1011.4" y="163.0" width="9.3" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="1014.4" y="174.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (37 samples, 0.35%)</title><rect x="1020.7" y="163.0" width="4.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1023.7" y="174.0"></text>
</g>
<g>
<title>byte[] (37 samples, 0.35%)</title><rect x="1020.7" y="147.0" width="4.1" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="1023.7" y="158.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (4 samples, 0.04%)</title><rect x="1024.8" y="307.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1027.8" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (4 samples, 0.04%)</title><rect x="1024.8" y="291.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1027.8" y="302.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (4 samples, 0.04%)</title><rect x="1025.3" y="307.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1028.3" y="318.0"></text>
</g>
<g>
<title>java.lang.Object[] (4 samples, 0.04%)</title><rect x="1025.3" y="291.0" width="0.4" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="1028.3" y="302.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection.forEach (7 samples, 0.07%)</title><rect x="1025.7" y="307.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1028.7" y="318.0"></text>
</g>
<g>
<title>java/lang/Iterable.forEach (7 samples, 0.07%)</title><rect x="1025.7" y="291.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1028.7" y="302.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (7 samples, 0.07%)</title><rect x="1025.7" y="275.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1028.7" y="286.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (7 samples, 0.07%)</title><rect x="1025.7" y="259.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1028.7" y="270.0"></text>
</g>
<g>
<title>java.util.HashMap$KeyIterator (7 samples, 0.07%)</title><rect x="1025.7" y="243.0" width="0.8" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="1028.7" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/MemTable.iterator (17 samples, 0.16%)</title><rect x="1026.5" y="307.0" width="1.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1029.5" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$EntrySet.iterator (8 samples, 0.08%)</title><rect x="1026.7" y="291.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1029.7" y="302.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapEntryIterator (8 samples, 0.08%)</title><rect x="1026.7" y="275.0" width="0.9" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="1029.7" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (6 samples, 0.06%)</title><rect x="1027.7" y="291.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1030.7" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (6 samples, 0.06%)</title><rect x="1027.7" y="275.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1030.7" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (6 samples, 0.06%)</title><rect x="1027.7" y="259.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1030.7" y="270.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap (6 samples, 0.06%)</title><rect x="1027.7" y="243.0" width="0.7" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="1030.7" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (67 samples, 0.63%)</title><rect x="1028.4" y="307.0" width="7.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1031.4" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (65 samples, 0.61%)</title><rect x="1028.6" y="291.0" width="7.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1031.6" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (65 samples, 0.61%)</title><rect x="1028.6" y="275.0" width="7.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1031.6" y="286.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (65 samples, 0.61%)</title><rect x="1028.6" y="259.0" width="7.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1031.6" y="270.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (65 samples, 0.61%)</title><rect x="1028.6" y="243.0" width="7.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1031.6" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (65 samples, 0.61%)</title><rect x="1028.6" y="227.0" width="7.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1031.6" y="238.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (65 samples, 0.61%)</title><rect x="1028.6" y="211.0" width="7.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1031.6" y="222.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (65 samples, 0.61%)</title><rect x="1028.6" y="195.0" width="7.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1031.6" y="206.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (65 samples, 0.61%)</title><rect x="1028.6" y="179.0" width="7.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1031.6" y="190.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (57 samples, 0.54%)</title><rect x="1028.6" y="163.0" width="6.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1031.6" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/SSTable$1.next (57 samples, 0.54%)</title><rect x="1028.6" y="147.0" width="6.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1031.6" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/SSTable$1.next (57 samples, 0.54%)</title><rect x="1028.6" y="131.0" width="6.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1031.6" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/SSTable.getCell (57 samples, 0.54%)</title><rect x="1028.6" y="115.0" width="6.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1031.6" y="126.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (38 samples, 0.36%)</title><rect x="1028.6" y="99.0" width="4.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1031.6" y="110.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (25 samples, 0.24%)</title><rect x="1028.6" y="83.0" width="2.8" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="1031.6" y="94.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (13 samples, 0.12%)</title><rect x="1031.4" y="83.0" width="1.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1034.4" y="94.0"></text>
</g>
<g>
<title>byte[] (13 samples, 0.12%)</title><rect x="1031.4" y="67.0" width="1.4" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="1034.4" y="78.0"></text>
</g>
<g>
<title>ru.mail.polis.Cell (3 samples, 0.03%)</title><rect x="1032.8" y="99.0" width="0.4" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="1035.8" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/SSTable.getOffset (14 samples, 0.13%)</title><rect x="1033.4" y="99.0" width="1.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1036.4" y="110.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (14 samples, 0.13%)</title><rect x="1033.4" y="83.0" width="1.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1036.4" y="94.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (7 samples, 0.07%)</title><rect x="1033.4" y="67.0" width="0.8" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="1036.4" y="78.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (7 samples, 0.07%)</title><rect x="1034.2" y="67.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1037.2" y="78.0"></text>
</g>
<g>
<title>byte[] (7 samples, 0.07%)</title><rect x="1034.2" y="51.0" width="0.8" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="1037.2" y="62.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (8 samples, 0.08%)</title><rect x="1035.0" y="163.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1038.0" y="174.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (8 samples, 0.08%)</title><rect x="1035.0" y="147.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1038.0" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/Cell.compareTo (8 samples, 0.08%)</title><rect x="1035.0" y="131.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1038.0" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/Cell.compareTo (8 samples, 0.08%)</title><rect x="1035.0" y="115.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1038.0" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/Cell.getKey (8 samples, 0.08%)</title><rect x="1035.0" y="99.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1038.0" y="110.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (8 samples, 0.08%)</title><rect x="1035.0" y="83.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1038.0" y="94.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (8 samples, 0.08%)</title><rect x="1035.0" y="67.0" width="0.9" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="1038.0" y="78.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivlev/ThreadController.equalsUrlNode (19 samples, 0.18%)</title><rect x="1035.9" y="355.0" width="2.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1038.9" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/TopologyImpl.getNodeByKey (19 samples, 0.18%)</title><rect x="1035.9" y="339.0" width="2.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1038.9" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/TopologyImpl.getNodeByKey (19 samples, 0.18%)</title><rect x="1035.9" y="323.0" width="2.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1038.9" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (19 samples, 0.18%)</title><rect x="1035.9" y="307.0" width="2.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1038.9" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1019384604.invoke (19 samples, 0.18%)</title><rect x="1035.9" y="291.0" width="2.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1038.9" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (19 samples, 0.18%)</title><rect x="1035.9" y="275.0" width="2.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1038.9" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (19 samples, 0.18%)</title><rect x="1035.9" y="259.0" width="2.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1038.9" y="270.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (19 samples, 0.18%)</title><rect x="1035.9" y="243.0" width="2.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1038.9" y="254.0"></text>
</g>
<g>
<title>byte[] (19 samples, 0.18%)</title><rect x="1035.9" y="227.0" width="2.1" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="1038.9" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivlev/ThreadController.toByteBuffer (3 samples, 0.03%)</title><rect x="1038.2" y="355.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1041.2" y="366.0"></text>
</g>
<g>
<title>[worker_6 tid=59719] (681 samples, 6.44%)</title><rect x="1038.5" y="451.0" width="76.0" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="1041.5" y="462.0">[worker_..</text>
</g>
<g>
<title>java/lang/Thread.run (681 samples, 6.44%)</title><rect x="1038.5" y="435.0" width="76.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1041.5" y="446.0">java/lan..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (681 samples, 6.44%)</title><rect x="1038.5" y="419.0" width="76.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1041.5" y="430.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (681 samples, 6.44%)</title><rect x="1038.5" y="403.0" width="76.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1041.5" y="414.0">java/uti..</text>
</g>
<g>
<title>ru/mail/polis/service/ivlev/ThreadController$$Lambda$75/769197572.run (681 samples, 6.44%)</title><rect x="1038.5" y="387.0" width="76.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1041.5" y="398.0">ru/mail/..</text>
</g>
<g>
<title>ru/mail/polis/service/ivlev/ThreadController.lambda$get$1 (681 samples, 6.44%)</title><rect x="1038.5" y="371.0" width="76.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1041.5" y="382.0">ru/mail/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (21 samples, 0.20%)</title><rect x="1038.6" y="355.0" width="2.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1041.6" y="366.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (21 samples, 0.20%)</title><rect x="1038.6" y="339.0" width="2.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1041.6" y="350.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (16 samples, 0.15%)</title><rect x="1038.6" y="323.0" width="1.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1041.6" y="334.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (16 samples, 0.15%)</title><rect x="1038.6" y="307.0" width="1.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1041.6" y="318.0"></text>
</g>
<g>
<title>byte[] (16 samples, 0.15%)</title><rect x="1038.6" y="291.0" width="1.8" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="1041.6" y="302.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (5 samples, 0.05%)</title><rect x="1040.4" y="323.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1043.4" y="334.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (5 samples, 0.05%)</title><rect x="1040.4" y="307.0" width="0.6" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="1043.4" y="318.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (15 samples, 0.14%)</title><rect x="1041.0" y="355.0" width="1.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1044.0" y="366.0"></text>
</g>
<g>
<title>byte[] (8 samples, 0.08%)</title><rect x="1041.0" y="339.0" width="0.9" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="1044.0" y="350.0"></text>
</g>
<g>
<title>java.lang.String[] (3 samples, 0.03%)</title><rect x="1041.9" y="339.0" width="0.3" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="1044.9" y="350.0"></text>
</g>
<g>
<title>java.lang.String (4 samples, 0.04%)</title><rect x="1042.2" y="339.0" width="0.5" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="1045.2" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.get (612 samples, 5.79%)</title><rect x="1042.7" y="355.0" width="68.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1045.7" y="366.0">ru/mail..</text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (75 samples, 0.71%)</title><rect x="1042.7" y="339.0" width="8.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1045.7" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (75 samples, 0.71%)</title><rect x="1042.7" y="323.0" width="8.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1045.7" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (75 samples, 0.71%)</title><rect x="1042.7" y="307.0" width="8.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1045.7" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (75 samples, 0.71%)</title><rect x="1042.7" y="291.0" width="8.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1045.7" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (75 samples, 0.71%)</title><rect x="1042.7" y="275.0" width="8.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1045.7" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (59 samples, 0.56%)</title><rect x="1042.7" y="259.0" width="6.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1045.7" y="270.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (59 samples, 0.56%)</title><rect x="1042.7" y="243.0" width="6.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1045.7" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (59 samples, 0.56%)</title><rect x="1042.7" y="227.0" width="6.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1045.7" y="238.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (59 samples, 0.56%)</title><rect x="1042.7" y="211.0" width="6.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1045.7" y="222.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (59 samples, 0.56%)</title><rect x="1042.7" y="195.0" width="6.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1045.7" y="206.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (59 samples, 0.56%)</title><rect x="1042.7" y="179.0" width="6.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1045.7" y="190.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (59 samples, 0.56%)</title><rect x="1042.7" y="163.0" width="6.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1045.7" y="174.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (50 samples, 0.47%)</title><rect x="1042.7" y="147.0" width="5.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1045.7" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/SSTable$1.next (50 samples, 0.47%)</title><rect x="1042.7" y="131.0" width="5.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1045.7" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/SSTable$1.next (50 samples, 0.47%)</title><rect x="1042.7" y="115.0" width="5.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1045.7" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/SSTable.getCell (50 samples, 0.47%)</title><rect x="1042.7" y="99.0" width="5.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1045.7" y="110.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (34 samples, 0.32%)</title><rect x="1042.7" y="83.0" width="3.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1045.7" y="94.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (21 samples, 0.20%)</title><rect x="1042.7" y="67.0" width="2.3" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="1045.7" y="78.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (13 samples, 0.12%)</title><rect x="1045.0" y="67.0" width="1.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1048.0" y="78.0"></text>
</g>
<g>
<title>byte[] (13 samples, 0.12%)</title><rect x="1045.0" y="51.0" width="1.5" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="1048.0" y="62.0"></text>
</g>
<g>
<title>ru.mail.polis.Value (6 samples, 0.06%)</title><rect x="1046.7" y="83.0" width="0.7" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="1049.7" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/SSTable.getOffset (8 samples, 0.08%)</title><rect x="1047.4" y="83.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1050.4" y="94.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (8 samples, 0.08%)</title><rect x="1047.4" y="67.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1050.4" y="78.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (3 samples, 0.03%)</title><rect x="1047.4" y="51.0" width="0.3" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="1050.4" y="62.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (5 samples, 0.05%)</title><rect x="1047.7" y="51.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1050.7" y="62.0"></text>
</g>
<g>
<title>byte[] (5 samples, 0.05%)</title><rect x="1047.7" y="35.0" width="0.5" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="1050.7" y="46.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (9 samples, 0.09%)</title><rect x="1048.2" y="147.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1051.2" y="158.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (9 samples, 0.09%)</title><rect x="1048.2" y="131.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1051.2" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/Cell.compareTo (9 samples, 0.09%)</title><rect x="1048.2" y="115.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1051.2" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/Cell.compareTo (9 samples, 0.09%)</title><rect x="1048.2" y="99.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1051.2" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/Cell.getKey (9 samples, 0.09%)</title><rect x="1048.2" y="83.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1051.2" y="94.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (9 samples, 0.09%)</title><rect x="1048.2" y="67.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1051.2" y="78.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (9 samples, 0.09%)</title><rect x="1048.2" y="51.0" width="1.1" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="1051.2" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl$$Lambda$79/1480278998.apply (16 samples, 0.15%)</title><rect x="1049.3" y="259.0" width="1.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1052.3" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/Cell.getKey (16 samples, 0.15%)</title><rect x="1049.3" y="243.0" width="1.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1052.3" y="254.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (16 samples, 0.15%)</title><rect x="1049.3" y="227.0" width="1.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1052.3" y="238.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (16 samples, 0.15%)</title><rect x="1049.3" y="211.0" width="1.7" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="1052.3" y="222.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.next (12 samples, 0.11%)</title><rect x="1051.0" y="339.0" width="1.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1054.0" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$6.transform (12 samples, 0.11%)</title><rect x="1051.0" y="323.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1054.0" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl$$Lambda$81/1054613018.apply (12 samples, 0.11%)</title><rect x="1051.0" y="307.0" width="1.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1054.0" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.lambda$iterator$4 (12 samples, 0.11%)</title><rect x="1051.0" y="291.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1054.0" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/Cell.getKey (6 samples, 0.06%)</title><rect x="1051.0" y="275.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1054.0" y="286.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (6 samples, 0.06%)</title><rect x="1051.0" y="259.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1054.0" y="270.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (6 samples, 0.06%)</title><rect x="1051.0" y="243.0" width="0.7" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="1054.0" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/Record.of (4 samples, 0.04%)</title><rect x="1051.7" y="275.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1054.7" y="286.0"></text>
</g>
<g>
<title>ru.mail.polis.Record (4 samples, 0.04%)</title><rect x="1051.7" y="259.0" width="0.5" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="1054.7" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/Record.getKey (8 samples, 0.08%)</title><rect x="1052.4" y="339.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1055.4" y="350.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (8 samples, 0.08%)</title><rect x="1052.4" y="323.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1055.4" y="334.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (8 samples, 0.08%)</title><rect x="1052.4" y="307.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1055.4" y="318.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (8 samples, 0.08%)</title><rect x="1052.4" y="291.0" width="0.9" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="1055.4" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.iterator (517 samples, 4.89%)</title><rect x="1053.3" y="339.0" width="57.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1056.3" y="350.0">ru/mai..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.transform (5 samples, 0.05%)</title><rect x="1053.5" y="323.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1056.5" y="334.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$6 (5 samples, 0.05%)</title><rect x="1053.5" y="307.0" width="0.6" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="1056.5" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.compactIterator (508 samples, 4.81%)</title><rect x="1054.3" y="323.0" width="56.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1057.3" y="334.0">ru/mai..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (98 samples, 0.93%)</title><rect x="1054.3" y="307.0" width="10.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1057.3" y="318.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator (3 samples, 0.03%)</title><rect x="1054.3" y="291.0" width="0.3" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="1057.3" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (95 samples, 0.90%)</title><rect x="1054.6" y="291.0" width="10.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1057.6" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.peekingIterator (6 samples, 0.06%)</title><rect x="1054.7" y="275.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1057.7" y="286.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$PeekingImpl (6 samples, 0.06%)</title><rect x="1054.7" y="259.0" width="0.7" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="1057.7" y="270.0"></text>
</g>
<g>
<title>java.util.PriorityQueue (6 samples, 0.06%)</title><rect x="1055.4" y="275.0" width="0.7" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="1058.4" y="286.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (80 samples, 0.76%)</title><rect x="1056.3" y="275.0" width="8.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1059.3" y="286.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (80 samples, 0.76%)</title><rect x="1056.3" y="259.0" width="8.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1059.3" y="270.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (80 samples, 0.76%)</title><rect x="1056.3" y="243.0" width="8.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1059.3" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (80 samples, 0.76%)</title><rect x="1056.3" y="227.0" width="8.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1059.3" y="238.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (80 samples, 0.76%)</title><rect x="1056.3" y="211.0" width="8.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1059.3" y="222.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (80 samples, 0.76%)</title><rect x="1056.3" y="195.0" width="8.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1059.3" y="206.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (74 samples, 0.70%)</title><rect x="1056.3" y="179.0" width="8.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1059.3" y="190.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.next (5 samples, 0.05%)</title><rect x="1056.3" y="163.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1059.3" y="174.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$6.transform (3 samples, 0.03%)</title><rect x="1056.3" y="147.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1059.3" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/MemTable$$Lambda$73/2060859065.apply (3 samples, 0.03%)</title><rect x="1056.3" y="131.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1059.3" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/MemTable.lambda$iterator$0 (3 samples, 0.03%)</title><rect x="1056.3" y="115.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1059.3" y="126.0"></text>
</g>
<g>
<title>ru.mail.polis.Cell (3 samples, 0.03%)</title><rect x="1056.3" y="99.0" width="0.3" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="1059.3" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/SSTable$1.next (69 samples, 0.65%)</title><rect x="1056.8" y="163.0" width="7.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1059.8" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/SSTable$1.next (69 samples, 0.65%)</title><rect x="1056.8" y="147.0" width="7.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1059.8" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/SSTable.getCell (69 samples, 0.65%)</title><rect x="1056.8" y="131.0" width="7.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1059.8" y="142.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (43 samples, 0.41%)</title><rect x="1056.8" y="115.0" width="4.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1059.8" y="126.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (30 samples, 0.28%)</title><rect x="1056.8" y="99.0" width="3.4" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="1059.8" y="110.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (13 samples, 0.12%)</title><rect x="1060.2" y="99.0" width="1.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1063.2" y="110.0"></text>
</g>
<g>
<title>byte[] (13 samples, 0.12%)</title><rect x="1060.2" y="83.0" width="1.4" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="1063.2" y="94.0"></text>
</g>
<g>
<title>ru.mail.polis.Cell (3 samples, 0.03%)</title><rect x="1061.6" y="115.0" width="0.4" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="1064.6" y="126.0"></text>
</g>
<g>
<title>ru.mail.polis.Value (3 samples, 0.03%)</title><rect x="1062.0" y="115.0" width="0.3" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="1065.0" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/SSTable.getOffset (20 samples, 0.19%)</title><rect x="1062.3" y="115.0" width="2.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1065.3" y="126.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (20 samples, 0.19%)</title><rect x="1062.3" y="99.0" width="2.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1065.3" y="110.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (14 samples, 0.13%)</title><rect x="1062.3" y="83.0" width="1.6" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="1065.3" y="94.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (6 samples, 0.06%)</title><rect x="1063.9" y="83.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1066.9" y="94.0"></text>
</g>
<g>
<title>byte[] (6 samples, 0.06%)</title><rect x="1063.9" y="67.0" width="0.6" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="1066.9" y="78.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (6 samples, 0.06%)</title><rect x="1064.5" y="179.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1067.5" y="190.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (6 samples, 0.06%)</title><rect x="1064.5" y="163.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1067.5" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/Cell.compareTo (6 samples, 0.06%)</title><rect x="1064.5" y="147.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1067.5" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/Cell.compareTo (6 samples, 0.06%)</title><rect x="1064.5" y="131.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1067.5" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/Cell.getKey (6 samples, 0.06%)</title><rect x="1064.5" y="115.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1067.5" y="126.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (6 samples, 0.06%)</title><rect x="1064.5" y="99.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1067.5" y="110.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (6 samples, 0.06%)</title><rect x="1064.5" y="83.0" width="0.7" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="1067.5" y="94.0"></text>
</g>
<g>
<title>java.util.ArrayList (8 samples, 0.08%)</title><rect x="1065.2" y="307.0" width="0.9" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="1068.2" y="318.0"></text>
</g>
<g>
<title>java/lang/Iterable.forEach (300 samples, 2.84%)</title><rect x="1066.1" y="307.0" width="33.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1069.1" y="318.0">ja..</text>
</g>
<g>
<title>java/util/AbstractMap$2.iterator (9 samples, 0.09%)</title><rect x="1066.1" y="291.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1069.1" y="302.0"></text>
</g>
<g>
<title>java.util.AbstractMap$2$1 (4 samples, 0.04%)</title><rect x="1066.1" y="275.0" width="0.5" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="1069.1" y="286.0"></text>
</g>
<g>
<title>java/util/AbstractMap$2$1.&lt;init&gt; (5 samples, 0.05%)</title><rect x="1066.6" y="275.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1069.6" y="286.0"></text>
</g>
<g>
<title>java/util/TreeMap$DescendingSubMap$DescendingEntrySetView.iterator (5 samples, 0.05%)</title><rect x="1066.6" y="259.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1069.6" y="270.0"></text>
</g>
<g>
<title>java.util.TreeMap$NavigableSubMap$DescendingSubMapEntryIterator (5 samples, 0.05%)</title><rect x="1066.6" y="243.0" width="0.5" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="1069.6" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl$$Lambda$77/345748904.accept (291 samples, 2.75%)</title><rect x="1067.1" y="291.0" width="32.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1070.1" y="302.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.lambda$compactIterator$7 (291 samples, 2.75%)</title><rect x="1067.1" y="275.0" width="32.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1070.1" y="286.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/SSTable.iterator (291 samples, 2.75%)</title><rect x="1067.1" y="259.0" width="32.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1070.1" y="270.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/SSTable$1.&lt;init&gt; (289 samples, 2.73%)</title><rect x="1067.3" y="243.0" width="32.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1070.3" y="254.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/SSTable.getPosition (289 samples, 2.73%)</title><rect x="1067.3" y="227.0" width="32.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1070.3" y="238.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/SSTable.getKey (289 samples, 2.73%)</title><rect x="1067.3" y="211.0" width="32.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1070.3" y="222.0">ru..</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (189 samples, 1.79%)</title><rect x="1067.3" y="195.0" width="21.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1070.3" y="206.0">j..</text>
</g>
<g>
<title>java.nio.HeapByteBuffer (135 samples, 1.28%)</title><rect x="1067.3" y="179.0" width="15.1" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="1070.3" y="190.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (54 samples, 0.51%)</title><rect x="1082.4" y="179.0" width="6.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1085.4" y="190.0"></text>
</g>
<g>
<title>byte[] (54 samples, 0.51%)</title><rect x="1082.4" y="163.0" width="6.0" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="1085.4" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/SSTable.getOffset (100 samples, 0.95%)</title><rect x="1088.4" y="195.0" width="11.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1091.4" y="206.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (100 samples, 0.95%)</title><rect x="1088.4" y="179.0" width="11.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1091.4" y="190.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (70 samples, 0.66%)</title><rect x="1088.4" y="163.0" width="7.8" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="1091.4" y="174.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (30 samples, 0.28%)</title><rect x="1096.2" y="163.0" width="3.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1099.2" y="174.0"></text>
</g>
<g>
<title>byte[] (30 samples, 0.28%)</title><rect x="1096.2" y="147.0" width="3.4" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="1099.2" y="158.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (6 samples, 0.06%)</title><rect x="1099.6" y="307.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1102.6" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (6 samples, 0.06%)</title><rect x="1099.6" y="291.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1102.6" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl$$Lambda$77/345748904.get$Lambda (3 samples, 0.03%)</title><rect x="1099.6" y="275.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1102.6" y="286.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.impl.DAOImpl$$Lambda$77 (3 samples, 0.03%)</title><rect x="1099.6" y="259.0" width="0.3" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="1102.6" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl$$Lambda$78/1013735398.get$Lambda (3 samples, 0.03%)</title><rect x="1099.9" y="275.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1102.9" y="286.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.impl.DAOImpl$$Lambda$78 (3 samples, 0.03%)</title><rect x="1099.9" y="259.0" width="0.4" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="1102.9" y="270.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (5 samples, 0.05%)</title><rect x="1100.3" y="307.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1103.3" y="318.0"></text>
</g>
<g>
<title>java.lang.Object[] (5 samples, 0.05%)</title><rect x="1100.3" y="291.0" width="0.5" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="1103.3" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/MemTable.iterator (20 samples, 0.19%)</title><rect x="1100.9" y="307.0" width="2.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1103.9" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.transform (5 samples, 0.05%)</title><rect x="1100.9" y="291.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1103.9" y="302.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$6 (5 samples, 0.05%)</title><rect x="1100.9" y="275.0" width="0.6" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="1103.9" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$EntrySet.iterator (7 samples, 0.07%)</title><rect x="1101.5" y="291.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1104.5" y="302.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapEntryIterator (7 samples, 0.07%)</title><rect x="1101.5" y="275.0" width="0.8" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="1104.5" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (7 samples, 0.07%)</title><rect x="1102.4" y="291.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1105.4" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (7 samples, 0.07%)</title><rect x="1102.4" y="275.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1105.4" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (7 samples, 0.07%)</title><rect x="1102.4" y="259.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1105.4" y="270.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap (7 samples, 0.07%)</title><rect x="1102.4" y="243.0" width="0.8" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="1105.4" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (70 samples, 0.66%)</title><rect x="1103.2" y="307.0" width="7.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1106.2" y="318.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.Iters$CollapseEqualsIterator (6 samples, 0.06%)</title><rect x="1103.2" y="291.0" width="0.6" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="1106.2" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (64 samples, 0.61%)</title><rect x="1103.8" y="291.0" width="7.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1106.8" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (64 samples, 0.61%)</title><rect x="1103.8" y="275.0" width="7.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1106.8" y="286.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (64 samples, 0.61%)</title><rect x="1103.8" y="259.0" width="7.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1106.8" y="270.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (64 samples, 0.61%)</title><rect x="1103.8" y="243.0" width="7.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1106.8" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (64 samples, 0.61%)</title><rect x="1103.8" y="227.0" width="7.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1106.8" y="238.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (64 samples, 0.61%)</title><rect x="1103.8" y="211.0" width="7.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1106.8" y="222.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (64 samples, 0.61%)</title><rect x="1103.8" y="195.0" width="7.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1106.8" y="206.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (64 samples, 0.61%)</title><rect x="1103.8" y="179.0" width="7.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1106.8" y="190.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (61 samples, 0.58%)</title><rect x="1103.8" y="163.0" width="6.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1106.8" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/SSTable$1.next (61 samples, 0.58%)</title><rect x="1103.8" y="147.0" width="6.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1106.8" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/SSTable$1.next (61 samples, 0.58%)</title><rect x="1103.8" y="131.0" width="6.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1106.8" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/SSTable.getCell (61 samples, 0.58%)</title><rect x="1103.8" y="115.0" width="6.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1106.8" y="126.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (38 samples, 0.36%)</title><rect x="1103.8" y="99.0" width="4.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1106.8" y="110.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (20 samples, 0.19%)</title><rect x="1103.8" y="83.0" width="2.3" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="1106.8" y="94.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (18 samples, 0.17%)</title><rect x="1106.1" y="83.0" width="2.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1109.1" y="94.0"></text>
</g>
<g>
<title>byte[] (18 samples, 0.17%)</title><rect x="1106.1" y="67.0" width="2.0" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="1109.1" y="78.0"></text>
</g>
<g>
<title>ru.mail.polis.Cell (4 samples, 0.04%)</title><rect x="1108.1" y="99.0" width="0.4" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="1111.1" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/SSTable.getOffset (17 samples, 0.16%)</title><rect x="1108.7" y="99.0" width="1.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1111.7" y="110.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (17 samples, 0.16%)</title><rect x="1108.7" y="83.0" width="1.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1111.7" y="94.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (11 samples, 0.10%)</title><rect x="1108.7" y="67.0" width="1.3" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="1111.7" y="78.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (6 samples, 0.06%)</title><rect x="1110.0" y="67.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1113.0" y="78.0"></text>
</g>
<g>
<title>byte[] (6 samples, 0.06%)</title><rect x="1110.0" y="51.0" width="0.6" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="1113.0" y="62.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (3 samples, 0.03%)</title><rect x="1110.6" y="163.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1113.6" y="174.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (3 samples, 0.03%)</title><rect x="1110.6" y="147.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1113.6" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/Cell.compareTo (3 samples, 0.03%)</title><rect x="1110.6" y="131.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1113.6" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/Cell.compareTo (3 samples, 0.03%)</title><rect x="1110.6" y="115.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1113.6" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/Cell.getKey (3 samples, 0.03%)</title><rect x="1110.6" y="99.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1113.6" y="110.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (3 samples, 0.03%)</title><rect x="1110.6" y="83.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1113.6" y="94.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (3 samples, 0.03%)</title><rect x="1110.6" y="67.0" width="0.4" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="1113.6" y="78.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivlev/ThreadController.equalsUrlNode (17 samples, 0.16%)</title><rect x="1111.0" y="355.0" width="1.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1114.0" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/TopologyImpl.getNodeByKey (17 samples, 0.16%)</title><rect x="1111.0" y="339.0" width="1.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1114.0" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/TopologyImpl.getNodeByKey (17 samples, 0.16%)</title><rect x="1111.0" y="323.0" width="1.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1114.0" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (17 samples, 0.16%)</title><rect x="1111.0" y="307.0" width="1.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1114.0" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1019384604.invoke (17 samples, 0.16%)</title><rect x="1111.0" y="291.0" width="1.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1114.0" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (17 samples, 0.16%)</title><rect x="1111.0" y="275.0" width="1.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1114.0" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (17 samples, 0.16%)</title><rect x="1111.0" y="259.0" width="1.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1114.0" y="270.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (17 samples, 0.16%)</title><rect x="1111.0" y="243.0" width="1.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1114.0" y="254.0"></text>
</g>
<g>
<title>byte[] (17 samples, 0.16%)</title><rect x="1111.0" y="227.0" width="1.9" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="1114.0" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivlev/ThreadController.toByteArray (6 samples, 0.06%)</title><rect x="1112.9" y="355.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1115.9" y="366.0"></text>
</g>
<g>
<title>byte[] (6 samples, 0.06%)</title><rect x="1112.9" y="339.0" width="0.6" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="1115.9" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivlev/ThreadController.toByteBuffer (9 samples, 0.09%)</title><rect x="1113.5" y="355.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1116.5" y="366.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (4 samples, 0.04%)</title><rect x="1113.5" y="339.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1116.5" y="350.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (4 samples, 0.04%)</title><rect x="1113.5" y="323.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1116.5" y="334.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (4 samples, 0.04%)</title><rect x="1113.5" y="307.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1116.5" y="318.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (4 samples, 0.04%)</title><rect x="1113.5" y="291.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1116.5" y="302.0"></text>
</g>
<g>
<title>byte[] (4 samples, 0.04%)</title><rect x="1113.5" y="275.0" width="0.5" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="1116.5" y="286.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (5 samples, 0.05%)</title><rect x="1114.0" y="339.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1117.0" y="350.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (5 samples, 0.05%)</title><rect x="1114.0" y="323.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1117.0" y="334.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (5 samples, 0.05%)</title><rect x="1114.0" y="307.0" width="0.5" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="1117.0" y="318.0"></text>
</g>
<g>
<title>[worker_7 tid=59718] (676 samples, 6.39%)</title><rect x="1114.5" y="451.0" width="75.5" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="1117.5" y="462.0">[worker_..</text>
</g>
<g>
<title>java/lang/Thread.run (676 samples, 6.39%)</title><rect x="1114.5" y="435.0" width="75.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1117.5" y="446.0">java/lan..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (676 samples, 6.39%)</title><rect x="1114.5" y="419.0" width="75.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1117.5" y="430.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (676 samples, 6.39%)</title><rect x="1114.5" y="403.0" width="75.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1117.5" y="414.0">java/uti..</text>
</g>
<g>
<title>ru/mail/polis/service/ivlev/ThreadController$$Lambda$75/769197572.run (675 samples, 6.38%)</title><rect x="1114.7" y="387.0" width="75.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1117.7" y="398.0">ru/mail/..</text>
</g>
<g>
<title>ru/mail/polis/service/ivlev/ThreadController.lambda$get$1 (675 samples, 6.38%)</title><rect x="1114.7" y="371.0" width="75.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1117.7" y="382.0">ru/mail/..</text>
</g>
<g>
<title>one.nio.http.Response (3 samples, 0.03%)</title><rect x="1114.7" y="355.0" width="0.3" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="1117.7" y="366.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (15 samples, 0.14%)</title><rect x="1115.0" y="355.0" width="1.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1118.0" y="366.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (15 samples, 0.14%)</title><rect x="1115.0" y="339.0" width="1.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1118.0" y="350.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (10 samples, 0.09%)</title><rect x="1115.0" y="323.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1118.0" y="334.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (10 samples, 0.09%)</title><rect x="1115.0" y="307.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1118.0" y="318.0"></text>
</g>
<g>
<title>byte[] (10 samples, 0.09%)</title><rect x="1115.0" y="291.0" width="1.1" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="1118.0" y="302.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (5 samples, 0.05%)</title><rect x="1116.1" y="323.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1119.1" y="334.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (5 samples, 0.05%)</title><rect x="1116.1" y="307.0" width="0.6" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="1119.1" y="318.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (15 samples, 0.14%)</title><rect x="1116.7" y="355.0" width="1.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1119.7" y="366.0"></text>
</g>
<g>
<title>byte[] (4 samples, 0.04%)</title><rect x="1116.7" y="339.0" width="0.4" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="1119.7" y="350.0"></text>
</g>
<g>
<title>java.lang.String[] (7 samples, 0.07%)</title><rect x="1117.1" y="339.0" width="0.8" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="1120.1" y="350.0"></text>
</g>
<g>
<title>java.lang.String (4 samples, 0.04%)</title><rect x="1117.9" y="339.0" width="0.4" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="1120.9" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.get (605 samples, 5.72%)</title><rect x="1118.3" y="355.0" width="67.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1121.3" y="366.0">ru/mail..</text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (76 samples, 0.72%)</title><rect x="1118.3" y="339.0" width="8.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1121.3" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (76 samples, 0.72%)</title><rect x="1118.3" y="323.0" width="8.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1121.3" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (76 samples, 0.72%)</title><rect x="1118.3" y="307.0" width="8.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1121.3" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (76 samples, 0.72%)</title><rect x="1118.3" y="291.0" width="8.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1121.3" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (76 samples, 0.72%)</title><rect x="1118.3" y="275.0" width="8.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1121.3" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (68 samples, 0.64%)</title><rect x="1118.3" y="259.0" width="7.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1121.3" y="270.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (68 samples, 0.64%)</title><rect x="1118.3" y="243.0" width="7.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1121.3" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (68 samples, 0.64%)</title><rect x="1118.3" y="227.0" width="7.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1121.3" y="238.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (68 samples, 0.64%)</title><rect x="1118.3" y="211.0" width="7.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1121.3" y="222.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (68 samples, 0.64%)</title><rect x="1118.3" y="195.0" width="7.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1121.3" y="206.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (68 samples, 0.64%)</title><rect x="1118.3" y="179.0" width="7.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1121.3" y="190.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (68 samples, 0.64%)</title><rect x="1118.3" y="163.0" width="7.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1121.3" y="174.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (63 samples, 0.60%)</title><rect x="1118.3" y="147.0" width="7.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1121.3" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/SSTable$1.next (63 samples, 0.60%)</title><rect x="1118.3" y="131.0" width="7.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1121.3" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/SSTable$1.next (63 samples, 0.60%)</title><rect x="1118.3" y="115.0" width="7.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1121.3" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/SSTable.getCell (63 samples, 0.60%)</title><rect x="1118.3" y="99.0" width="7.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1121.3" y="110.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (32 samples, 0.30%)</title><rect x="1118.3" y="83.0" width="3.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1121.3" y="94.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (21 samples, 0.20%)</title><rect x="1118.3" y="67.0" width="2.4" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="1121.3" y="78.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (11 samples, 0.10%)</title><rect x="1120.7" y="67.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1123.7" y="78.0"></text>
</g>
<g>
<title>byte[] (11 samples, 0.10%)</title><rect x="1120.7" y="51.0" width="1.2" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="1123.7" y="62.0"></text>
</g>
<g>
<title>ru.mail.polis.Cell (4 samples, 0.04%)</title><rect x="1121.9" y="83.0" width="0.5" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="1124.9" y="94.0"></text>
</g>
<g>
<title>ru.mail.polis.Value (4 samples, 0.04%)</title><rect x="1122.4" y="83.0" width="0.4" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="1125.4" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/SSTable.getOffset (23 samples, 0.22%)</title><rect x="1122.8" y="83.0" width="2.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1125.8" y="94.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (23 samples, 0.22%)</title><rect x="1122.8" y="67.0" width="2.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1125.8" y="78.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (14 samples, 0.13%)</title><rect x="1122.8" y="51.0" width="1.6" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="1125.8" y="62.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (9 samples, 0.09%)</title><rect x="1124.4" y="51.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1127.4" y="62.0"></text>
</g>
<g>
<title>byte[] (9 samples, 0.09%)</title><rect x="1124.4" y="35.0" width="1.0" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="1127.4" y="46.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (5 samples, 0.05%)</title><rect x="1125.4" y="147.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1128.4" y="158.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (5 samples, 0.05%)</title><rect x="1125.4" y="131.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1128.4" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/Cell.compareTo (5 samples, 0.05%)</title><rect x="1125.4" y="115.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1128.4" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/Cell.compareTo (5 samples, 0.05%)</title><rect x="1125.4" y="99.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1128.4" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/Cell.getKey (5 samples, 0.05%)</title><rect x="1125.4" y="83.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1128.4" y="94.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (5 samples, 0.05%)</title><rect x="1125.4" y="67.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1128.4" y="78.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (5 samples, 0.05%)</title><rect x="1125.4" y="51.0" width="0.5" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="1128.4" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl$$Lambda$79/1480278998.apply (8 samples, 0.08%)</title><rect x="1125.9" y="259.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1128.9" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/Cell.getKey (8 samples, 0.08%)</title><rect x="1125.9" y="243.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1128.9" y="254.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (8 samples, 0.08%)</title><rect x="1125.9" y="227.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1128.9" y="238.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (8 samples, 0.08%)</title><rect x="1125.9" y="211.0" width="0.9" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="1128.9" y="222.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.next (11 samples, 0.10%)</title><rect x="1126.8" y="339.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1129.8" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$6.transform (11 samples, 0.10%)</title><rect x="1126.8" y="323.0" width="1.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1129.8" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl$$Lambda$81/1054613018.apply (11 samples, 0.10%)</title><rect x="1126.8" y="307.0" width="1.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1129.8" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.lambda$iterator$4 (11 samples, 0.10%)</title><rect x="1126.8" y="291.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1129.8" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/Record.of (4 samples, 0.04%)</title><rect x="1127.0" y="275.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1130.0" y="286.0"></text>
</g>
<g>
<title>ru.mail.polis.Record (4 samples, 0.04%)</title><rect x="1127.0" y="259.0" width="0.5" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="1130.0" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/Value.getData (5 samples, 0.05%)</title><rect x="1127.5" y="275.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1130.5" y="286.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (5 samples, 0.05%)</title><rect x="1127.5" y="259.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1130.5" y="270.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (5 samples, 0.05%)</title><rect x="1127.5" y="243.0" width="0.6" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="1130.5" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/Record.getKey (5 samples, 0.05%)</title><rect x="1128.1" y="339.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1131.1" y="350.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (5 samples, 0.05%)</title><rect x="1128.1" y="323.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1131.1" y="334.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (5 samples, 0.05%)</title><rect x="1128.1" y="307.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1131.1" y="318.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (5 samples, 0.05%)</title><rect x="1128.1" y="291.0" width="0.5" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="1131.1" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.iterator (513 samples, 4.85%)</title><rect x="1128.6" y="339.0" width="57.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1131.6" y="350.0">ru/mai..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.transform (4 samples, 0.04%)</title><rect x="1128.8" y="323.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1131.8" y="334.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$6 (4 samples, 0.04%)</title><rect x="1128.8" y="307.0" width="0.5" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="1131.8" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$WriteLock.lock (6 samples, 0.06%)</title><rect x="1129.3" y="323.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1132.3" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (6 samples, 0.06%)</title><rect x="1129.3" y="307.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1132.3" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.addWaiter (6 samples, 0.06%)</title><rect x="1129.3" y="291.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1132.3" y="302.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (6 samples, 0.06%)</title><rect x="1129.3" y="275.0" width="0.7" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="1132.3" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.compactIterator (501 samples, 4.74%)</title><rect x="1130.0" y="323.0" width="55.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1133.0" y="334.0">ru/ma..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (80 samples, 0.76%)</title><rect x="1130.0" y="307.0" width="8.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1133.0" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (80 samples, 0.76%)</title><rect x="1130.0" y="291.0" width="8.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1133.0" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.peekingIterator (6 samples, 0.06%)</title><rect x="1130.2" y="275.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1133.2" y="286.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$PeekingImpl (6 samples, 0.06%)</title><rect x="1130.2" y="259.0" width="0.6" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="1133.2" y="270.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.&lt;init&gt; (5 samples, 0.05%)</title><rect x="1131.0" y="275.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1134.0" y="286.0"></text>
</g>
<g>
<title>java.lang.Object[] (5 samples, 0.05%)</title><rect x="1131.0" y="259.0" width="0.5" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="1134.0" y="270.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (66 samples, 0.62%)</title><rect x="1131.5" y="275.0" width="7.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1134.5" y="286.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (66 samples, 0.62%)</title><rect x="1131.5" y="259.0" width="7.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1134.5" y="270.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (66 samples, 0.62%)</title><rect x="1131.5" y="243.0" width="7.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1134.5" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (66 samples, 0.62%)</title><rect x="1131.5" y="227.0" width="7.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1134.5" y="238.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (66 samples, 0.62%)</title><rect x="1131.5" y="211.0" width="7.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1134.5" y="222.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (66 samples, 0.62%)</title><rect x="1131.5" y="195.0" width="7.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1134.5" y="206.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (59 samples, 0.56%)</title><rect x="1131.5" y="179.0" width="6.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1134.5" y="190.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.next (7 samples, 0.07%)</title><rect x="1131.5" y="163.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1134.5" y="174.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$6.transform (5 samples, 0.05%)</title><rect x="1131.5" y="147.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1134.5" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/MemTable$$Lambda$73/2060859065.apply (5 samples, 0.05%)</title><rect x="1131.5" y="131.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1134.5" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/MemTable.lambda$iterator$0 (5 samples, 0.05%)</title><rect x="1131.5" y="115.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1134.5" y="126.0"></text>
</g>
<g>
<title>ru.mail.polis.Cell (5 samples, 0.05%)</title><rect x="1131.5" y="99.0" width="0.6" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="1134.5" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/SSTable$1.next (52 samples, 0.49%)</title><rect x="1132.3" y="163.0" width="5.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1135.3" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/SSTable$1.next (52 samples, 0.49%)</title><rect x="1132.3" y="147.0" width="5.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1135.3" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/SSTable.getCell (52 samples, 0.49%)</title><rect x="1132.3" y="131.0" width="5.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1135.3" y="142.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (31 samples, 0.29%)</title><rect x="1132.3" y="115.0" width="3.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1135.3" y="126.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (23 samples, 0.22%)</title><rect x="1132.3" y="99.0" width="2.6" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="1135.3" y="110.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (8 samples, 0.08%)</title><rect x="1134.9" y="99.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1137.9" y="110.0"></text>
</g>
<g>
<title>byte[] (8 samples, 0.08%)</title><rect x="1134.9" y="83.0" width="0.9" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="1137.9" y="94.0"></text>
</g>
<g>
<title>ru.mail.polis.Value (3 samples, 0.03%)</title><rect x="1135.9" y="115.0" width="0.3" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="1138.9" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/SSTable.getOffset (17 samples, 0.16%)</title><rect x="1136.2" y="115.0" width="1.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1139.2" y="126.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (17 samples, 0.16%)</title><rect x="1136.2" y="99.0" width="1.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1139.2" y="110.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (8 samples, 0.08%)</title><rect x="1136.2" y="83.0" width="0.9" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="1139.2" y="94.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (9 samples, 0.09%)</title><rect x="1137.1" y="83.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1140.1" y="94.0"></text>
</g>
<g>
<title>byte[] (9 samples, 0.09%)</title><rect x="1137.1" y="67.0" width="1.0" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="1140.1" y="78.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (7 samples, 0.07%)</title><rect x="1138.1" y="179.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1141.1" y="190.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (7 samples, 0.07%)</title><rect x="1138.1" y="163.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1141.1" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/Cell.compareTo (7 samples, 0.07%)</title><rect x="1138.1" y="147.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1141.1" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/Cell.compareTo (7 samples, 0.07%)</title><rect x="1138.1" y="131.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1141.1" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/Cell.getKey (7 samples, 0.07%)</title><rect x="1138.1" y="115.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1141.1" y="126.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (7 samples, 0.07%)</title><rect x="1138.1" y="99.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1141.1" y="110.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (7 samples, 0.07%)</title><rect x="1138.1" y="83.0" width="0.8" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="1141.1" y="94.0"></text>
</g>
<g>
<title>java.util.ArrayList (8 samples, 0.08%)</title><rect x="1138.9" y="307.0" width="0.9" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="1141.9" y="318.0"></text>
</g>
<g>
<title>java/lang/Iterable.forEach (325 samples, 3.07%)</title><rect x="1139.8" y="307.0" width="36.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1142.8" y="318.0">jav..</text>
</g>
<g>
<title>java/util/AbstractMap$2.iterator (9 samples, 0.09%)</title><rect x="1139.8" y="291.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1142.8" y="302.0"></text>
</g>
<g>
<title>java/util/AbstractMap$2$1.&lt;init&gt; (8 samples, 0.08%)</title><rect x="1139.9" y="275.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1142.9" y="286.0"></text>
</g>
<g>
<title>java/util/TreeMap$DescendingSubMap$DescendingEntrySetView.iterator (8 samples, 0.08%)</title><rect x="1139.9" y="259.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1142.9" y="270.0"></text>
</g>
<g>
<title>java.util.TreeMap$NavigableSubMap$DescendingSubMapEntryIterator (8 samples, 0.08%)</title><rect x="1139.9" y="243.0" width="0.9" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="1142.9" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl$$Lambda$77/345748904.accept (316 samples, 2.99%)</title><rect x="1140.8" y="291.0" width="35.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1143.8" y="302.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.lambda$compactIterator$7 (316 samples, 2.99%)</title><rect x="1140.8" y="275.0" width="35.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1143.8" y="286.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/SSTable.iterator (316 samples, 2.99%)</title><rect x="1140.8" y="259.0" width="35.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1143.8" y="270.0">ru/..</text>
</g>
<g>
<title>ru.mail.polis.SSTable$1 (3 samples, 0.03%)</title><rect x="1140.8" y="243.0" width="0.3" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="1143.8" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/SSTable$1.&lt;init&gt; (313 samples, 2.96%)</title><rect x="1141.1" y="243.0" width="34.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1144.1" y="254.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/SSTable.getPosition (313 samples, 2.96%)</title><rect x="1141.1" y="227.0" width="34.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1144.1" y="238.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/SSTable.getKey (313 samples, 2.96%)</title><rect x="1141.1" y="211.0" width="34.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1144.1" y="222.0">ru..</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (210 samples, 1.99%)</title><rect x="1141.1" y="195.0" width="23.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1144.1" y="206.0">j..</text>
</g>
<g>
<title>java.nio.HeapByteBuffer (151 samples, 1.43%)</title><rect x="1141.1" y="179.0" width="16.9" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="1144.1" y="190.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (59 samples, 0.56%)</title><rect x="1158.0" y="179.0" width="6.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1161.0" y="190.0"></text>
</g>
<g>
<title>byte[] (59 samples, 0.56%)</title><rect x="1158.0" y="163.0" width="6.6" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="1161.0" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/SSTable.getOffset (103 samples, 0.97%)</title><rect x="1164.6" y="195.0" width="11.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1167.6" y="206.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (103 samples, 0.97%)</title><rect x="1164.6" y="179.0" width="11.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1167.6" y="190.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (78 samples, 0.74%)</title><rect x="1164.6" y="163.0" width="8.7" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="1167.6" y="174.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (25 samples, 0.24%)</title><rect x="1173.3" y="163.0" width="2.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1176.3" y="174.0"></text>
</g>
<g>
<title>byte[] (25 samples, 0.24%)</title><rect x="1173.3" y="147.0" width="2.7" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="1176.3" y="158.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (7 samples, 0.07%)</title><rect x="1176.0" y="307.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1179.0" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (7 samples, 0.07%)</title><rect x="1176.0" y="291.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1179.0" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl$$Lambda$77/345748904.get$Lambda (5 samples, 0.05%)</title><rect x="1176.0" y="275.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1179.0" y="286.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.impl.DAOImpl$$Lambda$77 (5 samples, 0.05%)</title><rect x="1176.0" y="259.0" width="0.6" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="1179.0" y="270.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (4 samples, 0.04%)</title><rect x="1176.8" y="307.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1179.8" y="318.0"></text>
</g>
<g>
<title>java.lang.Object[] (4 samples, 0.04%)</title><rect x="1176.8" y="291.0" width="0.5" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="1179.8" y="302.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection.forEach (4 samples, 0.04%)</title><rect x="1177.3" y="307.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1180.3" y="318.0"></text>
</g>
<g>
<title>java/lang/Iterable.forEach (4 samples, 0.04%)</title><rect x="1177.3" y="291.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1180.3" y="302.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (4 samples, 0.04%)</title><rect x="1177.3" y="275.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1180.3" y="286.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (4 samples, 0.04%)</title><rect x="1177.3" y="259.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1180.3" y="270.0"></text>
</g>
<g>
<title>java.util.HashMap$KeyIterator (4 samples, 0.04%)</title><rect x="1177.3" y="243.0" width="0.4" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="1180.3" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/MemTable.iterator (19 samples, 0.18%)</title><rect x="1177.7" y="307.0" width="2.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1180.7" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.transform (4 samples, 0.04%)</title><rect x="1177.7" y="291.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1180.7" y="302.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$6 (4 samples, 0.04%)</title><rect x="1177.7" y="275.0" width="0.5" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="1180.7" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$EntrySet.iterator (4 samples, 0.04%)</title><rect x="1178.2" y="291.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1181.2" y="302.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapEntryIterator (4 samples, 0.04%)</title><rect x="1178.2" y="275.0" width="0.4" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="1181.2" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (10 samples, 0.09%)</title><rect x="1178.7" y="291.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1181.7" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (10 samples, 0.09%)</title><rect x="1178.7" y="275.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1181.7" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (10 samples, 0.09%)</title><rect x="1178.7" y="259.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1181.7" y="270.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap (10 samples, 0.09%)</title><rect x="1178.7" y="243.0" width="1.1" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="1181.7" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (54 samples, 0.51%)</title><rect x="1179.8" y="307.0" width="6.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1182.8" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (52 samples, 0.49%)</title><rect x="1180.1" y="291.0" width="5.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1183.1" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (52 samples, 0.49%)</title><rect x="1180.1" y="275.0" width="5.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1183.1" y="286.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (52 samples, 0.49%)</title><rect x="1180.1" y="259.0" width="5.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1183.1" y="270.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (52 samples, 0.49%)</title><rect x="1180.1" y="243.0" width="5.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1183.1" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (52 samples, 0.49%)</title><rect x="1180.1" y="227.0" width="5.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1183.1" y="238.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (52 samples, 0.49%)</title><rect x="1180.1" y="211.0" width="5.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1183.1" y="222.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (52 samples, 0.49%)</title><rect x="1180.1" y="195.0" width="5.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1183.1" y="206.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (52 samples, 0.49%)</title><rect x="1180.1" y="179.0" width="5.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1183.1" y="190.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (47 samples, 0.44%)</title><rect x="1180.1" y="163.0" width="5.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1183.1" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/SSTable$1.next (47 samples, 0.44%)</title><rect x="1180.1" y="147.0" width="5.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1183.1" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/SSTable$1.next (47 samples, 0.44%)</title><rect x="1180.1" y="131.0" width="5.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1183.1" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/SSTable.getCell (47 samples, 0.44%)</title><rect x="1180.1" y="115.0" width="5.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1183.1" y="126.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (25 samples, 0.24%)</title><rect x="1180.1" y="99.0" width="2.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1183.1" y="110.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (15 samples, 0.14%)</title><rect x="1180.1" y="83.0" width="1.6" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="1183.1" y="94.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (10 samples, 0.09%)</title><rect x="1181.7" y="83.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1184.7" y="94.0"></text>
</g>
<g>
<title>byte[] (10 samples, 0.09%)</title><rect x="1181.7" y="67.0" width="1.2" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="1184.7" y="78.0"></text>
</g>
<g>
<title>ru.mail.polis.Cell (6 samples, 0.06%)</title><rect x="1182.9" y="99.0" width="0.6" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="1185.9" y="110.0"></text>
</g>
<g>
<title>ru.mail.polis.Value (4 samples, 0.04%)</title><rect x="1183.5" y="99.0" width="0.5" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="1186.5" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/SSTable.getOffset (12 samples, 0.11%)</title><rect x="1184.0" y="99.0" width="1.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1187.0" y="110.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (12 samples, 0.11%)</title><rect x="1184.0" y="83.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1187.0" y="94.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (8 samples, 0.08%)</title><rect x="1184.0" y="67.0" width="0.9" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="1187.0" y="78.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (4 samples, 0.04%)</title><rect x="1184.9" y="67.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1187.9" y="78.0"></text>
</g>
<g>
<title>byte[] (4 samples, 0.04%)</title><rect x="1184.9" y="51.0" width="0.4" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="1187.9" y="62.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (5 samples, 0.05%)</title><rect x="1185.3" y="163.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1188.3" y="174.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (5 samples, 0.05%)</title><rect x="1185.3" y="147.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1188.3" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/Cell.compareTo (5 samples, 0.05%)</title><rect x="1185.3" y="131.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1188.3" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/Cell.compareTo (5 samples, 0.05%)</title><rect x="1185.3" y="115.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1188.3" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/Cell.getKey (5 samples, 0.05%)</title><rect x="1185.3" y="99.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1188.3" y="110.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (5 samples, 0.05%)</title><rect x="1185.3" y="83.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1188.3" y="94.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (5 samples, 0.05%)</title><rect x="1185.3" y="67.0" width="0.6" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="1188.3" y="78.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivlev/ThreadController.equalsUrlNode (19 samples, 0.18%)</title><rect x="1185.9" y="355.0" width="2.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1188.9" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/TopologyImpl.getNodeByKey (19 samples, 0.18%)</title><rect x="1185.9" y="339.0" width="2.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1188.9" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/TopologyImpl.getNodeByKey (19 samples, 0.18%)</title><rect x="1185.9" y="323.0" width="2.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1188.9" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (19 samples, 0.18%)</title><rect x="1185.9" y="307.0" width="2.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1188.9" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1019384604.invoke (19 samples, 0.18%)</title><rect x="1185.9" y="291.0" width="2.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1188.9" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (19 samples, 0.18%)</title><rect x="1185.9" y="275.0" width="2.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1188.9" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (19 samples, 0.18%)</title><rect x="1185.9" y="259.0" width="2.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1188.9" y="270.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (19 samples, 0.18%)</title><rect x="1185.9" y="243.0" width="2.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1188.9" y="254.0"></text>
</g>
<g>
<title>byte[] (19 samples, 0.18%)</title><rect x="1185.9" y="227.0" width="2.1" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="1188.9" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivlev/ThreadController.toByteArray (8 samples, 0.08%)</title><rect x="1188.0" y="355.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1191.0" y="366.0"></text>
</g>
<g>
<title>byte[] (8 samples, 0.08%)</title><rect x="1188.0" y="339.0" width="0.9" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="1191.0" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivlev/ThreadController.toByteBuffer (10 samples, 0.09%)</title><rect x="1188.9" y="355.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1191.9" y="366.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (4 samples, 0.04%)</title><rect x="1188.9" y="339.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1191.9" y="350.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (4 samples, 0.04%)</title><rect x="1188.9" y="323.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1191.9" y="334.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (4 samples, 0.04%)</title><rect x="1188.9" y="307.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1191.9" y="318.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (4 samples, 0.04%)</title><rect x="1188.9" y="291.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1191.9" y="302.0"></text>
</g>
<g>
<title>byte[] (4 samples, 0.04%)</title><rect x="1188.9" y="275.0" width="0.4" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="1191.9" y="286.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (6 samples, 0.06%)</title><rect x="1189.3" y="339.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1192.3" y="350.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (6 samples, 0.06%)</title><rect x="1189.3" y="323.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1192.3" y="334.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (6 samples, 0.06%)</title><rect x="1189.3" y="307.0" width="0.7" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="1192.3" y="318.0"></text>
</g>
</g>
</svg>
