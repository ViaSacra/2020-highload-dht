<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="518" onload="init(evt)" viewBox="0 0 1200 518" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="501"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="501"> </text>
<g id="frames">
<g>
<title>all (20,985 samples, 100.00%)</title><rect x="10.0" y="467.0" width="1180.0" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="13.0" y="478.0">all</text>
</g>
<g>
<title>[NIO Selector #0 tid=4263] (1,298 samples, 6.19%)</title><rect x="10.0" y="451.0" width="73.0" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="13.0" y="462.0">[NIO Sel..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (1,298 samples, 6.19%)</title><rect x="10.0" y="435.0" width="73.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="13.0" y="446.0">one/nio/..</text>
</g>
<g>
<title>one/nio/net/Session.process (1,298 samples, 6.19%)</title><rect x="10.0" y="419.0" width="73.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="13.0" y="430.0">one/nio/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (1,298 samples, 6.19%)</title><rect x="10.0" y="403.0" width="73.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="13.0" y="414.0">one/nio/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (1,298 samples, 6.19%)</title><rect x="10.0" y="387.0" width="73.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="13.0" y="398.0">one/nio/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (341 samples, 1.62%)</title><rect x="10.0" y="371.0" width="19.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="13.0" y="382.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (341 samples, 1.62%)</title><rect x="10.0" y="355.0" width="19.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="13.0" y="366.0"></text>
</g>
<g>
<title>RequestHandler0_get.handleRequest (217 samples, 1.03%)</title><rect x="10.0" y="339.0" width="12.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="13.0" y="350.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (113 samples, 0.54%)</title><rect x="10.0" y="323.0" width="6.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="13.0" y="334.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (113 samples, 0.54%)</title><rect x="10.0" y="307.0" width="6.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="13.0" y="318.0"></text>
</g>
<g>
<title>java/lang/String.substring (113 samples, 0.54%)</title><rect x="10.0" y="291.0" width="6.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="13.0" y="302.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (113 samples, 0.54%)</title><rect x="10.0" y="275.0" width="6.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="13.0" y="286.0"></text>
</g>
<g>
<title>java.lang.String (34 samples, 0.16%)</title><rect x="10.0" y="259.0" width="1.9" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="13.0" y="270.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (79 samples, 0.38%)</title><rect x="11.9" y="259.0" width="4.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="14.9" y="270.0"></text>
</g>
<g>
<title>byte[] (79 samples, 0.38%)</title><rect x="11.9" y="243.0" width="4.5" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="14.9" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivlev/ThreadController.get (104 samples, 0.50%)</title><rect x="16.4" y="323.0" width="5.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="19.4" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (104 samples, 0.50%)</title><rect x="16.4" y="307.0" width="5.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="19.4" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (104 samples, 0.50%)</title><rect x="16.4" y="291.0" width="5.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="19.4" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivlev/ThreadController$$Lambda$76/1494085373.get$Lambda (104 samples, 0.50%)</title><rect x="16.4" y="275.0" width="5.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="19.4" y="286.0"></text>
</g>
<g>
<title>ru.mail.polis.service.ivlev.ThreadController$$Lambda$76 (104 samples, 0.50%)</title><rect x="16.4" y="259.0" width="5.8" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="19.4" y="270.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (124 samples, 0.59%)</title><rect x="22.2" y="339.0" width="7.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="25.2" y="350.0"></text>
</g>
<g>
<title>java/lang/String.substring (124 samples, 0.59%)</title><rect x="22.2" y="323.0" width="7.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="25.2" y="334.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (124 samples, 0.59%)</title><rect x="22.2" y="307.0" width="7.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="25.2" y="318.0"></text>
</g>
<g>
<title>java.lang.String (43 samples, 0.20%)</title><rect x="22.2" y="291.0" width="2.4" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="25.2" y="302.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (81 samples, 0.39%)</title><rect x="24.6" y="291.0" width="4.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="27.6" y="302.0"></text>
</g>
<g>
<title>byte[] (81 samples, 0.39%)</title><rect x="24.6" y="275.0" width="4.6" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="27.6" y="286.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (667 samples, 3.18%)</title><rect x="29.2" y="371.0" width="37.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="32.2" y="382.0">one..</text>
</g>
<g>
<title>one.nio.http.Request (135 samples, 0.64%)</title><rect x="29.2" y="355.0" width="7.6" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="32.2" y="366.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (242 samples, 1.15%)</title><rect x="36.8" y="355.0" width="13.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="39.8" y="366.0"></text>
</g>
<g>
<title>java.lang.String[] (242 samples, 1.15%)</title><rect x="36.8" y="339.0" width="13.6" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="39.8" y="350.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (290 samples, 1.38%)</title><rect x="50.4" y="355.0" width="16.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="53.4" y="366.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (290 samples, 1.38%)</title><rect x="50.4" y="339.0" width="16.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="53.4" y="350.0"></text>
</g>
<g>
<title>char[] (115 samples, 0.55%)</title><rect x="50.4" y="323.0" width="6.4" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="53.4" y="334.0"></text>
</g>
<g>
<title>java.lang.String (67 samples, 0.32%)</title><rect x="56.8" y="323.0" width="3.8" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="59.8" y="334.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (108 samples, 0.51%)</title><rect x="60.6" y="323.0" width="6.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="63.6" y="334.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (108 samples, 0.51%)</title><rect x="60.6" y="307.0" width="6.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="63.6" y="318.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (108 samples, 0.51%)</title><rect x="60.6" y="291.0" width="6.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="63.6" y="302.0"></text>
</g>
<g>
<title>byte[] (108 samples, 0.51%)</title><rect x="60.6" y="275.0" width="6.1" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="63.6" y="286.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (290 samples, 1.38%)</title><rect x="66.7" y="371.0" width="16.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="69.7" y="382.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (290 samples, 1.38%)</title><rect x="66.7" y="355.0" width="16.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="69.7" y="366.0"></text>
</g>
<g>
<title>char[] (123 samples, 0.59%)</title><rect x="66.7" y="339.0" width="6.9" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="69.7" y="350.0"></text>
</g>
<g>
<title>java.lang.String (55 samples, 0.26%)</title><rect x="73.6" y="339.0" width="3.1" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="76.6" y="350.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (112 samples, 0.53%)</title><rect x="76.7" y="339.0" width="6.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="79.7" y="350.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (112 samples, 0.53%)</title><rect x="76.7" y="323.0" width="6.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="79.7" y="334.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (112 samples, 0.53%)</title><rect x="76.7" y="307.0" width="6.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="79.7" y="318.0"></text>
</g>
<g>
<title>byte[] (112 samples, 0.53%)</title><rect x="76.7" y="291.0" width="6.3" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="79.7" y="302.0"></text>
</g>
<g>
<title>[NIO Selector #1 tid=4264] (1,284 samples, 6.12%)</title><rect x="83.0" y="451.0" width="72.2" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="86.0" y="462.0">[NIO Sel..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (1,284 samples, 6.12%)</title><rect x="83.0" y="435.0" width="72.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="86.0" y="446.0">one/nio/..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (102 samples, 0.49%)</title><rect x="83.0" y="419.0" width="5.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="86.0" y="430.0"></text>
</g>
<g>
<title>one.nio.net.NativeSelector$2 (102 samples, 0.49%)</title><rect x="83.0" y="403.0" width="5.7" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="86.0" y="414.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (1,182 samples, 5.63%)</title><rect x="88.7" y="419.0" width="66.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="91.7" y="430.0">one/nio..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (1,182 samples, 5.63%)</title><rect x="88.7" y="403.0" width="66.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="91.7" y="414.0">one/nio..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (1,182 samples, 5.63%)</title><rect x="88.7" y="387.0" width="66.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="91.7" y="398.0">one/nio..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (248 samples, 1.18%)</title><rect x="88.7" y="371.0" width="14.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="91.7" y="382.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (248 samples, 1.18%)</title><rect x="88.7" y="355.0" width="14.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="91.7" y="366.0"></text>
</g>
<g>
<title>RequestHandler0_get.handleRequest (146 samples, 0.70%)</title><rect x="88.7" y="339.0" width="8.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="91.7" y="350.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (99 samples, 0.47%)</title><rect x="88.7" y="323.0" width="5.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="91.7" y="334.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (99 samples, 0.47%)</title><rect x="88.7" y="307.0" width="5.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="91.7" y="318.0"></text>
</g>
<g>
<title>java/lang/String.substring (99 samples, 0.47%)</title><rect x="88.7" y="291.0" width="5.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="91.7" y="302.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (99 samples, 0.47%)</title><rect x="88.7" y="275.0" width="5.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="91.7" y="286.0"></text>
</g>
<g>
<title>java.lang.String (40 samples, 0.19%)</title><rect x="88.7" y="259.0" width="2.3" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="91.7" y="270.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (59 samples, 0.28%)</title><rect x="91.0" y="259.0" width="3.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="94.0" y="270.0"></text>
</g>
<g>
<title>byte[] (59 samples, 0.28%)</title><rect x="91.0" y="243.0" width="3.3" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="94.0" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivlev/ThreadController.get (47 samples, 0.22%)</title><rect x="94.3" y="323.0" width="2.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="97.3" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (47 samples, 0.22%)</title><rect x="94.3" y="307.0" width="2.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="97.3" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (47 samples, 0.22%)</title><rect x="94.3" y="291.0" width="2.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="97.3" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivlev/ThreadController$$Lambda$76/1494085373.get$Lambda (47 samples, 0.22%)</title><rect x="94.3" y="275.0" width="2.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="97.3" y="286.0"></text>
</g>
<g>
<title>ru.mail.polis.service.ivlev.ThreadController$$Lambda$76 (47 samples, 0.22%)</title><rect x="94.3" y="259.0" width="2.6" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="97.3" y="270.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (102 samples, 0.49%)</title><rect x="96.9" y="339.0" width="5.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="99.9" y="350.0"></text>
</g>
<g>
<title>java/lang/String.substring (102 samples, 0.49%)</title><rect x="96.9" y="323.0" width="5.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="99.9" y="334.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (102 samples, 0.49%)</title><rect x="96.9" y="307.0" width="5.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="99.9" y="318.0"></text>
</g>
<g>
<title>java.lang.String (52 samples, 0.25%)</title><rect x="96.9" y="291.0" width="3.0" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="99.9" y="302.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (50 samples, 0.24%)</title><rect x="99.9" y="291.0" width="2.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="102.9" y="302.0"></text>
</g>
<g>
<title>byte[] (50 samples, 0.24%)</title><rect x="99.9" y="275.0" width="2.8" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="102.9" y="286.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (685 samples, 3.26%)</title><rect x="102.7" y="371.0" width="38.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="105.7" y="382.0">one..</text>
</g>
<g>
<title>one.nio.http.Request (72 samples, 0.34%)</title><rect x="102.7" y="355.0" width="4.0" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="105.7" y="366.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (408 samples, 1.94%)</title><rect x="106.7" y="355.0" width="23.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="109.7" y="366.0">o..</text>
</g>
<g>
<title>java.lang.String[] (408 samples, 1.94%)</title><rect x="106.7" y="339.0" width="23.0" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="109.7" y="350.0">j..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (205 samples, 0.98%)</title><rect x="129.7" y="355.0" width="11.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="132.7" y="366.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (205 samples, 0.98%)</title><rect x="129.7" y="339.0" width="11.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="132.7" y="350.0"></text>
</g>
<g>
<title>char[] (126 samples, 0.60%)</title><rect x="129.7" y="323.0" width="7.0" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="132.7" y="334.0"></text>
</g>
<g>
<title>java.lang.String (43 samples, 0.20%)</title><rect x="136.7" y="323.0" width="2.5" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="139.7" y="334.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (36 samples, 0.17%)</title><rect x="139.2" y="323.0" width="2.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="142.2" y="334.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (36 samples, 0.17%)</title><rect x="139.2" y="307.0" width="2.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="142.2" y="318.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (36 samples, 0.17%)</title><rect x="139.2" y="291.0" width="2.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="142.2" y="302.0"></text>
</g>
<g>
<title>byte[] (36 samples, 0.17%)</title><rect x="139.2" y="275.0" width="2.0" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="142.2" y="286.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (249 samples, 1.19%)</title><rect x="141.2" y="371.0" width="14.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="144.2" y="382.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (249 samples, 1.19%)</title><rect x="141.2" y="355.0" width="14.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="144.2" y="366.0"></text>
</g>
<g>
<title>char[] (131 samples, 0.62%)</title><rect x="141.2" y="339.0" width="7.4" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="144.2" y="350.0"></text>
</g>
<g>
<title>java.lang.String (34 samples, 0.16%)</title><rect x="148.6" y="339.0" width="1.9" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="151.6" y="350.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (84 samples, 0.40%)</title><rect x="150.5" y="339.0" width="4.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="153.5" y="350.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (84 samples, 0.40%)</title><rect x="150.5" y="323.0" width="4.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="153.5" y="334.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (84 samples, 0.40%)</title><rect x="150.5" y="307.0" width="4.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="153.5" y="318.0"></text>
</g>
<g>
<title>byte[] (84 samples, 0.40%)</title><rect x="150.5" y="291.0" width="4.7" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="153.5" y="302.0"></text>
</g>
<g>
<title>[NIO Selector #2 tid=4265] (1,308 samples, 6.23%)</title><rect x="155.2" y="451.0" width="73.5" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="158.2" y="462.0">[NIO Sel..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (1,308 samples, 6.23%)</title><rect x="155.2" y="435.0" width="73.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="158.2" y="446.0">one/nio/..</text>
</g>
<g>
<title>one/nio/net/Session.process (1,308 samples, 6.23%)</title><rect x="155.2" y="419.0" width="73.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="158.2" y="430.0">one/nio/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (1,308 samples, 6.23%)</title><rect x="155.2" y="403.0" width="73.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="158.2" y="414.0">one/nio/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (1,308 samples, 6.23%)</title><rect x="155.2" y="387.0" width="73.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="158.2" y="398.0">one/nio/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (319 samples, 1.52%)</title><rect x="155.2" y="371.0" width="17.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="158.2" y="382.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (319 samples, 1.52%)</title><rect x="155.2" y="355.0" width="17.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="158.2" y="366.0"></text>
</g>
<g>
<title>RequestHandler0_get.handleRequest (231 samples, 1.10%)</title><rect x="155.2" y="339.0" width="13.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="158.2" y="350.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (135 samples, 0.64%)</title><rect x="155.2" y="323.0" width="7.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="158.2" y="334.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (135 samples, 0.64%)</title><rect x="155.2" y="307.0" width="7.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="158.2" y="318.0"></text>
</g>
<g>
<title>java/lang/String.substring (135 samples, 0.64%)</title><rect x="155.2" y="291.0" width="7.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="158.2" y="302.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (135 samples, 0.64%)</title><rect x="155.2" y="275.0" width="7.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="158.2" y="286.0"></text>
</g>
<g>
<title>java.lang.String (72 samples, 0.34%)</title><rect x="155.2" y="259.0" width="4.0" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="158.2" y="270.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (63 samples, 0.30%)</title><rect x="159.2" y="259.0" width="3.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="162.2" y="270.0"></text>
</g>
<g>
<title>byte[] (63 samples, 0.30%)</title><rect x="159.2" y="243.0" width="3.6" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="162.2" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivlev/ThreadController.get (96 samples, 0.46%)</title><rect x="162.8" y="323.0" width="5.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="165.8" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (96 samples, 0.46%)</title><rect x="162.8" y="307.0" width="5.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="165.8" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (96 samples, 0.46%)</title><rect x="162.8" y="291.0" width="5.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="165.8" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivlev/ThreadController$$Lambda$76/1494085373.get$Lambda (96 samples, 0.46%)</title><rect x="162.8" y="275.0" width="5.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="165.8" y="286.0"></text>
</g>
<g>
<title>ru.mail.polis.service.ivlev.ThreadController$$Lambda$76 (96 samples, 0.46%)</title><rect x="162.8" y="259.0" width="5.4" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="165.8" y="270.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (88 samples, 0.42%)</title><rect x="168.2" y="339.0" width="4.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="171.2" y="350.0"></text>
</g>
<g>
<title>java/lang/String.substring (88 samples, 0.42%)</title><rect x="168.2" y="323.0" width="4.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="171.2" y="334.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (88 samples, 0.42%)</title><rect x="168.2" y="307.0" width="4.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="171.2" y="318.0"></text>
</g>
<g>
<title>java.lang.String (23 samples, 0.11%)</title><rect x="168.2" y="291.0" width="1.3" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="171.2" y="302.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (65 samples, 0.31%)</title><rect x="169.5" y="291.0" width="3.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="172.5" y="302.0"></text>
</g>
<g>
<title>byte[] (65 samples, 0.31%)</title><rect x="169.5" y="275.0" width="3.6" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="172.5" y="286.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (667 samples, 3.18%)</title><rect x="173.1" y="371.0" width="37.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="176.1" y="382.0">one..</text>
</g>
<g>
<title>one.nio.http.Request (142 samples, 0.68%)</title><rect x="173.1" y="355.0" width="8.0" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="176.1" y="366.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (229 samples, 1.09%)</title><rect x="181.1" y="355.0" width="12.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="184.1" y="366.0"></text>
</g>
<g>
<title>java.lang.String[] (229 samples, 1.09%)</title><rect x="181.1" y="339.0" width="12.9" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="184.1" y="350.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (296 samples, 1.41%)</title><rect x="194.0" y="355.0" width="16.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="197.0" y="366.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (296 samples, 1.41%)</title><rect x="194.0" y="339.0" width="16.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="197.0" y="350.0"></text>
</g>
<g>
<title>char[] (161 samples, 0.77%)</title><rect x="194.0" y="323.0" width="9.0" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="197.0" y="334.0"></text>
</g>
<g>
<title>java.lang.String (49 samples, 0.23%)</title><rect x="203.0" y="323.0" width="2.8" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="206.0" y="334.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (86 samples, 0.41%)</title><rect x="205.8" y="323.0" width="4.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="208.8" y="334.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (86 samples, 0.41%)</title><rect x="205.8" y="307.0" width="4.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="208.8" y="318.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (86 samples, 0.41%)</title><rect x="205.8" y="291.0" width="4.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="208.8" y="302.0"></text>
</g>
<g>
<title>byte[] (86 samples, 0.41%)</title><rect x="205.8" y="275.0" width="4.8" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="208.8" y="286.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (322 samples, 1.53%)</title><rect x="210.6" y="371.0" width="18.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="213.6" y="382.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (322 samples, 1.53%)</title><rect x="210.6" y="355.0" width="18.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="213.6" y="366.0"></text>
</g>
<g>
<title>char[] (126 samples, 0.60%)</title><rect x="210.6" y="339.0" width="7.1" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="213.6" y="350.0"></text>
</g>
<g>
<title>java.lang.String (58 samples, 0.28%)</title><rect x="217.7" y="339.0" width="3.3" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="220.7" y="350.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (138 samples, 0.66%)</title><rect x="221.0" y="339.0" width="7.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="224.0" y="350.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (138 samples, 0.66%)</title><rect x="221.0" y="323.0" width="7.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="224.0" y="334.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (138 samples, 0.66%)</title><rect x="221.0" y="307.0" width="7.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="224.0" y="318.0"></text>
</g>
<g>
<title>byte[] (138 samples, 0.66%)</title><rect x="221.0" y="291.0" width="7.7" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="224.0" y="302.0"></text>
</g>
<g>
<title>[NIO Selector #3 tid=4266] (1,293 samples, 6.16%)</title><rect x="228.7" y="451.0" width="72.7" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="231.7" y="462.0">[NIO Sel..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (1,293 samples, 6.16%)</title><rect x="228.7" y="435.0" width="72.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="231.7" y="446.0">one/nio/..</text>
</g>
<g>
<title>one/nio/net/Session.process (1,293 samples, 6.16%)</title><rect x="228.7" y="419.0" width="72.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="231.7" y="430.0">one/nio/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (1,293 samples, 6.16%)</title><rect x="228.7" y="403.0" width="72.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="231.7" y="414.0">one/nio/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (1,293 samples, 6.16%)</title><rect x="228.7" y="387.0" width="72.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="231.7" y="398.0">one/nio/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (345 samples, 1.64%)</title><rect x="228.7" y="371.0" width="19.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="231.7" y="382.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (345 samples, 1.64%)</title><rect x="228.7" y="355.0" width="19.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="231.7" y="366.0"></text>
</g>
<g>
<title>RequestHandler0_get.handleRequest (214 samples, 1.02%)</title><rect x="228.7" y="339.0" width="12.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="231.7" y="350.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (122 samples, 0.58%)</title><rect x="228.7" y="323.0" width="6.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="231.7" y="334.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (122 samples, 0.58%)</title><rect x="228.7" y="307.0" width="6.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="231.7" y="318.0"></text>
</g>
<g>
<title>java/lang/String.substring (122 samples, 0.58%)</title><rect x="228.7" y="291.0" width="6.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="231.7" y="302.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (122 samples, 0.58%)</title><rect x="228.7" y="275.0" width="6.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="231.7" y="286.0"></text>
</g>
<g>
<title>java.lang.String (80 samples, 0.38%)</title><rect x="228.7" y="259.0" width="4.5" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="231.7" y="270.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (42 samples, 0.20%)</title><rect x="233.2" y="259.0" width="2.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="236.2" y="270.0"></text>
</g>
<g>
<title>byte[] (42 samples, 0.20%)</title><rect x="233.2" y="243.0" width="2.4" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="236.2" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivlev/ThreadController.get (92 samples, 0.44%)</title><rect x="235.6" y="323.0" width="5.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="238.6" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (92 samples, 0.44%)</title><rect x="235.6" y="307.0" width="5.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="238.6" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (92 samples, 0.44%)</title><rect x="235.6" y="291.0" width="5.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="238.6" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivlev/ThreadController$$Lambda$76/1494085373.get$Lambda (92 samples, 0.44%)</title><rect x="235.6" y="275.0" width="5.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="238.6" y="286.0"></text>
</g>
<g>
<title>ru.mail.polis.service.ivlev.ThreadController$$Lambda$76 (92 samples, 0.44%)</title><rect x="235.6" y="259.0" width="5.2" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="238.6" y="270.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (131 samples, 0.62%)</title><rect x="240.8" y="339.0" width="7.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="243.8" y="350.0"></text>
</g>
<g>
<title>java/lang/String.substring (131 samples, 0.62%)</title><rect x="240.8" y="323.0" width="7.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="243.8" y="334.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (131 samples, 0.62%)</title><rect x="240.8" y="307.0" width="7.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="243.8" y="318.0"></text>
</g>
<g>
<title>java.lang.String (40 samples, 0.19%)</title><rect x="240.8" y="291.0" width="2.2" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="243.8" y="302.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (91 samples, 0.43%)</title><rect x="243.0" y="291.0" width="5.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="246.0" y="302.0"></text>
</g>
<g>
<title>byte[] (91 samples, 0.43%)</title><rect x="243.0" y="275.0" width="5.1" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="246.0" y="286.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (642 samples, 3.06%)</title><rect x="248.1" y="371.0" width="36.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="251.1" y="382.0">one..</text>
</g>
<g>
<title>one.nio.http.Request (156 samples, 0.74%)</title><rect x="248.1" y="355.0" width="8.8" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="251.1" y="366.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (188 samples, 0.90%)</title><rect x="256.9" y="355.0" width="10.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="259.9" y="366.0"></text>
</g>
<g>
<title>java.lang.String[] (188 samples, 0.90%)</title><rect x="256.9" y="339.0" width="10.6" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="259.9" y="350.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (298 samples, 1.42%)</title><rect x="267.5" y="355.0" width="16.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="270.5" y="366.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (298 samples, 1.42%)</title><rect x="267.5" y="339.0" width="16.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="270.5" y="350.0"></text>
</g>
<g>
<title>char[] (156 samples, 0.74%)</title><rect x="267.5" y="323.0" width="8.8" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="270.5" y="334.0"></text>
</g>
<g>
<title>java.lang.String (56 samples, 0.27%)</title><rect x="276.3" y="323.0" width="3.1" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="279.3" y="334.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (86 samples, 0.41%)</title><rect x="279.4" y="323.0" width="4.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="282.4" y="334.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (86 samples, 0.41%)</title><rect x="279.4" y="307.0" width="4.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="282.4" y="318.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (86 samples, 0.41%)</title><rect x="279.4" y="291.0" width="4.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="282.4" y="302.0"></text>
</g>
<g>
<title>byte[] (86 samples, 0.41%)</title><rect x="279.4" y="275.0" width="4.8" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="282.4" y="286.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (306 samples, 1.46%)</title><rect x="284.2" y="371.0" width="17.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="287.2" y="382.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (306 samples, 1.46%)</title><rect x="284.2" y="355.0" width="17.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="287.2" y="366.0"></text>
</g>
<g>
<title>char[] (142 samples, 0.68%)</title><rect x="284.2" y="339.0" width="8.0" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="287.2" y="350.0"></text>
</g>
<g>
<title>java.lang.String (60 samples, 0.29%)</title><rect x="292.2" y="339.0" width="3.4" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="295.2" y="350.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (104 samples, 0.50%)</title><rect x="295.6" y="339.0" width="5.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="298.6" y="350.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (104 samples, 0.50%)</title><rect x="295.6" y="323.0" width="5.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="298.6" y="334.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (104 samples, 0.50%)</title><rect x="295.6" y="307.0" width="5.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="298.6" y="318.0"></text>
</g>
<g>
<title>byte[] (104 samples, 0.50%)</title><rect x="295.6" y="291.0" width="5.8" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="298.6" y="302.0"></text>
</g>
<g>
<title>[NIO Selector #4 tid=4267] (1,306 samples, 6.22%)</title><rect x="301.4" y="451.0" width="73.5" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="304.4" y="462.0">[NIO Sel..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (1,306 samples, 6.22%)</title><rect x="301.4" y="435.0" width="73.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="304.4" y="446.0">one/nio/..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (97 samples, 0.46%)</title><rect x="301.4" y="419.0" width="5.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="304.4" y="430.0"></text>
</g>
<g>
<title>one.nio.net.NativeSelector$2 (97 samples, 0.46%)</title><rect x="301.4" y="403.0" width="5.5" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="304.4" y="414.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (1,209 samples, 5.76%)</title><rect x="306.9" y="419.0" width="68.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="309.9" y="430.0">one/nio..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (1,209 samples, 5.76%)</title><rect x="306.9" y="403.0" width="68.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="309.9" y="414.0">one/nio..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (1,209 samples, 5.76%)</title><rect x="306.9" y="387.0" width="68.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="309.9" y="398.0">one/nio..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (199 samples, 0.95%)</title><rect x="306.9" y="371.0" width="11.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="309.9" y="382.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (199 samples, 0.95%)</title><rect x="306.9" y="355.0" width="11.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="309.9" y="366.0"></text>
</g>
<g>
<title>RequestHandler0_get.handleRequest (112 samples, 0.53%)</title><rect x="306.9" y="339.0" width="6.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="309.9" y="350.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (88 samples, 0.42%)</title><rect x="306.9" y="323.0" width="4.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="309.9" y="334.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (88 samples, 0.42%)</title><rect x="306.9" y="307.0" width="4.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="309.9" y="318.0"></text>
</g>
<g>
<title>java/lang/String.substring (88 samples, 0.42%)</title><rect x="306.9" y="291.0" width="4.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="309.9" y="302.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (88 samples, 0.42%)</title><rect x="306.9" y="275.0" width="4.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="309.9" y="286.0"></text>
</g>
<g>
<title>java.lang.String (46 samples, 0.22%)</title><rect x="306.9" y="259.0" width="2.6" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="309.9" y="270.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (42 samples, 0.20%)</title><rect x="309.5" y="259.0" width="2.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="312.5" y="270.0"></text>
</g>
<g>
<title>byte[] (42 samples, 0.20%)</title><rect x="309.5" y="243.0" width="2.3" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="312.5" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivlev/ThreadController.get (24 samples, 0.11%)</title><rect x="311.8" y="323.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="314.8" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (24 samples, 0.11%)</title><rect x="311.8" y="307.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="314.8" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (24 samples, 0.11%)</title><rect x="311.8" y="291.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="314.8" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivlev/ThreadController$$Lambda$76/1494085373.get$Lambda (24 samples, 0.11%)</title><rect x="311.8" y="275.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="314.8" y="286.0"></text>
</g>
<g>
<title>ru.mail.polis.service.ivlev.ThreadController$$Lambda$76 (24 samples, 0.11%)</title><rect x="311.8" y="259.0" width="1.4" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="314.8" y="270.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (87 samples, 0.41%)</title><rect x="313.2" y="339.0" width="4.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="316.2" y="350.0"></text>
</g>
<g>
<title>java/lang/String.substring (87 samples, 0.41%)</title><rect x="313.2" y="323.0" width="4.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="316.2" y="334.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (87 samples, 0.41%)</title><rect x="313.2" y="307.0" width="4.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="316.2" y="318.0"></text>
</g>
<g>
<title>java.lang.String (33 samples, 0.16%)</title><rect x="313.2" y="291.0" width="1.9" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="316.2" y="302.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (54 samples, 0.26%)</title><rect x="315.1" y="291.0" width="3.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="318.1" y="302.0"></text>
</g>
<g>
<title>byte[] (54 samples, 0.26%)</title><rect x="315.1" y="275.0" width="3.0" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="318.1" y="286.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (733 samples, 3.49%)</title><rect x="318.1" y="371.0" width="41.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="321.1" y="382.0">one..</text>
</g>
<g>
<title>one.nio.http.Request (59 samples, 0.28%)</title><rect x="318.1" y="355.0" width="3.3" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="321.1" y="366.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (426 samples, 2.03%)</title><rect x="321.4" y="355.0" width="24.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="324.4" y="366.0">o..</text>
</g>
<g>
<title>java.lang.String[] (426 samples, 2.03%)</title><rect x="321.4" y="339.0" width="24.0" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="324.4" y="350.0">j..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (248 samples, 1.18%)</title><rect x="345.4" y="355.0" width="13.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="348.4" y="366.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (248 samples, 1.18%)</title><rect x="345.4" y="339.0" width="13.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="348.4" y="350.0"></text>
</g>
<g>
<title>char[] (181 samples, 0.86%)</title><rect x="345.4" y="323.0" width="10.1" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="348.4" y="334.0"></text>
</g>
<g>
<title>java.lang.String (40 samples, 0.19%)</title><rect x="355.5" y="323.0" width="2.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="358.5" y="334.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (27 samples, 0.13%)</title><rect x="357.8" y="323.0" width="1.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="360.8" y="334.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (27 samples, 0.13%)</title><rect x="357.8" y="307.0" width="1.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="360.8" y="318.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (27 samples, 0.13%)</title><rect x="357.8" y="291.0" width="1.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="360.8" y="302.0"></text>
</g>
<g>
<title>byte[] (27 samples, 0.13%)</title><rect x="357.8" y="275.0" width="1.5" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="360.8" y="286.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (277 samples, 1.32%)</title><rect x="359.3" y="371.0" width="15.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="362.3" y="382.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (277 samples, 1.32%)</title><rect x="359.3" y="355.0" width="15.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="362.3" y="366.0"></text>
</g>
<g>
<title>char[] (156 samples, 0.74%)</title><rect x="359.3" y="339.0" width="8.8" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="362.3" y="350.0"></text>
</g>
<g>
<title>java.lang.String (26 samples, 0.12%)</title><rect x="368.1" y="339.0" width="1.4" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="371.1" y="350.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (95 samples, 0.45%)</title><rect x="369.5" y="339.0" width="5.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="372.5" y="350.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (95 samples, 0.45%)</title><rect x="369.5" y="323.0" width="5.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="372.5" y="334.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (95 samples, 0.45%)</title><rect x="369.5" y="307.0" width="5.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="372.5" y="318.0"></text>
</g>
<g>
<title>byte[] (95 samples, 0.45%)</title><rect x="369.5" y="291.0" width="5.4" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="372.5" y="302.0"></text>
</g>
<g>
<title>[NIO Selector #5 tid=4268] (1,301 samples, 6.20%)</title><rect x="374.9" y="451.0" width="73.1" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="377.9" y="462.0">[NIO Sel..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (1,301 samples, 6.20%)</title><rect x="374.9" y="435.0" width="73.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="377.9" y="446.0">one/nio/..</text>
</g>
<g>
<title>one/nio/net/Session.process (1,301 samples, 6.20%)</title><rect x="374.9" y="419.0" width="73.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="377.9" y="430.0">one/nio/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (1,301 samples, 6.20%)</title><rect x="374.9" y="403.0" width="73.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="377.9" y="414.0">one/nio/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (1,301 samples, 6.20%)</title><rect x="374.9" y="387.0" width="73.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="377.9" y="398.0">one/nio/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (315 samples, 1.50%)</title><rect x="374.9" y="371.0" width="17.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="377.9" y="382.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (315 samples, 1.50%)</title><rect x="374.9" y="355.0" width="17.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="377.9" y="366.0"></text>
</g>
<g>
<title>RequestHandler0_get.handleRequest (220 samples, 1.05%)</title><rect x="374.9" y="339.0" width="12.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="377.9" y="350.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (121 samples, 0.58%)</title><rect x="374.9" y="323.0" width="6.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="377.9" y="334.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (121 samples, 0.58%)</title><rect x="374.9" y="307.0" width="6.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="377.9" y="318.0"></text>
</g>
<g>
<title>java/lang/String.substring (121 samples, 0.58%)</title><rect x="374.9" y="291.0" width="6.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="377.9" y="302.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (121 samples, 0.58%)</title><rect x="374.9" y="275.0" width="6.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="377.9" y="286.0"></text>
</g>
<g>
<title>java.lang.String (59 samples, 0.28%)</title><rect x="374.9" y="259.0" width="3.3" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="377.9" y="270.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (62 samples, 0.30%)</title><rect x="378.2" y="259.0" width="3.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="381.2" y="270.0"></text>
</g>
<g>
<title>byte[] (62 samples, 0.30%)</title><rect x="378.2" y="243.0" width="3.5" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="381.2" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivlev/ThreadController.get (99 samples, 0.47%)</title><rect x="381.7" y="323.0" width="5.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="384.7" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (99 samples, 0.47%)</title><rect x="381.7" y="307.0" width="5.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="384.7" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (99 samples, 0.47%)</title><rect x="381.7" y="291.0" width="5.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="384.7" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivlev/ThreadController$$Lambda$76/1494085373.get$Lambda (99 samples, 0.47%)</title><rect x="381.7" y="275.0" width="5.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="384.7" y="286.0"></text>
</g>
<g>
<title>ru.mail.polis.service.ivlev.ThreadController$$Lambda$76 (99 samples, 0.47%)</title><rect x="381.7" y="259.0" width="5.6" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="384.7" y="270.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (95 samples, 0.45%)</title><rect x="387.3" y="339.0" width="5.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="390.3" y="350.0"></text>
</g>
<g>
<title>java/lang/String.substring (95 samples, 0.45%)</title><rect x="387.3" y="323.0" width="5.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="390.3" y="334.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (95 samples, 0.45%)</title><rect x="387.3" y="307.0" width="5.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="390.3" y="318.0"></text>
</g>
<g>
<title>java.lang.String (30 samples, 0.14%)</title><rect x="387.3" y="291.0" width="1.6" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="390.3" y="302.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (65 samples, 0.31%)</title><rect x="388.9" y="291.0" width="3.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="391.9" y="302.0"></text>
</g>
<g>
<title>byte[] (65 samples, 0.31%)</title><rect x="388.9" y="275.0" width="3.7" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="391.9" y="286.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (677 samples, 3.23%)</title><rect x="392.6" y="371.0" width="38.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="395.6" y="382.0">one..</text>
</g>
<g>
<title>one.nio.http.Request (131 samples, 0.62%)</title><rect x="392.6" y="355.0" width="7.4" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="395.6" y="366.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (241 samples, 1.15%)</title><rect x="400.0" y="355.0" width="13.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="403.0" y="366.0"></text>
</g>
<g>
<title>java.lang.String[] (241 samples, 1.15%)</title><rect x="400.0" y="339.0" width="13.5" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="403.0" y="350.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (305 samples, 1.45%)</title><rect x="413.5" y="355.0" width="17.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="416.5" y="366.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (305 samples, 1.45%)</title><rect x="413.5" y="339.0" width="17.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="416.5" y="350.0"></text>
</g>
<g>
<title>char[] (153 samples, 0.73%)</title><rect x="413.5" y="323.0" width="8.6" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="416.5" y="334.0"></text>
</g>
<g>
<title>java.lang.String (49 samples, 0.23%)</title><rect x="422.1" y="323.0" width="2.8" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="425.1" y="334.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (103 samples, 0.49%)</title><rect x="424.9" y="323.0" width="5.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="427.9" y="334.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (103 samples, 0.49%)</title><rect x="424.9" y="307.0" width="5.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="427.9" y="318.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (103 samples, 0.49%)</title><rect x="424.9" y="291.0" width="5.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="427.9" y="302.0"></text>
</g>
<g>
<title>byte[] (103 samples, 0.49%)</title><rect x="424.9" y="275.0" width="5.8" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="427.9" y="286.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (309 samples, 1.47%)</title><rect x="430.7" y="371.0" width="17.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="433.7" y="382.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (309 samples, 1.47%)</title><rect x="430.7" y="355.0" width="17.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="433.7" y="366.0"></text>
</g>
<g>
<title>char[] (116 samples, 0.55%)</title><rect x="430.7" y="339.0" width="6.5" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="433.7" y="350.0"></text>
</g>
<g>
<title>java.lang.String (64 samples, 0.30%)</title><rect x="437.2" y="339.0" width="3.6" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="440.2" y="350.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (129 samples, 0.61%)</title><rect x="440.8" y="339.0" width="7.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="443.8" y="350.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (129 samples, 0.61%)</title><rect x="440.8" y="323.0" width="7.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="443.8" y="334.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (129 samples, 0.61%)</title><rect x="440.8" y="307.0" width="7.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="443.8" y="318.0"></text>
</g>
<g>
<title>byte[] (129 samples, 0.61%)</title><rect x="440.8" y="291.0" width="7.2" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="443.8" y="302.0"></text>
</g>
<g>
<title>[NIO Selector #6 tid=4269] (1,300 samples, 6.19%)</title><rect x="448.0" y="451.0" width="73.1" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="451.0" y="462.0">[NIO Sel..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (1,300 samples, 6.19%)</title><rect x="448.0" y="435.0" width="73.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="451.0" y="446.0">one/nio/..</text>
</g>
<g>
<title>one/nio/net/Session.process (1,300 samples, 6.19%)</title><rect x="448.0" y="419.0" width="73.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="451.0" y="430.0">one/nio/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (1,300 samples, 6.19%)</title><rect x="448.0" y="403.0" width="73.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="451.0" y="414.0">one/nio/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (1,300 samples, 6.19%)</title><rect x="448.0" y="387.0" width="73.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="451.0" y="398.0">one/nio/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (332 samples, 1.58%)</title><rect x="448.0" y="371.0" width="18.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="451.0" y="382.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (332 samples, 1.58%)</title><rect x="448.0" y="355.0" width="18.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="451.0" y="366.0"></text>
</g>
<g>
<title>RequestHandler0_get.handleRequest (229 samples, 1.09%)</title><rect x="448.0" y="339.0" width="12.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="451.0" y="350.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (118 samples, 0.56%)</title><rect x="448.0" y="323.0" width="6.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="451.0" y="334.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (118 samples, 0.56%)</title><rect x="448.0" y="307.0" width="6.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="451.0" y="318.0"></text>
</g>
<g>
<title>java/lang/String.substring (118 samples, 0.56%)</title><rect x="448.0" y="291.0" width="6.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="451.0" y="302.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (118 samples, 0.56%)</title><rect x="448.0" y="275.0" width="6.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="451.0" y="286.0"></text>
</g>
<g>
<title>java.lang.String (44 samples, 0.21%)</title><rect x="448.0" y="259.0" width="2.5" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="451.0" y="270.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (74 samples, 0.35%)</title><rect x="450.5" y="259.0" width="4.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="453.5" y="270.0"></text>
</g>
<g>
<title>byte[] (74 samples, 0.35%)</title><rect x="450.5" y="243.0" width="4.2" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="453.5" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivlev/ThreadController.get (111 samples, 0.53%)</title><rect x="454.7" y="323.0" width="6.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="457.7" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (111 samples, 0.53%)</title><rect x="454.7" y="307.0" width="6.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="457.7" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (111 samples, 0.53%)</title><rect x="454.7" y="291.0" width="6.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="457.7" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivlev/ThreadController$$Lambda$76/1494085373.get$Lambda (111 samples, 0.53%)</title><rect x="454.7" y="275.0" width="6.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="457.7" y="286.0"></text>
</g>
<g>
<title>ru.mail.polis.service.ivlev.ThreadController$$Lambda$76 (111 samples, 0.53%)</title><rect x="454.7" y="259.0" width="6.2" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="457.7" y="270.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (103 samples, 0.49%)</title><rect x="460.9" y="339.0" width="5.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="463.9" y="350.0"></text>
</g>
<g>
<title>java/lang/String.substring (103 samples, 0.49%)</title><rect x="460.9" y="323.0" width="5.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="463.9" y="334.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (103 samples, 0.49%)</title><rect x="460.9" y="307.0" width="5.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="463.9" y="318.0"></text>
</g>
<g>
<title>java.lang.String (30 samples, 0.14%)</title><rect x="460.9" y="291.0" width="1.7" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="463.9" y="302.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (73 samples, 0.35%)</title><rect x="462.6" y="291.0" width="4.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="465.6" y="302.0"></text>
</g>
<g>
<title>byte[] (73 samples, 0.35%)</title><rect x="462.6" y="275.0" width="4.1" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="465.6" y="286.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (656 samples, 3.13%)</title><rect x="466.7" y="371.0" width="36.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="469.7" y="382.0">one..</text>
</g>
<g>
<title>one.nio.http.Request (151 samples, 0.72%)</title><rect x="466.7" y="355.0" width="8.5" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="469.7" y="366.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (213 samples, 1.02%)</title><rect x="475.2" y="355.0" width="12.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="478.2" y="366.0"></text>
</g>
<g>
<title>java.lang.String[] (213 samples, 1.02%)</title><rect x="475.2" y="339.0" width="12.0" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="478.2" y="350.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (292 samples, 1.39%)</title><rect x="487.2" y="355.0" width="16.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="490.2" y="366.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (292 samples, 1.39%)</title><rect x="487.2" y="339.0" width="16.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="490.2" y="350.0"></text>
</g>
<g>
<title>char[] (139 samples, 0.66%)</title><rect x="487.2" y="323.0" width="7.8" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="490.2" y="334.0"></text>
</g>
<g>
<title>java.lang.String (59 samples, 0.28%)</title><rect x="495.0" y="323.0" width="3.3" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="498.0" y="334.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (94 samples, 0.45%)</title><rect x="498.3" y="323.0" width="5.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="501.3" y="334.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (94 samples, 0.45%)</title><rect x="498.3" y="307.0" width="5.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="501.3" y="318.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (94 samples, 0.45%)</title><rect x="498.3" y="291.0" width="5.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="501.3" y="302.0"></text>
</g>
<g>
<title>byte[] (94 samples, 0.45%)</title><rect x="498.3" y="275.0" width="5.3" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="501.3" y="286.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (312 samples, 1.49%)</title><rect x="503.6" y="371.0" width="17.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="506.6" y="382.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (312 samples, 1.49%)</title><rect x="503.6" y="355.0" width="17.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="506.6" y="366.0"></text>
</g>
<g>
<title>char[] (123 samples, 0.59%)</title><rect x="503.6" y="339.0" width="6.9" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="506.6" y="350.0"></text>
</g>
<g>
<title>java.lang.String (71 samples, 0.34%)</title><rect x="510.5" y="339.0" width="4.0" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="513.5" y="350.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (118 samples, 0.56%)</title><rect x="514.5" y="339.0" width="6.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="517.5" y="350.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (118 samples, 0.56%)</title><rect x="514.5" y="323.0" width="6.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="517.5" y="334.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (118 samples, 0.56%)</title><rect x="514.5" y="307.0" width="6.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="517.5" y="318.0"></text>
</g>
<g>
<title>byte[] (118 samples, 0.56%)</title><rect x="514.5" y="291.0" width="6.6" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="517.5" y="302.0"></text>
</g>
<g>
<title>[NIO Selector #7 tid=4270] (1,283 samples, 6.11%)</title><rect x="521.1" y="451.0" width="72.2" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="524.1" y="462.0">[NIO Sel..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (1,283 samples, 6.11%)</title><rect x="521.1" y="435.0" width="72.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="524.1" y="446.0">one/nio/..</text>
</g>
<g>
<title>one/nio/net/Session.process (1,283 samples, 6.11%)</title><rect x="521.1" y="419.0" width="72.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="524.1" y="430.0">one/nio/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (1,283 samples, 6.11%)</title><rect x="521.1" y="403.0" width="72.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="524.1" y="414.0">one/nio/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (1,283 samples, 6.11%)</title><rect x="521.1" y="387.0" width="72.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="524.1" y="398.0">one/nio/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (303 samples, 1.44%)</title><rect x="521.1" y="371.0" width="17.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="524.1" y="382.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (303 samples, 1.44%)</title><rect x="521.1" y="355.0" width="17.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="524.1" y="366.0"></text>
</g>
<g>
<title>RequestHandler0_get.handleRequest (218 samples, 1.04%)</title><rect x="521.1" y="339.0" width="12.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="524.1" y="350.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (126 samples, 0.60%)</title><rect x="521.1" y="323.0" width="7.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="524.1" y="334.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (126 samples, 0.60%)</title><rect x="521.1" y="307.0" width="7.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="524.1" y="318.0"></text>
</g>
<g>
<title>java/lang/String.substring (126 samples, 0.60%)</title><rect x="521.1" y="291.0" width="7.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="524.1" y="302.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (126 samples, 0.60%)</title><rect x="521.1" y="275.0" width="7.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="524.1" y="286.0"></text>
</g>
<g>
<title>java.lang.String (73 samples, 0.35%)</title><rect x="521.1" y="259.0" width="4.1" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="524.1" y="270.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (53 samples, 0.25%)</title><rect x="525.2" y="259.0" width="3.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="528.2" y="270.0"></text>
</g>
<g>
<title>byte[] (53 samples, 0.25%)</title><rect x="525.2" y="243.0" width="3.0" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="528.2" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivlev/ThreadController.get (92 samples, 0.44%)</title><rect x="528.2" y="323.0" width="5.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="531.2" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (92 samples, 0.44%)</title><rect x="528.2" y="307.0" width="5.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="531.2" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (92 samples, 0.44%)</title><rect x="528.2" y="291.0" width="5.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="531.2" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivlev/ThreadController$$Lambda$76/1494085373.get$Lambda (92 samples, 0.44%)</title><rect x="528.2" y="275.0" width="5.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="531.2" y="286.0"></text>
</g>
<g>
<title>ru.mail.polis.service.ivlev.ThreadController$$Lambda$76 (92 samples, 0.44%)</title><rect x="528.2" y="259.0" width="5.2" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="531.2" y="270.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (85 samples, 0.41%)</title><rect x="533.4" y="339.0" width="4.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="536.4" y="350.0"></text>
</g>
<g>
<title>java/lang/String.substring (85 samples, 0.41%)</title><rect x="533.4" y="323.0" width="4.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="536.4" y="334.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (85 samples, 0.41%)</title><rect x="533.4" y="307.0" width="4.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="536.4" y="318.0"></text>
</g>
<g>
<title>java.lang.String (21 samples, 0.10%)</title><rect x="533.4" y="291.0" width="1.2" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="536.4" y="302.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (64 samples, 0.30%)</title><rect x="534.6" y="291.0" width="3.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="537.6" y="302.0"></text>
</g>
<g>
<title>byte[] (64 samples, 0.30%)</title><rect x="534.6" y="275.0" width="3.6" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="537.6" y="286.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (682 samples, 3.25%)</title><rect x="538.2" y="371.0" width="38.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="541.2" y="382.0">one..</text>
</g>
<g>
<title>one.nio.http.Request (118 samples, 0.56%)</title><rect x="538.2" y="355.0" width="6.6" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="541.2" y="366.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (262 samples, 1.25%)</title><rect x="544.8" y="355.0" width="14.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="547.8" y="366.0"></text>
</g>
<g>
<title>java.lang.String[] (262 samples, 1.25%)</title><rect x="544.8" y="339.0" width="14.7" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="547.8" y="350.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (302 samples, 1.44%)</title><rect x="559.5" y="355.0" width="17.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="562.5" y="366.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (302 samples, 1.44%)</title><rect x="559.5" y="339.0" width="17.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="562.5" y="350.0"></text>
</g>
<g>
<title>char[] (158 samples, 0.75%)</title><rect x="559.5" y="323.0" width="8.9" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="562.5" y="334.0"></text>
</g>
<g>
<title>java.lang.String (32 samples, 0.15%)</title><rect x="568.4" y="323.0" width="1.8" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="571.4" y="334.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (112 samples, 0.53%)</title><rect x="570.2" y="323.0" width="6.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="573.2" y="334.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (112 samples, 0.53%)</title><rect x="570.2" y="307.0" width="6.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="573.2" y="318.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (112 samples, 0.53%)</title><rect x="570.2" y="291.0" width="6.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="573.2" y="302.0"></text>
</g>
<g>
<title>byte[] (112 samples, 0.53%)</title><rect x="570.2" y="275.0" width="6.3" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="573.2" y="286.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (298 samples, 1.42%)</title><rect x="576.5" y="371.0" width="16.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="579.5" y="382.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (298 samples, 1.42%)</title><rect x="576.5" y="355.0" width="16.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="579.5" y="366.0"></text>
</g>
<g>
<title>char[] (108 samples, 0.51%)</title><rect x="576.5" y="339.0" width="6.1" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="579.5" y="350.0"></text>
</g>
<g>
<title>java.lang.String (71 samples, 0.34%)</title><rect x="582.6" y="339.0" width="4.0" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="585.6" y="350.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (119 samples, 0.57%)</title><rect x="586.6" y="339.0" width="6.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="589.6" y="350.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (119 samples, 0.57%)</title><rect x="586.6" y="323.0" width="6.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="589.6" y="334.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (119 samples, 0.57%)</title><rect x="586.6" y="307.0" width="6.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="589.6" y="318.0"></text>
</g>
<g>
<title>byte[] (119 samples, 0.57%)</title><rect x="586.6" y="291.0" width="6.7" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="589.6" y="302.0"></text>
</g>
<g>
<title>[worker_0 tid=4341] (1,332 samples, 6.35%)</title><rect x="593.3" y="451.0" width="74.9" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="596.3" y="462.0">[worker_..</text>
</g>
<g>
<title>java/lang/Thread.run (1,332 samples, 6.35%)</title><rect x="593.3" y="435.0" width="74.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="596.3" y="446.0">java/lan..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (1,332 samples, 6.35%)</title><rect x="593.3" y="419.0" width="74.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="596.3" y="430.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (1,332 samples, 6.35%)</title><rect x="593.3" y="403.0" width="74.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="596.3" y="414.0">java/uti..</text>
</g>
<g>
<title>ru/mail/polis/service/ivlev/ThreadController$$Lambda$76/1494085373.run (1,330 samples, 6.34%)</title><rect x="593.4" y="387.0" width="74.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="596.4" y="398.0">ru/mail/..</text>
</g>
<g>
<title>ru/mail/polis/service/ivlev/ThreadController.lambda$get$2 (1,330 samples, 6.34%)</title><rect x="593.4" y="371.0" width="74.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="596.4" y="382.0">ru/mail/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (22 samples, 0.10%)</title><rect x="593.6" y="355.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="596.6" y="366.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (22 samples, 0.10%)</title><rect x="593.6" y="339.0" width="1.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="596.6" y="350.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (14 samples, 0.07%)</title><rect x="593.6" y="323.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="596.6" y="334.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (14 samples, 0.07%)</title><rect x="593.6" y="307.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="596.6" y="318.0"></text>
</g>
<g>
<title>byte[] (14 samples, 0.07%)</title><rect x="593.6" y="291.0" width="0.8" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="596.6" y="302.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (8 samples, 0.04%)</title><rect x="594.4" y="323.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="597.4" y="334.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (8 samples, 0.04%)</title><rect x="594.4" y="307.0" width="0.5" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="597.4" y="318.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (9 samples, 0.04%)</title><rect x="594.9" y="355.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="597.9" y="366.0"></text>
</g>
<g>
<title>byte[] (5 samples, 0.02%)</title><rect x="594.9" y="339.0" width="0.2" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="597.9" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.get (1,288 samples, 6.14%)</title><rect x="595.4" y="355.0" width="72.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="598.4" y="366.0">ru/mail/..</text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (71 samples, 0.34%)</title><rect x="595.4" y="339.0" width="4.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="598.4" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (71 samples, 0.34%)</title><rect x="595.4" y="323.0" width="4.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="598.4" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (71 samples, 0.34%)</title><rect x="595.4" y="307.0" width="4.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="598.4" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (71 samples, 0.34%)</title><rect x="595.4" y="291.0" width="4.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="598.4" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (71 samples, 0.34%)</title><rect x="595.4" y="275.0" width="4.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="598.4" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (62 samples, 0.30%)</title><rect x="595.4" y="259.0" width="3.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="598.4" y="270.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (62 samples, 0.30%)</title><rect x="595.4" y="243.0" width="3.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="598.4" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (62 samples, 0.30%)</title><rect x="595.4" y="227.0" width="3.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="598.4" y="238.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (62 samples, 0.30%)</title><rect x="595.4" y="211.0" width="3.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="598.4" y="222.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (62 samples, 0.30%)</title><rect x="595.4" y="195.0" width="3.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="598.4" y="206.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (62 samples, 0.30%)</title><rect x="595.4" y="179.0" width="3.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="598.4" y="190.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (62 samples, 0.30%)</title><rect x="595.4" y="163.0" width="3.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="598.4" y="174.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (57 samples, 0.27%)</title><rect x="595.4" y="147.0" width="3.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="598.4" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/SSTable$1.next (57 samples, 0.27%)</title><rect x="595.4" y="131.0" width="3.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="598.4" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/SSTable$1.next (57 samples, 0.27%)</title><rect x="595.4" y="115.0" width="3.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="598.4" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/SSTable.getCell (57 samples, 0.27%)</title><rect x="595.4" y="99.0" width="3.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="598.4" y="110.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (34 samples, 0.16%)</title><rect x="595.4" y="83.0" width="1.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="598.4" y="94.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (26 samples, 0.12%)</title><rect x="595.4" y="67.0" width="1.4" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="598.4" y="78.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (8 samples, 0.04%)</title><rect x="596.8" y="67.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="599.8" y="78.0"></text>
</g>
<g>
<title>byte[] (8 samples, 0.04%)</title><rect x="596.8" y="51.0" width="0.5" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="599.8" y="62.0"></text>
</g>
<g>
<title>ru.mail.polis.Value (5 samples, 0.02%)</title><rect x="597.4" y="83.0" width="0.3" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="600.4" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/SSTable.getOffset (16 samples, 0.08%)</title><rect x="597.7" y="83.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="600.7" y="94.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (16 samples, 0.08%)</title><rect x="597.7" y="67.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="600.7" y="78.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (13 samples, 0.06%)</title><rect x="597.7" y="51.0" width="0.7" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="600.7" y="62.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (5 samples, 0.02%)</title><rect x="598.6" y="147.0" width="0.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="601.6" y="158.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (5 samples, 0.02%)</title><rect x="598.6" y="131.0" width="0.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="601.6" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/Cell.compareTo (5 samples, 0.02%)</title><rect x="598.6" y="115.0" width="0.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="601.6" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/Cell.compareTo (5 samples, 0.02%)</title><rect x="598.6" y="99.0" width="0.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="601.6" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/Cell.getKey (5 samples, 0.02%)</title><rect x="598.6" y="83.0" width="0.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="601.6" y="94.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (5 samples, 0.02%)</title><rect x="598.6" y="67.0" width="0.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="601.6" y="78.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (5 samples, 0.02%)</title><rect x="598.6" y="51.0" width="0.2" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="601.6" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl$$Lambda$79/1829454105.apply (9 samples, 0.04%)</title><rect x="598.8" y="259.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="601.8" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/Cell.getKey (9 samples, 0.04%)</title><rect x="598.8" y="243.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="601.8" y="254.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (9 samples, 0.04%)</title><rect x="598.8" y="227.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="601.8" y="238.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (9 samples, 0.04%)</title><rect x="598.8" y="211.0" width="0.6" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="601.8" y="222.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.next (10 samples, 0.05%)</title><rect x="599.4" y="339.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="602.4" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$6.transform (10 samples, 0.05%)</title><rect x="599.4" y="323.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="602.4" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl$$Lambda$81/1927968150.apply (10 samples, 0.05%)</title><rect x="599.4" y="307.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="602.4" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.lambda$iterator$4 (10 samples, 0.05%)</title><rect x="599.4" y="291.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="602.4" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/Value.getData (5 samples, 0.02%)</title><rect x="599.6" y="275.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="602.6" y="286.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (5 samples, 0.02%)</title><rect x="599.6" y="259.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="602.6" y="270.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (5 samples, 0.02%)</title><rect x="599.6" y="243.0" width="0.3" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="602.6" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/Record.getKey (7 samples, 0.03%)</title><rect x="599.9" y="339.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="602.9" y="350.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (7 samples, 0.03%)</title><rect x="599.9" y="323.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="602.9" y="334.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (7 samples, 0.03%)</title><rect x="599.9" y="307.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="602.9" y="318.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (7 samples, 0.03%)</title><rect x="599.9" y="291.0" width="0.4" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="602.9" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.iterator (1,200 samples, 5.72%)</title><rect x="600.3" y="339.0" width="67.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="603.3" y="350.0">ru/mail..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.compactIterator (1,198 samples, 5.71%)</title><rect x="600.4" y="323.0" width="67.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="603.4" y="334.0">ru/mail..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (121 samples, 0.58%)</title><rect x="600.4" y="307.0" width="6.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="603.4" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (120 samples, 0.57%)</title><rect x="600.5" y="291.0" width="6.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="603.5" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.peekingIterator (6 samples, 0.03%)</title><rect x="600.6" y="275.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="603.6" y="286.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$PeekingImpl (6 samples, 0.03%)</title><rect x="600.6" y="259.0" width="0.3" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="603.6" y="270.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (109 samples, 0.52%)</title><rect x="601.1" y="275.0" width="6.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="604.1" y="286.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (109 samples, 0.52%)</title><rect x="601.1" y="259.0" width="6.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="604.1" y="270.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (109 samples, 0.52%)</title><rect x="601.1" y="243.0" width="6.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="604.1" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (109 samples, 0.52%)</title><rect x="601.1" y="227.0" width="6.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="604.1" y="238.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (109 samples, 0.52%)</title><rect x="601.1" y="211.0" width="6.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="604.1" y="222.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (109 samples, 0.52%)</title><rect x="601.1" y="195.0" width="6.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="604.1" y="206.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (106 samples, 0.51%)</title><rect x="601.1" y="179.0" width="6.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="604.1" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/SSTable$1.next (106 samples, 0.51%)</title><rect x="601.1" y="163.0" width="6.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="604.1" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/SSTable$1.next (106 samples, 0.51%)</title><rect x="601.1" y="147.0" width="6.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="604.1" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/SSTable.getCell (106 samples, 0.51%)</title><rect x="601.1" y="131.0" width="6.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="604.1" y="142.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (68 samples, 0.32%)</title><rect x="601.1" y="115.0" width="3.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="604.1" y="126.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (41 samples, 0.20%)</title><rect x="601.1" y="99.0" width="2.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="604.1" y="110.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (27 samples, 0.13%)</title><rect x="603.4" y="99.0" width="1.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="606.4" y="110.0"></text>
</g>
<g>
<title>byte[] (27 samples, 0.13%)</title><rect x="603.4" y="83.0" width="1.5" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="606.4" y="94.0"></text>
</g>
<g>
<title>ru.mail.polis.Cell (5 samples, 0.02%)</title><rect x="604.9" y="115.0" width="0.3" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="607.9" y="126.0"></text>
</g>
<g>
<title>ru.mail.polis.Value (9 samples, 0.04%)</title><rect x="605.2" y="115.0" width="0.5" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="608.2" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/SSTable.getOffset (24 samples, 0.11%)</title><rect x="605.7" y="115.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="608.7" y="126.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (24 samples, 0.11%)</title><rect x="605.7" y="99.0" width="1.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="608.7" y="110.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (16 samples, 0.08%)</title><rect x="605.7" y="83.0" width="0.9" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="608.7" y="94.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (8 samples, 0.04%)</title><rect x="606.6" y="83.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="609.6" y="94.0"></text>
</g>
<g>
<title>byte[] (8 samples, 0.04%)</title><rect x="606.6" y="67.0" width="0.5" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="609.6" y="78.0"></text>
</g>
<g>
<title>java.util.ArrayList (16 samples, 0.08%)</title><rect x="607.2" y="307.0" width="0.9" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="610.2" y="318.0"></text>
</g>
<g>
<title>java/lang/Iterable.forEach (960 samples, 4.57%)</title><rect x="608.1" y="307.0" width="54.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="611.1" y="318.0">java/..</text>
</g>
<g>
<title>java/util/AbstractMap$2.iterator (10 samples, 0.05%)</title><rect x="608.1" y="291.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="611.1" y="302.0"></text>
</g>
<g>
<title>java/util/AbstractMap$2$1.&lt;init&gt; (8 samples, 0.04%)</title><rect x="608.2" y="275.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="611.2" y="286.0"></text>
</g>
<g>
<title>java/util/TreeMap$DescendingSubMap$DescendingEntrySetView.iterator (8 samples, 0.04%)</title><rect x="608.2" y="259.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="611.2" y="270.0"></text>
</g>
<g>
<title>java.util.TreeMap$NavigableSubMap$DescendingSubMapEntryIterator (8 samples, 0.04%)</title><rect x="608.2" y="243.0" width="0.5" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="611.2" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl$$Lambda$77/1381385518.accept (950 samples, 4.53%)</title><rect x="608.7" y="291.0" width="53.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="611.7" y="302.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.lambda$compactIterator$7 (950 samples, 4.53%)</title><rect x="608.7" y="275.0" width="53.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="611.7" y="286.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/SSTable.iterator (950 samples, 4.53%)</title><rect x="608.7" y="259.0" width="53.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="611.7" y="270.0">ru/ma..</text>
</g>
<g>
<title>ru.mail.polis.SSTable$1 (9 samples, 0.04%)</title><rect x="608.7" y="243.0" width="0.5" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="611.7" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/SSTable$1.&lt;init&gt; (941 samples, 4.48%)</title><rect x="609.2" y="243.0" width="52.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="612.2" y="254.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/SSTable.getPosition (941 samples, 4.48%)</title><rect x="609.2" y="227.0" width="52.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="612.2" y="238.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/SSTable.getKey (941 samples, 4.48%)</title><rect x="609.2" y="211.0" width="52.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="612.2" y="222.0">ru/ma..</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (626 samples, 2.98%)</title><rect x="609.2" y="195.0" width="35.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="612.2" y="206.0">jav..</text>
</g>
<g>
<title>java.nio.HeapByteBuffer (435 samples, 2.07%)</title><rect x="609.2" y="179.0" width="24.5" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="612.2" y="190.0">j..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (191 samples, 0.91%)</title><rect x="633.7" y="179.0" width="10.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="636.7" y="190.0"></text>
</g>
<g>
<title>byte[] (191 samples, 0.91%)</title><rect x="633.7" y="163.0" width="10.7" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="636.7" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/SSTable.getOffset (315 samples, 1.50%)</title><rect x="644.4" y="195.0" width="17.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="647.4" y="206.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (315 samples, 1.50%)</title><rect x="644.4" y="179.0" width="17.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="647.4" y="190.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (208 samples, 0.99%)</title><rect x="644.4" y="163.0" width="11.7" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="647.4" y="174.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (107 samples, 0.51%)</title><rect x="656.1" y="163.0" width="6.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="659.1" y="174.0"></text>
</g>
<g>
<title>byte[] (107 samples, 0.51%)</title><rect x="656.1" y="147.0" width="6.0" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="659.1" y="158.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (5 samples, 0.02%)</title><rect x="662.1" y="307.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="665.1" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (5 samples, 0.02%)</title><rect x="662.1" y="291.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="665.1" y="302.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (6 samples, 0.03%)</title><rect x="662.4" y="307.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="665.4" y="318.0"></text>
</g>
<g>
<title>java.lang.Object[] (6 samples, 0.03%)</title><rect x="662.4" y="291.0" width="0.3" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="665.4" y="302.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection.forEach (7 samples, 0.03%)</title><rect x="662.7" y="307.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="665.7" y="318.0"></text>
</g>
<g>
<title>java/lang/Iterable.forEach (7 samples, 0.03%)</title><rect x="662.7" y="291.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="665.7" y="302.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (7 samples, 0.03%)</title><rect x="662.7" y="275.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="665.7" y="286.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (7 samples, 0.03%)</title><rect x="662.7" y="259.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="665.7" y="270.0"></text>
</g>
<g>
<title>java.util.HashMap$KeyIterator (7 samples, 0.03%)</title><rect x="662.7" y="243.0" width="0.4" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="665.7" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/MemTable.iterator (18 samples, 0.09%)</title><rect x="663.1" y="307.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="666.1" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.transform (5 samples, 0.02%)</title><rect x="663.1" y="291.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="666.1" y="302.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$6 (5 samples, 0.02%)</title><rect x="663.1" y="275.0" width="0.3" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="666.1" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$EntrySet.iterator (6 samples, 0.03%)</title><rect x="663.4" y="291.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="666.4" y="302.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapEntryIterator (6 samples, 0.03%)</title><rect x="663.4" y="275.0" width="0.3" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="666.4" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (7 samples, 0.03%)</title><rect x="663.7" y="291.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="666.7" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (7 samples, 0.03%)</title><rect x="663.7" y="275.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="666.7" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (7 samples, 0.03%)</title><rect x="663.7" y="259.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="666.7" y="270.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap (7 samples, 0.03%)</title><rect x="663.7" y="243.0" width="0.4" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="666.7" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (65 samples, 0.31%)</title><rect x="664.1" y="307.0" width="3.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="667.1" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (62 samples, 0.30%)</title><rect x="664.3" y="291.0" width="3.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="667.3" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (62 samples, 0.30%)</title><rect x="664.3" y="275.0" width="3.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="667.3" y="286.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (62 samples, 0.30%)</title><rect x="664.3" y="259.0" width="3.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="667.3" y="270.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (62 samples, 0.30%)</title><rect x="664.3" y="243.0" width="3.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="667.3" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (62 samples, 0.30%)</title><rect x="664.3" y="227.0" width="3.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="667.3" y="238.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (62 samples, 0.30%)</title><rect x="664.3" y="211.0" width="3.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="667.3" y="222.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (62 samples, 0.30%)</title><rect x="664.3" y="195.0" width="3.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="667.3" y="206.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (62 samples, 0.30%)</title><rect x="664.3" y="179.0" width="3.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="667.3" y="190.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (58 samples, 0.28%)</title><rect x="664.3" y="163.0" width="3.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="667.3" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/SSTable$1.next (58 samples, 0.28%)</title><rect x="664.3" y="147.0" width="3.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="667.3" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/SSTable$1.next (58 samples, 0.28%)</title><rect x="664.3" y="131.0" width="3.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="667.3" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/SSTable.getCell (58 samples, 0.28%)</title><rect x="664.3" y="115.0" width="3.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="667.3" y="126.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (27 samples, 0.13%)</title><rect x="664.3" y="99.0" width="1.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="667.3" y="110.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (19 samples, 0.09%)</title><rect x="664.3" y="83.0" width="1.1" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="667.3" y="94.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (8 samples, 0.04%)</title><rect x="665.4" y="83.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="668.4" y="94.0"></text>
</g>
<g>
<title>byte[] (8 samples, 0.04%)</title><rect x="665.4" y="67.0" width="0.4" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="668.4" y="78.0"></text>
</g>
<g>
<title>ru.mail.polis.Value (6 samples, 0.03%)</title><rect x="666.0" y="99.0" width="0.3" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="669.0" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/SSTable.getOffset (22 samples, 0.10%)</title><rect x="666.3" y="99.0" width="1.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="669.3" y="110.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (22 samples, 0.10%)</title><rect x="666.3" y="83.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="669.3" y="94.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (12 samples, 0.06%)</title><rect x="666.3" y="67.0" width="0.7" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="669.3" y="78.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (10 samples, 0.05%)</title><rect x="667.0" y="67.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="670.0" y="78.0"></text>
</g>
<g>
<title>byte[] (10 samples, 0.05%)</title><rect x="667.0" y="51.0" width="0.6" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="670.0" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivlev/ThreadController.toByteBuffer (6 samples, 0.03%)</title><rect x="667.8" y="355.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="670.8" y="366.0"></text>
</g>
<g>
<title>[worker_1 tid=4346] (1,327 samples, 6.32%)</title><rect x="668.2" y="451.0" width="74.6" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="671.2" y="462.0">[worker_..</text>
</g>
<g>
<title>java/lang/Thread.run (1,327 samples, 6.32%)</title><rect x="668.2" y="435.0" width="74.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="671.2" y="446.0">java/lan..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (1,327 samples, 6.32%)</title><rect x="668.2" y="419.0" width="74.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="671.2" y="430.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (1,327 samples, 6.32%)</title><rect x="668.2" y="403.0" width="74.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="671.2" y="414.0">java/uti..</text>
</g>
<g>
<title>ru/mail/polis/service/ivlev/ThreadController$$Lambda$76/1494085373.run (1,327 samples, 6.32%)</title><rect x="668.2" y="387.0" width="74.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="671.2" y="398.0">ru/mail/..</text>
</g>
<g>
<title>ru/mail/polis/service/ivlev/ThreadController.lambda$get$2 (1,327 samples, 6.32%)</title><rect x="668.2" y="371.0" width="74.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="671.2" y="382.0">ru/mail/..</text>
</g>
<g>
<title>one.nio.http.Response (5 samples, 0.02%)</title><rect x="668.2" y="355.0" width="0.3" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="671.2" y="366.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (18 samples, 0.09%)</title><rect x="668.5" y="355.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="671.5" y="366.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (18 samples, 0.09%)</title><rect x="668.5" y="339.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="671.5" y="350.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (13 samples, 0.06%)</title><rect x="668.5" y="323.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="671.5" y="334.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (13 samples, 0.06%)</title><rect x="668.5" y="307.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="671.5" y="318.0"></text>
</g>
<g>
<title>byte[] (13 samples, 0.06%)</title><rect x="668.5" y="291.0" width="0.7" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="671.5" y="302.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (5 samples, 0.02%)</title><rect x="669.2" y="323.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="672.2" y="334.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (5 samples, 0.02%)</title><rect x="669.2" y="307.0" width="0.3" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="672.2" y="318.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (9 samples, 0.04%)</title><rect x="669.5" y="355.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="672.5" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.get (1,282 samples, 6.11%)</title><rect x="670.0" y="355.0" width="72.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="673.0" y="366.0">ru/mail/..</text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (67 samples, 0.32%)</title><rect x="670.0" y="339.0" width="3.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="673.0" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (67 samples, 0.32%)</title><rect x="670.0" y="323.0" width="3.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="673.0" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (67 samples, 0.32%)</title><rect x="670.0" y="307.0" width="3.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="673.0" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (67 samples, 0.32%)</title><rect x="670.0" y="291.0" width="3.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="673.0" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (67 samples, 0.32%)</title><rect x="670.0" y="275.0" width="3.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="673.0" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (56 samples, 0.27%)</title><rect x="670.0" y="259.0" width="3.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="673.0" y="270.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (56 samples, 0.27%)</title><rect x="670.0" y="243.0" width="3.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="673.0" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (56 samples, 0.27%)</title><rect x="670.0" y="227.0" width="3.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="673.0" y="238.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (56 samples, 0.27%)</title><rect x="670.0" y="211.0" width="3.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="673.0" y="222.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (56 samples, 0.27%)</title><rect x="670.0" y="195.0" width="3.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="673.0" y="206.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (56 samples, 0.27%)</title><rect x="670.0" y="179.0" width="3.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="673.0" y="190.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (56 samples, 0.27%)</title><rect x="670.0" y="163.0" width="3.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="673.0" y="174.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (53 samples, 0.25%)</title><rect x="670.0" y="147.0" width="3.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="673.0" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/SSTable$1.next (53 samples, 0.25%)</title><rect x="670.0" y="131.0" width="3.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="673.0" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/SSTable$1.next (53 samples, 0.25%)</title><rect x="670.0" y="115.0" width="3.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="673.0" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/SSTable.getCell (53 samples, 0.25%)</title><rect x="670.0" y="99.0" width="3.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="673.0" y="110.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (36 samples, 0.17%)</title><rect x="670.0" y="83.0" width="2.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="673.0" y="94.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (24 samples, 0.11%)</title><rect x="670.0" y="67.0" width="1.3" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="673.0" y="78.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (12 samples, 0.06%)</title><rect x="671.3" y="67.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="674.3" y="78.0"></text>
</g>
<g>
<title>byte[] (12 samples, 0.06%)</title><rect x="671.3" y="51.0" width="0.7" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="674.3" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/SSTable.getOffset (11 samples, 0.05%)</title><rect x="672.3" y="83.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="675.3" y="94.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (11 samples, 0.05%)</title><rect x="672.3" y="67.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="675.3" y="78.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (9 samples, 0.04%)</title><rect x="672.3" y="51.0" width="0.5" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="675.3" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl$$Lambda$79/1829454105.apply (11 samples, 0.05%)</title><rect x="673.1" y="259.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="676.1" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/Cell.getKey (11 samples, 0.05%)</title><rect x="673.1" y="243.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="676.1" y="254.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (11 samples, 0.05%)</title><rect x="673.1" y="227.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="676.1" y="238.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (11 samples, 0.05%)</title><rect x="673.1" y="211.0" width="0.6" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="676.1" y="222.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.next (11 samples, 0.05%)</title><rect x="673.7" y="339.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="676.7" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$6.transform (11 samples, 0.05%)</title><rect x="673.7" y="323.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="676.7" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl$$Lambda$81/1927968150.apply (11 samples, 0.05%)</title><rect x="673.7" y="307.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="676.7" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.lambda$iterator$4 (11 samples, 0.05%)</title><rect x="673.7" y="291.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="676.7" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/Value.getData (5 samples, 0.02%)</title><rect x="674.1" y="275.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="677.1" y="286.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (5 samples, 0.02%)</title><rect x="674.1" y="259.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="677.1" y="270.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (5 samples, 0.02%)</title><rect x="674.1" y="243.0" width="0.3" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="677.1" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/Record.getKey (5 samples, 0.02%)</title><rect x="674.4" y="339.0" width="0.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="677.4" y="350.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (5 samples, 0.02%)</title><rect x="674.4" y="323.0" width="0.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="677.4" y="334.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (5 samples, 0.02%)</title><rect x="674.4" y="307.0" width="0.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="677.4" y="318.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (5 samples, 0.02%)</title><rect x="674.4" y="291.0" width="0.2" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="677.4" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.iterator (1,199 samples, 5.71%)</title><rect x="674.6" y="339.0" width="67.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="677.6" y="350.0">ru/mail..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.filter (5 samples, 0.02%)</title><rect x="674.6" y="323.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="677.6" y="334.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$5 (5 samples, 0.02%)</title><rect x="674.6" y="307.0" width="0.3" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="677.6" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.compactIterator (1,194 samples, 5.69%)</title><rect x="674.9" y="323.0" width="67.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="677.9" y="334.0">ru/mail..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (135 samples, 0.64%)</title><rect x="674.9" y="307.0" width="7.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="677.9" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (132 samples, 0.63%)</title><rect x="675.1" y="291.0" width="7.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="678.1" y="302.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.&lt;init&gt; (5 samples, 0.02%)</title><rect x="675.7" y="275.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="678.7" y="286.0"></text>
</g>
<g>
<title>java.lang.Object[] (5 samples, 0.02%)</title><rect x="675.7" y="259.0" width="0.3" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="678.7" y="270.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (116 samples, 0.55%)</title><rect x="676.0" y="275.0" width="6.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="679.0" y="286.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (116 samples, 0.55%)</title><rect x="676.0" y="259.0" width="6.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="679.0" y="270.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (116 samples, 0.55%)</title><rect x="676.0" y="243.0" width="6.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="679.0" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (116 samples, 0.55%)</title><rect x="676.0" y="227.0" width="6.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="679.0" y="238.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (116 samples, 0.55%)</title><rect x="676.0" y="211.0" width="6.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="679.0" y="222.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (116 samples, 0.55%)</title><rect x="676.0" y="195.0" width="6.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="679.0" y="206.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (108 samples, 0.51%)</title><rect x="676.0" y="179.0" width="6.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="679.0" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/SSTable$1.next (108 samples, 0.51%)</title><rect x="676.0" y="163.0" width="6.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="679.0" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/SSTable$1.next (108 samples, 0.51%)</title><rect x="676.0" y="147.0" width="6.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="679.0" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/SSTable.getCell (108 samples, 0.51%)</title><rect x="676.0" y="131.0" width="6.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="679.0" y="142.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (78 samples, 0.37%)</title><rect x="676.0" y="115.0" width="4.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="679.0" y="126.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (56 samples, 0.27%)</title><rect x="676.0" y="99.0" width="3.1" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="679.0" y="110.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (22 samples, 0.10%)</title><rect x="679.1" y="99.0" width="1.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="682.1" y="110.0"></text>
</g>
<g>
<title>byte[] (22 samples, 0.10%)</title><rect x="679.1" y="83.0" width="1.3" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="682.1" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/SSTable.getOffset (23 samples, 0.11%)</title><rect x="680.8" y="115.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="683.8" y="126.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (23 samples, 0.11%)</title><rect x="680.8" y="99.0" width="1.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="683.8" y="110.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (17 samples, 0.08%)</title><rect x="680.8" y="83.0" width="0.9" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="683.8" y="94.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (6 samples, 0.03%)</title><rect x="681.7" y="83.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="684.7" y="94.0"></text>
</g>
<g>
<title>byte[] (6 samples, 0.03%)</title><rect x="681.7" y="67.0" width="0.4" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="684.7" y="78.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (8 samples, 0.04%)</title><rect x="682.1" y="179.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="685.1" y="190.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (8 samples, 0.04%)</title><rect x="682.1" y="163.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="685.1" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/Cell.compareTo (8 samples, 0.04%)</title><rect x="682.1" y="147.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="685.1" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/Cell.compareTo (8 samples, 0.04%)</title><rect x="682.1" y="131.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="685.1" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/Cell.getKey (8 samples, 0.04%)</title><rect x="682.1" y="115.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="685.1" y="126.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (8 samples, 0.04%)</title><rect x="682.1" y="99.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="685.1" y="110.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (8 samples, 0.04%)</title><rect x="682.1" y="83.0" width="0.4" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="685.1" y="94.0"></text>
</g>
<g>
<title>java.util.ArrayList (22 samples, 0.10%)</title><rect x="682.5" y="307.0" width="1.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="685.5" y="318.0"></text>
</g>
<g>
<title>java/lang/Iterable.forEach (944 samples, 4.50%)</title><rect x="683.8" y="307.0" width="53.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="686.8" y="318.0">java/..</text>
</g>
<g>
<title>java/util/AbstractMap$2.iterator (11 samples, 0.05%)</title><rect x="683.8" y="291.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="686.8" y="302.0"></text>
</g>
<g>
<title>java.util.AbstractMap$2$1 (5 samples, 0.02%)</title><rect x="683.8" y="275.0" width="0.2" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="686.8" y="286.0"></text>
</g>
<g>
<title>java/util/AbstractMap$2$1.&lt;init&gt; (6 samples, 0.03%)</title><rect x="684.0" y="275.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="687.0" y="286.0"></text>
</g>
<g>
<title>java/util/TreeMap$DescendingSubMap$DescendingEntrySetView.iterator (6 samples, 0.03%)</title><rect x="684.0" y="259.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="687.0" y="270.0"></text>
</g>
<g>
<title>java.util.TreeMap$NavigableSubMap$DescendingSubMapEntryIterator (6 samples, 0.03%)</title><rect x="684.0" y="243.0" width="0.4" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="687.0" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl$$Lambda$77/1381385518.accept (933 samples, 4.45%)</title><rect x="684.4" y="291.0" width="52.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="687.4" y="302.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.lambda$compactIterator$7 (933 samples, 4.45%)</title><rect x="684.4" y="275.0" width="52.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="687.4" y="286.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/SSTable.iterator (933 samples, 4.45%)</title><rect x="684.4" y="259.0" width="52.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="687.4" y="270.0">ru/ma..</text>
</g>
<g>
<title>ru.mail.polis.SSTable$1 (7 samples, 0.03%)</title><rect x="684.4" y="243.0" width="0.4" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="687.4" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/SSTable$1.&lt;init&gt; (926 samples, 4.41%)</title><rect x="684.8" y="243.0" width="52.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="687.8" y="254.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/SSTable.getPosition (926 samples, 4.41%)</title><rect x="684.8" y="227.0" width="52.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="687.8" y="238.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/SSTable.getKey (926 samples, 4.41%)</title><rect x="684.8" y="211.0" width="52.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="687.8" y="222.0">ru/ma..</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (615 samples, 2.93%)</title><rect x="684.8" y="195.0" width="34.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="687.8" y="206.0">ja..</text>
</g>
<g>
<title>java.nio.HeapByteBuffer (429 samples, 2.04%)</title><rect x="684.8" y="179.0" width="24.1" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="687.8" y="190.0">j..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (186 samples, 0.89%)</title><rect x="708.9" y="179.0" width="10.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="711.9" y="190.0"></text>
</g>
<g>
<title>byte[] (186 samples, 0.89%)</title><rect x="708.9" y="163.0" width="10.4" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="711.9" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/SSTable.getOffset (311 samples, 1.48%)</title><rect x="719.3" y="195.0" width="17.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="722.3" y="206.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (311 samples, 1.48%)</title><rect x="719.3" y="179.0" width="17.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="722.3" y="190.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (212 samples, 1.01%)</title><rect x="719.3" y="163.0" width="12.0" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="722.3" y="174.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (99 samples, 0.47%)</title><rect x="731.3" y="163.0" width="5.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="734.3" y="174.0"></text>
</g>
<g>
<title>byte[] (99 samples, 0.47%)</title><rect x="731.3" y="147.0" width="5.5" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="734.3" y="158.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (7 samples, 0.03%)</title><rect x="736.8" y="307.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="739.8" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (7 samples, 0.03%)</title><rect x="736.8" y="291.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="739.8" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl$$Lambda$78/1794229087.get$Lambda (5 samples, 0.02%)</title><rect x="736.9" y="275.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="739.9" y="286.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.impl.DAOImpl$$Lambda$78 (5 samples, 0.02%)</title><rect x="736.9" y="259.0" width="0.3" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="739.9" y="270.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection.forEach (6 samples, 0.03%)</title><rect x="737.4" y="307.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="740.4" y="318.0"></text>
</g>
<g>
<title>java/lang/Iterable.forEach (6 samples, 0.03%)</title><rect x="737.4" y="291.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="740.4" y="302.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (6 samples, 0.03%)</title><rect x="737.4" y="275.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="740.4" y="286.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (6 samples, 0.03%)</title><rect x="737.4" y="259.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="740.4" y="270.0"></text>
</g>
<g>
<title>java.util.HashMap$KeyIterator (6 samples, 0.03%)</title><rect x="737.4" y="243.0" width="0.3" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="740.4" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/MemTable.iterator (12 samples, 0.06%)</title><rect x="737.7" y="307.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="740.7" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (65 samples, 0.31%)</title><rect x="738.4" y="307.0" width="3.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="741.4" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (62 samples, 0.30%)</title><rect x="738.6" y="291.0" width="3.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="741.6" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (62 samples, 0.30%)</title><rect x="738.6" y="275.0" width="3.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="741.6" y="286.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (62 samples, 0.30%)</title><rect x="738.6" y="259.0" width="3.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="741.6" y="270.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (62 samples, 0.30%)</title><rect x="738.6" y="243.0" width="3.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="741.6" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (62 samples, 0.30%)</title><rect x="738.6" y="227.0" width="3.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="741.6" y="238.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (62 samples, 0.30%)</title><rect x="738.6" y="211.0" width="3.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="741.6" y="222.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (62 samples, 0.30%)</title><rect x="738.6" y="195.0" width="3.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="741.6" y="206.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (62 samples, 0.30%)</title><rect x="738.6" y="179.0" width="3.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="741.6" y="190.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (55 samples, 0.26%)</title><rect x="738.6" y="163.0" width="3.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="741.6" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/SSTable$1.next (55 samples, 0.26%)</title><rect x="738.6" y="147.0" width="3.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="741.6" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/SSTable$1.next (55 samples, 0.26%)</title><rect x="738.6" y="131.0" width="3.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="741.6" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/SSTable.getCell (55 samples, 0.26%)</title><rect x="738.6" y="115.0" width="3.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="741.6" y="126.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (31 samples, 0.15%)</title><rect x="738.6" y="99.0" width="1.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="741.6" y="110.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (21 samples, 0.10%)</title><rect x="738.6" y="83.0" width="1.2" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="741.6" y="94.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (10 samples, 0.05%)</title><rect x="739.8" y="83.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="742.8" y="94.0"></text>
</g>
<g>
<title>byte[] (10 samples, 0.05%)</title><rect x="739.8" y="67.0" width="0.5" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="742.8" y="78.0"></text>
</g>
<g>
<title>ru/mail/polis/SSTable.getOffset (18 samples, 0.09%)</title><rect x="740.7" y="99.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="743.7" y="110.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (18 samples, 0.09%)</title><rect x="740.7" y="83.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="743.7" y="94.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (12 samples, 0.06%)</title><rect x="740.7" y="67.0" width="0.6" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="743.7" y="78.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (6 samples, 0.03%)</title><rect x="741.3" y="67.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="744.3" y="78.0"></text>
</g>
<g>
<title>byte[] (6 samples, 0.03%)</title><rect x="741.3" y="51.0" width="0.4" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="744.3" y="62.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (7 samples, 0.03%)</title><rect x="741.7" y="163.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="744.7" y="174.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (7 samples, 0.03%)</title><rect x="741.7" y="147.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="744.7" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/Cell.compareTo (7 samples, 0.03%)</title><rect x="741.7" y="131.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="744.7" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/Cell.compareTo (7 samples, 0.03%)</title><rect x="741.7" y="115.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="744.7" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/Cell.getKey (7 samples, 0.03%)</title><rect x="741.7" y="99.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="744.7" y="110.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (7 samples, 0.03%)</title><rect x="741.7" y="83.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="744.7" y="94.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (7 samples, 0.03%)</title><rect x="741.7" y="67.0" width="0.4" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="744.7" y="78.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivlev/ThreadController.toByteArray (6 samples, 0.03%)</title><rect x="742.1" y="355.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="745.1" y="366.0"></text>
</g>
<g>
<title>byte[] (6 samples, 0.03%)</title><rect x="742.1" y="339.0" width="0.3" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="745.1" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivlev/ThreadController.toByteBuffer (7 samples, 0.03%)</title><rect x="742.4" y="355.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="745.4" y="366.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (5 samples, 0.02%)</title><rect x="742.5" y="339.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="745.5" y="350.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (5 samples, 0.02%)</title><rect x="742.5" y="323.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="745.5" y="334.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (5 samples, 0.02%)</title><rect x="742.5" y="307.0" width="0.3" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="745.5" y="318.0"></text>
</g>
<g>
<title>[worker_2 tid=4350] (1,317 samples, 6.28%)</title><rect x="742.8" y="451.0" width="74.1" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="745.8" y="462.0">[worker_..</text>
</g>
<g>
<title>java/lang/Thread.run (1,317 samples, 6.28%)</title><rect x="742.8" y="435.0" width="74.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="745.8" y="446.0">java/lan..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (1,317 samples, 6.28%)</title><rect x="742.8" y="419.0" width="74.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="745.8" y="430.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (1,317 samples, 6.28%)</title><rect x="742.8" y="403.0" width="74.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="745.8" y="414.0">java/uti..</text>
</g>
<g>
<title>ru/mail/polis/service/ivlev/ThreadController$$Lambda$76/1494085373.run (1,317 samples, 6.28%)</title><rect x="742.8" y="387.0" width="74.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="745.8" y="398.0">ru/mail/..</text>
</g>
<g>
<title>ru/mail/polis/service/ivlev/ThreadController.lambda$get$2 (1,317 samples, 6.28%)</title><rect x="742.8" y="371.0" width="74.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="745.8" y="382.0">ru/mail/..</text>
</g>
<g>
<title>one.nio.http.Response (10 samples, 0.05%)</title><rect x="742.8" y="355.0" width="0.6" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="745.8" y="366.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (18 samples, 0.09%)</title><rect x="743.4" y="355.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="746.4" y="366.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (18 samples, 0.09%)</title><rect x="743.4" y="339.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="746.4" y="350.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (13 samples, 0.06%)</title><rect x="743.4" y="323.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="746.4" y="334.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (13 samples, 0.06%)</title><rect x="743.4" y="307.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="746.4" y="318.0"></text>
</g>
<g>
<title>byte[] (13 samples, 0.06%)</title><rect x="743.4" y="291.0" width="0.7" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="746.4" y="302.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (5 samples, 0.02%)</title><rect x="744.1" y="323.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="747.1" y="334.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (5 samples, 0.02%)</title><rect x="744.1" y="307.0" width="0.3" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="747.1" y="318.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (11 samples, 0.05%)</title><rect x="744.4" y="355.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="747.4" y="366.0"></text>
</g>
<g>
<title>byte[] (6 samples, 0.03%)</title><rect x="744.4" y="339.0" width="0.3" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="747.4" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.get (1,260 samples, 6.00%)</title><rect x="745.0" y="355.0" width="70.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="748.0" y="366.0">ru/mail/..</text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (80 samples, 0.38%)</title><rect x="745.0" y="339.0" width="4.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="748.0" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (80 samples, 0.38%)</title><rect x="745.0" y="323.0" width="4.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="748.0" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (80 samples, 0.38%)</title><rect x="745.0" y="307.0" width="4.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="748.0" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (80 samples, 0.38%)</title><rect x="745.0" y="291.0" width="4.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="748.0" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (80 samples, 0.38%)</title><rect x="745.0" y="275.0" width="4.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="748.0" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (66 samples, 0.31%)</title><rect x="745.0" y="259.0" width="3.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="748.0" y="270.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (66 samples, 0.31%)</title><rect x="745.0" y="243.0" width="3.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="748.0" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (66 samples, 0.31%)</title><rect x="745.0" y="227.0" width="3.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="748.0" y="238.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (66 samples, 0.31%)</title><rect x="745.0" y="211.0" width="3.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="748.0" y="222.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (66 samples, 0.31%)</title><rect x="745.0" y="195.0" width="3.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="748.0" y="206.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (66 samples, 0.31%)</title><rect x="745.0" y="179.0" width="3.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="748.0" y="190.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (66 samples, 0.31%)</title><rect x="745.0" y="163.0" width="3.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="748.0" y="174.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (60 samples, 0.29%)</title><rect x="745.0" y="147.0" width="3.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="748.0" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/SSTable$1.next (60 samples, 0.29%)</title><rect x="745.0" y="131.0" width="3.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="748.0" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/SSTable$1.next (60 samples, 0.29%)</title><rect x="745.0" y="115.0" width="3.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="748.0" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/SSTable.getCell (60 samples, 0.29%)</title><rect x="745.0" y="99.0" width="3.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="748.0" y="110.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (33 samples, 0.16%)</title><rect x="745.0" y="83.0" width="1.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="748.0" y="94.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (18 samples, 0.09%)</title><rect x="745.0" y="67.0" width="1.0" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="748.0" y="78.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (15 samples, 0.07%)</title><rect x="746.0" y="67.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="749.0" y="78.0"></text>
</g>
<g>
<title>byte[] (15 samples, 0.07%)</title><rect x="746.0" y="51.0" width="0.8" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="749.0" y="62.0"></text>
</g>
<g>
<title>ru.mail.polis.Cell (6 samples, 0.03%)</title><rect x="746.8" y="83.0" width="0.4" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="749.8" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/SSTable.getOffset (19 samples, 0.09%)</title><rect x="747.3" y="83.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="750.3" y="94.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (19 samples, 0.09%)</title><rect x="747.3" y="67.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="750.3" y="78.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (12 samples, 0.06%)</title><rect x="747.3" y="51.0" width="0.7" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="750.3" y="62.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (7 samples, 0.03%)</title><rect x="748.0" y="51.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="751.0" y="62.0"></text>
</g>
<g>
<title>byte[] (7 samples, 0.03%)</title><rect x="748.0" y="35.0" width="0.4" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="751.0" y="46.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (6 samples, 0.03%)</title><rect x="748.4" y="147.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="751.4" y="158.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (6 samples, 0.03%)</title><rect x="748.4" y="131.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="751.4" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/Cell.compareTo (6 samples, 0.03%)</title><rect x="748.4" y="115.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="751.4" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/Cell.compareTo (6 samples, 0.03%)</title><rect x="748.4" y="99.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="751.4" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/Cell.getKey (6 samples, 0.03%)</title><rect x="748.4" y="83.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="751.4" y="94.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (6 samples, 0.03%)</title><rect x="748.4" y="67.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="751.4" y="78.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (6 samples, 0.03%)</title><rect x="748.4" y="51.0" width="0.3" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="751.4" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl$$Lambda$79/1829454105.apply (14 samples, 0.07%)</title><rect x="748.7" y="259.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="751.7" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/Cell.getKey (14 samples, 0.07%)</title><rect x="748.7" y="243.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="751.7" y="254.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (14 samples, 0.07%)</title><rect x="748.7" y="227.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="751.7" y="238.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (14 samples, 0.07%)</title><rect x="748.7" y="211.0" width="0.8" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="751.7" y="222.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.next (20 samples, 0.10%)</title><rect x="749.5" y="339.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="752.5" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$6.transform (20 samples, 0.10%)</title><rect x="749.5" y="323.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="752.5" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl$$Lambda$81/1927968150.apply (20 samples, 0.10%)</title><rect x="749.5" y="307.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="752.5" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.lambda$iterator$4 (20 samples, 0.10%)</title><rect x="749.5" y="291.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="752.5" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/Cell.getKey (6 samples, 0.03%)</title><rect x="749.5" y="275.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="752.5" y="286.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (6 samples, 0.03%)</title><rect x="749.5" y="259.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="752.5" y="270.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (6 samples, 0.03%)</title><rect x="749.5" y="243.0" width="0.3" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="752.5" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/Value.getData (11 samples, 0.05%)</title><rect x="750.0" y="275.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="753.0" y="286.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (11 samples, 0.05%)</title><rect x="750.0" y="259.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="753.0" y="270.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (11 samples, 0.05%)</title><rect x="750.0" y="243.0" width="0.6" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="753.0" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/Record.getKey (6 samples, 0.03%)</title><rect x="750.6" y="339.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="753.6" y="350.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (6 samples, 0.03%)</title><rect x="750.6" y="323.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="753.6" y="334.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (6 samples, 0.03%)</title><rect x="750.6" y="307.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="753.6" y="318.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (6 samples, 0.03%)</title><rect x="750.6" y="291.0" width="0.4" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="753.6" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.iterator (1,154 samples, 5.50%)</title><rect x="751.0" y="339.0" width="64.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="754.0" y="350.0">ru/mail..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.compactIterator (1,150 samples, 5.48%)</title><rect x="751.2" y="323.0" width="64.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="754.2" y="334.0">ru/mail..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (140 samples, 0.67%)</title><rect x="751.2" y="307.0" width="7.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="754.2" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (140 samples, 0.67%)</title><rect x="751.2" y="291.0" width="7.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="754.2" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.peekingIterator (8 samples, 0.04%)</title><rect x="751.3" y="275.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="754.3" y="286.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$PeekingImpl (8 samples, 0.04%)</title><rect x="751.3" y="259.0" width="0.5" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="754.3" y="270.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.&lt;init&gt; (5 samples, 0.02%)</title><rect x="752.0" y="275.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="755.0" y="286.0"></text>
</g>
<g>
<title>java.lang.Object[] (5 samples, 0.02%)</title><rect x="752.0" y="259.0" width="0.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="755.0" y="270.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (120 samples, 0.57%)</title><rect x="752.3" y="275.0" width="6.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="755.3" y="286.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (120 samples, 0.57%)</title><rect x="752.3" y="259.0" width="6.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="755.3" y="270.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (120 samples, 0.57%)</title><rect x="752.3" y="243.0" width="6.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="755.3" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (120 samples, 0.57%)</title><rect x="752.3" y="227.0" width="6.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="755.3" y="238.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (120 samples, 0.57%)</title><rect x="752.3" y="211.0" width="6.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="755.3" y="222.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (120 samples, 0.57%)</title><rect x="752.3" y="195.0" width="6.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="755.3" y="206.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (117 samples, 0.56%)</title><rect x="752.3" y="179.0" width="6.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="755.3" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/SSTable$1.next (117 samples, 0.56%)</title><rect x="752.3" y="163.0" width="6.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="755.3" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/SSTable$1.next (117 samples, 0.56%)</title><rect x="752.3" y="147.0" width="6.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="755.3" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/SSTable.getCell (117 samples, 0.56%)</title><rect x="752.3" y="131.0" width="6.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="755.3" y="142.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (78 samples, 0.37%)</title><rect x="752.3" y="115.0" width="4.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="755.3" y="126.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (43 samples, 0.20%)</title><rect x="752.3" y="99.0" width="2.4" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="755.3" y="110.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (35 samples, 0.17%)</title><rect x="754.7" y="99.0" width="2.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="757.7" y="110.0"></text>
</g>
<g>
<title>byte[] (35 samples, 0.17%)</title><rect x="754.7" y="83.0" width="2.0" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="757.7" y="94.0"></text>
</g>
<g>
<title>ru.mail.polis.Value (5 samples, 0.02%)</title><rect x="756.8" y="115.0" width="0.3" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="759.8" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/SSTable.getOffset (32 samples, 0.15%)</title><rect x="757.1" y="115.0" width="1.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="760.1" y="126.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (32 samples, 0.15%)</title><rect x="757.1" y="99.0" width="1.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="760.1" y="110.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (20 samples, 0.10%)</title><rect x="757.1" y="83.0" width="1.1" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="760.1" y="94.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (12 samples, 0.06%)</title><rect x="758.2" y="83.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="761.2" y="94.0"></text>
</g>
<g>
<title>byte[] (12 samples, 0.06%)</title><rect x="758.2" y="67.0" width="0.7" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="761.2" y="78.0"></text>
</g>
<g>
<title>java.util.ArrayList (21 samples, 0.10%)</title><rect x="759.0" y="307.0" width="1.2" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="762.0" y="318.0"></text>
</g>
<g>
<title>java/lang/Iterable.forEach (885 samples, 4.22%)</title><rect x="760.2" y="307.0" width="49.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="763.2" y="318.0">java/..</text>
</g>
<g>
<title>java/util/AbstractMap$2.iterator (7 samples, 0.03%)</title><rect x="760.2" y="291.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="763.2" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl$$Lambda$77/1381385518.accept (878 samples, 4.18%)</title><rect x="760.6" y="291.0" width="49.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="763.6" y="302.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.lambda$compactIterator$7 (878 samples, 4.18%)</title><rect x="760.6" y="275.0" width="49.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="763.6" y="286.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/SSTable.iterator (878 samples, 4.18%)</title><rect x="760.6" y="259.0" width="49.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="763.6" y="270.0">ru/ma..</text>
</g>
<g>
<title>ru.mail.polis.SSTable$1 (7 samples, 0.03%)</title><rect x="760.6" y="243.0" width="0.4" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="763.6" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/SSTable$1.&lt;init&gt; (871 samples, 4.15%)</title><rect x="761.0" y="243.0" width="49.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="764.0" y="254.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/SSTable.getPosition (871 samples, 4.15%)</title><rect x="761.0" y="227.0" width="49.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="764.0" y="238.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/SSTable.getKey (871 samples, 4.15%)</title><rect x="761.0" y="211.0" width="49.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="764.0" y="222.0">ru/m..</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (580 samples, 2.76%)</title><rect x="761.0" y="195.0" width="32.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="764.0" y="206.0">ja..</text>
</g>
<g>
<title>java.nio.HeapByteBuffer (394 samples, 1.88%)</title><rect x="761.0" y="179.0" width="22.2" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="764.0" y="190.0">j..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (186 samples, 0.89%)</title><rect x="783.2" y="179.0" width="10.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="786.2" y="190.0"></text>
</g>
<g>
<title>byte[] (186 samples, 0.89%)</title><rect x="783.2" y="163.0" width="10.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="786.2" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/SSTable.getOffset (291 samples, 1.39%)</title><rect x="793.6" y="195.0" width="16.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="796.6" y="206.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (291 samples, 1.39%)</title><rect x="793.6" y="179.0" width="16.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="796.6" y="190.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (200 samples, 0.95%)</title><rect x="793.6" y="163.0" width="11.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="796.6" y="174.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (91 samples, 0.43%)</title><rect x="804.9" y="163.0" width="5.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="807.9" y="174.0"></text>
</g>
<g>
<title>byte[] (91 samples, 0.43%)</title><rect x="804.9" y="147.0" width="5.1" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="807.9" y="158.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (6 samples, 0.03%)</title><rect x="810.0" y="307.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="813.0" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (6 samples, 0.03%)</title><rect x="810.0" y="291.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="813.0" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl$$Lambda$78/1794229087.get$Lambda (5 samples, 0.02%)</title><rect x="810.0" y="275.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="813.0" y="286.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.impl.DAOImpl$$Lambda$78 (5 samples, 0.02%)</title><rect x="810.0" y="259.0" width="0.3" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="813.0" y="270.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (6 samples, 0.03%)</title><rect x="810.3" y="307.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="813.3" y="318.0"></text>
</g>
<g>
<title>java.lang.Object[] (6 samples, 0.03%)</title><rect x="810.3" y="291.0" width="0.4" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="813.3" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/MemTable.iterator (21 samples, 0.10%)</title><rect x="810.7" y="307.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="813.7" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$EntrySet.iterator (6 samples, 0.03%)</title><rect x="810.9" y="291.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="813.9" y="302.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapEntryIterator (6 samples, 0.03%)</title><rect x="810.9" y="275.0" width="0.3" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="813.9" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (8 samples, 0.04%)</title><rect x="811.5" y="291.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="814.5" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (8 samples, 0.04%)</title><rect x="811.5" y="275.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="814.5" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (8 samples, 0.04%)</title><rect x="811.5" y="259.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="814.5" y="270.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap (8 samples, 0.04%)</title><rect x="811.5" y="243.0" width="0.4" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="814.5" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (70 samples, 0.33%)</title><rect x="811.9" y="307.0" width="3.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="814.9" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (68 samples, 0.32%)</title><rect x="812.0" y="291.0" width="3.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="815.0" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (68 samples, 0.32%)</title><rect x="812.0" y="275.0" width="3.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="815.0" y="286.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (68 samples, 0.32%)</title><rect x="812.0" y="259.0" width="3.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="815.0" y="270.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (68 samples, 0.32%)</title><rect x="812.0" y="243.0" width="3.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="815.0" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (68 samples, 0.32%)</title><rect x="812.0" y="227.0" width="3.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="815.0" y="238.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (68 samples, 0.32%)</title><rect x="812.0" y="211.0" width="3.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="815.0" y="222.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (68 samples, 0.32%)</title><rect x="812.0" y="195.0" width="3.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="815.0" y="206.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (68 samples, 0.32%)</title><rect x="812.0" y="179.0" width="3.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="815.0" y="190.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (61 samples, 0.29%)</title><rect x="812.0" y="163.0" width="3.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="815.0" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/SSTable$1.next (61 samples, 0.29%)</title><rect x="812.0" y="147.0" width="3.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="815.0" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/SSTable$1.next (61 samples, 0.29%)</title><rect x="812.0" y="131.0" width="3.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="815.0" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/SSTable.getCell (61 samples, 0.29%)</title><rect x="812.0" y="115.0" width="3.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="815.0" y="126.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (37 samples, 0.18%)</title><rect x="812.0" y="99.0" width="2.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="815.0" y="110.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (32 samples, 0.15%)</title><rect x="812.0" y="83.0" width="1.8" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="815.0" y="94.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (5 samples, 0.02%)</title><rect x="813.8" y="83.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="816.8" y="94.0"></text>
</g>
<g>
<title>byte[] (5 samples, 0.02%)</title><rect x="813.8" y="67.0" width="0.3" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="816.8" y="78.0"></text>
</g>
<g>
<title>ru/mail/polis/SSTable.getOffset (17 samples, 0.08%)</title><rect x="814.5" y="99.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="817.5" y="110.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (17 samples, 0.08%)</title><rect x="814.5" y="83.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="817.5" y="94.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (9 samples, 0.04%)</title><rect x="814.5" y="67.0" width="0.5" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="817.5" y="78.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (8 samples, 0.04%)</title><rect x="815.0" y="67.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="818.0" y="78.0"></text>
</g>
<g>
<title>byte[] (8 samples, 0.04%)</title><rect x="815.0" y="51.0" width="0.4" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="818.0" y="62.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (7 samples, 0.03%)</title><rect x="815.4" y="163.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="818.4" y="174.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (7 samples, 0.03%)</title><rect x="815.4" y="147.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="818.4" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/Cell.compareTo (7 samples, 0.03%)</title><rect x="815.4" y="131.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="818.4" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/Cell.compareTo (7 samples, 0.03%)</title><rect x="815.4" y="115.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="818.4" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/Cell.getKey (7 samples, 0.03%)</title><rect x="815.4" y="99.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="818.4" y="110.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (7 samples, 0.03%)</title><rect x="815.4" y="83.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="818.4" y="94.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (7 samples, 0.03%)</title><rect x="815.4" y="67.0" width="0.4" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="818.4" y="78.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivlev/ThreadController.toByteArray (5 samples, 0.02%)</title><rect x="815.8" y="355.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="818.8" y="366.0"></text>
</g>
<g>
<title>byte[] (5 samples, 0.02%)</title><rect x="815.8" y="339.0" width="0.3" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="818.8" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivlev/ThreadController.toByteBuffer (13 samples, 0.06%)</title><rect x="816.1" y="355.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="819.1" y="366.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (6 samples, 0.03%)</title><rect x="816.1" y="339.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="819.1" y="350.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (6 samples, 0.03%)</title><rect x="816.1" y="323.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="819.1" y="334.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (6 samples, 0.03%)</title><rect x="816.1" y="307.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="819.1" y="318.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (6 samples, 0.03%)</title><rect x="816.1" y="291.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="819.1" y="302.0"></text>
</g>
<g>
<title>byte[] (6 samples, 0.03%)</title><rect x="816.1" y="275.0" width="0.4" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="819.1" y="286.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (7 samples, 0.03%)</title><rect x="816.5" y="339.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="819.5" y="350.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (7 samples, 0.03%)</title><rect x="816.5" y="323.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="819.5" y="334.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (7 samples, 0.03%)</title><rect x="816.5" y="307.0" width="0.4" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="819.5" y="318.0"></text>
</g>
<g>
<title>[worker_3 tid=4348] (1,310 samples, 6.24%)</title><rect x="816.9" y="451.0" width="73.6" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="819.9" y="462.0">[worker_..</text>
</g>
<g>
<title>java/lang/Thread.run (1,310 samples, 6.24%)</title><rect x="816.9" y="435.0" width="73.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="819.9" y="446.0">java/lan..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (1,310 samples, 6.24%)</title><rect x="816.9" y="419.0" width="73.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="819.9" y="430.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (1,310 samples, 6.24%)</title><rect x="816.9" y="403.0" width="73.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="819.9" y="414.0">java/uti..</text>
</g>
<g>
<title>ru/mail/polis/service/ivlev/ThreadController$$Lambda$76/1494085373.run (1,310 samples, 6.24%)</title><rect x="816.9" y="387.0" width="73.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="819.9" y="398.0">ru/mail/..</text>
</g>
<g>
<title>ru/mail/polis/service/ivlev/ThreadController.lambda$get$2 (1,310 samples, 6.24%)</title><rect x="816.9" y="371.0" width="73.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="819.9" y="382.0">ru/mail/..</text>
</g>
<g>
<title>one.nio.http.Response (6 samples, 0.03%)</title><rect x="816.9" y="355.0" width="0.3" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="819.9" y="366.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (19 samples, 0.09%)</title><rect x="817.2" y="355.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="820.2" y="366.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (19 samples, 0.09%)</title><rect x="817.2" y="339.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="820.2" y="350.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (12 samples, 0.06%)</title><rect x="817.2" y="323.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="820.2" y="334.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (12 samples, 0.06%)</title><rect x="817.2" y="307.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="820.2" y="318.0"></text>
</g>
<g>
<title>byte[] (12 samples, 0.06%)</title><rect x="817.2" y="291.0" width="0.7" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="820.2" y="302.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (7 samples, 0.03%)</title><rect x="817.9" y="323.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="820.9" y="334.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (7 samples, 0.03%)</title><rect x="817.9" y="307.0" width="0.4" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="820.9" y="318.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (10 samples, 0.05%)</title><rect x="818.3" y="355.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="821.3" y="366.0"></text>
</g>
<g>
<title>java.lang.String (5 samples, 0.02%)</title><rect x="818.5" y="339.0" width="0.3" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="821.5" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.get (1,267 samples, 6.04%)</title><rect x="818.8" y="355.0" width="71.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="821.8" y="366.0">ru/mail/..</text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (80 samples, 0.38%)</title><rect x="818.8" y="339.0" width="4.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="821.8" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (80 samples, 0.38%)</title><rect x="818.8" y="323.0" width="4.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="821.8" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (80 samples, 0.38%)</title><rect x="818.8" y="307.0" width="4.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="821.8" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (80 samples, 0.38%)</title><rect x="818.8" y="291.0" width="4.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="821.8" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (80 samples, 0.38%)</title><rect x="818.8" y="275.0" width="4.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="821.8" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (72 samples, 0.34%)</title><rect x="818.8" y="259.0" width="4.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="821.8" y="270.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (72 samples, 0.34%)</title><rect x="818.8" y="243.0" width="4.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="821.8" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (72 samples, 0.34%)</title><rect x="818.8" y="227.0" width="4.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="821.8" y="238.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (72 samples, 0.34%)</title><rect x="818.8" y="211.0" width="4.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="821.8" y="222.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (72 samples, 0.34%)</title><rect x="818.8" y="195.0" width="4.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="821.8" y="206.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (72 samples, 0.34%)</title><rect x="818.8" y="179.0" width="4.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="821.8" y="190.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (72 samples, 0.34%)</title><rect x="818.8" y="163.0" width="4.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="821.8" y="174.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (71 samples, 0.34%)</title><rect x="818.8" y="147.0" width="4.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="821.8" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/SSTable$1.next (71 samples, 0.34%)</title><rect x="818.8" y="131.0" width="4.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="821.8" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/SSTable$1.next (71 samples, 0.34%)</title><rect x="818.8" y="115.0" width="4.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="821.8" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/SSTable.getCell (71 samples, 0.34%)</title><rect x="818.8" y="99.0" width="4.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="821.8" y="110.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (40 samples, 0.19%)</title><rect x="818.8" y="83.0" width="2.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="821.8" y="94.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (26 samples, 0.12%)</title><rect x="818.8" y="67.0" width="1.5" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="821.8" y="78.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (14 samples, 0.07%)</title><rect x="820.3" y="67.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="823.3" y="78.0"></text>
</g>
<g>
<title>byte[] (14 samples, 0.07%)</title><rect x="820.3" y="51.0" width="0.8" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="823.3" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/SSTable.getOffset (23 samples, 0.11%)</title><rect x="821.5" y="83.0" width="1.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="824.5" y="94.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (23 samples, 0.11%)</title><rect x="821.5" y="67.0" width="1.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="824.5" y="78.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (11 samples, 0.05%)</title><rect x="821.5" y="51.0" width="0.6" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="824.5" y="62.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (12 samples, 0.06%)</title><rect x="822.1" y="51.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="825.1" y="62.0"></text>
</g>
<g>
<title>byte[] (12 samples, 0.06%)</title><rect x="822.1" y="35.0" width="0.7" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="825.1" y="46.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl$$Lambda$79/1829454105.apply (8 samples, 0.04%)</title><rect x="822.9" y="259.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="825.9" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/Cell.getKey (8 samples, 0.04%)</title><rect x="822.9" y="243.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="825.9" y="254.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (8 samples, 0.04%)</title><rect x="822.9" y="227.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="825.9" y="238.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (8 samples, 0.04%)</title><rect x="822.9" y="211.0" width="0.4" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="825.9" y="222.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.next (8 samples, 0.04%)</title><rect x="823.3" y="339.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="826.3" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$6.transform (8 samples, 0.04%)</title><rect x="823.3" y="323.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="826.3" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl$$Lambda$81/1927968150.apply (8 samples, 0.04%)</title><rect x="823.3" y="307.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="826.3" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.lambda$iterator$4 (8 samples, 0.04%)</title><rect x="823.3" y="291.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="826.3" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/Cell.getKey (5 samples, 0.02%)</title><rect x="823.3" y="275.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="826.3" y="286.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (5 samples, 0.02%)</title><rect x="823.3" y="259.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="826.3" y="270.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (5 samples, 0.02%)</title><rect x="823.3" y="243.0" width="0.3" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="826.3" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/Record.getKey (5 samples, 0.02%)</title><rect x="823.8" y="339.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="826.8" y="350.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (5 samples, 0.02%)</title><rect x="823.8" y="323.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="826.8" y="334.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (5 samples, 0.02%)</title><rect x="823.8" y="307.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="826.8" y="318.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (5 samples, 0.02%)</title><rect x="823.8" y="291.0" width="0.3" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="826.8" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.iterator (1,174 samples, 5.59%)</title><rect x="824.1" y="339.0" width="66.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="827.1" y="350.0">ru/mail..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.compactIterator (1,169 samples, 5.57%)</title><rect x="824.3" y="323.0" width="65.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="827.3" y="334.0">ru/mail..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (144 samples, 0.69%)</title><rect x="824.3" y="307.0" width="8.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="827.3" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (143 samples, 0.68%)</title><rect x="824.4" y="291.0" width="8.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="827.4" y="302.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator$1 (6 samples, 0.03%)</title><rect x="824.4" y="275.0" width="0.3" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="827.4" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.peekingIterator (9 samples, 0.04%)</title><rect x="824.7" y="275.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="827.7" y="286.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$PeekingImpl (9 samples, 0.04%)</title><rect x="824.7" y="259.0" width="0.5" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="827.7" y="270.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (125 samples, 0.60%)</title><rect x="825.4" y="275.0" width="7.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="828.4" y="286.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (125 samples, 0.60%)</title><rect x="825.4" y="259.0" width="7.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="828.4" y="270.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (125 samples, 0.60%)</title><rect x="825.4" y="243.0" width="7.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="828.4" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (125 samples, 0.60%)</title><rect x="825.4" y="227.0" width="7.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="828.4" y="238.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (125 samples, 0.60%)</title><rect x="825.4" y="211.0" width="7.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="828.4" y="222.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (125 samples, 0.60%)</title><rect x="825.4" y="195.0" width="7.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="828.4" y="206.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (121 samples, 0.58%)</title><rect x="825.4" y="179.0" width="6.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="828.4" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/SSTable$1.next (121 samples, 0.58%)</title><rect x="825.4" y="163.0" width="6.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="828.4" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/SSTable$1.next (121 samples, 0.58%)</title><rect x="825.4" y="147.0" width="6.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="828.4" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/SSTable.getCell (121 samples, 0.58%)</title><rect x="825.4" y="131.0" width="6.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="828.4" y="142.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (74 samples, 0.35%)</title><rect x="825.4" y="115.0" width="4.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="828.4" y="126.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (46 samples, 0.22%)</title><rect x="825.4" y="99.0" width="2.6" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="828.4" y="110.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (28 samples, 0.13%)</title><rect x="828.0" y="99.0" width="1.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="831.0" y="110.0"></text>
</g>
<g>
<title>byte[] (28 samples, 0.13%)</title><rect x="828.0" y="83.0" width="1.6" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="831.0" y="94.0"></text>
</g>
<g>
<title>ru.mail.polis.Cell (7 samples, 0.03%)</title><rect x="829.6" y="115.0" width="0.4" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="832.6" y="126.0"></text>
</g>
<g>
<title>ru.mail.polis.Value (7 samples, 0.03%)</title><rect x="830.0" y="115.0" width="0.3" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="833.0" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/SSTable.getOffset (33 samples, 0.16%)</title><rect x="830.3" y="115.0" width="1.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="833.3" y="126.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (33 samples, 0.16%)</title><rect x="830.3" y="99.0" width="1.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="833.3" y="110.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (20 samples, 0.10%)</title><rect x="830.3" y="83.0" width="1.2" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="833.3" y="94.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (13 samples, 0.06%)</title><rect x="831.5" y="83.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="834.5" y="94.0"></text>
</g>
<g>
<title>byte[] (13 samples, 0.06%)</title><rect x="831.5" y="67.0" width="0.7" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="834.5" y="78.0"></text>
</g>
<g>
<title>java.util.ArrayList (21 samples, 0.10%)</title><rect x="832.4" y="307.0" width="1.2" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="835.4" y="318.0"></text>
</g>
<g>
<title>java/lang/Iterable.forEach (929 samples, 4.43%)</title><rect x="833.6" y="307.0" width="52.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="836.6" y="318.0">java/..</text>
</g>
<g>
<title>java/util/AbstractMap$2.iterator (6 samples, 0.03%)</title><rect x="833.6" y="291.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="836.6" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl$$Lambda$77/1381385518.accept (923 samples, 4.40%)</title><rect x="833.9" y="291.0" width="51.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="836.9" y="302.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.lambda$compactIterator$7 (923 samples, 4.40%)</title><rect x="833.9" y="275.0" width="51.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="836.9" y="286.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/SSTable.iterator (923 samples, 4.40%)</title><rect x="833.9" y="259.0" width="51.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="836.9" y="270.0">ru/ma..</text>
</g>
<g>
<title>ru.mail.polis.SSTable$1 (11 samples, 0.05%)</title><rect x="833.9" y="243.0" width="0.7" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="836.9" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/SSTable$1.&lt;init&gt; (912 samples, 4.35%)</title><rect x="834.6" y="243.0" width="51.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="837.6" y="254.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/SSTable.getPosition (912 samples, 4.35%)</title><rect x="834.6" y="227.0" width="51.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="837.6" y="238.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/SSTable.getKey (912 samples, 4.35%)</title><rect x="834.6" y="211.0" width="51.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="837.6" y="222.0">ru/ma..</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (621 samples, 2.96%)</title><rect x="834.6" y="195.0" width="34.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="837.6" y="206.0">ja..</text>
</g>
<g>
<title>java.nio.HeapByteBuffer (430 samples, 2.05%)</title><rect x="834.6" y="179.0" width="24.1" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="837.6" y="190.0">j..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (191 samples, 0.91%)</title><rect x="858.7" y="179.0" width="10.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="861.7" y="190.0"></text>
</g>
<g>
<title>byte[] (191 samples, 0.91%)</title><rect x="858.7" y="163.0" width="10.8" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="861.7" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/SSTable.getOffset (291 samples, 1.39%)</title><rect x="869.5" y="195.0" width="16.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="872.5" y="206.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (291 samples, 1.39%)</title><rect x="869.5" y="179.0" width="16.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="872.5" y="190.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (194 samples, 0.92%)</title><rect x="869.5" y="163.0" width="10.9" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="872.5" y="174.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (97 samples, 0.46%)</title><rect x="880.4" y="163.0" width="5.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="883.4" y="174.0"></text>
</g>
<g>
<title>byte[] (97 samples, 0.46%)</title><rect x="880.4" y="147.0" width="5.4" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="883.4" y="158.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (5 samples, 0.02%)</title><rect x="885.8" y="307.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="888.8" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (5 samples, 0.02%)</title><rect x="885.8" y="291.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="888.8" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/MemTable.iterator (11 samples, 0.05%)</title><rect x="886.4" y="307.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="889.4" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (5 samples, 0.02%)</title><rect x="886.7" y="291.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="889.7" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (5 samples, 0.02%)</title><rect x="886.7" y="275.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="889.7" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (5 samples, 0.02%)</title><rect x="886.7" y="259.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="889.7" y="270.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap (5 samples, 0.02%)</title><rect x="886.7" y="243.0" width="0.3" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="889.7" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (55 samples, 0.26%)</title><rect x="887.0" y="307.0" width="3.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="890.0" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (54 samples, 0.26%)</title><rect x="887.0" y="291.0" width="3.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="890.0" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (54 samples, 0.26%)</title><rect x="887.0" y="275.0" width="3.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="890.0" y="286.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (54 samples, 0.26%)</title><rect x="887.0" y="259.0" width="3.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="890.0" y="270.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (54 samples, 0.26%)</title><rect x="887.0" y="243.0" width="3.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="890.0" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (54 samples, 0.26%)</title><rect x="887.0" y="227.0" width="3.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="890.0" y="238.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (54 samples, 0.26%)</title><rect x="887.0" y="211.0" width="3.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="890.0" y="222.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (54 samples, 0.26%)</title><rect x="887.0" y="195.0" width="3.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="890.0" y="206.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (54 samples, 0.26%)</title><rect x="887.0" y="179.0" width="3.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="890.0" y="190.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (51 samples, 0.24%)</title><rect x="887.0" y="163.0" width="2.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="890.0" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/SSTable$1.next (51 samples, 0.24%)</title><rect x="887.0" y="147.0" width="2.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="890.0" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/SSTable$1.next (51 samples, 0.24%)</title><rect x="887.0" y="131.0" width="2.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="890.0" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/SSTable.getCell (51 samples, 0.24%)</title><rect x="887.0" y="115.0" width="2.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="890.0" y="126.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (34 samples, 0.16%)</title><rect x="887.0" y="99.0" width="1.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="890.0" y="110.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (18 samples, 0.09%)</title><rect x="887.0" y="83.0" width="1.0" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="890.0" y="94.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (16 samples, 0.08%)</title><rect x="888.0" y="83.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="891.0" y="94.0"></text>
</g>
<g>
<title>byte[] (16 samples, 0.08%)</title><rect x="888.0" y="67.0" width="0.9" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="891.0" y="78.0"></text>
</g>
<g>
<title>ru/mail/polis/SSTable.getOffset (14 samples, 0.07%)</title><rect x="889.1" y="99.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="892.1" y="110.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (14 samples, 0.07%)</title><rect x="889.1" y="83.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="892.1" y="94.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (10 samples, 0.05%)</title><rect x="889.1" y="67.0" width="0.6" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="892.1" y="78.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivlev/ThreadController.toByteBuffer (7 samples, 0.03%)</title><rect x="890.1" y="355.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="893.1" y="366.0"></text>
</g>
<g>
<title>[worker_4 tid=4349] (1,337 samples, 6.37%)</title><rect x="890.5" y="451.0" width="75.2" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="893.5" y="462.0">[worker_..</text>
</g>
<g>
<title>java/lang/Thread.run (1,337 samples, 6.37%)</title><rect x="890.5" y="435.0" width="75.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="893.5" y="446.0">java/lan..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (1,337 samples, 6.37%)</title><rect x="890.5" y="419.0" width="75.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="893.5" y="430.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (1,337 samples, 6.37%)</title><rect x="890.5" y="403.0" width="75.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="893.5" y="414.0">java/uti..</text>
</g>
<g>
<title>ru/mail/polis/service/ivlev/ThreadController$$Lambda$76/1494085373.run (1,336 samples, 6.37%)</title><rect x="890.6" y="387.0" width="75.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="893.6" y="398.0">ru/mail/..</text>
</g>
<g>
<title>ru/mail/polis/service/ivlev/ThreadController.lambda$get$2 (1,336 samples, 6.37%)</title><rect x="890.6" y="371.0" width="75.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="893.6" y="382.0">ru/mail/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (14 samples, 0.07%)</title><rect x="890.7" y="355.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="893.7" y="366.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (14 samples, 0.07%)</title><rect x="890.7" y="339.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="893.7" y="350.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (7 samples, 0.03%)</title><rect x="890.7" y="323.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="893.7" y="334.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (7 samples, 0.03%)</title><rect x="890.7" y="307.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="893.7" y="318.0"></text>
</g>
<g>
<title>byte[] (7 samples, 0.03%)</title><rect x="890.7" y="291.0" width="0.4" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="893.7" y="302.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (7 samples, 0.03%)</title><rect x="891.1" y="323.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="894.1" y="334.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (7 samples, 0.03%)</title><rect x="891.1" y="307.0" width="0.4" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="894.1" y="318.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (8 samples, 0.04%)</title><rect x="891.5" y="355.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="894.5" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.get (1,296 samples, 6.18%)</title><rect x="891.9" y="355.0" width="72.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="894.9" y="366.0">ru/mail/..</text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (78 samples, 0.37%)</title><rect x="891.9" y="339.0" width="4.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="894.9" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (78 samples, 0.37%)</title><rect x="891.9" y="323.0" width="4.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="894.9" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (78 samples, 0.37%)</title><rect x="891.9" y="307.0" width="4.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="894.9" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (78 samples, 0.37%)</title><rect x="891.9" y="291.0" width="4.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="894.9" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (78 samples, 0.37%)</title><rect x="891.9" y="275.0" width="4.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="894.9" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (73 samples, 0.35%)</title><rect x="891.9" y="259.0" width="4.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="894.9" y="270.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (73 samples, 0.35%)</title><rect x="891.9" y="243.0" width="4.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="894.9" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (73 samples, 0.35%)</title><rect x="891.9" y="227.0" width="4.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="894.9" y="238.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (73 samples, 0.35%)</title><rect x="891.9" y="211.0" width="4.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="894.9" y="222.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (73 samples, 0.35%)</title><rect x="891.9" y="195.0" width="4.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="894.9" y="206.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (73 samples, 0.35%)</title><rect x="891.9" y="179.0" width="4.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="894.9" y="190.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (73 samples, 0.35%)</title><rect x="891.9" y="163.0" width="4.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="894.9" y="174.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (66 samples, 0.31%)</title><rect x="891.9" y="147.0" width="3.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="894.9" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/SSTable$1.next (66 samples, 0.31%)</title><rect x="891.9" y="131.0" width="3.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="894.9" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/SSTable$1.next (66 samples, 0.31%)</title><rect x="891.9" y="115.0" width="3.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="894.9" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/SSTable.getCell (66 samples, 0.31%)</title><rect x="891.9" y="99.0" width="3.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="894.9" y="110.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (42 samples, 0.20%)</title><rect x="891.9" y="83.0" width="2.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="894.9" y="94.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (26 samples, 0.12%)</title><rect x="891.9" y="67.0" width="1.5" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="894.9" y="78.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (16 samples, 0.08%)</title><rect x="893.4" y="67.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="896.4" y="78.0"></text>
</g>
<g>
<title>byte[] (16 samples, 0.08%)</title><rect x="893.4" y="51.0" width="0.9" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="896.4" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/SSTable.getOffset (20 samples, 0.10%)</title><rect x="894.5" y="83.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="897.5" y="94.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (20 samples, 0.10%)</title><rect x="894.5" y="67.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="897.5" y="78.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (13 samples, 0.06%)</title><rect x="894.5" y="51.0" width="0.7" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="897.5" y="62.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (7 samples, 0.03%)</title><rect x="895.2" y="51.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="898.2" y="62.0"></text>
</g>
<g>
<title>byte[] (7 samples, 0.03%)</title><rect x="895.2" y="35.0" width="0.4" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="898.2" y="46.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (7 samples, 0.03%)</title><rect x="895.6" y="147.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="898.6" y="158.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (7 samples, 0.03%)</title><rect x="895.6" y="131.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="898.6" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/Cell.compareTo (7 samples, 0.03%)</title><rect x="895.6" y="115.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="898.6" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/Cell.compareTo (7 samples, 0.03%)</title><rect x="895.6" y="99.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="898.6" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/Cell.getKey (7 samples, 0.03%)</title><rect x="895.6" y="83.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="898.6" y="94.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (7 samples, 0.03%)</title><rect x="895.6" y="67.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="898.6" y="78.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (7 samples, 0.03%)</title><rect x="895.6" y="51.0" width="0.4" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="898.6" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl$$Lambda$79/1829454105.apply (5 samples, 0.02%)</title><rect x="896.0" y="259.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="899.0" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/Cell.getKey (5 samples, 0.02%)</title><rect x="896.0" y="243.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="899.0" y="254.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (5 samples, 0.02%)</title><rect x="896.0" y="227.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="899.0" y="238.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (5 samples, 0.02%)</title><rect x="896.0" y="211.0" width="0.3" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="899.0" y="222.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.next (12 samples, 0.06%)</title><rect x="896.3" y="339.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="899.3" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$6.transform (12 samples, 0.06%)</title><rect x="896.3" y="323.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="899.3" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl$$Lambda$81/1927968150.apply (12 samples, 0.06%)</title><rect x="896.3" y="307.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="899.3" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.lambda$iterator$4 (12 samples, 0.06%)</title><rect x="896.3" y="291.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="899.3" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/Cell.getKey (5 samples, 0.02%)</title><rect x="896.3" y="275.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="899.3" y="286.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (5 samples, 0.02%)</title><rect x="896.3" y="259.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="899.3" y="270.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (5 samples, 0.02%)</title><rect x="896.3" y="243.0" width="0.3" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="899.3" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/Record.getKey (10 samples, 0.05%)</title><rect x="897.0" y="339.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="900.0" y="350.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (10 samples, 0.05%)</title><rect x="897.0" y="323.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="900.0" y="334.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (10 samples, 0.05%)</title><rect x="897.0" y="307.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="900.0" y="318.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (10 samples, 0.05%)</title><rect x="897.0" y="291.0" width="0.5" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="900.0" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.iterator (1,196 samples, 5.70%)</title><rect x="897.5" y="339.0" width="67.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="900.5" y="350.0">ru/mail..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.filter (6 samples, 0.03%)</title><rect x="897.5" y="323.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="900.5" y="334.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$5 (6 samples, 0.03%)</title><rect x="897.5" y="307.0" width="0.4" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="900.5" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.compactIterator (1,189 samples, 5.67%)</title><rect x="897.9" y="323.0" width="66.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="900.9" y="334.0">ru/mail..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (122 samples, 0.58%)</title><rect x="897.9" y="307.0" width="6.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="900.9" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (121 samples, 0.58%)</title><rect x="898.0" y="291.0" width="6.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="901.0" y="302.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (115 samples, 0.55%)</title><rect x="898.3" y="275.0" width="6.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="901.3" y="286.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (115 samples, 0.55%)</title><rect x="898.3" y="259.0" width="6.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="901.3" y="270.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (115 samples, 0.55%)</title><rect x="898.3" y="243.0" width="6.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="901.3" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (115 samples, 0.55%)</title><rect x="898.3" y="227.0" width="6.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="901.3" y="238.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (115 samples, 0.55%)</title><rect x="898.3" y="211.0" width="6.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="901.3" y="222.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (115 samples, 0.55%)</title><rect x="898.3" y="195.0" width="6.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="901.3" y="206.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (110 samples, 0.52%)</title><rect x="898.3" y="179.0" width="6.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="901.3" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/SSTable$1.next (110 samples, 0.52%)</title><rect x="898.3" y="163.0" width="6.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="901.3" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/SSTable$1.next (110 samples, 0.52%)</title><rect x="898.3" y="147.0" width="6.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="901.3" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/SSTable.getCell (110 samples, 0.52%)</title><rect x="898.3" y="131.0" width="6.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="901.3" y="142.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (59 samples, 0.28%)</title><rect x="898.3" y="115.0" width="3.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="901.3" y="126.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (36 samples, 0.17%)</title><rect x="898.3" y="99.0" width="2.1" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="901.3" y="110.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (23 samples, 0.11%)</title><rect x="900.4" y="99.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="903.4" y="110.0"></text>
</g>
<g>
<title>byte[] (23 samples, 0.11%)</title><rect x="900.4" y="83.0" width="1.2" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="903.4" y="94.0"></text>
</g>
<g>
<title>ru.mail.polis.Cell (7 samples, 0.03%)</title><rect x="901.6" y="115.0" width="0.4" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="904.6" y="126.0"></text>
</g>
<g>
<title>ru.mail.polis.Value (9 samples, 0.04%)</title><rect x="902.0" y="115.0" width="0.5" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="905.0" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/SSTable.getOffset (35 samples, 0.17%)</title><rect x="902.5" y="115.0" width="2.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="905.5" y="126.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (35 samples, 0.17%)</title><rect x="902.5" y="99.0" width="2.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="905.5" y="110.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (25 samples, 0.12%)</title><rect x="902.5" y="83.0" width="1.5" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="905.5" y="94.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (10 samples, 0.05%)</title><rect x="904.0" y="83.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="907.0" y="94.0"></text>
</g>
<g>
<title>byte[] (10 samples, 0.05%)</title><rect x="904.0" y="67.0" width="0.5" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="907.0" y="78.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (5 samples, 0.02%)</title><rect x="904.5" y="179.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="907.5" y="190.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (5 samples, 0.02%)</title><rect x="904.5" y="163.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="907.5" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/Cell.compareTo (5 samples, 0.02%)</title><rect x="904.5" y="147.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="907.5" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/Cell.compareTo (5 samples, 0.02%)</title><rect x="904.5" y="131.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="907.5" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/Cell.getKey (5 samples, 0.02%)</title><rect x="904.5" y="115.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="907.5" y="126.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (5 samples, 0.02%)</title><rect x="904.5" y="99.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="907.5" y="110.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (5 samples, 0.02%)</title><rect x="904.5" y="83.0" width="0.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="907.5" y="94.0"></text>
</g>
<g>
<title>java.util.ArrayList (27 samples, 0.13%)</title><rect x="904.8" y="307.0" width="1.5" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="907.8" y="318.0"></text>
</g>
<g>
<title>java/lang/Iterable.forEach (944 samples, 4.50%)</title><rect x="906.3" y="307.0" width="53.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="909.3" y="318.0">java/..</text>
</g>
<g>
<title>java/util/AbstractMap$2.iterator (10 samples, 0.05%)</title><rect x="906.3" y="291.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="909.3" y="302.0"></text>
</g>
<g>
<title>java.util.AbstractMap$2$1 (5 samples, 0.02%)</title><rect x="906.3" y="275.0" width="0.3" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="909.3" y="286.0"></text>
</g>
<g>
<title>java/util/AbstractMap$2$1.&lt;init&gt; (5 samples, 0.02%)</title><rect x="906.6" y="275.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="909.6" y="286.0"></text>
</g>
<g>
<title>java/util/TreeMap$DescendingSubMap$DescendingEntrySetView.iterator (5 samples, 0.02%)</title><rect x="906.6" y="259.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="909.6" y="270.0"></text>
</g>
<g>
<title>java.util.TreeMap$NavigableSubMap$DescendingSubMapEntryIterator (5 samples, 0.02%)</title><rect x="906.6" y="243.0" width="0.3" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="909.6" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl$$Lambda$77/1381385518.accept (934 samples, 4.45%)</title><rect x="906.9" y="291.0" width="52.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="909.9" y="302.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.lambda$compactIterator$7 (934 samples, 4.45%)</title><rect x="906.9" y="275.0" width="52.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="909.9" y="286.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/SSTable.iterator (934 samples, 4.45%)</title><rect x="906.9" y="259.0" width="52.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="909.9" y="270.0">ru/ma..</text>
</g>
<g>
<title>ru.mail.polis.SSTable$1 (8 samples, 0.04%)</title><rect x="906.9" y="243.0" width="0.4" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="909.9" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/SSTable$1.&lt;init&gt; (926 samples, 4.41%)</title><rect x="907.3" y="243.0" width="52.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="910.3" y="254.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/SSTable.getPosition (926 samples, 4.41%)</title><rect x="907.3" y="227.0" width="52.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="910.3" y="238.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/SSTable.getKey (926 samples, 4.41%)</title><rect x="907.3" y="211.0" width="52.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="910.3" y="222.0">ru/ma..</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (605 samples, 2.88%)</title><rect x="907.3" y="195.0" width="34.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="910.3" y="206.0">ja..</text>
</g>
<g>
<title>java.nio.HeapByteBuffer (405 samples, 1.93%)</title><rect x="907.3" y="179.0" width="22.8" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="910.3" y="190.0">j..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (200 samples, 0.95%)</title><rect x="930.1" y="179.0" width="11.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="933.1" y="190.0"></text>
</g>
<g>
<title>byte[] (200 samples, 0.95%)</title><rect x="930.1" y="163.0" width="11.2" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="933.1" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/SSTable.getOffset (321 samples, 1.53%)</title><rect x="941.3" y="195.0" width="18.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="944.3" y="206.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (321 samples, 1.53%)</title><rect x="941.3" y="179.0" width="18.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="944.3" y="190.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (217 samples, 1.03%)</title><rect x="941.3" y="163.0" width="12.3" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="944.3" y="174.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (104 samples, 0.50%)</title><rect x="953.6" y="163.0" width="5.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="956.6" y="174.0"></text>
</g>
<g>
<title>byte[] (104 samples, 0.50%)</title><rect x="953.6" y="147.0" width="5.8" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="956.6" y="158.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (5 samples, 0.02%)</title><rect x="959.6" y="307.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="962.6" y="318.0"></text>
</g>
<g>
<title>java.lang.Object[] (5 samples, 0.02%)</title><rect x="959.6" y="291.0" width="0.3" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="962.6" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/MemTable.iterator (15 samples, 0.07%)</title><rect x="960.0" y="307.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="963.0" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.transform (6 samples, 0.03%)</title><rect x="960.0" y="291.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="963.0" y="302.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$6 (6 samples, 0.03%)</title><rect x="960.0" y="275.0" width="0.4" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="963.0" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (5 samples, 0.02%)</title><rect x="960.6" y="291.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="963.6" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (5 samples, 0.02%)</title><rect x="960.6" y="275.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="963.6" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (5 samples, 0.02%)</title><rect x="960.6" y="259.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="963.6" y="270.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap (5 samples, 0.02%)</title><rect x="960.6" y="243.0" width="0.3" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="963.6" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (70 samples, 0.33%)</title><rect x="960.9" y="307.0" width="3.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="963.9" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (66 samples, 0.31%)</title><rect x="961.1" y="291.0" width="3.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="964.1" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (66 samples, 0.31%)</title><rect x="961.1" y="275.0" width="3.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="964.1" y="286.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (66 samples, 0.31%)</title><rect x="961.1" y="259.0" width="3.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="964.1" y="270.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (66 samples, 0.31%)</title><rect x="961.1" y="243.0" width="3.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="964.1" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (66 samples, 0.31%)</title><rect x="961.1" y="227.0" width="3.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="964.1" y="238.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (66 samples, 0.31%)</title><rect x="961.1" y="211.0" width="3.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="964.1" y="222.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (66 samples, 0.31%)</title><rect x="961.1" y="195.0" width="3.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="964.1" y="206.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (66 samples, 0.31%)</title><rect x="961.1" y="179.0" width="3.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="964.1" y="190.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (60 samples, 0.29%)</title><rect x="961.1" y="163.0" width="3.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="964.1" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/SSTable$1.next (60 samples, 0.29%)</title><rect x="961.1" y="147.0" width="3.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="964.1" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/SSTable$1.next (60 samples, 0.29%)</title><rect x="961.1" y="131.0" width="3.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="964.1" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/SSTable.getCell (60 samples, 0.29%)</title><rect x="961.1" y="115.0" width="3.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="964.1" y="126.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (32 samples, 0.15%)</title><rect x="961.1" y="99.0" width="1.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="964.1" y="110.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (19 samples, 0.09%)</title><rect x="961.1" y="83.0" width="1.1" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="964.1" y="94.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (13 samples, 0.06%)</title><rect x="962.2" y="83.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="965.2" y="94.0"></text>
</g>
<g>
<title>byte[] (13 samples, 0.06%)</title><rect x="962.2" y="67.0" width="0.7" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="965.2" y="78.0"></text>
</g>
<g>
<title>ru/mail/polis/SSTable.getOffset (24 samples, 0.11%)</title><rect x="963.1" y="99.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="966.1" y="110.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (24 samples, 0.11%)</title><rect x="963.1" y="83.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="966.1" y="94.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (17 samples, 0.08%)</title><rect x="963.1" y="67.0" width="1.0" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="966.1" y="78.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (7 samples, 0.03%)</title><rect x="964.1" y="67.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="967.1" y="78.0"></text>
</g>
<g>
<title>byte[] (7 samples, 0.03%)</title><rect x="964.1" y="51.0" width="0.4" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="967.1" y="62.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (6 samples, 0.03%)</title><rect x="964.5" y="163.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="967.5" y="174.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (6 samples, 0.03%)</title><rect x="964.5" y="147.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="967.5" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/Cell.compareTo (6 samples, 0.03%)</title><rect x="964.5" y="131.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="967.5" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/Cell.compareTo (6 samples, 0.03%)</title><rect x="964.5" y="115.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="967.5" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/Cell.getKey (6 samples, 0.03%)</title><rect x="964.5" y="99.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="967.5" y="110.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (6 samples, 0.03%)</title><rect x="964.5" y="83.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="967.5" y="94.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (6 samples, 0.03%)</title><rect x="964.5" y="67.0" width="0.3" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="967.5" y="78.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivlev/ThreadController.toByteArray (7 samples, 0.03%)</title><rect x="964.8" y="355.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="967.8" y="366.0"></text>
</g>
<g>
<title>byte[] (7 samples, 0.03%)</title><rect x="964.8" y="339.0" width="0.4" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="967.8" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivlev/ThreadController.toByteBuffer (9 samples, 0.04%)</title><rect x="965.2" y="355.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="968.2" y="366.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (8 samples, 0.04%)</title><rect x="965.2" y="339.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="968.2" y="350.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (8 samples, 0.04%)</title><rect x="965.2" y="323.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="968.2" y="334.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (8 samples, 0.04%)</title><rect x="965.2" y="307.0" width="0.5" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="968.2" y="318.0"></text>
</g>
<g>
<title>[worker_5 tid=4343] (1,330 samples, 6.34%)</title><rect x="965.7" y="451.0" width="74.8" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="968.7" y="462.0">[worker_..</text>
</g>
<g>
<title>java/lang/Thread.run (1,330 samples, 6.34%)</title><rect x="965.7" y="435.0" width="74.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="968.7" y="446.0">java/lan..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (1,330 samples, 6.34%)</title><rect x="965.7" y="419.0" width="74.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="968.7" y="430.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (1,330 samples, 6.34%)</title><rect x="965.7" y="403.0" width="74.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="968.7" y="414.0">java/uti..</text>
</g>
<g>
<title>ru/mail/polis/service/ivlev/ThreadController$$Lambda$76/1494085373.run (1,329 samples, 6.33%)</title><rect x="965.8" y="387.0" width="74.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="968.8" y="398.0">ru/mail/..</text>
</g>
<g>
<title>ru/mail/polis/service/ivlev/ThreadController.lambda$get$2 (1,329 samples, 6.33%)</title><rect x="965.8" y="371.0" width="74.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="968.8" y="382.0">ru/mail/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (12 samples, 0.06%)</title><rect x="965.9" y="355.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="968.9" y="366.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (12 samples, 0.06%)</title><rect x="965.9" y="339.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="968.9" y="350.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (7 samples, 0.03%)</title><rect x="965.9" y="323.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="968.9" y="334.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (7 samples, 0.03%)</title><rect x="965.9" y="307.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="968.9" y="318.0"></text>
</g>
<g>
<title>byte[] (7 samples, 0.03%)</title><rect x="965.9" y="291.0" width="0.4" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="968.9" y="302.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (5 samples, 0.02%)</title><rect x="966.3" y="323.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="969.3" y="334.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (5 samples, 0.02%)</title><rect x="966.3" y="307.0" width="0.3" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="969.3" y="318.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (9 samples, 0.04%)</title><rect x="966.6" y="355.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="969.6" y="366.0"></text>
</g>
<g>
<title>byte[] (6 samples, 0.03%)</title><rect x="966.6" y="339.0" width="0.3" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="969.6" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.get (1,294 samples, 6.17%)</title><rect x="967.1" y="355.0" width="72.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="970.1" y="366.0">ru/mail/..</text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (84 samples, 0.40%)</title><rect x="967.1" y="339.0" width="4.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="970.1" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (84 samples, 0.40%)</title><rect x="967.1" y="323.0" width="4.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="970.1" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (84 samples, 0.40%)</title><rect x="967.1" y="307.0" width="4.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="970.1" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (84 samples, 0.40%)</title><rect x="967.1" y="291.0" width="4.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="970.1" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (84 samples, 0.40%)</title><rect x="967.1" y="275.0" width="4.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="970.1" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (75 samples, 0.36%)</title><rect x="967.1" y="259.0" width="4.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="970.1" y="270.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (75 samples, 0.36%)</title><rect x="967.1" y="243.0" width="4.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="970.1" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (75 samples, 0.36%)</title><rect x="967.1" y="227.0" width="4.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="970.1" y="238.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (75 samples, 0.36%)</title><rect x="967.1" y="211.0" width="4.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="970.1" y="222.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (75 samples, 0.36%)</title><rect x="967.1" y="195.0" width="4.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="970.1" y="206.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (75 samples, 0.36%)</title><rect x="967.1" y="179.0" width="4.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="970.1" y="190.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (75 samples, 0.36%)</title><rect x="967.1" y="163.0" width="4.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="970.1" y="174.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (69 samples, 0.33%)</title><rect x="967.1" y="147.0" width="3.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="970.1" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/SSTable$1.next (69 samples, 0.33%)</title><rect x="967.1" y="131.0" width="3.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="970.1" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/SSTable$1.next (69 samples, 0.33%)</title><rect x="967.1" y="115.0" width="3.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="970.1" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/SSTable.getCell (69 samples, 0.33%)</title><rect x="967.1" y="99.0" width="3.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="970.1" y="110.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (39 samples, 0.19%)</title><rect x="967.1" y="83.0" width="2.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="970.1" y="94.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (27 samples, 0.13%)</title><rect x="967.1" y="67.0" width="1.5" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="970.1" y="78.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (12 samples, 0.06%)</title><rect x="968.6" y="67.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="971.6" y="78.0"></text>
</g>
<g>
<title>byte[] (12 samples, 0.06%)</title><rect x="968.6" y="51.0" width="0.7" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="971.6" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/SSTable.getOffset (23 samples, 0.11%)</title><rect x="969.7" y="83.0" width="1.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="972.7" y="94.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (23 samples, 0.11%)</title><rect x="969.7" y="67.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="972.7" y="78.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (16 samples, 0.08%)</title><rect x="969.7" y="51.0" width="0.9" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="972.7" y="62.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (7 samples, 0.03%)</title><rect x="970.6" y="51.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="973.6" y="62.0"></text>
</g>
<g>
<title>byte[] (7 samples, 0.03%)</title><rect x="970.6" y="35.0" width="0.4" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="973.6" y="46.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (6 samples, 0.03%)</title><rect x="971.0" y="147.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="974.0" y="158.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (6 samples, 0.03%)</title><rect x="971.0" y="131.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="974.0" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/Cell.compareTo (6 samples, 0.03%)</title><rect x="971.0" y="115.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="974.0" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/Cell.compareTo (6 samples, 0.03%)</title><rect x="971.0" y="99.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="974.0" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/Cell.getKey (6 samples, 0.03%)</title><rect x="971.0" y="83.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="974.0" y="94.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (6 samples, 0.03%)</title><rect x="971.0" y="67.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="974.0" y="78.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (6 samples, 0.03%)</title><rect x="971.0" y="51.0" width="0.3" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="974.0" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl$$Lambda$79/1829454105.apply (9 samples, 0.04%)</title><rect x="971.3" y="259.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="974.3" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/Cell.getKey (9 samples, 0.04%)</title><rect x="971.3" y="243.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="974.3" y="254.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (9 samples, 0.04%)</title><rect x="971.3" y="227.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="974.3" y="238.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (9 samples, 0.04%)</title><rect x="971.3" y="211.0" width="0.5" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="974.3" y="222.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.next (18 samples, 0.09%)</title><rect x="971.8" y="339.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="974.8" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$6.transform (18 samples, 0.09%)</title><rect x="971.8" y="323.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="974.8" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl$$Lambda$81/1927968150.apply (18 samples, 0.09%)</title><rect x="971.8" y="307.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="974.8" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.lambda$iterator$4 (18 samples, 0.09%)</title><rect x="971.8" y="291.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="974.8" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/Cell.getKey (10 samples, 0.05%)</title><rect x="971.8" y="275.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="974.8" y="286.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (10 samples, 0.05%)</title><rect x="971.8" y="259.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="974.8" y="270.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (10 samples, 0.05%)</title><rect x="971.8" y="243.0" width="0.6" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="974.8" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/Record.getKey (6 samples, 0.03%)</title><rect x="972.8" y="339.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="975.8" y="350.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (6 samples, 0.03%)</title><rect x="972.8" y="323.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="975.8" y="334.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (6 samples, 0.03%)</title><rect x="972.8" y="307.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="975.8" y="318.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (6 samples, 0.03%)</title><rect x="972.8" y="291.0" width="0.4" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="975.8" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.iterator (1,186 samples, 5.65%)</title><rect x="973.2" y="339.0" width="66.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="976.2" y="350.0">ru/mail..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.compactIterator (1,180 samples, 5.62%)</title><rect x="973.5" y="323.0" width="66.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="976.5" y="334.0">ru/mail..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (119 samples, 0.57%)</title><rect x="973.5" y="307.0" width="6.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="976.5" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (117 samples, 0.56%)</title><rect x="973.6" y="291.0" width="6.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="976.6" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.peekingIterator (9 samples, 0.04%)</title><rect x="973.7" y="275.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="976.7" y="286.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$PeekingImpl (9 samples, 0.04%)</title><rect x="973.7" y="259.0" width="0.5" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="976.7" y="270.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (103 samples, 0.49%)</title><rect x="974.4" y="275.0" width="5.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="977.4" y="286.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (103 samples, 0.49%)</title><rect x="974.4" y="259.0" width="5.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="977.4" y="270.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (103 samples, 0.49%)</title><rect x="974.4" y="243.0" width="5.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="977.4" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (103 samples, 0.49%)</title><rect x="974.4" y="227.0" width="5.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="977.4" y="238.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (103 samples, 0.49%)</title><rect x="974.4" y="211.0" width="5.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="977.4" y="222.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (103 samples, 0.49%)</title><rect x="974.4" y="195.0" width="5.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="977.4" y="206.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (98 samples, 0.47%)</title><rect x="974.4" y="179.0" width="5.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="977.4" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/SSTable$1.next (98 samples, 0.47%)</title><rect x="974.4" y="163.0" width="5.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="977.4" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/SSTable$1.next (98 samples, 0.47%)</title><rect x="974.4" y="147.0" width="5.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="977.4" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/SSTable.getCell (98 samples, 0.47%)</title><rect x="974.4" y="131.0" width="5.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="977.4" y="142.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (56 samples, 0.27%)</title><rect x="974.4" y="115.0" width="3.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="977.4" y="126.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (38 samples, 0.18%)</title><rect x="974.4" y="99.0" width="2.1" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="977.4" y="110.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (18 samples, 0.09%)</title><rect x="976.5" y="99.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="979.5" y="110.0"></text>
</g>
<g>
<title>byte[] (18 samples, 0.09%)</title><rect x="976.5" y="83.0" width="1.1" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="979.5" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/SSTable.getOffset (37 samples, 0.18%)</title><rect x="977.8" y="115.0" width="2.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="980.8" y="126.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (37 samples, 0.18%)</title><rect x="977.8" y="99.0" width="2.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="980.8" y="110.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (24 samples, 0.11%)</title><rect x="977.8" y="83.0" width="1.4" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="980.8" y="94.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (13 samples, 0.06%)</title><rect x="979.2" y="83.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="982.2" y="94.0"></text>
</g>
<g>
<title>byte[] (13 samples, 0.06%)</title><rect x="979.2" y="67.0" width="0.7" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="982.2" y="78.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (5 samples, 0.02%)</title><rect x="979.9" y="179.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="982.9" y="190.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (5 samples, 0.02%)</title><rect x="979.9" y="163.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="982.9" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/Cell.compareTo (5 samples, 0.02%)</title><rect x="979.9" y="147.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="982.9" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/Cell.compareTo (5 samples, 0.02%)</title><rect x="979.9" y="131.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="982.9" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/Cell.getKey (5 samples, 0.02%)</title><rect x="979.9" y="115.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="982.9" y="126.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (5 samples, 0.02%)</title><rect x="979.9" y="99.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="982.9" y="110.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (5 samples, 0.02%)</title><rect x="979.9" y="83.0" width="0.3" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="982.9" y="94.0"></text>
</g>
<g>
<title>java.util.ArrayList (19 samples, 0.09%)</title><rect x="980.2" y="307.0" width="1.1" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="983.2" y="318.0"></text>
</g>
<g>
<title>java/lang/Iterable.forEach (955 samples, 4.55%)</title><rect x="981.3" y="307.0" width="53.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="984.3" y="318.0">java/..</text>
</g>
<g>
<title>java/util/AbstractMap$2.iterator (8 samples, 0.04%)</title><rect x="981.3" y="291.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="984.3" y="302.0"></text>
</g>
<g>
<title>java.util.AbstractMap$2$1 (5 samples, 0.02%)</title><rect x="981.3" y="275.0" width="0.3" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="984.3" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl$$Lambda$77/1381385518.accept (947 samples, 4.51%)</title><rect x="981.7" y="291.0" width="53.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="984.7" y="302.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.lambda$compactIterator$7 (947 samples, 4.51%)</title><rect x="981.7" y="275.0" width="53.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="984.7" y="286.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/SSTable.iterator (947 samples, 4.51%)</title><rect x="981.7" y="259.0" width="53.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="984.7" y="270.0">ru/ma..</text>
</g>
<g>
<title>ru.mail.polis.SSTable$1 (6 samples, 0.03%)</title><rect x="981.7" y="243.0" width="0.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="984.7" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/SSTable$1.&lt;init&gt; (941 samples, 4.48%)</title><rect x="982.1" y="243.0" width="52.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="985.1" y="254.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/SSTable.getPosition (941 samples, 4.48%)</title><rect x="982.1" y="227.0" width="52.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="985.1" y="238.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/SSTable.getKey (941 samples, 4.48%)</title><rect x="982.1" y="211.0" width="52.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="985.1" y="222.0">ru/ma..</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (658 samples, 3.14%)</title><rect x="982.1" y="195.0" width="37.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="985.1" y="206.0">jav..</text>
</g>
<g>
<title>java.nio.HeapByteBuffer (443 samples, 2.11%)</title><rect x="982.1" y="179.0" width="24.9" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="985.1" y="190.0">j..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (215 samples, 1.02%)</title><rect x="1007.0" y="179.0" width="12.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1010.0" y="190.0"></text>
</g>
<g>
<title>byte[] (215 samples, 1.02%)</title><rect x="1007.0" y="163.0" width="12.1" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="1010.0" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/SSTable.getOffset (283 samples, 1.35%)</title><rect x="1019.1" y="195.0" width="15.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1022.1" y="206.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (283 samples, 1.35%)</title><rect x="1019.1" y="179.0" width="15.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1022.1" y="190.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (186 samples, 0.89%)</title><rect x="1019.1" y="163.0" width="10.4" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="1022.1" y="174.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (97 samples, 0.46%)</title><rect x="1029.5" y="163.0" width="5.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1032.5" y="174.0"></text>
</g>
<g>
<title>byte[] (97 samples, 0.46%)</title><rect x="1029.5" y="147.0" width="5.5" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="1032.5" y="158.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection.forEach (6 samples, 0.03%)</title><rect x="1035.2" y="307.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1038.2" y="318.0"></text>
</g>
<g>
<title>java/lang/Iterable.forEach (6 samples, 0.03%)</title><rect x="1035.2" y="291.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1038.2" y="302.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (6 samples, 0.03%)</title><rect x="1035.2" y="275.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1038.2" y="286.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (6 samples, 0.03%)</title><rect x="1035.2" y="259.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1038.2" y="270.0"></text>
</g>
<g>
<title>java.util.HashMap$KeyIterator (6 samples, 0.03%)</title><rect x="1035.2" y="243.0" width="0.3" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="1038.2" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/MemTable.iterator (15 samples, 0.07%)</title><rect x="1035.5" y="307.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1038.5" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (6 samples, 0.03%)</title><rect x="1036.0" y="291.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1039.0" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (6 samples, 0.03%)</title><rect x="1036.0" y="275.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1039.0" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (6 samples, 0.03%)</title><rect x="1036.0" y="259.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1039.0" y="270.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap (6 samples, 0.03%)</title><rect x="1036.0" y="243.0" width="0.4" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="1039.0" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (62 samples, 0.30%)</title><rect x="1036.4" y="307.0" width="3.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1039.4" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (58 samples, 0.28%)</title><rect x="1036.6" y="291.0" width="3.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1039.6" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (58 samples, 0.28%)</title><rect x="1036.6" y="275.0" width="3.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1039.6" y="286.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (58 samples, 0.28%)</title><rect x="1036.6" y="259.0" width="3.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1039.6" y="270.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (58 samples, 0.28%)</title><rect x="1036.6" y="243.0" width="3.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1039.6" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (58 samples, 0.28%)</title><rect x="1036.6" y="227.0" width="3.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1039.6" y="238.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (58 samples, 0.28%)</title><rect x="1036.6" y="211.0" width="3.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1039.6" y="222.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (58 samples, 0.28%)</title><rect x="1036.6" y="195.0" width="3.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1039.6" y="206.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (58 samples, 0.28%)</title><rect x="1036.6" y="179.0" width="3.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1039.6" y="190.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (57 samples, 0.27%)</title><rect x="1036.6" y="163.0" width="3.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1039.6" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/SSTable$1.next (57 samples, 0.27%)</title><rect x="1036.6" y="147.0" width="3.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1039.6" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/SSTable$1.next (57 samples, 0.27%)</title><rect x="1036.6" y="131.0" width="3.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1039.6" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/SSTable.getCell (57 samples, 0.27%)</title><rect x="1036.6" y="115.0" width="3.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1039.6" y="126.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (37 samples, 0.18%)</title><rect x="1036.6" y="99.0" width="2.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1039.6" y="110.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (26 samples, 0.12%)</title><rect x="1036.6" y="83.0" width="1.5" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="1039.6" y="94.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (11 samples, 0.05%)</title><rect x="1038.1" y="83.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1041.1" y="94.0"></text>
</g>
<g>
<title>byte[] (11 samples, 0.05%)</title><rect x="1038.1" y="67.0" width="0.6" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="1041.1" y="78.0"></text>
</g>
<g>
<title>ru/mail/polis/SSTable.getOffset (18 samples, 0.09%)</title><rect x="1038.8" y="99.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1041.8" y="110.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (18 samples, 0.09%)</title><rect x="1038.8" y="83.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1041.8" y="94.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (15 samples, 0.07%)</title><rect x="1038.8" y="67.0" width="0.8" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="1041.8" y="78.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivlev/ThreadController.toByteBuffer (8 samples, 0.04%)</title><rect x="1040.0" y="355.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1043.0" y="366.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (5 samples, 0.02%)</title><rect x="1040.2" y="339.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1043.2" y="350.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (5 samples, 0.02%)</title><rect x="1040.2" y="323.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1043.2" y="334.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (5 samples, 0.02%)</title><rect x="1040.2" y="307.0" width="0.3" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="1043.2" y="318.0"></text>
</g>
<g>
<title>[worker_6 tid=4347] (1,336 samples, 6.37%)</title><rect x="1040.5" y="451.0" width="75.1" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="1043.5" y="462.0">[worker_..</text>
</g>
<g>
<title>java/lang/Thread.run (1,336 samples, 6.37%)</title><rect x="1040.5" y="435.0" width="75.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1043.5" y="446.0">java/lan..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (1,336 samples, 6.37%)</title><rect x="1040.5" y="419.0" width="75.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1043.5" y="430.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (1,336 samples, 6.37%)</title><rect x="1040.5" y="403.0" width="75.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1043.5" y="414.0">java/uti..</text>
</g>
<g>
<title>ru/mail/polis/service/ivlev/ThreadController$$Lambda$76/1494085373.run (1,335 samples, 6.36%)</title><rect x="1040.5" y="387.0" width="75.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1043.5" y="398.0">ru/mail/..</text>
</g>
<g>
<title>ru/mail/polis/service/ivlev/ThreadController.lambda$get$2 (1,335 samples, 6.36%)</title><rect x="1040.5" y="371.0" width="75.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1043.5" y="382.0">ru/mail/..</text>
</g>
<g>
<title>one.nio.http.Response (5 samples, 0.02%)</title><rect x="1040.5" y="355.0" width="0.3" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="1043.5" y="366.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (10 samples, 0.05%)</title><rect x="1040.8" y="355.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1043.8" y="366.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (10 samples, 0.05%)</title><rect x="1040.8" y="339.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1043.8" y="350.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (7 samples, 0.03%)</title><rect x="1040.8" y="323.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1043.8" y="334.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (7 samples, 0.03%)</title><rect x="1040.8" y="307.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1043.8" y="318.0"></text>
</g>
<g>
<title>byte[] (7 samples, 0.03%)</title><rect x="1040.8" y="291.0" width="0.4" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="1043.8" y="302.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (10 samples, 0.05%)</title><rect x="1041.4" y="355.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1044.4" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.get (1,296 samples, 6.18%)</title><rect x="1041.9" y="355.0" width="72.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1044.9" y="366.0">ru/mail/..</text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (68 samples, 0.32%)</title><rect x="1041.9" y="339.0" width="3.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1044.9" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (68 samples, 0.32%)</title><rect x="1041.9" y="323.0" width="3.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1044.9" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (68 samples, 0.32%)</title><rect x="1041.9" y="307.0" width="3.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1044.9" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (68 samples, 0.32%)</title><rect x="1041.9" y="291.0" width="3.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1044.9" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (68 samples, 0.32%)</title><rect x="1041.9" y="275.0" width="3.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1044.9" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (62 samples, 0.30%)</title><rect x="1041.9" y="259.0" width="3.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1044.9" y="270.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (62 samples, 0.30%)</title><rect x="1041.9" y="243.0" width="3.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1044.9" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (62 samples, 0.30%)</title><rect x="1041.9" y="227.0" width="3.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1044.9" y="238.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (62 samples, 0.30%)</title><rect x="1041.9" y="211.0" width="3.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1044.9" y="222.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (62 samples, 0.30%)</title><rect x="1041.9" y="195.0" width="3.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1044.9" y="206.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (62 samples, 0.30%)</title><rect x="1041.9" y="179.0" width="3.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1044.9" y="190.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (62 samples, 0.30%)</title><rect x="1041.9" y="163.0" width="3.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1044.9" y="174.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (57 samples, 0.27%)</title><rect x="1041.9" y="147.0" width="3.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1044.9" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/SSTable$1.next (57 samples, 0.27%)</title><rect x="1041.9" y="131.0" width="3.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1044.9" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/SSTable$1.next (57 samples, 0.27%)</title><rect x="1041.9" y="115.0" width="3.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1044.9" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/SSTable.getCell (57 samples, 0.27%)</title><rect x="1041.9" y="99.0" width="3.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1044.9" y="110.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (35 samples, 0.17%)</title><rect x="1041.9" y="83.0" width="2.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1044.9" y="94.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (21 samples, 0.10%)</title><rect x="1041.9" y="67.0" width="1.2" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="1044.9" y="78.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (14 samples, 0.07%)</title><rect x="1043.1" y="67.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1046.1" y="78.0"></text>
</g>
<g>
<title>byte[] (14 samples, 0.07%)</title><rect x="1043.1" y="51.0" width="0.8" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="1046.1" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/SSTable.getOffset (16 samples, 0.08%)</title><rect x="1044.3" y="83.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1047.3" y="94.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (16 samples, 0.08%)</title><rect x="1044.3" y="67.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1047.3" y="78.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (10 samples, 0.05%)</title><rect x="1044.3" y="51.0" width="0.5" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="1047.3" y="62.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (6 samples, 0.03%)</title><rect x="1044.8" y="51.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1047.8" y="62.0"></text>
</g>
<g>
<title>byte[] (6 samples, 0.03%)</title><rect x="1044.8" y="35.0" width="0.3" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="1047.8" y="46.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (5 samples, 0.02%)</title><rect x="1045.1" y="147.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1048.1" y="158.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (5 samples, 0.02%)</title><rect x="1045.1" y="131.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1048.1" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/Cell.compareTo (5 samples, 0.02%)</title><rect x="1045.1" y="115.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1048.1" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/Cell.compareTo (5 samples, 0.02%)</title><rect x="1045.1" y="99.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1048.1" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/Cell.getKey (5 samples, 0.02%)</title><rect x="1045.1" y="83.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1048.1" y="94.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (5 samples, 0.02%)</title><rect x="1045.1" y="67.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1048.1" y="78.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (5 samples, 0.02%)</title><rect x="1045.1" y="51.0" width="0.3" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="1048.1" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl$$Lambda$79/1829454105.apply (6 samples, 0.03%)</title><rect x="1045.4" y="259.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1048.4" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/Cell.getKey (6 samples, 0.03%)</title><rect x="1045.4" y="243.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1048.4" y="254.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (6 samples, 0.03%)</title><rect x="1045.4" y="227.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1048.4" y="238.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (6 samples, 0.03%)</title><rect x="1045.4" y="211.0" width="0.4" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="1048.4" y="222.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.next (16 samples, 0.08%)</title><rect x="1045.8" y="339.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1048.8" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$6.transform (16 samples, 0.08%)</title><rect x="1045.8" y="323.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1048.8" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl$$Lambda$81/1927968150.apply (16 samples, 0.08%)</title><rect x="1045.8" y="307.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1048.8" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.lambda$iterator$4 (16 samples, 0.08%)</title><rect x="1045.8" y="291.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1048.8" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/Cell.getKey (7 samples, 0.03%)</title><rect x="1045.8" y="275.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1048.8" y="286.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (7 samples, 0.03%)</title><rect x="1045.8" y="259.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1048.8" y="270.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (7 samples, 0.03%)</title><rect x="1045.8" y="243.0" width="0.4" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="1048.8" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/Record.of (6 samples, 0.03%)</title><rect x="1046.2" y="275.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1049.2" y="286.0"></text>
</g>
<g>
<title>ru.mail.polis.Record (6 samples, 0.03%)</title><rect x="1046.2" y="259.0" width="0.3" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="1049.2" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/Record.getKey (5 samples, 0.02%)</title><rect x="1046.7" y="339.0" width="0.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1049.7" y="350.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (5 samples, 0.02%)</title><rect x="1046.7" y="323.0" width="0.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1049.7" y="334.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (5 samples, 0.02%)</title><rect x="1046.7" y="307.0" width="0.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1049.7" y="318.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (5 samples, 0.02%)</title><rect x="1046.7" y="291.0" width="0.2" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="1049.7" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.iterator (1,207 samples, 5.75%)</title><rect x="1046.9" y="339.0" width="67.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1049.9" y="350.0">ru/mail..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.filter (5 samples, 0.02%)</title><rect x="1046.9" y="323.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1049.9" y="334.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$5 (5 samples, 0.02%)</title><rect x="1046.9" y="307.0" width="0.3" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="1049.9" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.compactIterator (1,202 samples, 5.73%)</title><rect x="1047.2" y="323.0" width="67.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1050.2" y="334.0">ru/mail..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (129 samples, 0.61%)</title><rect x="1047.2" y="307.0" width="7.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1050.2" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (128 samples, 0.61%)</title><rect x="1047.3" y="291.0" width="7.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1050.3" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.peekingIterator (6 samples, 0.03%)</title><rect x="1047.5" y="275.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1050.5" y="286.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$PeekingImpl (6 samples, 0.03%)</title><rect x="1047.5" y="259.0" width="0.3" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="1050.5" y="270.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (113 samples, 0.54%)</title><rect x="1048.1" y="275.0" width="6.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1051.1" y="286.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (113 samples, 0.54%)</title><rect x="1048.1" y="259.0" width="6.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1051.1" y="270.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (113 samples, 0.54%)</title><rect x="1048.1" y="243.0" width="6.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1051.1" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (113 samples, 0.54%)</title><rect x="1048.1" y="227.0" width="6.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1051.1" y="238.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (113 samples, 0.54%)</title><rect x="1048.1" y="211.0" width="6.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1051.1" y="222.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (113 samples, 0.54%)</title><rect x="1048.1" y="195.0" width="6.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1051.1" y="206.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (109 samples, 0.52%)</title><rect x="1048.1" y="179.0" width="6.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1051.1" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/SSTable$1.next (109 samples, 0.52%)</title><rect x="1048.1" y="163.0" width="6.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1051.1" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/SSTable$1.next (109 samples, 0.52%)</title><rect x="1048.1" y="147.0" width="6.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1051.1" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/SSTable.getCell (109 samples, 0.52%)</title><rect x="1048.1" y="131.0" width="6.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1051.1" y="142.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (53 samples, 0.25%)</title><rect x="1048.1" y="115.0" width="3.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1051.1" y="126.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (36 samples, 0.17%)</title><rect x="1048.1" y="99.0" width="2.1" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="1051.1" y="110.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (17 samples, 0.08%)</title><rect x="1050.2" y="99.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1053.2" y="110.0"></text>
</g>
<g>
<title>byte[] (17 samples, 0.08%)</title><rect x="1050.2" y="83.0" width="0.9" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="1053.2" y="94.0"></text>
</g>
<g>
<title>ru.mail.polis.Cell (7 samples, 0.03%)</title><rect x="1051.1" y="115.0" width="0.4" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="1054.1" y="126.0"></text>
</g>
<g>
<title>ru.mail.polis.Value (9 samples, 0.04%)</title><rect x="1051.5" y="115.0" width="0.5" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="1054.5" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/SSTable.getOffset (40 samples, 0.19%)</title><rect x="1052.0" y="115.0" width="2.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1055.0" y="126.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (40 samples, 0.19%)</title><rect x="1052.0" y="99.0" width="2.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1055.0" y="110.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (26 samples, 0.12%)</title><rect x="1052.0" y="83.0" width="1.5" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="1055.0" y="94.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (14 samples, 0.07%)</title><rect x="1053.5" y="83.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1056.5" y="94.0"></text>
</g>
<g>
<title>byte[] (14 samples, 0.07%)</title><rect x="1053.5" y="67.0" width="0.8" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="1056.5" y="78.0"></text>
</g>
<g>
<title>java.util.ArrayList (20 samples, 0.10%)</title><rect x="1054.5" y="307.0" width="1.1" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="1057.5" y="318.0"></text>
</g>
<g>
<title>java/lang/Iterable.forEach (962 samples, 4.58%)</title><rect x="1055.6" y="307.0" width="54.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1058.6" y="318.0">java/..</text>
</g>
<g>
<title>java/util/AbstractMap$2.iterator (9 samples, 0.04%)</title><rect x="1055.6" y="291.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1058.6" y="302.0"></text>
</g>
<g>
<title>java/util/AbstractMap$2$1.&lt;init&gt; (6 samples, 0.03%)</title><rect x="1055.8" y="275.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1058.8" y="286.0"></text>
</g>
<g>
<title>java/util/TreeMap$DescendingSubMap$DescendingEntrySetView.iterator (6 samples, 0.03%)</title><rect x="1055.8" y="259.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1058.8" y="270.0"></text>
</g>
<g>
<title>java.util.TreeMap$NavigableSubMap$DescendingSubMapEntryIterator (6 samples, 0.03%)</title><rect x="1055.8" y="243.0" width="0.3" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="1058.8" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl$$Lambda$77/1381385518.accept (953 samples, 4.54%)</title><rect x="1056.1" y="291.0" width="53.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1059.1" y="302.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.lambda$compactIterator$7 (953 samples, 4.54%)</title><rect x="1056.1" y="275.0" width="53.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1059.1" y="286.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/SSTable.iterator (953 samples, 4.54%)</title><rect x="1056.1" y="259.0" width="53.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1059.1" y="270.0">ru/ma..</text>
</g>
<g>
<title>ru.mail.polis.SSTable$1 (5 samples, 0.02%)</title><rect x="1056.1" y="243.0" width="0.3" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="1059.1" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/SSTable$1.&lt;init&gt; (948 samples, 4.52%)</title><rect x="1056.4" y="243.0" width="53.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1059.4" y="254.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/SSTable.getPosition (948 samples, 4.52%)</title><rect x="1056.4" y="227.0" width="53.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1059.4" y="238.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/SSTable.getKey (948 samples, 4.52%)</title><rect x="1056.4" y="211.0" width="53.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1059.4" y="222.0">ru/ma..</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (612 samples, 2.92%)</title><rect x="1056.4" y="195.0" width="34.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1059.4" y="206.0">ja..</text>
</g>
<g>
<title>java.nio.HeapByteBuffer (427 samples, 2.03%)</title><rect x="1056.4" y="179.0" width="24.0" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="1059.4" y="190.0">j..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (185 samples, 0.88%)</title><rect x="1080.4" y="179.0" width="10.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1083.4" y="190.0"></text>
</g>
<g>
<title>byte[] (185 samples, 0.88%)</title><rect x="1080.4" y="163.0" width="10.4" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="1083.4" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/SSTable.getOffset (336 samples, 1.60%)</title><rect x="1090.8" y="195.0" width="18.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1093.8" y="206.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (336 samples, 1.60%)</title><rect x="1090.8" y="179.0" width="18.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1093.8" y="190.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (220 samples, 1.05%)</title><rect x="1090.8" y="163.0" width="12.4" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="1093.8" y="174.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (116 samples, 0.55%)</title><rect x="1103.2" y="163.0" width="6.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1106.2" y="174.0"></text>
</g>
<g>
<title>byte[] (116 samples, 0.55%)</title><rect x="1103.2" y="147.0" width="6.5" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="1106.2" y="158.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (7 samples, 0.03%)</title><rect x="1109.7" y="307.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1112.7" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (7 samples, 0.03%)</title><rect x="1109.7" y="291.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1112.7" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl$$Lambda$77/1381385518.get$Lambda (5 samples, 0.02%)</title><rect x="1109.7" y="275.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1112.7" y="286.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.impl.DAOImpl$$Lambda$77 (5 samples, 0.02%)</title><rect x="1109.7" y="259.0" width="0.3" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="1112.7" y="270.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (6 samples, 0.03%)</title><rect x="1110.1" y="307.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1113.1" y="318.0"></text>
</g>
<g>
<title>java.lang.Object[] (6 samples, 0.03%)</title><rect x="1110.1" y="291.0" width="0.3" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="1113.1" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/MemTable.iterator (15 samples, 0.07%)</title><rect x="1110.5" y="307.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1113.5" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (6 samples, 0.03%)</title><rect x="1111.0" y="291.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1114.0" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (6 samples, 0.03%)</title><rect x="1111.0" y="275.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1114.0" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (6 samples, 0.03%)</title><rect x="1111.0" y="259.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1114.0" y="270.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap (6 samples, 0.03%)</title><rect x="1111.0" y="243.0" width="0.3" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="1114.0" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (62 samples, 0.30%)</title><rect x="1111.3" y="307.0" width="3.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1114.3" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (58 samples, 0.28%)</title><rect x="1111.6" y="291.0" width="3.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1114.6" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (58 samples, 0.28%)</title><rect x="1111.6" y="275.0" width="3.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1114.6" y="286.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (58 samples, 0.28%)</title><rect x="1111.6" y="259.0" width="3.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1114.6" y="270.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (58 samples, 0.28%)</title><rect x="1111.6" y="243.0" width="3.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1114.6" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (58 samples, 0.28%)</title><rect x="1111.6" y="227.0" width="3.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1114.6" y="238.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (58 samples, 0.28%)</title><rect x="1111.6" y="211.0" width="3.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1114.6" y="222.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (58 samples, 0.28%)</title><rect x="1111.6" y="195.0" width="3.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1114.6" y="206.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (58 samples, 0.28%)</title><rect x="1111.6" y="179.0" width="3.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1114.6" y="190.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (55 samples, 0.26%)</title><rect x="1111.6" y="163.0" width="3.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1114.6" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/SSTable$1.next (55 samples, 0.26%)</title><rect x="1111.6" y="147.0" width="3.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1114.6" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/SSTable$1.next (55 samples, 0.26%)</title><rect x="1111.6" y="131.0" width="3.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1114.6" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/SSTable.getCell (55 samples, 0.26%)</title><rect x="1111.6" y="115.0" width="3.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1114.6" y="126.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (34 samples, 0.16%)</title><rect x="1111.6" y="99.0" width="1.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1114.6" y="110.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (20 samples, 0.10%)</title><rect x="1111.6" y="83.0" width="1.1" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="1114.6" y="94.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (14 samples, 0.07%)</title><rect x="1112.7" y="83.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1115.7" y="94.0"></text>
</g>
<g>
<title>byte[] (14 samples, 0.07%)</title><rect x="1112.7" y="67.0" width="0.8" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="1115.7" y="78.0"></text>
</g>
<g>
<title>ru/mail/polis/SSTable.getOffset (15 samples, 0.07%)</title><rect x="1113.8" y="99.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1116.8" y="110.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (15 samples, 0.07%)</title><rect x="1113.8" y="83.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1116.8" y="94.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (13 samples, 0.06%)</title><rect x="1113.8" y="67.0" width="0.7" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="1116.8" y="78.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivlev/ThreadController.toByteBuffer (11 samples, 0.05%)</title><rect x="1115.0" y="355.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1118.0" y="366.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (8 samples, 0.04%)</title><rect x="1115.2" y="339.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1118.2" y="350.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (8 samples, 0.04%)</title><rect x="1115.2" y="323.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1118.2" y="334.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (8 samples, 0.04%)</title><rect x="1115.2" y="307.0" width="0.4" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="1118.2" y="318.0"></text>
</g>
<g>
<title>[worker_7 tid=4345] (1,323 samples, 6.30%)</title><rect x="1115.6" y="451.0" width="74.4" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="1118.6" y="462.0">[worker_..</text>
</g>
<g>
<title>java/lang/Thread.run (1,323 samples, 6.30%)</title><rect x="1115.6" y="435.0" width="74.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1118.6" y="446.0">java/lan..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (1,323 samples, 6.30%)</title><rect x="1115.6" y="419.0" width="74.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1118.6" y="430.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (1,323 samples, 6.30%)</title><rect x="1115.6" y="403.0" width="74.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1118.6" y="414.0">java/uti..</text>
</g>
<g>
<title>ru/mail/polis/service/ivlev/ThreadController$$Lambda$76/1494085373.run (1,323 samples, 6.30%)</title><rect x="1115.6" y="387.0" width="74.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1118.6" y="398.0">ru/mail/..</text>
</g>
<g>
<title>ru/mail/polis/service/ivlev/ThreadController.lambda$get$2 (1,323 samples, 6.30%)</title><rect x="1115.6" y="371.0" width="74.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1118.6" y="382.0">ru/mail/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (19 samples, 0.09%)</title><rect x="1115.8" y="355.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1118.8" y="366.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (19 samples, 0.09%)</title><rect x="1115.8" y="339.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1118.8" y="350.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (13 samples, 0.06%)</title><rect x="1115.8" y="323.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1118.8" y="334.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (13 samples, 0.06%)</title><rect x="1115.8" y="307.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1118.8" y="318.0"></text>
</g>
<g>
<title>byte[] (13 samples, 0.06%)</title><rect x="1115.8" y="291.0" width="0.8" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="1118.8" y="302.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (6 samples, 0.03%)</title><rect x="1116.6" y="323.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1119.6" y="334.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (6 samples, 0.03%)</title><rect x="1116.6" y="307.0" width="0.3" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="1119.6" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.get (1,279 samples, 6.09%)</title><rect x="1117.1" y="355.0" width="71.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1120.1" y="366.0">ru/mail/..</text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (83 samples, 0.40%)</title><rect x="1117.1" y="339.0" width="4.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1120.1" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (83 samples, 0.40%)</title><rect x="1117.1" y="323.0" width="4.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1120.1" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (83 samples, 0.40%)</title><rect x="1117.1" y="307.0" width="4.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1120.1" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (83 samples, 0.40%)</title><rect x="1117.1" y="291.0" width="4.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1120.1" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (83 samples, 0.40%)</title><rect x="1117.1" y="275.0" width="4.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1120.1" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (71 samples, 0.34%)</title><rect x="1117.1" y="259.0" width="4.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1120.1" y="270.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (71 samples, 0.34%)</title><rect x="1117.1" y="243.0" width="4.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1120.1" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (71 samples, 0.34%)</title><rect x="1117.1" y="227.0" width="4.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1120.1" y="238.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (71 samples, 0.34%)</title><rect x="1117.1" y="211.0" width="4.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1120.1" y="222.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (71 samples, 0.34%)</title><rect x="1117.1" y="195.0" width="4.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1120.1" y="206.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (71 samples, 0.34%)</title><rect x="1117.1" y="179.0" width="4.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1120.1" y="190.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (71 samples, 0.34%)</title><rect x="1117.1" y="163.0" width="4.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1120.1" y="174.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (65 samples, 0.31%)</title><rect x="1117.1" y="147.0" width="3.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1120.1" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/SSTable$1.next (65 samples, 0.31%)</title><rect x="1117.1" y="131.0" width="3.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1120.1" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/SSTable$1.next (65 samples, 0.31%)</title><rect x="1117.1" y="115.0" width="3.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1120.1" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/SSTable.getCell (65 samples, 0.31%)</title><rect x="1117.1" y="99.0" width="3.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1120.1" y="110.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (41 samples, 0.20%)</title><rect x="1117.1" y="83.0" width="2.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1120.1" y="94.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (29 samples, 0.14%)</title><rect x="1117.1" y="67.0" width="1.7" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="1120.1" y="78.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (12 samples, 0.06%)</title><rect x="1118.8" y="67.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1121.8" y="78.0"></text>
</g>
<g>
<title>byte[] (12 samples, 0.06%)</title><rect x="1118.8" y="51.0" width="0.6" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="1121.8" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/SSTable.getOffset (19 samples, 0.09%)</title><rect x="1119.7" y="83.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1122.7" y="94.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (19 samples, 0.09%)</title><rect x="1119.7" y="67.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1122.7" y="78.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (13 samples, 0.06%)</title><rect x="1119.7" y="51.0" width="0.7" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="1122.7" y="62.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (6 samples, 0.03%)</title><rect x="1120.4" y="51.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1123.4" y="62.0"></text>
</g>
<g>
<title>byte[] (6 samples, 0.03%)</title><rect x="1120.4" y="35.0" width="0.4" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="1123.4" y="46.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (6 samples, 0.03%)</title><rect x="1120.8" y="147.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1123.8" y="158.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (6 samples, 0.03%)</title><rect x="1120.8" y="131.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1123.8" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/Cell.compareTo (6 samples, 0.03%)</title><rect x="1120.8" y="115.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1123.8" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/Cell.compareTo (6 samples, 0.03%)</title><rect x="1120.8" y="99.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1123.8" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/Cell.getKey (6 samples, 0.03%)</title><rect x="1120.8" y="83.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1123.8" y="94.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (6 samples, 0.03%)</title><rect x="1120.8" y="67.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1123.8" y="78.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (6 samples, 0.03%)</title><rect x="1120.8" y="51.0" width="0.3" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="1123.8" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl$$Lambda$79/1829454105.apply (12 samples, 0.06%)</title><rect x="1121.1" y="259.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1124.1" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/Cell.getKey (12 samples, 0.06%)</title><rect x="1121.1" y="243.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1124.1" y="254.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (12 samples, 0.06%)</title><rect x="1121.1" y="227.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1124.1" y="238.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (12 samples, 0.06%)</title><rect x="1121.1" y="211.0" width="0.7" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="1124.1" y="222.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.next (24 samples, 0.11%)</title><rect x="1121.8" y="339.0" width="1.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1124.8" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$6.transform (24 samples, 0.11%)</title><rect x="1121.8" y="323.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1124.8" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl$$Lambda$81/1927968150.apply (24 samples, 0.11%)</title><rect x="1121.8" y="307.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1124.8" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.lambda$iterator$4 (24 samples, 0.11%)</title><rect x="1121.8" y="291.0" width="1.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1124.8" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/Cell.getKey (9 samples, 0.04%)</title><rect x="1121.8" y="275.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1124.8" y="286.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (9 samples, 0.04%)</title><rect x="1121.8" y="259.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1124.8" y="270.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (9 samples, 0.04%)</title><rect x="1121.8" y="243.0" width="0.5" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="1124.8" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/Value.getData (12 samples, 0.06%)</title><rect x="1122.5" y="275.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1125.5" y="286.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (12 samples, 0.06%)</title><rect x="1122.5" y="259.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1125.5" y="270.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (12 samples, 0.06%)</title><rect x="1122.5" y="243.0" width="0.6" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="1125.5" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/Record.getKey (6 samples, 0.03%)</title><rect x="1123.1" y="339.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1126.1" y="350.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (6 samples, 0.03%)</title><rect x="1123.1" y="323.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1126.1" y="334.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (6 samples, 0.03%)</title><rect x="1123.1" y="307.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1126.1" y="318.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (6 samples, 0.03%)</title><rect x="1123.1" y="291.0" width="0.4" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="1126.1" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.iterator (1,166 samples, 5.56%)</title><rect x="1123.5" y="339.0" width="65.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1126.5" y="350.0">ru/mail..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.compactIterator (1,161 samples, 5.53%)</title><rect x="1123.8" y="323.0" width="65.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1126.8" y="334.0">ru/mail..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (145 samples, 0.69%)</title><rect x="1123.8" y="307.0" width="8.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1126.8" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (145 samples, 0.69%)</title><rect x="1123.8" y="291.0" width="8.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1126.8" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.peekingIterator (6 samples, 0.03%)</title><rect x="1124.0" y="275.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1127.0" y="286.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$PeekingImpl (6 samples, 0.03%)</title><rect x="1124.0" y="259.0" width="0.3" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="1127.0" y="270.0"></text>
</g>
<g>
<title>java.util.PriorityQueue (5 samples, 0.02%)</title><rect x="1124.3" y="275.0" width="0.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="1127.3" y="286.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (127 samples, 0.61%)</title><rect x="1124.8" y="275.0" width="7.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1127.8" y="286.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (127 samples, 0.61%)</title><rect x="1124.8" y="259.0" width="7.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1127.8" y="270.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (127 samples, 0.61%)</title><rect x="1124.8" y="243.0" width="7.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1127.8" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (127 samples, 0.61%)</title><rect x="1124.8" y="227.0" width="7.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1127.8" y="238.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (127 samples, 0.61%)</title><rect x="1124.8" y="211.0" width="7.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1127.8" y="222.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (127 samples, 0.61%)</title><rect x="1124.8" y="195.0" width="7.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1127.8" y="206.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (118 samples, 0.56%)</title><rect x="1124.8" y="179.0" width="6.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1127.8" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/SSTable$1.next (118 samples, 0.56%)</title><rect x="1124.8" y="163.0" width="6.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1127.8" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/SSTable$1.next (118 samples, 0.56%)</title><rect x="1124.8" y="147.0" width="6.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1127.8" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/SSTable.getCell (118 samples, 0.56%)</title><rect x="1124.8" y="131.0" width="6.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1127.8" y="142.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (67 samples, 0.32%)</title><rect x="1124.8" y="115.0" width="3.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1127.8" y="126.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (41 samples, 0.20%)</title><rect x="1124.8" y="99.0" width="2.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="1127.8" y="110.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (26 samples, 0.12%)</title><rect x="1127.1" y="99.0" width="1.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1130.1" y="110.0"></text>
</g>
<g>
<title>byte[] (26 samples, 0.12%)</title><rect x="1127.1" y="83.0" width="1.4" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="1130.1" y="94.0"></text>
</g>
<g>
<title>ru.mail.polis.Cell (5 samples, 0.02%)</title><rect x="1128.5" y="115.0" width="0.3" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="1131.5" y="126.0"></text>
</g>
<g>
<title>ru.mail.polis.Value (6 samples, 0.03%)</title><rect x="1128.8" y="115.0" width="0.4" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="1131.8" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/SSTable.getOffset (40 samples, 0.19%)</title><rect x="1129.2" y="115.0" width="2.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1132.2" y="126.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (40 samples, 0.19%)</title><rect x="1129.2" y="99.0" width="2.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1132.2" y="110.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (27 samples, 0.13%)</title><rect x="1129.2" y="83.0" width="1.5" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="1132.2" y="94.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (13 samples, 0.06%)</title><rect x="1130.7" y="83.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1133.7" y="94.0"></text>
</g>
<g>
<title>byte[] (13 samples, 0.06%)</title><rect x="1130.7" y="67.0" width="0.7" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="1133.7" y="78.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (9 samples, 0.04%)</title><rect x="1131.4" y="179.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1134.4" y="190.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (9 samples, 0.04%)</title><rect x="1131.4" y="163.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1134.4" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/Cell.compareTo (9 samples, 0.04%)</title><rect x="1131.4" y="147.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1134.4" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/Cell.compareTo (9 samples, 0.04%)</title><rect x="1131.4" y="131.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1134.4" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/Cell.getKey (9 samples, 0.04%)</title><rect x="1131.4" y="115.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1134.4" y="126.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (9 samples, 0.04%)</title><rect x="1131.4" y="99.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1134.4" y="110.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (9 samples, 0.04%)</title><rect x="1131.4" y="83.0" width="0.5" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="1134.4" y="94.0"></text>
</g>
<g>
<title>java.util.ArrayList (21 samples, 0.10%)</title><rect x="1131.9" y="307.0" width="1.2" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="1134.9" y="318.0"></text>
</g>
<g>
<title>java/lang/Iterable.forEach (910 samples, 4.34%)</title><rect x="1133.1" y="307.0" width="51.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1136.1" y="318.0">java/..</text>
</g>
<g>
<title>java/util/AbstractMap$2.iterator (13 samples, 0.06%)</title><rect x="1133.1" y="291.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1136.1" y="302.0"></text>
</g>
<g>
<title>java/util/AbstractMap$2$1.&lt;init&gt; (9 samples, 0.04%)</title><rect x="1133.3" y="275.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1136.3" y="286.0"></text>
</g>
<g>
<title>java/util/TreeMap$DescendingSubMap$DescendingEntrySetView.iterator (9 samples, 0.04%)</title><rect x="1133.3" y="259.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1136.3" y="270.0"></text>
</g>
<g>
<title>java.util.TreeMap$NavigableSubMap$DescendingSubMapEntryIterator (9 samples, 0.04%)</title><rect x="1133.3" y="243.0" width="0.5" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="1136.3" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl$$Lambda$77/1381385518.accept (897 samples, 4.27%)</title><rect x="1133.8" y="291.0" width="50.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1136.8" y="302.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.lambda$compactIterator$7 (897 samples, 4.27%)</title><rect x="1133.8" y="275.0" width="50.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1136.8" y="286.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/SSTable.iterator (897 samples, 4.27%)</title><rect x="1133.8" y="259.0" width="50.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1136.8" y="270.0">ru/ma..</text>
</g>
<g>
<title>ru.mail.polis.SSTable$1 (8 samples, 0.04%)</title><rect x="1133.8" y="243.0" width="0.5" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="1136.8" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/SSTable$1.&lt;init&gt; (889 samples, 4.24%)</title><rect x="1134.3" y="243.0" width="50.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1137.3" y="254.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/SSTable.getPosition (889 samples, 4.24%)</title><rect x="1134.3" y="227.0" width="50.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1137.3" y="238.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/SSTable.getKey (889 samples, 4.24%)</title><rect x="1134.3" y="211.0" width="50.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1137.3" y="222.0">ru/ma..</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (586 samples, 2.79%)</title><rect x="1134.3" y="195.0" width="32.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1137.3" y="206.0">ja..</text>
</g>
<g>
<title>java.nio.HeapByteBuffer (400 samples, 1.91%)</title><rect x="1134.3" y="179.0" width="22.5" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="1137.3" y="190.0">j..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (186 samples, 0.89%)</title><rect x="1156.8" y="179.0" width="10.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1159.8" y="190.0"></text>
</g>
<g>
<title>byte[] (186 samples, 0.89%)</title><rect x="1156.8" y="163.0" width="10.4" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="1159.8" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/SSTable.getOffset (303 samples, 1.44%)</title><rect x="1167.2" y="195.0" width="17.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1170.2" y="206.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (303 samples, 1.44%)</title><rect x="1167.2" y="179.0" width="17.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1170.2" y="190.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (200 samples, 0.95%)</title><rect x="1167.2" y="163.0" width="11.3" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="1170.2" y="174.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (103 samples, 0.49%)</title><rect x="1178.5" y="163.0" width="5.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1181.5" y="174.0"></text>
</g>
<g>
<title>byte[] (103 samples, 0.49%)</title><rect x="1178.5" y="147.0" width="5.8" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="1181.5" y="158.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection.forEach (6 samples, 0.03%)</title><rect x="1184.4" y="307.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1187.4" y="318.0"></text>
</g>
<g>
<title>java/lang/Iterable.forEach (6 samples, 0.03%)</title><rect x="1184.4" y="291.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1187.4" y="302.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (6 samples, 0.03%)</title><rect x="1184.4" y="275.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1187.4" y="286.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (6 samples, 0.03%)</title><rect x="1184.4" y="259.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1187.4" y="270.0"></text>
</g>
<g>
<title>java.util.HashMap$KeyIterator (6 samples, 0.03%)</title><rect x="1184.4" y="243.0" width="0.4" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="1187.4" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/MemTable.iterator (14 samples, 0.07%)</title><rect x="1184.8" y="307.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1187.8" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (6 samples, 0.03%)</title><rect x="1185.2" y="291.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1188.2" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (6 samples, 0.03%)</title><rect x="1185.2" y="275.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1188.2" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (6 samples, 0.03%)</title><rect x="1185.2" y="259.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1188.2" y="270.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap (6 samples, 0.03%)</title><rect x="1185.2" y="243.0" width="0.4" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="1188.2" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (62 samples, 0.30%)</title><rect x="1185.6" y="307.0" width="3.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1188.6" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (59 samples, 0.28%)</title><rect x="1185.7" y="291.0" width="3.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1188.7" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (59 samples, 0.28%)</title><rect x="1185.7" y="275.0" width="3.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1188.7" y="286.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (59 samples, 0.28%)</title><rect x="1185.7" y="259.0" width="3.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1188.7" y="270.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (59 samples, 0.28%)</title><rect x="1185.7" y="243.0" width="3.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1188.7" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (59 samples, 0.28%)</title><rect x="1185.7" y="227.0" width="3.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1188.7" y="238.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (59 samples, 0.28%)</title><rect x="1185.7" y="211.0" width="3.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1188.7" y="222.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (59 samples, 0.28%)</title><rect x="1185.7" y="195.0" width="3.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1188.7" y="206.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (59 samples, 0.28%)</title><rect x="1185.7" y="179.0" width="3.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1188.7" y="190.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (52 samples, 0.25%)</title><rect x="1185.7" y="163.0" width="3.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1188.7" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/SSTable$1.next (52 samples, 0.25%)</title><rect x="1185.7" y="147.0" width="3.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1188.7" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/SSTable$1.next (52 samples, 0.25%)</title><rect x="1185.7" y="131.0" width="3.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1188.7" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/SSTable.getCell (52 samples, 0.25%)</title><rect x="1185.7" y="115.0" width="3.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1188.7" y="126.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (34 samples, 0.16%)</title><rect x="1185.7" y="99.0" width="1.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1188.7" y="110.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (22 samples, 0.10%)</title><rect x="1185.7" y="83.0" width="1.3" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="1188.7" y="94.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (12 samples, 0.06%)</title><rect x="1187.0" y="83.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1190.0" y="94.0"></text>
</g>
<g>
<title>byte[] (12 samples, 0.06%)</title><rect x="1187.0" y="67.0" width="0.6" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="1190.0" y="78.0"></text>
</g>
<g>
<title>ru/mail/polis/SSTable.getOffset (14 samples, 0.07%)</title><rect x="1187.9" y="99.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1190.9" y="110.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (14 samples, 0.07%)</title><rect x="1187.9" y="83.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1190.9" y="94.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (9 samples, 0.04%)</title><rect x="1187.9" y="67.0" width="0.5" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="1190.9" y="78.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (5 samples, 0.02%)</title><rect x="1188.4" y="67.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1191.4" y="78.0"></text>
</g>
<g>
<title>byte[] (5 samples, 0.02%)</title><rect x="1188.4" y="51.0" width="0.3" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="1191.4" y="62.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (7 samples, 0.03%)</title><rect x="1188.7" y="163.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1191.7" y="174.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (7 samples, 0.03%)</title><rect x="1188.7" y="147.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1191.7" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/Cell.compareTo (7 samples, 0.03%)</title><rect x="1188.7" y="131.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1191.7" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/Cell.compareTo (7 samples, 0.03%)</title><rect x="1188.7" y="115.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1191.7" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/Cell.getKey (7 samples, 0.03%)</title><rect x="1188.7" y="99.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1191.7" y="110.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (7 samples, 0.03%)</title><rect x="1188.7" y="83.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1191.7" y="94.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (7 samples, 0.03%)</title><rect x="1188.7" y="67.0" width="0.3" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="1191.7" y="78.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivlev/ThreadController.toByteArray (5 samples, 0.02%)</title><rect x="1189.0" y="355.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1192.0" y="366.0"></text>
</g>
<g>
<title>byte[] (5 samples, 0.02%)</title><rect x="1189.0" y="339.0" width="0.3" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="1192.0" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivlev/ThreadController.toByteBuffer (12 samples, 0.06%)</title><rect x="1189.3" y="355.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1192.3" y="366.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (9 samples, 0.04%)</title><rect x="1189.5" y="339.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1192.5" y="350.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (9 samples, 0.04%)</title><rect x="1189.5" y="323.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1192.5" y="334.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (9 samples, 0.04%)</title><rect x="1189.5" y="307.0" width="0.5" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="1192.5" y="318.0"></text>
</g>
</g>
</svg>
