<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="1046" onload="init(evt)" viewBox="0 0 1200 1046" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="1029"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="1029"> </text>
<g id="frames">
<g>
<title>all (3,121 samples, 100.00%)</title><rect x="10.0" y="995.0" width="1180.0" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="13.0" y="1006.0">all</text>
</g>
<g>
<title>[C1 CompilerThre tid=4256] (8 samples, 0.26%)</title><rect x="10.0" y="979.0" width="3.0" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="13.0" y="990.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="10.0" y="963.0" width="0.4" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="13.0" y="974.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/ld-2.31.so (1 samples, 0.03%)</title><rect x="10.0" y="947.0" width="0.4" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="13.0" y="958.0"></text>
</g>
<g>
<title>start_thread (7 samples, 0.22%)</title><rect x="10.4" y="963.0" width="2.6" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="13.4" y="974.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (7 samples, 0.22%)</title><rect x="10.4" y="947.0" width="2.6" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="13.4" y="958.0"></text>
</g>
<g>
<title>Thread::call_run() (7 samples, 0.22%)</title><rect x="10.4" y="931.0" width="2.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="13.4" y="942.0"></text>
</g>
<g>
<title>JavaThread::run() (7 samples, 0.22%)</title><rect x="10.4" y="915.0" width="2.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="13.4" y="926.0"></text>
</g>
<g>
<title>CompileBroker::compiler_thread_loop() (7 samples, 0.22%)</title><rect x="10.4" y="899.0" width="2.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="13.4" y="910.0"></text>
</g>
<g>
<title>CompileBroker::invoke_compiler_on_method(CompileTask*) (7 samples, 0.22%)</title><rect x="10.4" y="883.0" width="2.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="13.4" y="894.0"></text>
</g>
<g>
<title>Compiler::compile_method(ciEnv*, ciMethod*, int, DirectiveSet*) (6 samples, 0.19%)</title><rect x="10.4" y="867.0" width="2.2" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="13.4" y="878.0"></text>
</g>
<g>
<title>Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*, DirectiveSet*) (6 samples, 0.19%)</title><rect x="10.4" y="851.0" width="2.2" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="13.4" y="862.0"></text>
</g>
<g>
<title>Compilation::compile_method() (6 samples, 0.19%)</title><rect x="10.4" y="835.0" width="2.2" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="13.4" y="846.0"></text>
</g>
<g>
<title>Compilation::compile_java_method() (6 samples, 0.19%)</title><rect x="10.4" y="819.0" width="2.2" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="13.4" y="830.0"></text>
</g>
<g>
<title>Compilation::build_hir() [clone .part.93] (2 samples, 0.06%)</title><rect x="10.4" y="803.0" width="0.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="13.4" y="814.0"></text>
</g>
<g>
<title>IR::IR(Compilation*, ciMethod*, int) (1 samples, 0.03%)</title><rect x="10.4" y="787.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="13.4" y="798.0"></text>
</g>
<g>
<title>IRScope::IRScope(Compilation*, IRScope*, int, ciMethod*, int, bool) (1 samples, 0.03%)</title><rect x="10.4" y="771.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="13.4" y="782.0"></text>
</g>
<g>
<title>GraphBuilder::GraphBuilder(Compilation*, IRScope*) (1 samples, 0.03%)</title><rect x="10.4" y="755.0" width="0.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="13.4" y="766.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_all_blocks(bool) (1 samples, 0.03%)</title><rect x="10.4" y="739.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="13.4" y="750.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_bytecodes_for_block(int) (1 samples, 0.03%)</title><rect x="10.4" y="723.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="13.4" y="734.0"></text>
</g>
<g>
<title>GraphBuilder::invoke(Bytecodes::Code) (1 samples, 0.03%)</title><rect x="10.4" y="707.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="13.4" y="718.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (1 samples, 0.03%)</title><rect x="10.4" y="691.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="13.4" y="702.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline_full(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (1 samples, 0.03%)</title><rect x="10.4" y="675.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="13.4" y="686.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_all_blocks(bool) (1 samples, 0.03%)</title><rect x="10.4" y="659.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="13.4" y="670.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_bytecodes_for_block(int) (1 samples, 0.03%)</title><rect x="10.4" y="643.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="13.4" y="654.0"></text>
</g>
<g>
<title>GraphBuilder::invoke(Bytecodes::Code) (1 samples, 0.03%)</title><rect x="10.4" y="627.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="13.4" y="638.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (1 samples, 0.03%)</title><rect x="10.4" y="611.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="13.4" y="622.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline_full(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (1 samples, 0.03%)</title><rect x="10.4" y="595.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="13.4" y="606.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_all_blocks(bool) (1 samples, 0.03%)</title><rect x="10.4" y="579.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="13.4" y="590.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_bytecodes_for_block(int) (1 samples, 0.03%)</title><rect x="10.4" y="563.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="13.4" y="574.0"></text>
</g>
<g>
<title>GraphBuilder::invoke(Bytecodes::Code) (1 samples, 0.03%)</title><rect x="10.4" y="547.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="13.4" y="558.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (1 samples, 0.03%)</title><rect x="10.4" y="531.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="13.4" y="542.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline_full(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (1 samples, 0.03%)</title><rect x="10.4" y="515.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="13.4" y="526.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_all_blocks(bool) (1 samples, 0.03%)</title><rect x="10.4" y="499.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="13.4" y="510.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_bytecodes_for_block(int) (1 samples, 0.03%)</title><rect x="10.4" y="483.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="13.4" y="494.0"></text>
</g>
<g>
<title>GraphBuilder::invoke(Bytecodes::Code) (1 samples, 0.03%)</title><rect x="10.4" y="467.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="13.4" y="478.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (1 samples, 0.03%)</title><rect x="10.4" y="451.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="13.4" y="462.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline_full(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (1 samples, 0.03%)</title><rect x="10.4" y="435.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="13.4" y="446.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_all_blocks(bool) (1 samples, 0.03%)</title><rect x="10.4" y="419.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="13.4" y="430.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_bytecodes_for_block(int) (1 samples, 0.03%)</title><rect x="10.4" y="403.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="13.4" y="414.0"></text>
</g>
<g>
<title>GraphBuilder::invoke(Bytecodes::Code) (1 samples, 0.03%)</title><rect x="10.4" y="387.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="13.4" y="398.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (1 samples, 0.03%)</title><rect x="10.4" y="371.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="13.4" y="382.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline_full(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (1 samples, 0.03%)</title><rect x="10.4" y="355.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="13.4" y="366.0"></text>
</g>
<g>
<title>GraphBuilder::push_scope(ciMethod*, BlockBegin*) (1 samples, 0.03%)</title><rect x="10.4" y="339.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="13.4" y="350.0"></text>
</g>
<g>
<title>BlockListBuilder::BlockListBuilder(Compilation*, IRScope*, int) (1 samples, 0.03%)</title><rect x="10.4" y="323.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="13.4" y="334.0"></text>
</g>
<g>
<title>BlockListBuilder::set_leaders() (1 samples, 0.03%)</title><rect x="10.4" y="307.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="13.4" y="318.0"></text>
</g>
<g>
<title>ciMethod::bci_block_start() (1 samples, 0.03%)</title><rect x="10.4" y="291.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="13.4" y="302.0"></text>
</g>
<g>
<title>MethodLiveness::compute_liveness() (1 samples, 0.03%)</title><rect x="10.4" y="275.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="13.4" y="286.0"></text>
</g>
<g>
<title>MethodLiveness::init_basic_blocks() (1 samples, 0.03%)</title><rect x="10.4" y="259.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="13.4" y="270.0"></text>
</g>
<g>
<title>ciMethod::get_method_blocks() (1 samples, 0.03%)</title><rect x="10.4" y="243.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="13.4" y="254.0"></text>
</g>
<g>
<title>ciMethodBlocks::ciMethodBlocks(Arena*, ciMethod*) (1 samples, 0.03%)</title><rect x="10.4" y="227.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="13.4" y="238.0"></text>
</g>
<g>
<title>ciMethodBlocks::do_analysis() (1 samples, 0.03%)</title><rect x="10.4" y="211.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="13.4" y="222.0"></text>
</g>
<g>
<title>IR::eliminate_null_checks() (1 samples, 0.03%)</title><rect x="10.8" y="787.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="13.8" y="798.0"></text>
</g>
<g>
<title>Optimizer::eliminate_null_checks() (1 samples, 0.03%)</title><rect x="10.8" y="771.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="13.8" y="782.0"></text>
</g>
<g>
<title>NullCheckEliminator::iterate_one(BlockBegin*) (1 samples, 0.03%)</title><rect x="10.8" y="755.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="13.8" y="766.0"></text>
</g>
<g>
<title>Compilation::emit_code_body() (2 samples, 0.06%)</title><rect x="11.1" y="803.0" width="0.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="14.1" y="814.0"></text>
</g>
<g>
<title>LIR_Assembler::emit_code(BlockList*) (1 samples, 0.03%)</title><rect x="11.1" y="787.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="14.1" y="798.0"></text>
</g>
<g>
<title>LIR_Assembler::emit_slow_case_stubs() (1 samples, 0.03%)</title><rect x="11.5" y="787.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="14.5" y="798.0"></text>
</g>
<g>
<title>PatchingStub::emit_code(LIR_Assembler*) (1 samples, 0.03%)</title><rect x="11.5" y="771.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="14.5" y="782.0"></text>
</g>
<g>
<title>Compilation::emit_lir() (2 samples, 0.06%)</title><rect x="11.9" y="803.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="14.9" y="814.0"></text>
</g>
<g>
<title>LinearScan::do_linear_scan() (2 samples, 0.06%)</title><rect x="11.9" y="787.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="14.9" y="798.0"></text>
</g>
<g>
<title>LinearScan::allocate_registers() (1 samples, 0.03%)</title><rect x="11.9" y="771.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="14.9" y="782.0"></text>
</g>
<g>
<title>IntervalWalker::walk_to(int) [clone .constprop.232] (1 samples, 0.03%)</title><rect x="11.9" y="755.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="14.9" y="766.0"></text>
</g>
<g>
<title>LinearScanWalker::activate_current() (1 samples, 0.03%)</title><rect x="11.9" y="739.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="14.9" y="750.0"></text>
</g>
<g>
<title>LinearScanWalker::alloc_free_reg(Interval*) (1 samples, 0.03%)</title><rect x="11.9" y="723.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="14.9" y="734.0"></text>
</g>
<g>
<title>LinearScanWalker::find_free_reg(int, int, int, int, bool*) (1 samples, 0.03%)</title><rect x="11.9" y="707.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="14.9" y="718.0"></text>
</g>
<g>
<title>LinearScan::assign_reg_num() (1 samples, 0.03%)</title><rect x="12.3" y="771.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="15.3" y="782.0"></text>
</g>
<g>
<title>LinearScan::init_compute_oop_maps() (1 samples, 0.03%)</title><rect x="12.3" y="755.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="15.3" y="766.0"></text>
</g>
<g>
<title>ciEnv::ciEnv(CompileTask*, int) (1 samples, 0.03%)</title><rect x="12.6" y="867.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="15.6" y="878.0"></text>
</g>
<g>
<title>ciObjectFactory::get(oopDesc*) (1 samples, 0.03%)</title><rect x="12.6" y="851.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="15.6" y="862.0"></text>
</g>
<g>
<title>ciObjectFactory::get_metadata(Metadata*) (1 samples, 0.03%)</title><rect x="12.6" y="835.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="15.6" y="846.0"></text>
</g>
<g>
<title>ciObjectFactory::create_new_metadata(Metadata*) (1 samples, 0.03%)</title><rect x="12.6" y="819.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="15.6" y="830.0"></text>
</g>
<g>
<title>ciInstanceKlass::ciInstanceKlass(Klass*) (1 samples, 0.03%)</title><rect x="12.6" y="803.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="15.6" y="814.0"></text>
</g>
<g>
<title>ciKlass::ciKlass(Klass*) (1 samples, 0.03%)</title><rect x="12.6" y="787.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="15.6" y="798.0"></text>
</g>
<g>
<title>ciObjectFactory::get_symbol(Symbol*) (1 samples, 0.03%)</title><rect x="12.6" y="771.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="15.6" y="782.0"></text>
</g>
<g>
<title>vmSymbols::find_sid(Symbol const*) (1 samples, 0.03%)</title><rect x="12.6" y="755.0" width="0.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="15.6" y="766.0"></text>
</g>
<g>
<title>[C2 CompilerThre tid=4255] (72 samples, 2.31%)</title><rect x="13.0" y="979.0" width="27.2" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="16.0" y="990.0">[..</text>
</g>
<g>
<title>[unknown] (2 samples, 0.06%)</title><rect x="13.0" y="963.0" width="0.8" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="16.0" y="974.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/ld-2.31.so (2 samples, 0.06%)</title><rect x="13.0" y="947.0" width="0.8" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="16.0" y="958.0"></text>
</g>
<g>
<title>start_thread (70 samples, 2.24%)</title><rect x="13.8" y="963.0" width="26.4" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="16.8" y="974.0">s..</text>
</g>
<g>
<title>thread_native_entry(Thread*) (70 samples, 2.24%)</title><rect x="13.8" y="947.0" width="26.4" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="16.8" y="958.0">t..</text>
</g>
<g>
<title>Thread::call_run() (70 samples, 2.24%)</title><rect x="13.8" y="931.0" width="26.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="16.8" y="942.0">T..</text>
</g>
<g>
<title>JavaThread::run() (70 samples, 2.24%)</title><rect x="13.8" y="915.0" width="26.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="16.8" y="926.0">J..</text>
</g>
<g>
<title>CompileBroker::compiler_thread_loop() (70 samples, 2.24%)</title><rect x="13.8" y="899.0" width="26.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="16.8" y="910.0">C..</text>
</g>
<g>
<title>CompileBroker::invoke_compiler_on_method(CompileTask*) (70 samples, 2.24%)</title><rect x="13.8" y="883.0" width="26.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="16.8" y="894.0">C..</text>
</g>
<g>
<title>C2Compiler::compile_method(ciEnv*, ciMethod*, int, DirectiveSet*) (70 samples, 2.24%)</title><rect x="13.8" y="867.0" width="26.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="16.8" y="878.0">C..</text>
</g>
<g>
<title>Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool, DirectiveSet*) (70 samples, 2.24%)</title><rect x="13.8" y="851.0" width="26.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="16.8" y="862.0">C..</text>
</g>
<g>
<title>Compile::Code_Gen() (37 samples, 1.19%)</title><rect x="13.8" y="835.0" width="14.0" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="16.8" y="846.0"></text>
</g>
<g>
<title>Compile::Output() (1 samples, 0.03%)</title><rect x="13.8" y="819.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="16.8" y="830.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (1 samples, 0.03%)</title><rect x="13.8" y="803.0" width="0.4" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="16.8" y="814.0"></text>
</g>
<g>
<title>Matcher::match() (3 samples, 0.10%)</title><rect x="14.2" y="819.0" width="1.1" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="17.2" y="830.0"></text>
</g>
<g>
<title>Matcher::find_shared(Node*) (1 samples, 0.03%)</title><rect x="14.2" y="803.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="17.2" y="814.0"></text>
</g>
<g>
<title>Matcher::xform(Node*, int) (2 samples, 0.06%)</title><rect x="14.5" y="803.0" width="0.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="17.5" y="814.0"></text>
</g>
<g>
<title>Matcher::match_tree(Node const*) (1 samples, 0.03%)</title><rect x="14.5" y="787.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="17.5" y="798.0"></text>
</g>
<g>
<title>Node::clone() const (1 samples, 0.03%)</title><rect x="14.9" y="787.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="17.9" y="798.0"></text>
</g>
<g>
<title>PhaseCFG::do_global_code_motion() (3 samples, 0.10%)</title><rect x="15.3" y="819.0" width="1.1" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="18.3" y="830.0"></text>
</g>
<g>
<title>PhaseCFG::global_code_motion() (3 samples, 0.10%)</title><rect x="15.3" y="803.0" width="1.1" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="18.3" y="814.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (1 samples, 0.03%)</title><rect x="15.3" y="787.0" width="0.4" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="18.3" y="798.0"></text>
</g>
<g>
<title>page_fault (1 samples, 0.03%)</title><rect x="15.3" y="771.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="18.3" y="782.0"></text>
</g>
<g>
<title>do_page_fault (1 samples, 0.03%)</title><rect x="15.3" y="755.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="18.3" y="766.0"></text>
</g>
<g>
<title>__do_page_fault (1 samples, 0.03%)</title><rect x="15.3" y="739.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="18.3" y="750.0"></text>
</g>
<g>
<title>do_user_addr_fault (1 samples, 0.03%)</title><rect x="15.3" y="723.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="18.3" y="734.0"></text>
</g>
<g>
<title>handle_mm_fault (1 samples, 0.03%)</title><rect x="15.3" y="707.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="18.3" y="718.0"></text>
</g>
<g>
<title>__handle_mm_fault (1 samples, 0.03%)</title><rect x="15.3" y="691.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="18.3" y="702.0"></text>
</g>
<g>
<title>do_anonymous_page (1 samples, 0.03%)</title><rect x="15.3" y="675.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="18.3" y="686.0"></text>
</g>
<g>
<title>mem_cgroup_try_charge_delay (1 samples, 0.03%)</title><rect x="15.3" y="659.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="18.3" y="670.0"></text>
</g>
<g>
<title>mem_cgroup_try_charge (1 samples, 0.03%)</title><rect x="15.3" y="643.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="18.3" y="654.0"></text>
</g>
<g>
<title>get_mem_cgroup_from_mm (1 samples, 0.03%)</title><rect x="15.3" y="627.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="18.3" y="638.0"></text>
</g>
<g>
<title>PhaseCFG::schedule_late(VectorSet&amp;, Node_Stack&amp;) (2 samples, 0.06%)</title><rect x="15.7" y="787.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="18.7" y="798.0"></text>
</g>
<g>
<title>Node_Backward_Iterator::next() (1 samples, 0.03%)</title><rect x="15.7" y="771.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="18.7" y="782.0"></text>
</g>
<g>
<title>PhaseCFG::insert_anti_dependences(Block*, Node*, bool) (1 samples, 0.03%)</title><rect x="16.0" y="771.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="19.0" y="782.0"></text>
</g>
<g>
<title>MachNode::adr_type() const (1 samples, 0.03%)</title><rect x="16.0" y="755.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="19.0" y="766.0"></text>
</g>
<g>
<title>TypeInstPtr::add_offset(long) const (1 samples, 0.03%)</title><rect x="16.0" y="739.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="19.0" y="750.0"></text>
</g>
<g>
<title>Type::hashcons() (1 samples, 0.03%)</title><rect x="16.0" y="723.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="19.0" y="734.0"></text>
</g>
<g>
<title>Dict::Insert(void*, void*, bool) (1 samples, 0.03%)</title><rect x="16.0" y="707.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="19.0" y="718.0"></text>
</g>
<g>
<title>PhaseChaitin::Register_Allocate() (30 samples, 0.96%)</title><rect x="16.4" y="819.0" width="11.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="19.4" y="830.0"></text>
</g>
<g>
<title>MachNode::ideal_reg() const (1 samples, 0.03%)</title><rect x="16.4" y="803.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="19.4" y="814.0"></text>
</g>
<g>
<title>PhaseAggressiveCoalesce::insert_copies(Matcher&amp;) (1 samples, 0.03%)</title><rect x="16.8" y="803.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="19.8" y="814.0"></text>
</g>
<g>
<title>PhaseChaitin::Select() (3 samples, 0.10%)</title><rect x="17.2" y="803.0" width="1.1" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="20.2" y="814.0"></text>
</g>
<g>
<title>PhaseIFG::re_insert(unsigned int) (2 samples, 0.06%)</title><rect x="17.2" y="787.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="20.2" y="798.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (1 samples, 0.03%)</title><rect x="17.6" y="771.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="20.6" y="782.0"></text>
</g>
<g>
<title>RegMask::clear_to_sets(int) (1 samples, 0.03%)</title><rect x="17.9" y="787.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="20.9" y="798.0"></text>
</g>
<g>
<title>PhaseChaitin::Simplify() (2 samples, 0.06%)</title><rect x="18.3" y="803.0" width="0.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="21.3" y="814.0"></text>
</g>
<g>
<title>PhaseIFG::remove_node(unsigned int) (2 samples, 0.06%)</title><rect x="18.3" y="787.0" width="0.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="21.3" y="798.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (1 samples, 0.03%)</title><rect x="18.7" y="771.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="21.7" y="782.0"></text>
</g>
<g>
<title>PhaseChaitin::Split(unsigned int, ResourceArea*) (4 samples, 0.13%)</title><rect x="19.1" y="803.0" width="1.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="22.1" y="814.0"></text>
</g>
<g>
<title>PhaseChaitin::build_ifg_physical(ResourceArea*) (2 samples, 0.06%)</title><rect x="20.6" y="803.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="23.6" y="814.0"></text>
</g>
<g>
<title>PhaseChaitin::interfere_with_live(unsigned int, IndexSet*) (1 samples, 0.03%)</title><rect x="20.6" y="787.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="23.6" y="798.0"></text>
</g>
<g>
<title>PhaseChaitin::remove_bound_register_from_interfering_live_ranges(LRG&amp;, IndexSet*, unsigned int&amp;) (1 samples, 0.03%)</title><rect x="21.0" y="787.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="24.0" y="798.0"></text>
</g>
<g>
<title>PhaseChaitin::gather_lrg_masks(bool) (2 samples, 0.06%)</title><rect x="21.3" y="803.0" width="0.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="24.3" y="814.0"></text>
</g>
<g>
<title>PhaseChaitin::gather_lrg_masks(bool) [clone .constprop.87] (1 samples, 0.03%)</title><rect x="22.1" y="803.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="25.1" y="814.0"></text>
</g>
<g>
<title>PhaseChaitin::merge_multidefs() (2 samples, 0.06%)</title><rect x="22.5" y="803.0" width="0.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="25.5" y="814.0"></text>
</g>
<g>
<title>PhaseChaitin::post_allocate_copy_removal() (7 samples, 0.22%)</title><rect x="23.2" y="803.0" width="2.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="26.2" y="814.0"></text>
</g>
<g>
<title>PhaseChaitin::elide_copy(Node*, int, Block*, Node_List&amp;, Node_List&amp;, bool) (4 samples, 0.13%)</title><rect x="24.4" y="787.0" width="1.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="27.4" y="798.0"></text>
</g>
<g>
<title>PhaseChaitin::yank_if_dead_recurse(Node*, Node*, Block*, Node_List*, Node_List*) [clone .part.44] (1 samples, 0.03%)</title><rect x="25.5" y="771.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="28.5" y="782.0"></text>
</g>
<g>
<title>Node_Array::remove(unsigned int) (1 samples, 0.03%)</title><rect x="25.5" y="755.0" width="0.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="28.5" y="766.0"></text>
</g>
<g>
<title>PhaseCoalesce::coalesce_driver() (1 samples, 0.03%)</title><rect x="25.9" y="803.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="28.9" y="814.0"></text>
</g>
<g>
<title>PhaseAggressiveCoalesce::coalesce(Block*) (1 samples, 0.03%)</title><rect x="25.9" y="787.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="28.9" y="798.0"></text>
</g>
<g>
<title>PhaseLive::compute(unsigned int) (4 samples, 0.13%)</title><rect x="26.3" y="803.0" width="1.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="29.3" y="814.0"></text>
</g>
<g>
<title>Compile::Optimize() (14 samples, 0.45%)</title><rect x="27.8" y="835.0" width="5.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="30.8" y="846.0"></text>
</g>
<g>
<title>Compile::optimize_loops(int&amp;, PhaseIterGVN&amp;, LoopOptsMode) [clone .part.341] (4 samples, 0.13%)</title><rect x="27.8" y="819.0" width="1.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="30.8" y="830.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_and_optimize(LoopOptsMode) (4 samples, 0.13%)</title><rect x="27.8" y="803.0" width="1.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="30.8" y="814.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_early(VectorSet&amp;, Node_List&amp;, Node_Stack&amp;) (2 samples, 0.06%)</title><rect x="27.8" y="787.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="30.8" y="798.0"></text>
</g>
<g>
<title>PhaseIdealLoop::get_early_ctrl(Node*) (1 samples, 0.03%)</title><rect x="28.1" y="771.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="31.1" y="782.0"></text>
</g>
<g>
<title>PhaseIdealLoop::dom_depth(Node*) const [clone .isra.123] (1 samples, 0.03%)</title><rect x="28.1" y="755.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="31.1" y="766.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_late_post(Node*) (1 samples, 0.03%)</title><rect x="28.5" y="787.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="31.5" y="798.0"></text>
</g>
<g>
<title>ProjNode::pinned() const (1 samples, 0.03%)</title><rect x="28.9" y="787.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="31.9" y="798.0"></text>
</g>
<g>
<title>IfNode::Value(PhaseGVN*) const (1 samples, 0.03%)</title><rect x="29.3" y="819.0" width="0.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="32.3" y="830.0"></text>
</g>
<g>
<title>PhaseCCP::analyze() (1 samples, 0.03%)</title><rect x="29.7" y="819.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="32.7" y="830.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_and_optimize(LoopOptsMode) (4 samples, 0.13%)</title><rect x="30.0" y="819.0" width="1.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="33.0" y="830.0"></text>
</g>
<g>
<title>PhaseIdealLoop::Dominators() (1 samples, 0.03%)</title><rect x="30.0" y="803.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="33.0" y="814.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_late(VectorSet&amp;, Node_List&amp;, Node_Stack&amp;) (2 samples, 0.06%)</title><rect x="30.4" y="803.0" width="0.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="33.4" y="814.0"></text>
</g>
<g>
<title>PhaseIterGVN::optimize() (1 samples, 0.03%)</title><rect x="31.2" y="803.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="34.2" y="814.0"></text>
</g>
<g>
<title>PhaseIterGVN::transform_old(Node*) (1 samples, 0.03%)</title><rect x="31.2" y="787.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="34.2" y="798.0"></text>
</g>
<g>
<title>PhaseIterGVN::add_users_to_worklist(Node*) (1 samples, 0.03%)</title><rect x="31.2" y="771.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="34.2" y="782.0"></text>
</g>
<g>
<title>PhaseIterGVN::optimize() (2 samples, 0.06%)</title><rect x="31.6" y="819.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="34.6" y="830.0"></text>
</g>
<g>
<title>PhaseIterGVN::transform_old(Node*) (2 samples, 0.06%)</title><rect x="31.6" y="803.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="34.6" y="814.0"></text>
</g>
<g>
<title>IfNode::Ideal(PhaseGVN*, bool) (1 samples, 0.03%)</title><rect x="31.6" y="787.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="34.6" y="798.0"></text>
</g>
<g>
<title>IfNode::fold_compares(PhaseIterGVN*) (1 samples, 0.03%)</title><rect x="31.6" y="771.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="34.6" y="782.0"></text>
</g>
<g>
<title>PhiNode::Value(PhaseGVN*) const (1 samples, 0.03%)</title><rect x="31.9" y="787.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="34.9" y="798.0"></text>
</g>
<g>
<title>PhaseMacroExpand::expand_macro_nodes() (2 samples, 0.06%)</title><rect x="32.3" y="819.0" width="0.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="35.3" y="830.0"></text>
</g>
<g>
<title>PhaseIterGVN::optimize() (2 samples, 0.06%)</title><rect x="32.3" y="803.0" width="0.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="35.3" y="814.0"></text>
</g>
<g>
<title>PhaseIterGVN::transform_old(Node*) (2 samples, 0.06%)</title><rect x="32.3" y="787.0" width="0.8" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="35.3" y="798.0"></text>
</g>
<g>
<title>StoreNode::Ideal(PhaseGVN*, bool) (1 samples, 0.03%)</title><rect x="32.3" y="771.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="35.3" y="782.0"></text>
</g>
<g>
<title>MemNode::Ideal_common(PhaseGVN*, bool) (1 samples, 0.03%)</title><rect x="32.3" y="755.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="35.3" y="766.0"></text>
</g>
<g>
<title>Node::remove_dead_region(PhaseGVN*, bool) (1 samples, 0.03%)</title><rect x="32.3" y="739.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="35.3" y="750.0"></text>
</g>
<g>
<title>StoreNode::Value(PhaseGVN*) const (1 samples, 0.03%)</title><rect x="32.7" y="771.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="35.7" y="782.0"></text>
</g>
<g>
<title>Compile::inline_string_calls(bool) (1 samples, 0.03%)</title><rect x="33.1" y="835.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="36.1" y="846.0"></text>
</g>
<g>
<title>Compile::remove_useless_nodes(Unique_Node_List&amp;) (1 samples, 0.03%)</title><rect x="33.1" y="819.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="36.1" y="830.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (16 samples, 0.51%)</title><rect x="33.4" y="835.0" width="6.1" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="36.4" y="846.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (16 samples, 0.51%)</title><rect x="33.4" y="819.0" width="6.1" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="36.4" y="830.0"></text>
</g>
<g>
<title>Dependencies::assert_evol_method(ciMethod*) (1 samples, 0.03%)</title><rect x="33.4" y="803.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="36.4" y="814.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (15 samples, 0.48%)</title><rect x="33.8" y="803.0" width="5.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="36.8" y="814.0"></text>
</g>
<g>
<title>Parse::do_one_block() (15 samples, 0.48%)</title><rect x="33.8" y="787.0" width="5.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="36.8" y="798.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (15 samples, 0.48%)</title><rect x="33.8" y="771.0" width="5.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="36.8" y="782.0"></text>
</g>
<g>
<title>Parse::array_store(BasicType) (1 samples, 0.03%)</title><rect x="33.8" y="755.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="36.8" y="766.0"></text>
</g>
<g>
<title>GraphKit::access_store_at(Node*, Node*, Node*, TypePtr const*, Node*, Type const*, BasicType, unsigned long) (1 samples, 0.03%)</title><rect x="33.8" y="739.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="36.8" y="750.0"></text>
</g>
<g>
<title>BarrierSetC2::store_at(C2Access&amp;, C2AccessValue&amp;) const (1 samples, 0.03%)</title><rect x="33.8" y="723.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="36.8" y="734.0"></text>
</g>
<g>
<title>ModRefBarrierSetC2::store_at_resolved(C2Access&amp;, C2AccessValue&amp;) const (1 samples, 0.03%)</title><rect x="33.8" y="707.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="36.8" y="718.0"></text>
</g>
<g>
<title>G1BarrierSetC2::post_barrier(GraphKit*, Node*, Node*, Node*, Node*, unsigned int, Node*, BasicType, bool) const (1 samples, 0.03%)</title><rect x="33.8" y="691.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="36.8" y="702.0"></text>
</g>
<g>
<title>IdealKit::clear(Node*) (1 samples, 0.03%)</title><rect x="33.8" y="675.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="36.8" y="686.0"></text>
</g>
<g>
<title>Parse::do_call() (14 samples, 0.45%)</title><rect x="34.2" y="755.0" width="5.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="37.2" y="766.0"></text>
</g>
<g>
<title>Compile::call_generator(ciMethod*, int, bool, JVMState*, bool, float, ciKlass*, bool, bool) (3 samples, 0.10%)</title><rect x="34.2" y="739.0" width="1.1" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="37.2" y="750.0"></text>
</g>
<g>
<title>InlineTree::ok_to_inline(ciMethod*, JVMState*, ciCallProfile&amp;, WarmCallInfo*, bool&amp;) (3 samples, 0.10%)</title><rect x="34.2" y="723.0" width="1.1" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="37.2" y="734.0"></text>
</g>
<g>
<title>ciMethod::get_flow_analysis() (3 samples, 0.10%)</title><rect x="34.2" y="707.0" width="1.1" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="37.2" y="718.0"></text>
</g>
<g>
<title>ciTypeFlow::do_flow() (3 samples, 0.10%)</title><rect x="34.2" y="691.0" width="1.1" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="37.2" y="702.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_types() (3 samples, 0.10%)</title><rect x="34.2" y="675.0" width="1.1" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="37.2" y="686.0"></text>
</g>
<g>
<title>ciTypeFlow::df_flow_types(ciTypeFlow::Block*, bool, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (3 samples, 0.10%)</title><rect x="34.2" y="659.0" width="1.1" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="37.2" y="670.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_block(ciTypeFlow::Block*, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (2 samples, 0.06%)</title><rect x="34.6" y="643.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="37.6" y="654.0"></text>
</g>
<g>
<title>ciTypeFlow::StateVector::apply_one_bytecode(ciBytecodeStream*) (2 samples, 0.06%)</title><rect x="34.6" y="627.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="37.6" y="638.0"></text>
</g>
<g>
<title>ciTypeFlow::StateVector::do_getstatic(ciBytecodeStream*) (1 samples, 0.03%)</title><rect x="34.6" y="611.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="37.6" y="622.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_field(bool&amp;) (1 samples, 0.03%)</title><rect x="34.6" y="595.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="37.6" y="606.0"></text>
</g>
<g>
<title>ciEnv::get_field_by_index(ciInstanceKlass*, int) (1 samples, 0.03%)</title><rect x="34.6" y="579.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="37.6" y="590.0"></text>
</g>
<g>
<title>ciField::ciField(ciInstanceKlass*, int) (1 samples, 0.03%)</title><rect x="34.6" y="563.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="37.6" y="574.0"></text>
</g>
<g>
<title>ConstantPool::impl_name_ref_at(int, bool) (1 samples, 0.03%)</title><rect x="34.6" y="547.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="37.6" y="558.0"></text>
</g>
<g>
<title>ciTypeFlow::StateVector::do_invoke(ciBytecodeStream*, bool) (1 samples, 0.03%)</title><rect x="35.0" y="611.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="38.0" y="622.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_method(bool&amp;, ciSignature**) (1 samples, 0.03%)</title><rect x="35.0" y="595.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="38.0" y="606.0"></text>
</g>
<g>
<title>ciBytecodeStream::has_method_type() (1 samples, 0.03%)</title><rect x="35.0" y="579.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="38.0" y="590.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.03%)</title><rect x="35.0" y="563.0" width="0.3" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="38.0" y="574.0"></text>
</g>
<g>
<title>DirectCallGenerator::generate(JVMState*) (1 samples, 0.03%)</title><rect x="35.3" y="739.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="38.3" y="750.0"></text>
</g>
<g>
<title>GraphKit::set_edges_for_java_call(CallJavaNode*, bool, bool) (1 samples, 0.03%)</title><rect x="35.3" y="723.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="38.3" y="734.0"></text>
</g>
<g>
<title>PhaseGVN::transform_no_reclaim(Node*) (1 samples, 0.03%)</title><rect x="35.3" y="707.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="38.3" y="718.0"></text>
</g>
<g>
<title>Node::remove_dead_region(PhaseGVN*, bool) (1 samples, 0.03%)</title><rect x="35.3" y="691.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="38.3" y="702.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (7 samples, 0.22%)</title><rect x="35.7" y="739.0" width="2.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="38.7" y="750.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (7 samples, 0.22%)</title><rect x="35.7" y="723.0" width="2.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="38.7" y="734.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (7 samples, 0.22%)</title><rect x="35.7" y="707.0" width="2.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="38.7" y="718.0"></text>
</g>
<g>
<title>Parse::do_one_block() (7 samples, 0.22%)</title><rect x="35.7" y="691.0" width="2.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="38.7" y="702.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (7 samples, 0.22%)</title><rect x="35.7" y="675.0" width="2.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="38.7" y="686.0"></text>
</g>
<g>
<title>Parse::do_call() (6 samples, 0.19%)</title><rect x="35.7" y="659.0" width="2.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="38.7" y="670.0"></text>
</g>
<g>
<title>Compile::call_generator(ciMethod*, int, bool, JVMState*, bool, float, ciKlass*, bool, bool) (2 samples, 0.06%)</title><rect x="35.7" y="643.0" width="0.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="38.7" y="654.0"></text>
</g>
<g>
<title>InlineTree::ok_to_inline(ciMethod*, JVMState*, ciCallProfile&amp;, WarmCallInfo*, bool&amp;) (2 samples, 0.06%)</title><rect x="35.7" y="627.0" width="0.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="38.7" y="638.0"></text>
</g>
<g>
<title>ciMethod::get_flow_analysis() (2 samples, 0.06%)</title><rect x="35.7" y="611.0" width="0.8" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="38.7" y="622.0"></text>
</g>
<g>
<title>ciTypeFlow::do_flow() (2 samples, 0.06%)</title><rect x="35.7" y="595.0" width="0.8" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="38.7" y="606.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_types() (2 samples, 0.06%)</title><rect x="35.7" y="579.0" width="0.8" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="38.7" y="590.0"></text>
</g>
<g>
<title>ciTypeFlow::df_flow_types(ciTypeFlow::Block*, bool, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (1 samples, 0.03%)</title><rect x="35.7" y="563.0" width="0.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="38.7" y="574.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_block(ciTypeFlow::Block*, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (1 samples, 0.03%)</title><rect x="35.7" y="547.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="38.7" y="558.0"></text>
</g>
<g>
<title>ciTypeFlow::StateVector::apply_one_bytecode(ciBytecodeStream*) (1 samples, 0.03%)</title><rect x="35.7" y="531.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="38.7" y="542.0"></text>
</g>
<g>
<title>ciTypeFlow::StateVector::do_invoke(ciBytecodeStream*, bool) (1 samples, 0.03%)</title><rect x="35.7" y="515.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="38.7" y="526.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_method(bool&amp;, ciSignature**) (1 samples, 0.03%)</title><rect x="35.7" y="499.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="38.7" y="510.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index(constantPoolHandle const&amp;, int, Bytecodes::Code, ciInstanceKlass*) (1 samples, 0.03%)</title><rect x="35.7" y="483.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="38.7" y="494.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index_impl(constantPoolHandle const&amp;, int, Bytecodes::Code, ciInstanceKlass*) (1 samples, 0.03%)</title><rect x="35.7" y="467.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="38.7" y="478.0"></text>
</g>
<g>
<title>ciObjectFactory::get_metadata(Metadata*) (1 samples, 0.03%)</title><rect x="35.7" y="451.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="38.7" y="462.0"></text>
</g>
<g>
<title>ciObjectFactory::create_new_metadata(Metadata*) (1 samples, 0.03%)</title><rect x="35.7" y="435.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="38.7" y="446.0"></text>
</g>
<g>
<title>ciMethod::ciMethod(methodHandle const&amp;, ciInstanceKlass*) (1 samples, 0.03%)</title><rect x="35.7" y="419.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="38.7" y="430.0"></text>
</g>
<g>
<title>ciSignature::ciSignature(ciKlass*, constantPoolHandle const&amp;, ciSymbol*) (1 samples, 0.03%)</title><rect x="35.7" y="403.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="38.7" y="414.0"></text>
</g>
<g>
<title>SignatureStream::as_symbol(Thread*) (1 samples, 0.03%)</title><rect x="35.7" y="387.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="38.7" y="398.0"></text>
</g>
<g>
<title>SymbolTable::lookup(Symbol const*, int, int, Thread*) (1 samples, 0.03%)</title><rect x="35.7" y="371.0" width="0.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="38.7" y="382.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_block(ciTypeFlow::Block*, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (1 samples, 0.03%)</title><rect x="36.1" y="563.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="39.1" y="574.0"></text>
</g>
<g>
<title>ciTypeFlow::StateVector::apply_one_bytecode(ciBytecodeStream*) (1 samples, 0.03%)</title><rect x="36.1" y="547.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="39.1" y="558.0"></text>
</g>
<g>
<title>ciTypeFlow::StateVector::do_getstatic(ciBytecodeStream*) (1 samples, 0.03%)</title><rect x="36.1" y="531.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="39.1" y="542.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_field(bool&amp;) (1 samples, 0.03%)</title><rect x="36.1" y="515.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="39.1" y="526.0"></text>
</g>
<g>
<title>ciField::will_link(ciMethod*, Bytecodes::Code) (1 samples, 0.03%)</title><rect x="36.1" y="499.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="39.1" y="510.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (4 samples, 0.13%)</title><rect x="36.5" y="643.0" width="1.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="39.5" y="654.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (4 samples, 0.13%)</title><rect x="36.5" y="627.0" width="1.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="39.5" y="638.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (4 samples, 0.13%)</title><rect x="36.5" y="611.0" width="1.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="39.5" y="622.0"></text>
</g>
<g>
<title>Parse::do_one_block() (4 samples, 0.13%)</title><rect x="36.5" y="595.0" width="1.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="39.5" y="606.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (4 samples, 0.13%)</title><rect x="36.5" y="579.0" width="1.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="39.5" y="590.0"></text>
</g>
<g>
<title>Parse::do_call() (3 samples, 0.10%)</title><rect x="36.5" y="563.0" width="1.1" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="39.5" y="574.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (3 samples, 0.10%)</title><rect x="36.5" y="547.0" width="1.1" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="39.5" y="558.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (3 samples, 0.10%)</title><rect x="36.5" y="531.0" width="1.1" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="39.5" y="542.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.06%)</title><rect x="36.5" y="515.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="39.5" y="526.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.06%)</title><rect x="36.5" y="499.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="39.5" y="510.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.06%)</title><rect x="36.5" y="483.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="39.5" y="494.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.06%)</title><rect x="36.5" y="467.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="39.5" y="478.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.06%)</title><rect x="36.5" y="451.0" width="0.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="39.5" y="462.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.06%)</title><rect x="36.5" y="435.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="39.5" y="446.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.06%)</title><rect x="36.5" y="419.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="39.5" y="430.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.06%)</title><rect x="36.5" y="403.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="39.5" y="414.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.06%)</title><rect x="36.5" y="387.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="39.5" y="398.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.06%)</title><rect x="36.5" y="371.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="39.5" y="382.0"></text>
</g>
<g>
<title>Compile::call_generator(ciMethod*, int, bool, JVMState*, bool, float, ciKlass*, bool, bool) (1 samples, 0.03%)</title><rect x="36.5" y="355.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="39.5" y="366.0"></text>
</g>
<g>
<title>InlineTree::ok_to_inline(ciMethod*, JVMState*, ciCallProfile&amp;, WarmCallInfo*, bool&amp;) (1 samples, 0.03%)</title><rect x="36.5" y="339.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="39.5" y="350.0"></text>
</g>
<g>
<title>ciMethod::get_flow_analysis() (1 samples, 0.03%)</title><rect x="36.5" y="323.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="39.5" y="334.0"></text>
</g>
<g>
<title>ciTypeFlow::do_flow() (1 samples, 0.03%)</title><rect x="36.5" y="307.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="39.5" y="318.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_types() (1 samples, 0.03%)</title><rect x="36.5" y="291.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="39.5" y="302.0"></text>
</g>
<g>
<title>ciTypeFlow::df_flow_types(ciTypeFlow::Block*, bool, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (1 samples, 0.03%)</title><rect x="36.5" y="275.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="39.5" y="286.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_block(ciTypeFlow::Block*, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (1 samples, 0.03%)</title><rect x="36.5" y="259.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="39.5" y="270.0"></text>
</g>
<g>
<title>ciTypeFlow::StateVector::apply_one_bytecode(ciBytecodeStream*) (1 samples, 0.03%)</title><rect x="36.5" y="243.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="39.5" y="254.0"></text>
</g>
<g>
<title>ciTypeFlow::StateVector::do_invoke(ciBytecodeStream*, bool) (1 samples, 0.03%)</title><rect x="36.5" y="227.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="39.5" y="238.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_method(bool&amp;, ciSignature**) (1 samples, 0.03%)</title><rect x="36.5" y="211.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="39.5" y="222.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index(constantPoolHandle const&amp;, int, Bytecodes::Code, ciInstanceKlass*) (1 samples, 0.03%)</title><rect x="36.5" y="195.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="39.5" y="206.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index_impl(constantPoolHandle const&amp;, int, Bytecodes::Code, ciInstanceKlass*) (1 samples, 0.03%)</title><rect x="36.5" y="179.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="39.5" y="190.0"></text>
</g>
<g>
<title>ciEnv::get_klass_by_index_impl(constantPoolHandle const&amp;, int, bool&amp;, ciInstanceKlass*) (1 samples, 0.03%)</title><rect x="36.5" y="163.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="39.5" y="174.0"></text>
</g>
<g>
<title>ciObjectFactory::get_unloaded_klass(ciKlass*, ciSymbol*, bool) (1 samples, 0.03%)</title><rect x="36.5" y="147.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="39.5" y="158.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.03%)</title><rect x="36.8" y="355.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="39.8" y="366.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.03%)</title><rect x="36.8" y="339.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="39.8" y="350.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.03%)</title><rect x="36.8" y="323.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="39.8" y="334.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.03%)</title><rect x="36.8" y="307.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="39.8" y="318.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.03%)</title><rect x="36.8" y="291.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="39.8" y="302.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.03%)</title><rect x="36.8" y="275.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="39.8" y="286.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.03%)</title><rect x="36.8" y="259.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="39.8" y="270.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.03%)</title><rect x="36.8" y="243.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="39.8" y="254.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.03%)</title><rect x="36.8" y="227.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="39.8" y="238.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.03%)</title><rect x="36.8" y="211.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="39.8" y="222.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.03%)</title><rect x="36.8" y="195.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="39.8" y="206.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.03%)</title><rect x="36.8" y="179.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="39.8" y="190.0"></text>
</g>
<g>
<title>LibraryIntrinsic::generate(JVMState*) (1 samples, 0.03%)</title><rect x="36.8" y="163.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="39.8" y="174.0"></text>
</g>
<g>
<title>LibraryCallKit::try_to_inline(int) (1 samples, 0.03%)</title><rect x="36.8" y="147.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="39.8" y="158.0"></text>
</g>
<g>
<title>LibraryCallKit::inline_unsafe_load_store(BasicType, LibraryCallKit::LoadStoreKind, LibraryCallKit::AccessKind) [clone .part.167] (1 samples, 0.03%)</title><rect x="36.8" y="131.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="39.8" y="142.0"></text>
</g>
<g>
<title>GraphKit::access_atomic_cmpxchg_bool_at(Node*, Node*, Node*, TypePtr const*, int, Node*, Node*, Type const*, BasicType, unsigned long) (1 samples, 0.03%)</title><rect x="36.8" y="115.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="39.8" y="126.0"></text>
</g>
<g>
<title>BarrierSetC2::atomic_cmpxchg_bool_at(C2AtomicAccess&amp;, Node*, Node*, Type const*) const (1 samples, 0.03%)</title><rect x="36.8" y="99.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="39.8" y="110.0"></text>
</g>
<g>
<title>GraphKit::insert_mem_bar(int, Node*) (1 samples, 0.03%)</title><rect x="36.8" y="83.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="39.8" y="94.0"></text>
</g>
<g>
<title>PhaseGVN::transform_no_reclaim(Node*) (1 samples, 0.03%)</title><rect x="36.8" y="67.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="39.8" y="78.0"></text>
</g>
<g>
<title>NodeHash::hash_find_insert(Node*) (1 samples, 0.03%)</title><rect x="36.8" y="51.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="39.8" y="62.0"></text>
</g>
<g>
<title>Parse::init_blocks() (1 samples, 0.03%)</title><rect x="37.2" y="515.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="40.2" y="526.0"></text>
</g>
<g>
<title>Parse::do_instanceof() (1 samples, 0.03%)</title><rect x="37.6" y="563.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="40.6" y="574.0"></text>
</g>
<g>
<title>GraphKit::gen_instanceof(Node*, Node*, bool) (1 samples, 0.03%)</title><rect x="37.6" y="547.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="40.6" y="558.0"></text>
</g>
<g>
<title>GraphKit::load_object_klass(Node*) (1 samples, 0.03%)</title><rect x="37.6" y="531.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="40.6" y="542.0"></text>
</g>
<g>
<title>Parse::do_field_access(bool, bool) (1 samples, 0.03%)</title><rect x="38.0" y="659.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="41.0" y="670.0"></text>
</g>
<g>
<title>Parse::do_put_xxx(Node*, ciField*, bool) (1 samples, 0.03%)</title><rect x="38.0" y="643.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="41.0" y="654.0"></text>
</g>
<g>
<title>Compile::find_alias_type(TypePtr const*, bool, ciField*) [clone .part.242] (1 samples, 0.03%)</title><rect x="38.0" y="627.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="41.0" y="638.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (3 samples, 0.10%)</title><rect x="38.4" y="739.0" width="1.1" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="41.4" y="750.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (3 samples, 0.10%)</title><rect x="38.4" y="723.0" width="1.1" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="41.4" y="734.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (3 samples, 0.10%)</title><rect x="38.4" y="707.0" width="1.1" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="41.4" y="718.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (3 samples, 0.10%)</title><rect x="38.4" y="691.0" width="1.1" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="41.4" y="702.0"></text>
</g>
<g>
<title>Parse::do_one_block() (3 samples, 0.10%)</title><rect x="38.4" y="675.0" width="1.1" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="41.4" y="686.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (3 samples, 0.10%)</title><rect x="38.4" y="659.0" width="1.1" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="41.4" y="670.0"></text>
</g>
<g>
<title>Parse::do_call() (3 samples, 0.10%)</title><rect x="38.4" y="643.0" width="1.1" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="41.4" y="654.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.06%)</title><rect x="38.4" y="627.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="41.4" y="638.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.06%)</title><rect x="38.4" y="611.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="41.4" y="622.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.06%)</title><rect x="38.4" y="595.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="41.4" y="606.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.06%)</title><rect x="38.4" y="579.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="41.4" y="590.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.06%)</title><rect x="38.4" y="563.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="41.4" y="574.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.06%)</title><rect x="38.4" y="547.0" width="0.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="41.4" y="558.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.03%)</title><rect x="38.4" y="531.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="41.4" y="542.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.03%)</title><rect x="38.4" y="515.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="41.4" y="526.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.03%)</title><rect x="38.4" y="499.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="41.4" y="510.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.03%)</title><rect x="38.4" y="483.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="41.4" y="494.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.03%)</title><rect x="38.4" y="467.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="41.4" y="478.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.03%)</title><rect x="38.4" y="451.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="41.4" y="462.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.03%)</title><rect x="38.4" y="435.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="41.4" y="446.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.03%)</title><rect x="38.4" y="419.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="41.4" y="430.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.03%)</title><rect x="38.4" y="403.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="41.4" y="414.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.03%)</title><rect x="38.4" y="387.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="41.4" y="398.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.03%)</title><rect x="38.4" y="371.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="41.4" y="382.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.03%)</title><rect x="38.4" y="355.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="41.4" y="366.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.03%)</title><rect x="38.4" y="339.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="41.4" y="350.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.03%)</title><rect x="38.4" y="323.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="41.4" y="334.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.03%)</title><rect x="38.4" y="307.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="41.4" y="318.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.03%)</title><rect x="38.4" y="291.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="41.4" y="302.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.03%)</title><rect x="38.4" y="275.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="41.4" y="286.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.03%)</title><rect x="38.4" y="259.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="41.4" y="270.0"></text>
</g>
<g>
<title>Compile::call_generator(ciMethod*, int, bool, JVMState*, bool, float, ciKlass*, bool, bool) (1 samples, 0.03%)</title><rect x="38.4" y="243.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="41.4" y="254.0"></text>
</g>
<g>
<title>InlineTree::ok_to_inline(ciMethod*, JVMState*, ciCallProfile&amp;, WarmCallInfo*, bool&amp;) (1 samples, 0.03%)</title><rect x="38.4" y="227.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="41.4" y="238.0"></text>
</g>
<g>
<title>ciMethod::get_flow_analysis() (1 samples, 0.03%)</title><rect x="38.4" y="211.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="41.4" y="222.0"></text>
</g>
<g>
<title>ciTypeFlow::do_flow() (1 samples, 0.03%)</title><rect x="38.4" y="195.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="41.4" y="206.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_types() (1 samples, 0.03%)</title><rect x="38.4" y="179.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="41.4" y="190.0"></text>
</g>
<g>
<title>ciTypeFlow::df_flow_types(ciTypeFlow::Block*, bool, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (1 samples, 0.03%)</title><rect x="38.4" y="163.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="41.4" y="174.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_block(ciTypeFlow::Block*, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (1 samples, 0.03%)</title><rect x="38.4" y="147.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="41.4" y="158.0"></text>
</g>
<g>
<title>ciTypeFlow::StateVector::apply_one_bytecode(ciBytecodeStream*) (1 samples, 0.03%)</title><rect x="38.4" y="131.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="41.4" y="142.0"></text>
</g>
<g>
<title>ciTypeFlow::StateVector::do_getstatic(ciBytecodeStream*) (1 samples, 0.03%)</title><rect x="38.4" y="115.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="41.4" y="126.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_field(bool&amp;) (1 samples, 0.03%)</title><rect x="38.4" y="99.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="41.4" y="110.0"></text>
</g>
<g>
<title>ciEnv::get_field_by_index(ciInstanceKlass*, int) (1 samples, 0.03%)</title><rect x="38.4" y="83.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="41.4" y="94.0"></text>
</g>
<g>
<title>ciField::ciField(ciInstanceKlass*, int) (1 samples, 0.03%)</title><rect x="38.4" y="67.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="41.4" y="78.0"></text>
</g>
<g>
<title>ciEnv::get_klass_by_index_impl(constantPoolHandle const&amp;, int, bool&amp;, ciInstanceKlass*) (1 samples, 0.03%)</title><rect x="38.4" y="51.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="41.4" y="62.0"></text>
</g>
<g>
<title>ciInstanceKlass::protection_domain() (1 samples, 0.03%)</title><rect x="38.4" y="35.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="41.4" y="46.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_method(bool&amp;, ciSignature**) (1 samples, 0.03%)</title><rect x="38.7" y="531.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="41.7" y="542.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index(constantPoolHandle const&amp;, int, Bytecodes::Code, ciInstanceKlass*) (1 samples, 0.03%)</title><rect x="38.7" y="515.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="41.7" y="526.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index_impl(constantPoolHandle const&amp;, int, Bytecodes::Code, ciInstanceKlass*) (1 samples, 0.03%)</title><rect x="38.7" y="499.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="41.7" y="510.0"></text>
</g>
<g>
<title>ciEnv::lookup_method(ciInstanceKlass*, ciKlass*, Symbol*, Symbol*, Bytecodes::Code, constantTag) (1 samples, 0.03%)</title><rect x="38.7" y="483.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="41.7" y="494.0"></text>
</g>
<g>
<title>LinkResolver::resolve_static_call_or_null(LinkInfo const&amp;) (1 samples, 0.03%)</title><rect x="38.7" y="467.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="41.7" y="478.0"></text>
</g>
<g>
<title>LinkResolver::resolve_method(LinkInfo const&amp;, Bytecodes::Code, Thread*) (1 samples, 0.03%)</title><rect x="38.7" y="451.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="41.7" y="462.0"></text>
</g>
<g>
<title>LinkResolver::lookup_method_in_klasses(LinkInfo const&amp;, bool, bool) (1 samples, 0.03%)</title><rect x="38.7" y="435.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="41.7" y="446.0"></text>
</g>
<g>
<title>InstanceKlass::uncached_lookup_method(Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::PrivateLookupMode) const (1 samples, 0.03%)</title><rect x="38.7" y="419.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="41.7" y="430.0"></text>
</g>
<g>
<title>InstanceKlass::find_method_index(Array&lt;Method*&gt; const*, Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::StaticLookupMode, Klass::PrivateLookupMode) [clone .constprop.267] (1 samples, 0.03%)</title><rect x="38.7" y="403.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="41.7" y="414.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (1 samples, 0.03%)</title><rect x="39.1" y="627.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="42.1" y="638.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.03%)</title><rect x="39.1" y="611.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="42.1" y="622.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.03%)</title><rect x="39.1" y="595.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="42.1" y="606.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.03%)</title><rect x="39.1" y="579.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="42.1" y="590.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.03%)</title><rect x="39.1" y="563.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="42.1" y="574.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.03%)</title><rect x="39.1" y="547.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="42.1" y="558.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.03%)</title><rect x="39.1" y="531.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="42.1" y="542.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.03%)</title><rect x="39.1" y="515.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="42.1" y="526.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.03%)</title><rect x="39.1" y="499.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="42.1" y="510.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.03%)</title><rect x="39.1" y="483.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="42.1" y="494.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.03%)</title><rect x="39.1" y="467.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="42.1" y="478.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.03%)</title><rect x="39.1" y="451.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="42.1" y="462.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.03%)</title><rect x="39.1" y="435.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="42.1" y="446.0"></text>
</g>
<g>
<title>Compile::call_generator(ciMethod*, int, bool, JVMState*, bool, float, ciKlass*, bool, bool) (1 samples, 0.03%)</title><rect x="39.1" y="419.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="42.1" y="430.0"></text>
</g>
<g>
<title>InlineTree::ok_to_inline(ciMethod*, JVMState*, ciCallProfile&amp;, WarmCallInfo*, bool&amp;) (1 samples, 0.03%)</title><rect x="39.1" y="403.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="42.1" y="414.0"></text>
</g>
<g>
<title>ciMethod::is_compiled_lambda_form() const (1 samples, 0.03%)</title><rect x="39.1" y="387.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="42.1" y="398.0"></text>
</g>
<g>
<title>PhaseRemoveUseless::PhaseRemoveUseless(PhaseGVN*, Unique_Node_List*, Phase::PhaseNumber) (1 samples, 0.03%)</title><rect x="39.5" y="835.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="42.5" y="846.0"></text>
</g>
<g>
<title>Compile::identify_useful_nodes(Unique_Node_List&amp;) (1 samples, 0.03%)</title><rect x="39.5" y="819.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="42.5" y="830.0"></text>
</g>
<g>
<title>TypeFunc::make(ciMethod*) (1 samples, 0.03%)</title><rect x="39.9" y="835.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="42.9" y="846.0"></text>
</g>
<g>
<title>TypeTuple::make_domain(ciInstanceKlass*, ciSignature*) (1 samples, 0.03%)</title><rect x="39.9" y="819.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="42.9" y="830.0"></text>
</g>
<g>
<title>TypeOopPtr::make_from_klass_common(ciKlass*, bool, bool) (1 samples, 0.03%)</title><rect x="39.9" y="803.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="42.9" y="814.0"></text>
</g>
<g>
<title>ciInstanceKlass::unique_concrete_subklass() (1 samples, 0.03%)</title><rect x="39.9" y="787.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="42.9" y="798.0"></text>
</g>
<g>
<title>ciObjectFactory::get_metadata(Metadata*) (1 samples, 0.03%)</title><rect x="39.9" y="771.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="42.9" y="782.0"></text>
</g>
<g>
<title>ciObjectFactory::create_new_metadata(Metadata*) (1 samples, 0.03%)</title><rect x="39.9" y="755.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="42.9" y="766.0"></text>
</g>
<g>
<title>[GC Thread#0 tid=4246] (2 samples, 0.06%)</title><rect x="40.2" y="979.0" width="0.8" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="43.2" y="990.0"></text>
</g>
<g>
<title>clock_gettime (1 samples, 0.03%)</title><rect x="40.2" y="963.0" width="0.4" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="43.2" y="974.0"></text>
</g>
<g>
<title>clock_gettime (1 samples, 0.03%)</title><rect x="40.2" y="947.0" width="0.4" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="43.2" y="958.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.03%)</title><rect x="40.2" y="931.0" width="0.4" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="43.2" y="942.0"></text>
</g>
<g>
<title>start_thread (1 samples, 0.03%)</title><rect x="40.6" y="963.0" width="0.4" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="43.6" y="974.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (1 samples, 0.03%)</title><rect x="40.6" y="947.0" width="0.4" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="43.6" y="958.0"></text>
</g>
<g>
<title>Thread::call_run() (1 samples, 0.03%)</title><rect x="40.6" y="931.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="43.6" y="942.0"></text>
</g>
<g>
<title>GangWorker::loop() (1 samples, 0.03%)</title><rect x="40.6" y="915.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="43.6" y="926.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (1 samples, 0.03%)</title><rect x="40.6" y="899.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="43.6" y="910.0"></text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (1 samples, 0.03%)</title><rect x="40.6" y="883.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="43.6" y="894.0"></text>
</g>
<g>
<title>SpinPause (1 samples, 0.03%)</title><rect x="40.6" y="867.0" width="0.4" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="43.6" y="878.0"></text>
</g>
<g>
<title>[GC Thread#1 tid=4355] (2 samples, 0.06%)</title><rect x="41.0" y="979.0" width="0.8" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="44.0" y="990.0"></text>
</g>
<g>
<title>start_thread (2 samples, 0.06%)</title><rect x="41.0" y="963.0" width="0.8" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="44.0" y="974.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (2 samples, 0.06%)</title><rect x="41.0" y="947.0" width="0.8" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="44.0" y="958.0"></text>
</g>
<g>
<title>Thread::call_run() (2 samples, 0.06%)</title><rect x="41.0" y="931.0" width="0.8" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="44.0" y="942.0"></text>
</g>
<g>
<title>GangWorker::loop() (2 samples, 0.06%)</title><rect x="41.0" y="915.0" width="0.8" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="44.0" y="926.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (2 samples, 0.06%)</title><rect x="41.0" y="899.0" width="0.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="44.0" y="910.0"></text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (2 samples, 0.06%)</title><rect x="41.0" y="883.0" width="0.8" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="44.0" y="894.0"></text>
</g>
<g>
<title>SpinPause (2 samples, 0.06%)</title><rect x="41.0" y="867.0" width="0.8" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="44.0" y="878.0"></text>
</g>
<g>
<title>[GC Thread#2 tid=4356] (3 samples, 0.10%)</title><rect x="41.8" y="979.0" width="1.1" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="44.8" y="990.0"></text>
</g>
<g>
<title>start_thread (3 samples, 0.10%)</title><rect x="41.8" y="963.0" width="1.1" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="44.8" y="974.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (3 samples, 0.10%)</title><rect x="41.8" y="947.0" width="1.1" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="44.8" y="958.0"></text>
</g>
<g>
<title>Thread::call_run() (3 samples, 0.10%)</title><rect x="41.8" y="931.0" width="1.1" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="44.8" y="942.0"></text>
</g>
<g>
<title>GangWorker::loop() (3 samples, 0.10%)</title><rect x="41.8" y="915.0" width="1.1" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="44.8" y="926.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (3 samples, 0.10%)</title><rect x="41.8" y="899.0" width="1.1" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="44.8" y="910.0"></text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (2 samples, 0.06%)</title><rect x="41.8" y="883.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="44.8" y="894.0"></text>
</g>
<g>
<title>SpinPause (2 samples, 0.06%)</title><rect x="41.8" y="867.0" width="0.7" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="44.8" y="878.0"></text>
</g>
<g>
<title>G1RemSet::oops_into_collection_set_do(G1ParScanThreadState*, unsigned int) (1 samples, 0.03%)</title><rect x="42.5" y="883.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="45.5" y="894.0"></text>
</g>
<g>
<title>G1RemSet::update_rem_set(G1ParScanThreadState*, unsigned int) (1 samples, 0.03%)</title><rect x="42.5" y="867.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="45.5" y="878.0"></text>
</g>
<g>
<title>G1CollectedHeap::iterate_dirty_card_closure(CardTableEntryClosure*, unsigned int) (1 samples, 0.03%)</title><rect x="42.5" y="851.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="45.5" y="862.0"></text>
</g>
<g>
<title>DirtyCardQueueSet::apply_closure_during_gc(CardTableEntryClosure*, unsigned int) (1 samples, 0.03%)</title><rect x="42.5" y="835.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="45.5" y="846.0"></text>
</g>
<g>
<title>G1RefineCardClosure::do_card_ptr(signed char*, unsigned int) (1 samples, 0.03%)</title><rect x="42.5" y="819.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="45.5" y="830.0"></text>
</g>
<g>
<title>G1RemSet::refine_card_during_gc(signed char*, G1ScanObjsDuringUpdateRSClosure*) [clone .part.124] (1 samples, 0.03%)</title><rect x="42.5" y="803.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="45.5" y="814.0"></text>
</g>
<g>
<title>bool HeapRegion::oops_on_card_seq_iterate_careful&lt;true, G1ScanObjsDuringUpdateRSClosure&gt;(MemRegion, G1ScanObjsDuringUpdateRSClosure*) (1 samples, 0.03%)</title><rect x="42.5" y="787.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="45.5" y="798.0"></text>
</g>
<g>
<title>void G1ScanObjsDuringUpdateRSClosure::do_oop_work&lt;unsigned int&gt;(unsigned int*) (1 samples, 0.03%)</title><rect x="42.5" y="771.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="45.5" y="782.0"></text>
</g>
<g>
<title>[GC Thread#3 tid=4357] (3 samples, 0.10%)</title><rect x="42.9" y="979.0" width="1.1" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="45.9" y="990.0"></text>
</g>
<g>
<title>start_thread (3 samples, 0.10%)</title><rect x="42.9" y="963.0" width="1.1" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="45.9" y="974.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (3 samples, 0.10%)</title><rect x="42.9" y="947.0" width="1.1" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="45.9" y="958.0"></text>
</g>
<g>
<title>Thread::call_run() (3 samples, 0.10%)</title><rect x="42.9" y="931.0" width="1.1" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="45.9" y="942.0"></text>
</g>
<g>
<title>GangWorker::loop() (3 samples, 0.10%)</title><rect x="42.9" y="915.0" width="1.1" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="45.9" y="926.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (3 samples, 0.10%)</title><rect x="42.9" y="899.0" width="1.1" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="45.9" y="910.0"></text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (1 samples, 0.03%)</title><rect x="42.9" y="883.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="45.9" y="894.0"></text>
</g>
<g>
<title>SpinPause (1 samples, 0.03%)</title><rect x="42.9" y="867.0" width="0.4" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="45.9" y="878.0"></text>
</g>
<g>
<title>G1RemSet::oops_into_collection_set_do(G1ParScanThreadState*, unsigned int) (1 samples, 0.03%)</title><rect x="43.3" y="883.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="46.3" y="894.0"></text>
</g>
<g>
<title>G1RemSet::update_rem_set(G1ParScanThreadState*, unsigned int) (1 samples, 0.03%)</title><rect x="43.3" y="867.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="46.3" y="878.0"></text>
</g>
<g>
<title>G1CollectedHeap::iterate_dirty_card_closure(CardTableEntryClosure*, unsigned int) (1 samples, 0.03%)</title><rect x="43.3" y="851.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="46.3" y="862.0"></text>
</g>
<g>
<title>DirtyCardQueueSet::apply_closure_during_gc(CardTableEntryClosure*, unsigned int) (1 samples, 0.03%)</title><rect x="43.3" y="835.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="46.3" y="846.0"></text>
</g>
<g>
<title>G1RefineCardClosure::do_card_ptr(signed char*, unsigned int) (1 samples, 0.03%)</title><rect x="43.3" y="819.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="46.3" y="830.0"></text>
</g>
<g>
<title>G1RemSet::refine_card_during_gc(signed char*, G1ScanObjsDuringUpdateRSClosure*) [clone .part.124] (1 samples, 0.03%)</title><rect x="43.3" y="803.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="46.3" y="814.0"></text>
</g>
<g>
<title>bool HeapRegion::oops_on_card_seq_iterate_careful&lt;true, G1ScanObjsDuringUpdateRSClosure&gt;(MemRegion, G1ScanObjsDuringUpdateRSClosure*) (1 samples, 0.03%)</title><rect x="43.3" y="787.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="46.3" y="798.0"></text>
</g>
<g>
<title>G1RootProcessor::evacuate_roots(G1ParScanThreadState*, unsigned int) (1 samples, 0.03%)</title><rect x="43.6" y="883.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="46.6" y="894.0"></text>
</g>
<g>
<title>StringTable::possibly_parallel_oops_do(OopStorage::ParState&lt;false, false&gt;*, OopClosure*) (1 samples, 0.03%)</title><rect x="43.6" y="867.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="46.6" y="878.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue_partially() (1 samples, 0.03%)</title><rect x="43.6" y="851.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="46.6" y="862.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (1 samples, 0.03%)</title><rect x="43.6" y="835.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="46.6" y="846.0"></text>
</g>
<g>
<title>[GC Thread#4 tid=4358] (3 samples, 0.10%)</title><rect x="44.0" y="979.0" width="1.2" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="47.0" y="990.0"></text>
</g>
<g>
<title>start_thread (3 samples, 0.10%)</title><rect x="44.0" y="963.0" width="1.2" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="47.0" y="974.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (3 samples, 0.10%)</title><rect x="44.0" y="947.0" width="1.2" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="47.0" y="958.0"></text>
</g>
<g>
<title>Thread::call_run() (3 samples, 0.10%)</title><rect x="44.0" y="931.0" width="1.2" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="47.0" y="942.0"></text>
</g>
<g>
<title>GangWorker::loop() (3 samples, 0.10%)</title><rect x="44.0" y="915.0" width="1.2" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="47.0" y="926.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (3 samples, 0.10%)</title><rect x="44.0" y="899.0" width="1.2" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="47.0" y="910.0"></text>
</g>
<g>
<title>G1RemSet::oops_into_collection_set_do(G1ParScanThreadState*, unsigned int) (1 samples, 0.03%)</title><rect x="44.0" y="883.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="47.0" y="894.0"></text>
</g>
<g>
<title>G1RemSet::update_rem_set(G1ParScanThreadState*, unsigned int) (1 samples, 0.03%)</title><rect x="44.0" y="867.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="47.0" y="878.0"></text>
</g>
<g>
<title>G1CollectedHeap::iterate_dirty_card_closure(CardTableEntryClosure*, unsigned int) (1 samples, 0.03%)</title><rect x="44.0" y="851.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="47.0" y="862.0"></text>
</g>
<g>
<title>DirtyCardQueueSet::apply_closure_during_gc(CardTableEntryClosure*, unsigned int) (1 samples, 0.03%)</title><rect x="44.0" y="835.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="47.0" y="846.0"></text>
</g>
<g>
<title>G1RefineCardClosure::do_card_ptr(signed char*, unsigned int) (1 samples, 0.03%)</title><rect x="44.0" y="819.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="47.0" y="830.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue_partially() (1 samples, 0.03%)</title><rect x="44.0" y="803.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="47.0" y="814.0"></text>
</g>
<g>
<title>G1RootProcessor::evacuate_roots(G1ParScanThreadState*, unsigned int) (2 samples, 0.06%)</title><rect x="44.4" y="883.0" width="0.8" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="47.4" y="894.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue_partially() (1 samples, 0.03%)</title><rect x="44.4" y="867.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="47.4" y="878.0"></text>
</g>
<g>
<title>StringTable::possibly_parallel_oops_do(OopStorage::ParState&lt;false, false&gt;*, OopClosure*) (1 samples, 0.03%)</title><rect x="44.8" y="867.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="47.8" y="878.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue_partially() (1 samples, 0.03%)</title><rect x="44.8" y="851.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="47.8" y="862.0"></text>
</g>
<g>
<title>[GC Thread#5 tid=4359] (3 samples, 0.10%)</title><rect x="45.2" y="979.0" width="1.1" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="48.2" y="990.0"></text>
</g>
<g>
<title>start_thread (3 samples, 0.10%)</title><rect x="45.2" y="963.0" width="1.1" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="48.2" y="974.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (3 samples, 0.10%)</title><rect x="45.2" y="947.0" width="1.1" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="48.2" y="958.0"></text>
</g>
<g>
<title>Thread::call_run() (3 samples, 0.10%)</title><rect x="45.2" y="931.0" width="1.1" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="48.2" y="942.0"></text>
</g>
<g>
<title>GangWorker::loop() (3 samples, 0.10%)</title><rect x="45.2" y="915.0" width="1.1" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="48.2" y="926.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (3 samples, 0.10%)</title><rect x="45.2" y="899.0" width="1.1" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="48.2" y="910.0"></text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (1 samples, 0.03%)</title><rect x="45.2" y="883.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="48.2" y="894.0"></text>
</g>
<g>
<title>SpinPause (1 samples, 0.03%)</title><rect x="45.2" y="867.0" width="0.3" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="48.2" y="878.0"></text>
</g>
<g>
<title>G1RootProcessor::evacuate_roots(G1ParScanThreadState*, unsigned int) (2 samples, 0.06%)</title><rect x="45.5" y="883.0" width="0.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="48.5" y="894.0"></text>
</g>
<g>
<title>G1RootProcessor::process_java_roots(G1RootClosures*, G1GCPhaseTimes*, unsigned int) (2 samples, 0.06%)</title><rect x="45.5" y="867.0" width="0.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="48.5" y="878.0"></text>
</g>
<g>
<title>ClassLoaderDataGraph::roots_cld_do(CLDClosure*, CLDClosure*) (2 samples, 0.06%)</title><rect x="45.5" y="851.0" width="0.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="48.5" y="862.0"></text>
</g>
<g>
<title>G1CLDScanClosure::do_cld(ClassLoaderData*) (2 samples, 0.06%)</title><rect x="45.5" y="835.0" width="0.8" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="48.5" y="846.0"></text>
</g>
<g>
<title>ClassLoaderData::oops_do(OopClosure*, bool, bool) (2 samples, 0.06%)</title><rect x="45.5" y="819.0" width="0.8" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="48.5" y="830.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue_partially() (2 samples, 0.06%)</title><rect x="45.5" y="803.0" width="0.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="48.5" y="814.0"></text>
</g>
<g>
<title>[GC Thread#6 tid=4360] (4 samples, 0.13%)</title><rect x="46.3" y="979.0" width="1.5" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="49.3" y="990.0"></text>
</g>
<g>
<title>start_thread (4 samples, 0.13%)</title><rect x="46.3" y="963.0" width="1.5" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="49.3" y="974.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (4 samples, 0.13%)</title><rect x="46.3" y="947.0" width="1.5" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="49.3" y="958.0"></text>
</g>
<g>
<title>Thread::call_run() (4 samples, 0.13%)</title><rect x="46.3" y="931.0" width="1.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="49.3" y="942.0"></text>
</g>
<g>
<title>GangWorker::loop() (4 samples, 0.13%)</title><rect x="46.3" y="915.0" width="1.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="49.3" y="926.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (4 samples, 0.13%)</title><rect x="46.3" y="899.0" width="1.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="49.3" y="910.0"></text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (2 samples, 0.06%)</title><rect x="46.3" y="883.0" width="0.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="49.3" y="894.0"></text>
</g>
<g>
<title>SpinPause (2 samples, 0.06%)</title><rect x="46.3" y="867.0" width="0.8" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="49.3" y="878.0"></text>
</g>
<g>
<title>G1RootProcessor::evacuate_roots(G1ParScanThreadState*, unsigned int) (2 samples, 0.06%)</title><rect x="47.1" y="883.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="50.1" y="894.0"></text>
</g>
<g>
<title>StringTable::possibly_parallel_oops_do(OopStorage::ParState&lt;false, false&gt;*, OopClosure*) (2 samples, 0.06%)</title><rect x="47.1" y="867.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="50.1" y="878.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue_partially() (2 samples, 0.06%)</title><rect x="47.1" y="851.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="50.1" y="862.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (1 samples, 0.03%)</title><rect x="47.1" y="835.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="50.1" y="846.0"></text>
</g>
<g>
<title>void OopOopIterateBackwardsDispatch&lt;G1ScanEvacuatedObjClosure&gt;::Table::oop_oop_iterate_backwards&lt;TypeArrayKlass, unsigned int&gt;(G1ScanEvacuatedObjClosure*, oopDesc*, Klass*) (1 samples, 0.03%)</title><rect x="47.4" y="835.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="50.4" y="846.0"></text>
</g>
<g>
<title>[GC Thread#7 tid=4361] (3 samples, 0.10%)</title><rect x="47.8" y="979.0" width="1.1" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="50.8" y="990.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (1 samples, 0.03%)</title><rect x="47.8" y="963.0" width="0.4" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="50.8" y="974.0"></text>
</g>
<g>
<title>start_thread (2 samples, 0.06%)</title><rect x="48.2" y="963.0" width="0.7" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="51.2" y="974.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (2 samples, 0.06%)</title><rect x="48.2" y="947.0" width="0.7" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="51.2" y="958.0"></text>
</g>
<g>
<title>Thread::call_run() (2 samples, 0.06%)</title><rect x="48.2" y="931.0" width="0.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="51.2" y="942.0"></text>
</g>
<g>
<title>GangWorker::loop() (2 samples, 0.06%)</title><rect x="48.2" y="915.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="51.2" y="926.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (2 samples, 0.06%)</title><rect x="48.2" y="899.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="51.2" y="910.0"></text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (2 samples, 0.06%)</title><rect x="48.2" y="883.0" width="0.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="51.2" y="894.0"></text>
</g>
<g>
<title>ParallelTaskTerminator::offer_termination(TerminatorTerminator*) (1 samples, 0.03%)</title><rect x="48.2" y="867.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="51.2" y="878.0"></text>
</g>
<g>
<title>SpinPause (1 samples, 0.03%)</title><rect x="48.6" y="867.0" width="0.3" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="51.6" y="878.0"></text>
</g>
<g>
<title>[NIO Selector #0 tid=4263] (151 samples, 4.84%)</title><rect x="48.9" y="979.0" width="57.1" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="51.9" y="990.0">[NIO S..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (151 samples, 4.84%)</title><rect x="48.9" y="963.0" width="57.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="51.9" y="974.0">one/ni..</text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (3 samples, 0.10%)</title><rect x="49.7" y="947.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="52.7" y="958.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (3 samples, 0.10%)</title><rect x="49.7" y="931.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="52.7" y="942.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.findNext (3 samples, 0.10%)</title><rect x="49.7" y="915.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="52.7" y="926.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (36 samples, 1.15%)</title><rect x="50.8" y="947.0" width="13.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="53.8" y="958.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (36 samples, 1.15%)</title><rect x="50.8" y="931.0" width="13.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="53.8" y="942.0"></text>
</g>
<g>
<title>clock_gettime (4 samples, 0.13%)</title><rect x="50.8" y="915.0" width="1.5" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="53.8" y="926.0"></text>
</g>
<g>
<title>clock_gettime (1 samples, 0.03%)</title><rect x="52.0" y="899.0" width="0.3" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="55.0" y="910.0"></text>
</g>
<g>
<title>epoll_wait (32 samples, 1.03%)</title><rect x="52.3" y="915.0" width="12.1" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="55.3" y="926.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (24 samples, 0.77%)</title><rect x="55.4" y="899.0" width="9.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="58.4" y="910.0"></text>
</g>
<g>
<title>do_syscall_64 (24 samples, 0.77%)</title><rect x="55.4" y="883.0" width="9.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="58.4" y="894.0"></text>
</g>
<g>
<title>__x64_sys_epoll_wait (21 samples, 0.67%)</title><rect x="56.5" y="867.0" width="7.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="59.5" y="878.0"></text>
</g>
<g>
<title>do_epoll_wait (21 samples, 0.67%)</title><rect x="56.5" y="851.0" width="7.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="59.5" y="862.0"></text>
</g>
<g>
<title>__fdget (1 samples, 0.03%)</title><rect x="56.5" y="835.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="59.5" y="846.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.03%)</title><rect x="56.5" y="819.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="59.5" y="830.0"></text>
</g>
<g>
<title>__fget (1 samples, 0.03%)</title><rect x="56.5" y="803.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="59.5" y="814.0"></text>
</g>
<g>
<title>ep_poll (19 samples, 0.61%)</title><rect x="56.9" y="835.0" width="7.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="59.9" y="846.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.0 (10 samples, 0.32%)</title><rect x="56.9" y="819.0" width="3.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="59.9" y="830.0"></text>
</g>
<g>
<title>_cond_resched (1 samples, 0.03%)</title><rect x="57.6" y="803.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="60.6" y="814.0"></text>
</g>
<g>
<title>ep_send_events_proc (5 samples, 0.16%)</title><rect x="58.0" y="803.0" width="1.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="61.0" y="814.0"></text>
</g>
<g>
<title>ep_item_poll.isra.0 (5 samples, 0.16%)</title><rect x="58.0" y="787.0" width="1.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="61.0" y="798.0"></text>
</g>
<g>
<title>sock_poll (2 samples, 0.06%)</title><rect x="58.8" y="771.0" width="0.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="61.8" y="782.0"></text>
</g>
<g>
<title>tcp_poll (1 samples, 0.03%)</title><rect x="59.2" y="755.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="62.2" y="766.0"></text>
</g>
<g>
<title>tcp_poll (1 samples, 0.03%)</title><rect x="59.5" y="771.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="62.5" y="782.0"></text>
</g>
<g>
<title>mutex_lock (2 samples, 0.06%)</title><rect x="59.9" y="803.0" width="0.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="62.9" y="814.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (9 samples, 0.29%)</title><rect x="60.7" y="819.0" width="3.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="63.7" y="830.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (9 samples, 0.29%)</title><rect x="60.7" y="803.0" width="3.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="63.7" y="814.0"></text>
</g>
<g>
<title>schedule (9 samples, 0.29%)</title><rect x="60.7" y="787.0" width="3.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="63.7" y="798.0"></text>
</g>
<g>
<title>__schedule (9 samples, 0.29%)</title><rect x="60.7" y="771.0" width="3.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="63.7" y="782.0"></text>
</g>
<g>
<title>finish_task_switch (8 samples, 0.26%)</title><rect x="61.0" y="755.0" width="3.1" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="64.0" y="766.0"></text>
</g>
<g>
<title>fput_many (1 samples, 0.03%)</title><rect x="64.1" y="835.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="67.1" y="846.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (109 samples, 3.49%)</title><rect x="64.4" y="947.0" width="41.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="67.4" y="958.0">one..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (109 samples, 3.49%)</title><rect x="64.4" y="931.0" width="41.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="67.4" y="942.0">one..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (54 samples, 1.73%)</title><rect x="64.4" y="915.0" width="20.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="67.4" y="926.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (44 samples, 1.41%)</title><rect x="64.4" y="899.0" width="16.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="67.4" y="910.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (44 samples, 1.41%)</title><rect x="64.4" y="883.0" width="16.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="67.4" y="894.0"></text>
</g>
<g>
<title>RequestHandler1_put.handleRequest (41 samples, 1.31%)</title><rect x="64.4" y="867.0" width="15.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="67.4" y="878.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (5 samples, 0.16%)</title><rect x="64.4" y="851.0" width="1.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="67.4" y="862.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (5 samples, 0.16%)</title><rect x="64.4" y="835.0" width="1.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="67.4" y="846.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.03%)</title><rect x="64.8" y="819.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="67.8" y="830.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.03%)</title><rect x="64.8" y="803.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="67.8" y="814.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (1 samples, 0.03%)</title><rect x="64.8" y="787.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="67.8" y="798.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (3 samples, 0.10%)</title><rect x="65.2" y="819.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="68.2" y="830.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivlev/ThreadController.put (36 samples, 1.15%)</title><rect x="66.3" y="851.0" width="13.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="69.3" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (34 samples, 1.09%)</title><rect x="66.3" y="835.0" width="12.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="69.3" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (34 samples, 1.09%)</title><rect x="66.3" y="819.0" width="12.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="69.3" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.enqueue (1 samples, 0.03%)</title><rect x="66.3" y="803.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="69.3" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (1 samples, 0.03%)</title><rect x="66.3" y="787.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="69.3" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (1 samples, 0.03%)</title><rect x="66.3" y="771.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="69.3" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.transferForSignal (1 samples, 0.03%)</title><rect x="66.3" y="755.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="69.3" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (1 samples, 0.03%)</title><rect x="66.7" y="803.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="69.7" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (1 samples, 0.03%)</title><rect x="66.7" y="787.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="69.7" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (1 samples, 0.03%)</title><rect x="66.7" y="771.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="69.7" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (32 samples, 1.03%)</title><rect x="67.1" y="803.0" width="12.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="70.1" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (32 samples, 1.03%)</title><rect x="67.1" y="787.0" width="12.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="70.1" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (32 samples, 1.03%)</title><rect x="67.1" y="771.0" width="12.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="70.1" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (32 samples, 1.03%)</title><rect x="67.1" y="755.0" width="12.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="70.1" y="766.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (32 samples, 1.03%)</title><rect x="67.1" y="739.0" width="12.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="70.1" y="750.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.235] (1 samples, 0.03%)</title><rect x="67.5" y="723.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="70.5" y="734.0"></text>
</g>
<g>
<title>Unsafe_Unpark (8 samples, 0.26%)</title><rect x="67.8" y="723.0" width="3.1" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="70.8" y="734.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/ld-2.31.so (1 samples, 0.03%)</title><rect x="67.8" y="707.0" width="0.4" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="70.8" y="718.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (1 samples, 0.03%)</title><rect x="68.2" y="707.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="71.2" y="718.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (1 samples, 0.03%)</title><rect x="68.6" y="707.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="71.6" y="718.0"></text>
</g>
<g>
<title>ThreadsListHandle::~ThreadsListHandle() (1 samples, 0.03%)</title><rect x="69.0" y="707.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="72.0" y="718.0"></text>
</g>
<g>
<title>java_lang_Thread::thread(oopDesc*) (1 samples, 0.03%)</title><rect x="69.4" y="707.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="72.4" y="718.0"></text>
</g>
<g>
<title>pthread_mutex_lock (2 samples, 0.06%)</title><rect x="69.7" y="707.0" width="0.8" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="72.7" y="718.0"></text>
</g>
<g>
<title>pthread_mutex_lock@plt (1 samples, 0.03%)</title><rect x="70.5" y="707.0" width="0.4" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="73.5" y="718.0"></text>
</g>
<g>
<title>__pthread_cond_signal (21 samples, 0.67%)</title><rect x="70.9" y="723.0" width="7.9" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="73.9" y="734.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (18 samples, 0.58%)</title><rect x="72.0" y="707.0" width="6.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="75.0" y="718.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.03%)</title><rect x="72.0" y="691.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="75.0" y="702.0"></text>
</g>
<g>
<title>do_syscall_64 (17 samples, 0.54%)</title><rect x="72.4" y="691.0" width="6.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="75.4" y="702.0"></text>
</g>
<g>
<title>__x64_sys_futex (16 samples, 0.51%)</title><rect x="72.8" y="675.0" width="6.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="75.8" y="686.0"></text>
</g>
<g>
<title>do_futex (16 samples, 0.51%)</title><rect x="72.8" y="659.0" width="6.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="75.8" y="670.0"></text>
</g>
<g>
<title>futex_wake (14 samples, 0.45%)</title><rect x="72.8" y="643.0" width="5.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="75.8" y="654.0"></text>
</g>
<g>
<title>mark_wake_futex (1 samples, 0.03%)</title><rect x="72.8" y="627.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="75.8" y="638.0"></text>
</g>
<g>
<title>__unqueue_futex (1 samples, 0.03%)</title><rect x="72.8" y="611.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="75.8" y="622.0"></text>
</g>
<g>
<title>wake_up_q (13 samples, 0.42%)</title><rect x="73.1" y="627.0" width="5.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="76.1" y="638.0"></text>
</g>
<g>
<title>try_to_wake_up (13 samples, 0.42%)</title><rect x="73.1" y="611.0" width="5.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="76.1" y="622.0"></text>
</g>
<g>
<title>__lock_text_start (13 samples, 0.42%)</title><rect x="73.1" y="595.0" width="5.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="76.1" y="606.0"></text>
</g>
<g>
<title>hash_futex (2 samples, 0.06%)</title><rect x="78.1" y="643.0" width="0.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="81.1" y="654.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.03%)</title><rect x="78.8" y="723.0" width="0.4" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="81.8" y="734.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (2 samples, 0.06%)</title><rect x="79.2" y="835.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="82.2" y="846.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (2 samples, 0.06%)</title><rect x="79.9" y="867.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="82.9" y="878.0"></text>
</g>
<g>
<title>java/util/HashMap.get (2 samples, 0.06%)</title><rect x="79.9" y="851.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="82.9" y="862.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (2 samples, 0.06%)</title><rect x="79.9" y="835.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="82.9" y="846.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (1 samples, 0.03%)</title><rect x="80.7" y="867.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="83.7" y="878.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.03%)</title><rect x="80.7" y="851.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="83.7" y="862.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.03%)</title><rect x="80.7" y="835.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="83.7" y="846.0"></text>
</g>
<g>
<title>RequestHandler1_put.handleRequest (1 samples, 0.03%)</title><rect x="80.7" y="819.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="83.7" y="830.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (1 samples, 0.03%)</title><rect x="81.1" y="899.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="84.1" y="910.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.03%)</title><rect x="81.1" y="883.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="84.1" y="894.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.03%)</title><rect x="81.1" y="867.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="84.1" y="878.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (1 samples, 0.03%)</title><rect x="81.5" y="899.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="84.5" y="910.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (1 samples, 0.03%)</title><rect x="81.5" y="883.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="84.5" y="894.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (1 samples, 0.03%)</title><rect x="81.5" y="867.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="84.5" y="878.0"></text>
</g>
<g>
<title>java/lang/String.charAt (1 samples, 0.03%)</title><rect x="81.5" y="851.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="84.5" y="862.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (4 samples, 0.13%)</title><rect x="81.8" y="899.0" width="1.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="84.8" y="910.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (2 samples, 0.06%)</title><rect x="82.2" y="883.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="85.2" y="894.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (2 samples, 0.06%)</title><rect x="82.2" y="867.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="85.2" y="878.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.03%)</title><rect x="83.0" y="883.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="86.0" y="894.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.03%)</title><rect x="83.0" y="867.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="86.0" y="878.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (1 samples, 0.03%)</title><rect x="83.0" y="851.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="86.0" y="862.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (4 samples, 0.13%)</title><rect x="83.3" y="899.0" width="1.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="86.3" y="910.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.03%)</title><rect x="84.5" y="883.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="87.5" y="894.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (55 samples, 1.76%)</title><rect x="84.9" y="915.0" width="20.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="87.9" y="926.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (55 samples, 1.76%)</title><rect x="84.9" y="899.0" width="20.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="87.9" y="910.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (7 samples, 0.22%)</title><rect x="87.1" y="883.0" width="2.7" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="90.1" y="894.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (1 samples, 0.03%)</title><rect x="87.1" y="867.0" width="0.4" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="90.1" y="878.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.03%)</title><rect x="87.5" y="867.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="90.5" y="878.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (1 samples, 0.03%)</title><rect x="87.9" y="867.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="90.9" y="878.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (4 samples, 0.13%)</title><rect x="88.3" y="867.0" width="1.5" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="91.3" y="878.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (1 samples, 0.03%)</title><rect x="88.3" y="851.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="91.3" y="862.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.03%)</title><rect x="88.6" y="851.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="91.6" y="862.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (2 samples, 0.06%)</title><rect x="89.0" y="851.0" width="0.8" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="92.0" y="862.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (1 samples, 0.03%)</title><rect x="89.8" y="883.0" width="0.4" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="92.8" y="894.0"></text>
</g>
<g>
<title>recv (41 samples, 1.31%)</title><rect x="90.2" y="883.0" width="15.5" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="93.2" y="894.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (31 samples, 0.99%)</title><rect x="93.9" y="867.0" width="11.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="96.9" y="878.0"></text>
</g>
<g>
<title>__x64_sys_recvfrom (1 samples, 0.03%)</title><rect x="93.9" y="851.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="96.9" y="862.0"></text>
</g>
<g>
<title>do_syscall_64 (30 samples, 0.96%)</title><rect x="94.3" y="851.0" width="11.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="97.3" y="862.0"></text>
</g>
<g>
<title>__x64_sys_recvfrom (26 samples, 0.83%)</title><rect x="95.8" y="835.0" width="9.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="98.8" y="846.0"></text>
</g>
<g>
<title>__sys_recvfrom (25 samples, 0.80%)</title><rect x="95.8" y="819.0" width="9.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="98.8" y="830.0"></text>
</g>
<g>
<title>sock_recvmsg (22 samples, 0.70%)</title><rect x="96.2" y="803.0" width="8.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="99.2" y="814.0"></text>
</g>
<g>
<title>apparmor_socket_recvmsg (1 samples, 0.03%)</title><rect x="96.2" y="787.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="99.2" y="798.0"></text>
</g>
<g>
<title>inet6_recvmsg (18 samples, 0.58%)</title><rect x="96.6" y="787.0" width="6.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="99.6" y="798.0"></text>
</g>
<g>
<title>tcp_recvmsg (18 samples, 0.58%)</title><rect x="96.6" y="771.0" width="6.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="99.6" y="782.0"></text>
</g>
<g>
<title>__kfree_skb (3 samples, 0.10%)</title><rect x="97.3" y="755.0" width="1.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="100.3" y="766.0"></text>
</g>
<g>
<title>skb_release_all (3 samples, 0.10%)</title><rect x="97.3" y="739.0" width="1.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="100.3" y="750.0"></text>
</g>
<g>
<title>skb_release_head_state (2 samples, 0.06%)</title><rect x="97.3" y="723.0" width="0.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="100.3" y="734.0"></text>
</g>
<g>
<title>dst_release (2 samples, 0.06%)</title><rect x="97.3" y="707.0" width="0.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="100.3" y="718.0"></text>
</g>
<g>
<title>sock_rfree (1 samples, 0.03%)</title><rect x="98.1" y="723.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="101.1" y="734.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (2 samples, 0.06%)</title><rect x="98.5" y="755.0" width="0.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="101.5" y="766.0"></text>
</g>
<g>
<title>lock_sock_nested (1 samples, 0.03%)</title><rect x="99.2" y="755.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="102.2" y="766.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (1 samples, 0.03%)</title><rect x="99.2" y="739.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="102.2" y="750.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (9 samples, 0.29%)</title><rect x="99.6" y="755.0" width="3.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="102.6" y="766.0"></text>
</g>
<g>
<title>__skb_datagram_iter (9 samples, 0.29%)</title><rect x="99.6" y="739.0" width="3.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="102.6" y="750.0"></text>
</g>
<g>
<title>simple_copy_to_iter (6 samples, 0.19%)</title><rect x="100.7" y="723.0" width="2.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="103.7" y="734.0"></text>
</g>
<g>
<title>__check_object_size (2 samples, 0.06%)</title><rect x="100.7" y="707.0" width="0.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="103.7" y="718.0"></text>
</g>
<g>
<title>_copy_to_iter (4 samples, 0.13%)</title><rect x="101.5" y="707.0" width="1.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="104.5" y="718.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (3 samples, 0.10%)</title><rect x="101.9" y="691.0" width="1.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="104.9" y="702.0"></text>
</g>
<g>
<title>tcp_rcv_space_adjust (1 samples, 0.03%)</title><rect x="103.0" y="755.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="106.0" y="766.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (1 samples, 0.03%)</title><rect x="103.0" y="739.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="106.0" y="750.0"></text>
</g>
<g>
<title>read_tsc (1 samples, 0.03%)</title><rect x="103.0" y="723.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="106.0" y="734.0"></text>
</g>
<g>
<title>security_socket_recvmsg (3 samples, 0.10%)</title><rect x="103.4" y="787.0" width="1.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="106.4" y="798.0"></text>
</g>
<g>
<title>apparmor_socket_recvmsg (3 samples, 0.10%)</title><rect x="103.4" y="771.0" width="1.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="106.4" y="782.0"></text>
</g>
<g>
<title>aa_sk_perm (3 samples, 0.10%)</title><rect x="103.4" y="755.0" width="1.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="106.4" y="766.0"></text>
</g>
<g>
<title>sockfd_lookup_light (2 samples, 0.06%)</title><rect x="104.5" y="803.0" width="0.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="107.5" y="814.0"></text>
</g>
<g>
<title>__fdget (2 samples, 0.06%)</title><rect x="104.5" y="787.0" width="0.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="107.5" y="798.0"></text>
</g>
<g>
<title>__fget_light (2 samples, 0.06%)</title><rect x="104.5" y="771.0" width="0.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="107.5" y="782.0"></text>
</g>
<g>
<title>__fget (2 samples, 0.06%)</title><rect x="104.5" y="755.0" width="0.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="107.5" y="766.0"></text>
</g>
<g>
<title>import_single_range (1 samples, 0.03%)</title><rect x="105.3" y="819.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="108.3" y="830.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.03%)</title><rect x="105.7" y="947.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="108.7" y="958.0"></text>
</g>
<g>
<title>[NIO Selector #1 tid=4264] (134 samples, 4.29%)</title><rect x="106.0" y="979.0" width="50.7" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="109.0" y="990.0">[NIO ..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (134 samples, 4.29%)</title><rect x="106.0" y="963.0" width="50.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="109.0" y="974.0">one/n..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (40 samples, 1.28%)</title><rect x="106.4" y="947.0" width="15.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="109.4" y="958.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (35 samples, 1.12%)</title><rect x="108.3" y="931.0" width="13.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="111.3" y="942.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSelector_epollWait (1 samples, 0.03%)</title><rect x="109.1" y="915.0" width="0.3" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="112.1" y="926.0"></text>
</g>
<g>
<title>clock_gettime (1 samples, 0.03%)</title><rect x="109.4" y="915.0" width="0.4" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="112.4" y="926.0"></text>
</g>
<g>
<title>epoll_wait (31 samples, 0.99%)</title><rect x="109.8" y="915.0" width="11.7" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="112.8" y="926.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (23 samples, 0.74%)</title><rect x="112.8" y="899.0" width="8.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="115.8" y="910.0"></text>
</g>
<g>
<title>do_syscall_64 (23 samples, 0.74%)</title><rect x="112.8" y="883.0" width="8.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="115.8" y="894.0"></text>
</g>
<g>
<title>__x64_sys_epoll_wait (22 samples, 0.70%)</title><rect x="113.2" y="867.0" width="8.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="116.2" y="878.0"></text>
</g>
<g>
<title>do_epoll_wait (22 samples, 0.70%)</title><rect x="113.2" y="851.0" width="8.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="116.2" y="862.0"></text>
</g>
<g>
<title>__fdget (1 samples, 0.03%)</title><rect x="113.2" y="835.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="116.2" y="846.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.03%)</title><rect x="113.2" y="819.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="116.2" y="830.0"></text>
</g>
<g>
<title>__fget (1 samples, 0.03%)</title><rect x="113.2" y="803.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="116.2" y="814.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.03%)</title><rect x="113.6" y="835.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="116.6" y="846.0"></text>
</g>
<g>
<title>ep_poll (19 samples, 0.61%)</title><rect x="114.0" y="835.0" width="7.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="117.0" y="846.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.0 (9 samples, 0.29%)</title><rect x="114.4" y="819.0" width="3.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="117.4" y="830.0"></text>
</g>
<g>
<title>ep_send_events_proc (7 samples, 0.22%)</title><rect x="115.1" y="803.0" width="2.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="118.1" y="814.0"></text>
</g>
<g>
<title>ep_item_poll.isra.0 (7 samples, 0.22%)</title><rect x="115.1" y="787.0" width="2.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="118.1" y="798.0"></text>
</g>
<g>
<title>sock_poll (6 samples, 0.19%)</title><rect x="115.5" y="771.0" width="2.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="118.5" y="782.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (9 samples, 0.29%)</title><rect x="117.8" y="819.0" width="3.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="120.8" y="830.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (9 samples, 0.29%)</title><rect x="117.8" y="803.0" width="3.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="120.8" y="814.0"></text>
</g>
<g>
<title>schedule (8 samples, 0.26%)</title><rect x="118.1" y="787.0" width="3.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="121.1" y="798.0"></text>
</g>
<g>
<title>__schedule (8 samples, 0.26%)</title><rect x="118.1" y="771.0" width="3.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="121.1" y="782.0"></text>
</g>
<g>
<title>finish_task_switch (8 samples, 0.26%)</title><rect x="118.1" y="755.0" width="3.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="121.1" y="766.0"></text>
</g>
<g>
<title>fput_many (1 samples, 0.03%)</title><rect x="121.2" y="835.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="124.2" y="846.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (92 samples, 2.95%)</title><rect x="121.5" y="947.0" width="34.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="124.5" y="958.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (88 samples, 2.82%)</title><rect x="123.0" y="931.0" width="33.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="126.0" y="942.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (53 samples, 1.70%)</title><rect x="123.0" y="915.0" width="20.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="126.0" y="926.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (39 samples, 1.25%)</title><rect x="123.0" y="899.0" width="14.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="126.0" y="910.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (38 samples, 1.22%)</title><rect x="123.4" y="883.0" width="14.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="126.4" y="894.0"></text>
</g>
<g>
<title>RequestHandler1_put.handleRequest (36 samples, 1.15%)</title><rect x="123.4" y="867.0" width="13.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="126.4" y="878.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (2 samples, 0.06%)</title><rect x="123.4" y="851.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="126.4" y="862.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (2 samples, 0.06%)</title><rect x="123.4" y="835.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="126.4" y="846.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.03%)</title><rect x="123.8" y="819.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="126.8" y="830.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.03%)</title><rect x="123.8" y="803.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="126.8" y="814.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (1 samples, 0.03%)</title><rect x="123.8" y="787.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="126.8" y="798.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivlev/ThreadController.put (34 samples, 1.09%)</title><rect x="124.2" y="851.0" width="12.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="127.2" y="862.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.03%)</title><rect x="124.2" y="835.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="127.2" y="846.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.03%)</title><rect x="124.2" y="819.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="127.2" y="830.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivlev/ThreadController$$Lambda$65/822960827.get$Lambda (1 samples, 0.03%)</title><rect x="124.2" y="803.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="127.2" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (1 samples, 0.03%)</title><rect x="124.2" y="787.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="127.2" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (33 samples, 1.06%)</title><rect x="124.6" y="835.0" width="12.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="127.6" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (33 samples, 1.06%)</title><rect x="124.6" y="819.0" width="12.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="127.6" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.enqueue (4 samples, 0.13%)</title><rect x="125.3" y="803.0" width="1.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="128.3" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (4 samples, 0.13%)</title><rect x="125.3" y="787.0" width="1.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="128.3" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (4 samples, 0.13%)</title><rect x="125.3" y="771.0" width="1.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="128.3" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.transferForSignal (4 samples, 0.13%)</title><rect x="125.3" y="755.0" width="1.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="128.3" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (27 samples, 0.87%)</title><rect x="126.8" y="803.0" width="10.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="129.8" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (27 samples, 0.87%)</title><rect x="126.8" y="787.0" width="10.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="129.8" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (27 samples, 0.87%)</title><rect x="126.8" y="771.0" width="10.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="129.8" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (27 samples, 0.87%)</title><rect x="126.8" y="755.0" width="10.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="129.8" y="766.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (27 samples, 0.87%)</title><rect x="126.8" y="739.0" width="10.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="129.8" y="750.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (1 samples, 0.03%)</title><rect x="126.8" y="723.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="129.8" y="734.0"></text>
</g>
<g>
<title>Unsafe_Unpark (6 samples, 0.19%)</title><rect x="127.2" y="723.0" width="2.3" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="130.2" y="734.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (1 samples, 0.03%)</title><rect x="127.6" y="707.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="130.6" y="718.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock (1 samples, 0.03%)</title><rect x="128.0" y="707.0" width="0.3" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="131.0" y="718.0"></text>
</g>
<g>
<title>java_lang_Thread::thread(oopDesc*) (1 samples, 0.03%)</title><rect x="128.3" y="707.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="131.3" y="718.0"></text>
</g>
<g>
<title>oopDesc::address_field(int) const (2 samples, 0.06%)</title><rect x="128.7" y="707.0" width="0.8" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="131.7" y="718.0"></text>
</g>
<g>
<title>__pthread_cond_signal (20 samples, 0.64%)</title><rect x="129.5" y="723.0" width="7.5" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="132.5" y="734.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (17 samples, 0.54%)</title><rect x="130.6" y="707.0" width="6.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="133.6" y="718.0"></text>
</g>
<g>
<title>do_syscall_64 (17 samples, 0.54%)</title><rect x="130.6" y="691.0" width="6.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="133.6" y="702.0"></text>
</g>
<g>
<title>__x64_sys_futex (14 samples, 0.45%)</title><rect x="131.7" y="675.0" width="5.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="134.7" y="686.0"></text>
</g>
<g>
<title>do_futex (14 samples, 0.45%)</title><rect x="131.7" y="659.0" width="5.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="134.7" y="670.0"></text>
</g>
<g>
<title>_raw_spin_lock (1 samples, 0.03%)</title><rect x="131.7" y="643.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="134.7" y="654.0"></text>
</g>
<g>
<title>futex_wake (13 samples, 0.42%)</title><rect x="132.1" y="643.0" width="4.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="135.1" y="654.0"></text>
</g>
<g>
<title>mark_wake_futex (1 samples, 0.03%)</title><rect x="132.1" y="627.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="135.1" y="638.0"></text>
</g>
<g>
<title>wake_up_q (12 samples, 0.38%)</title><rect x="132.5" y="627.0" width="4.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="135.5" y="638.0"></text>
</g>
<g>
<title>try_to_wake_up (12 samples, 0.38%)</title><rect x="132.5" y="611.0" width="4.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="135.5" y="622.0"></text>
</g>
<g>
<title>__lock_text_start (12 samples, 0.38%)</title><rect x="132.5" y="595.0" width="4.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="135.5" y="606.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (2 samples, 0.06%)</title><rect x="137.0" y="867.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="140.0" y="878.0"></text>
</g>
<g>
<title>java/util/HashMap.get (2 samples, 0.06%)</title><rect x="137.0" y="851.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="140.0" y="862.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (1 samples, 0.03%)</title><rect x="137.0" y="835.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="140.0" y="846.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (1 samples, 0.03%)</title><rect x="137.4" y="835.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="140.4" y="846.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (1 samples, 0.03%)</title><rect x="137.4" y="819.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="140.4" y="830.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (1 samples, 0.03%)</title><rect x="137.4" y="803.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="140.4" y="814.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (8 samples, 0.26%)</title><rect x="137.8" y="899.0" width="3.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="140.8" y="910.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (2 samples, 0.06%)</title><rect x="137.8" y="883.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="140.8" y="894.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.06%)</title><rect x="137.8" y="867.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="140.8" y="878.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.06%)</title><rect x="137.8" y="851.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="140.8" y="862.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (2 samples, 0.06%)</title><rect x="137.8" y="835.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="140.8" y="846.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (5 samples, 0.16%)</title><rect x="138.5" y="883.0" width="1.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="141.5" y="894.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (5 samples, 0.16%)</title><rect x="138.5" y="867.0" width="1.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="141.5" y="878.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.startsWith (1 samples, 0.03%)</title><rect x="140.4" y="883.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="143.4" y="894.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (3 samples, 0.10%)</title><rect x="140.8" y="899.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="143.8" y="910.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (3 samples, 0.10%)</title><rect x="140.8" y="883.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="143.8" y="894.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (2 samples, 0.06%)</title><rect x="140.8" y="867.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="143.8" y="878.0"></text>
</g>
<g>
<title>java/lang/String.charAt (2 samples, 0.06%)</title><rect x="140.8" y="851.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="143.8" y="862.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (1 samples, 0.03%)</title><rect x="141.6" y="867.0" width="0.4" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="144.6" y="878.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (3 samples, 0.10%)</title><rect x="142.0" y="899.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="145.0" y="910.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.03%)</title><rect x="142.7" y="883.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="145.7" y="894.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (35 samples, 1.12%)</title><rect x="143.1" y="915.0" width="13.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="146.1" y="926.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (35 samples, 1.12%)</title><rect x="143.1" y="899.0" width="13.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="146.1" y="910.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (4 samples, 0.13%)</title><rect x="143.5" y="883.0" width="1.5" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="146.5" y="894.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.03%)</title><rect x="143.8" y="867.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="146.8" y="878.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (1 samples, 0.03%)</title><rect x="144.2" y="867.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="147.2" y="878.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (1 samples, 0.03%)</title><rect x="144.6" y="867.0" width="0.4" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="147.6" y="878.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (1 samples, 0.03%)</title><rect x="144.6" y="851.0" width="0.4" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="147.6" y="862.0"></text>
</g>
<g>
<title>recv (30 samples, 0.96%)</title><rect x="145.0" y="883.0" width="11.3" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="148.0" y="894.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (22 samples, 0.70%)</title><rect x="148.0" y="867.0" width="8.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="151.0" y="878.0"></text>
</g>
<g>
<title>do_syscall_64 (22 samples, 0.70%)</title><rect x="148.0" y="851.0" width="8.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="151.0" y="862.0"></text>
</g>
<g>
<title>__sys_recvfrom (1 samples, 0.03%)</title><rect x="149.1" y="835.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="152.1" y="846.0"></text>
</g>
<g>
<title>__x64_sys_recvfrom (18 samples, 0.58%)</title><rect x="149.5" y="835.0" width="6.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="152.5" y="846.0"></text>
</g>
<g>
<title>__sys_recvfrom (18 samples, 0.58%)</title><rect x="149.5" y="819.0" width="6.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="152.5" y="830.0"></text>
</g>
<g>
<title>sock_recvmsg (15 samples, 0.48%)</title><rect x="149.5" y="803.0" width="5.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="152.5" y="814.0"></text>
</g>
<g>
<title>inet6_recvmsg (12 samples, 0.38%)</title><rect x="149.5" y="787.0" width="4.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="152.5" y="798.0"></text>
</g>
<g>
<title>tcp_recvmsg (12 samples, 0.38%)</title><rect x="149.5" y="771.0" width="4.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="152.5" y="782.0"></text>
</g>
<g>
<title>__kfree_skb (1 samples, 0.03%)</title><rect x="150.6" y="755.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="153.6" y="766.0"></text>
</g>
<g>
<title>skb_release_all (1 samples, 0.03%)</title><rect x="150.6" y="739.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="153.6" y="750.0"></text>
</g>
<g>
<title>skb_release_data (1 samples, 0.03%)</title><rect x="150.6" y="723.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="153.6" y="734.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (5 samples, 0.16%)</title><rect x="151.0" y="755.0" width="1.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="154.0" y="766.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (3 samples, 0.10%)</title><rect x="152.9" y="755.0" width="1.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="155.9" y="766.0"></text>
</g>
<g>
<title>__skb_datagram_iter (3 samples, 0.10%)</title><rect x="152.9" y="739.0" width="1.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="155.9" y="750.0"></text>
</g>
<g>
<title>simple_copy_to_iter (3 samples, 0.10%)</title><rect x="152.9" y="723.0" width="1.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="155.9" y="734.0"></text>
</g>
<g>
<title>__check_object_size (1 samples, 0.03%)</title><rect x="152.9" y="707.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="155.9" y="718.0"></text>
</g>
<g>
<title>__virt_addr_valid (1 samples, 0.03%)</title><rect x="152.9" y="691.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="155.9" y="702.0"></text>
</g>
<g>
<title>_copy_to_iter (2 samples, 0.06%)</title><rect x="153.3" y="707.0" width="0.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="156.3" y="718.0"></text>
</g>
<g>
<title>copyout (1 samples, 0.03%)</title><rect x="153.7" y="691.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="156.7" y="702.0"></text>
</g>
<g>
<title>security_socket_recvmsg (3 samples, 0.10%)</title><rect x="154.0" y="787.0" width="1.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="157.0" y="798.0"></text>
</g>
<g>
<title>apparmor_socket_recvmsg (3 samples, 0.10%)</title><rect x="154.0" y="771.0" width="1.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="157.0" y="782.0"></text>
</g>
<g>
<title>aa_sk_perm (3 samples, 0.10%)</title><rect x="154.0" y="755.0" width="1.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="157.0" y="766.0"></text>
</g>
<g>
<title>sockfd_lookup_light (3 samples, 0.10%)</title><rect x="155.2" y="803.0" width="1.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="158.2" y="814.0"></text>
</g>
<g>
<title>__fget_light (3 samples, 0.10%)</title><rect x="155.2" y="787.0" width="1.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="158.2" y="798.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.03%)</title><rect x="156.3" y="947.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="159.3" y="958.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.03%)</title><rect x="156.3" y="931.0" width="0.4" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="159.3" y="942.0"></text>
</g>
<g>
<title>[NIO Selector #2 tid=4265] (132 samples, 4.23%)</title><rect x="156.7" y="979.0" width="49.9" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="159.7" y="990.0">[NIO ..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (132 samples, 4.23%)</title><rect x="156.7" y="963.0" width="49.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="159.7" y="974.0">one/n..</text>
</g>
<g>
<title>gettimeofday (1 samples, 0.03%)</title><rect x="156.7" y="947.0" width="0.4" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="159.7" y="958.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (1 samples, 0.03%)</title><rect x="157.1" y="947.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="160.1" y="958.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (38 samples, 1.22%)</title><rect x="157.5" y="947.0" width="14.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="160.5" y="958.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (38 samples, 1.22%)</title><rect x="157.5" y="931.0" width="14.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="160.5" y="942.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSelector_epollWait (2 samples, 0.06%)</title><rect x="157.8" y="915.0" width="0.8" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="160.8" y="926.0"></text>
</g>
<g>
<title>clock_gettime (4 samples, 0.13%)</title><rect x="158.6" y="915.0" width="1.5" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="161.6" y="926.0"></text>
</g>
<g>
<title>clock_gettime (1 samples, 0.03%)</title><rect x="159.7" y="899.0" width="0.4" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="162.7" y="910.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.03%)</title><rect x="159.7" y="883.0" width="0.4" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="162.7" y="894.0"></text>
</g>
<g>
<title>epoll_wait (31 samples, 0.99%)</title><rect x="160.1" y="915.0" width="11.7" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="163.1" y="926.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (20 samples, 0.64%)</title><rect x="164.3" y="899.0" width="7.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="167.3" y="910.0"></text>
</g>
<g>
<title>do_syscall_64 (20 samples, 0.64%)</title><rect x="164.3" y="883.0" width="7.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="167.3" y="894.0"></text>
</g>
<g>
<title>__x64_sys_epoll_wait (18 samples, 0.58%)</title><rect x="165.0" y="867.0" width="6.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="168.0" y="878.0"></text>
</g>
<g>
<title>do_epoll_wait (18 samples, 0.58%)</title><rect x="165.0" y="851.0" width="6.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="168.0" y="862.0"></text>
</g>
<g>
<title>ep_poll (16 samples, 0.51%)</title><rect x="165.0" y="835.0" width="6.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="168.0" y="846.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.0 (7 samples, 0.22%)</title><rect x="165.4" y="819.0" width="2.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="168.4" y="830.0"></text>
</g>
<g>
<title>ep_send_events_proc (6 samples, 0.19%)</title><rect x="165.8" y="803.0" width="2.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="168.8" y="814.0"></text>
</g>
<g>
<title>ep_item_poll.isra.0 (2 samples, 0.06%)</title><rect x="166.5" y="787.0" width="0.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="169.5" y="798.0"></text>
</g>
<g>
<title>sock_poll (2 samples, 0.06%)</title><rect x="166.5" y="771.0" width="0.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="169.5" y="782.0"></text>
</g>
<g>
<title>tcp_poll (1 samples, 0.03%)</title><rect x="166.9" y="755.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="169.9" y="766.0"></text>
</g>
<g>
<title>sock_poll (2 samples, 0.06%)</title><rect x="167.3" y="787.0" width="0.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="170.3" y="798.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (8 samples, 0.26%)</title><rect x="168.0" y="819.0" width="3.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="171.0" y="830.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (8 samples, 0.26%)</title><rect x="168.0" y="803.0" width="3.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="171.0" y="814.0"></text>
</g>
<g>
<title>schedule (8 samples, 0.26%)</title><rect x="168.0" y="787.0" width="3.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="171.0" y="798.0"></text>
</g>
<g>
<title>__schedule (8 samples, 0.26%)</title><rect x="168.0" y="771.0" width="3.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="171.0" y="782.0"></text>
</g>
<g>
<title>finish_task_switch (8 samples, 0.26%)</title><rect x="168.0" y="755.0" width="3.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="171.0" y="766.0"></text>
</g>
<g>
<title>fput_many (2 samples, 0.06%)</title><rect x="171.1" y="835.0" width="0.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="174.1" y="846.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (91 samples, 2.92%)</title><rect x="171.8" y="947.0" width="34.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="174.8" y="958.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (90 samples, 2.88%)</title><rect x="172.2" y="931.0" width="34.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="175.2" y="942.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (51 samples, 1.63%)</title><rect x="172.2" y="915.0" width="19.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="175.2" y="926.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (33 samples, 1.06%)</title><rect x="172.2" y="899.0" width="12.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="175.2" y="910.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (33 samples, 1.06%)</title><rect x="172.2" y="883.0" width="12.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="175.2" y="894.0"></text>
</g>
<g>
<title>RequestHandler1_put.handleRequest (29 samples, 0.93%)</title><rect x="172.6" y="867.0" width="10.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="175.6" y="878.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (3 samples, 0.10%)</title><rect x="172.6" y="851.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="175.6" y="862.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (3 samples, 0.10%)</title><rect x="172.6" y="835.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="175.6" y="846.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.03%)</title><rect x="173.3" y="819.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="176.3" y="830.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.03%)</title><rect x="173.3" y="803.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="176.3" y="814.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivlev/ThreadController.put (26 samples, 0.83%)</title><rect x="173.7" y="851.0" width="9.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="176.7" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (25 samples, 0.80%)</title><rect x="174.1" y="835.0" width="9.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="177.1" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (25 samples, 0.80%)</title><rect x="174.1" y="819.0" width="9.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="177.1" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.enqueue (3 samples, 0.10%)</title><rect x="174.1" y="803.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="177.1" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (3 samples, 0.10%)</title><rect x="174.1" y="787.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="177.1" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (3 samples, 0.10%)</title><rect x="174.1" y="771.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="177.1" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.transferForSignal (3 samples, 0.10%)</title><rect x="174.1" y="755.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="177.1" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (1 samples, 0.03%)</title><rect x="175.2" y="803.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="178.2" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (1 samples, 0.03%)</title><rect x="175.2" y="787.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="178.2" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (1 samples, 0.03%)</title><rect x="175.2" y="771.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="178.2" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (1 samples, 0.03%)</title><rect x="175.2" y="755.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="178.2" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (1 samples, 0.03%)</title><rect x="175.2" y="739.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="178.2" y="750.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (1 samples, 0.03%)</title><rect x="175.2" y="723.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="178.2" y="734.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="175.2" y="707.0" width="0.4" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="178.2" y="718.0"></text>
</g>
<g>
<title>__pthread_mutex_cond_lock (1 samples, 0.03%)</title><rect x="175.2" y="691.0" width="0.4" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="178.2" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (21 samples, 0.67%)</title><rect x="175.6" y="803.0" width="7.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="178.6" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (21 samples, 0.67%)</title><rect x="175.6" y="787.0" width="7.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="178.6" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (21 samples, 0.67%)</title><rect x="175.6" y="771.0" width="7.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="178.6" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (21 samples, 0.67%)</title><rect x="175.6" y="755.0" width="7.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="178.6" y="766.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (20 samples, 0.64%)</title><rect x="176.0" y="739.0" width="7.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="179.0" y="750.0"></text>
</g>
<g>
<title>Unsafe_Unpark (3 samples, 0.10%)</title><rect x="176.0" y="723.0" width="1.1" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="179.0" y="734.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/ld-2.31.so (1 samples, 0.03%)</title><rect x="176.0" y="707.0" width="0.4" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="179.0" y="718.0"></text>
</g>
<g>
<title>java_lang_Thread::thread(oopDesc*) (1 samples, 0.03%)</title><rect x="176.4" y="707.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="179.4" y="718.0"></text>
</g>
<g>
<title>pthread_mutex_lock (1 samples, 0.03%)</title><rect x="176.7" y="707.0" width="0.4" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="179.7" y="718.0"></text>
</g>
<g>
<title>__pthread_cond_signal (15 samples, 0.48%)</title><rect x="177.1" y="723.0" width="5.7" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="180.1" y="734.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (12 samples, 0.38%)</title><rect x="178.2" y="707.0" width="4.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="181.2" y="718.0"></text>
</g>
<g>
<title>do_syscall_64 (12 samples, 0.38%)</title><rect x="178.2" y="691.0" width="4.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="181.2" y="702.0"></text>
</g>
<g>
<title>__x64_sys_futex (9 samples, 0.29%)</title><rect x="179.4" y="675.0" width="3.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="182.4" y="686.0"></text>
</g>
<g>
<title>do_futex (9 samples, 0.29%)</title><rect x="179.4" y="659.0" width="3.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="182.4" y="670.0"></text>
</g>
<g>
<title>futex_wake (9 samples, 0.29%)</title><rect x="179.4" y="643.0" width="3.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="182.4" y="654.0"></text>
</g>
<g>
<title>wake_up_q (9 samples, 0.29%)</title><rect x="179.4" y="627.0" width="3.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="182.4" y="638.0"></text>
</g>
<g>
<title>try_to_wake_up (9 samples, 0.29%)</title><rect x="179.4" y="611.0" width="3.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="182.4" y="622.0"></text>
</g>
<g>
<title>__lock_text_start (9 samples, 0.29%)</title><rect x="179.4" y="595.0" width="3.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="182.4" y="606.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.03%)</title><rect x="182.4" y="579.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="185.4" y="590.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.03%)</title><rect x="182.4" y="563.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="185.4" y="574.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.03%)</title><rect x="182.4" y="547.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="185.4" y="558.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.03%)</title><rect x="182.4" y="531.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="185.4" y="542.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.03%)</title><rect x="182.4" y="515.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="185.4" y="526.0"></text>
</g>
<g>
<title>update_blocked_averages (1 samples, 0.03%)</title><rect x="182.4" y="499.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="185.4" y="510.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.03%)</title><rect x="182.4" y="483.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="185.4" y="494.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.03%)</title><rect x="182.8" y="723.0" width="0.4" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="185.8" y="734.0"></text>
</g>
<g>
<title>pthread_cond_signal@plt (1 samples, 0.03%)</title><rect x="183.2" y="723.0" width="0.3" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="186.2" y="734.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (3 samples, 0.10%)</title><rect x="183.5" y="867.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="186.5" y="878.0"></text>
</g>
<g>
<title>java/util/HashMap.get (3 samples, 0.10%)</title><rect x="183.5" y="851.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="186.5" y="862.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (2 samples, 0.06%)</title><rect x="183.5" y="835.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="186.5" y="846.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (1 samples, 0.03%)</title><rect x="184.3" y="835.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="187.3" y="846.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (1 samples, 0.03%)</title><rect x="184.3" y="819.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="187.3" y="830.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (1 samples, 0.03%)</title><rect x="184.3" y="803.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="187.3" y="814.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (8 samples, 0.26%)</title><rect x="184.7" y="899.0" width="3.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="187.7" y="910.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (5 samples, 0.16%)</title><rect x="184.7" y="883.0" width="1.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="187.7" y="894.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (5 samples, 0.16%)</title><rect x="184.7" y="867.0" width="1.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="187.7" y="878.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.startsWith (3 samples, 0.10%)</title><rect x="186.6" y="883.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="189.6" y="894.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (3 samples, 0.10%)</title><rect x="187.7" y="899.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="190.7" y="910.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (3 samples, 0.10%)</title><rect x="187.7" y="883.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="190.7" y="894.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (1 samples, 0.03%)</title><rect x="188.5" y="867.0" width="0.3" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="191.5" y="878.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (3 samples, 0.10%)</title><rect x="188.8" y="899.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="191.8" y="910.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.03%)</title><rect x="188.8" y="883.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="191.8" y="894.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.03%)</title><rect x="188.8" y="867.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="191.8" y="878.0"></text>
</g>
<g>
<title>java/lang/String.substring (2 samples, 0.06%)</title><rect x="189.2" y="883.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="192.2" y="894.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (2 samples, 0.06%)</title><rect x="189.2" y="867.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="192.2" y="878.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (1 samples, 0.03%)</title><rect x="189.6" y="851.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="192.6" y="862.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (4 samples, 0.13%)</title><rect x="190.0" y="899.0" width="1.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="193.0" y="910.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2 samples, 0.06%)</title><rect x="190.7" y="883.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="193.7" y="894.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (2 samples, 0.06%)</title><rect x="191.5" y="915.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="194.5" y="926.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (37 samples, 1.19%)</title><rect x="192.2" y="915.0" width="14.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="195.2" y="926.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (37 samples, 1.19%)</title><rect x="192.2" y="899.0" width="14.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="195.2" y="910.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (6 samples, 0.19%)</title><rect x="193.0" y="883.0" width="2.3" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="196.0" y="894.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (1 samples, 0.03%)</title><rect x="193.4" y="867.0" width="0.3" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="196.4" y="878.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.03%)</title><rect x="193.7" y="867.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="196.7" y="878.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (1 samples, 0.03%)</title><rect x="194.1" y="867.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="197.1" y="878.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (1 samples, 0.03%)</title><rect x="194.5" y="867.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="197.5" y="878.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (1 samples, 0.03%)</title><rect x="194.9" y="867.0" width="0.4" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="197.9" y="878.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (1 samples, 0.03%)</title><rect x="195.3" y="883.0" width="0.3" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="198.3" y="894.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (1 samples, 0.03%)</title><rect x="195.6" y="883.0" width="0.4" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="198.6" y="894.0"></text>
</g>
<g>
<title>recv (27 samples, 0.87%)</title><rect x="196.0" y="883.0" width="10.2" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="199.0" y="894.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (20 samples, 0.64%)</title><rect x="198.7" y="867.0" width="7.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="201.7" y="878.0"></text>
</g>
<g>
<title>__x64_sys_recvfrom (3 samples, 0.10%)</title><rect x="198.7" y="851.0" width="1.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="201.7" y="862.0"></text>
</g>
<g>
<title>do_syscall_64 (17 samples, 0.54%)</title><rect x="199.8" y="851.0" width="6.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="202.8" y="862.0"></text>
</g>
<g>
<title>__x64_sys_recvfrom (16 samples, 0.51%)</title><rect x="200.2" y="835.0" width="6.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="203.2" y="846.0"></text>
</g>
<g>
<title>__sys_recvfrom (16 samples, 0.51%)</title><rect x="200.2" y="819.0" width="6.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="203.2" y="830.0"></text>
</g>
<g>
<title>sock_recvmsg (12 samples, 0.38%)</title><rect x="200.2" y="803.0" width="4.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="203.2" y="814.0"></text>
</g>
<g>
<title>inet6_recvmsg (11 samples, 0.35%)</title><rect x="200.2" y="787.0" width="4.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="203.2" y="798.0"></text>
</g>
<g>
<title>tcp_recvmsg (11 samples, 0.35%)</title><rect x="200.2" y="771.0" width="4.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="203.2" y="782.0"></text>
</g>
<g>
<title>__kfree_skb (1 samples, 0.03%)</title><rect x="202.1" y="755.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="205.1" y="766.0"></text>
</g>
<g>
<title>skb_release_all (1 samples, 0.03%)</title><rect x="202.1" y="739.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="205.1" y="750.0"></text>
</g>
<g>
<title>sock_rfree (1 samples, 0.03%)</title><rect x="202.1" y="723.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="205.1" y="734.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (1 samples, 0.03%)</title><rect x="202.4" y="755.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="205.4" y="766.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (1 samples, 0.03%)</title><rect x="202.8" y="755.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="205.8" y="766.0"></text>
</g>
<g>
<title>__skb_datagram_iter (1 samples, 0.03%)</title><rect x="202.8" y="739.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="205.8" y="750.0"></text>
</g>
<g>
<title>tcp_cleanup_rbuf (1 samples, 0.03%)</title><rect x="203.2" y="755.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="206.2" y="766.0"></text>
</g>
<g>
<title>tcp_send_ack (1 samples, 0.03%)</title><rect x="203.2" y="739.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="206.2" y="750.0"></text>
</g>
<g>
<title>__tcp_send_ack.part.0 (1 samples, 0.03%)</title><rect x="203.2" y="723.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="206.2" y="734.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (1 samples, 0.03%)</title><rect x="203.2" y="707.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="206.2" y="718.0"></text>
</g>
<g>
<title>ip_queue_xmit (1 samples, 0.03%)</title><rect x="203.2" y="691.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="206.2" y="702.0"></text>
</g>
<g>
<title>__ip_queue_xmit (1 samples, 0.03%)</title><rect x="203.2" y="675.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="206.2" y="686.0"></text>
</g>
<g>
<title>ip_local_out (1 samples, 0.03%)</title><rect x="203.2" y="659.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="206.2" y="670.0"></text>
</g>
<g>
<title>ip_output (1 samples, 0.03%)</title><rect x="203.2" y="643.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="206.2" y="654.0"></text>
</g>
<g>
<title>ip_finish_output (1 samples, 0.03%)</title><rect x="203.2" y="627.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="206.2" y="638.0"></text>
</g>
<g>
<title>__ip_finish_output (1 samples, 0.03%)</title><rect x="203.2" y="611.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="206.2" y="622.0"></text>
</g>
<g>
<title>ip_finish_output2 (1 samples, 0.03%)</title><rect x="203.2" y="595.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="206.2" y="606.0"></text>
</g>
<g>
<title>dev_queue_xmit (1 samples, 0.03%)</title><rect x="203.2" y="579.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="206.2" y="590.0"></text>
</g>
<g>
<title>__dev_queue_xmit (1 samples, 0.03%)</title><rect x="203.2" y="563.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="206.2" y="574.0"></text>
</g>
<g>
<title>loopback_xmit (1 samples, 0.03%)</title><rect x="203.2" y="547.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="206.2" y="558.0"></text>
</g>
<g>
<title>tcp_rcv_space_adjust (1 samples, 0.03%)</title><rect x="203.6" y="755.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="206.6" y="766.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (1 samples, 0.03%)</title><rect x="203.6" y="739.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="206.6" y="750.0"></text>
</g>
<g>
<title>ktime_get (1 samples, 0.03%)</title><rect x="203.6" y="723.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="206.6" y="734.0"></text>
</g>
<g>
<title>tcp_release_cb (1 samples, 0.03%)</title><rect x="204.0" y="755.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="207.0" y="766.0"></text>
</g>
<g>
<title>security_socket_recvmsg (1 samples, 0.03%)</title><rect x="204.3" y="787.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="207.3" y="798.0"></text>
</g>
<g>
<title>apparmor_socket_recvmsg (1 samples, 0.03%)</title><rect x="204.3" y="771.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="207.3" y="782.0"></text>
</g>
<g>
<title>aa_sk_perm (1 samples, 0.03%)</title><rect x="204.3" y="755.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="207.3" y="766.0"></text>
</g>
<g>
<title>sockfd_lookup_light (4 samples, 0.13%)</title><rect x="204.7" y="803.0" width="1.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="207.7" y="814.0"></text>
</g>
<g>
<title>__fdget (4 samples, 0.13%)</title><rect x="204.7" y="787.0" width="1.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="207.7" y="798.0"></text>
</g>
<g>
<title>__fget_light (4 samples, 0.13%)</title><rect x="204.7" y="771.0" width="1.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="207.7" y="782.0"></text>
</g>
<g>
<title>__fget (4 samples, 0.13%)</title><rect x="204.7" y="755.0" width="1.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="207.7" y="766.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.03%)</title><rect x="206.2" y="947.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="209.2" y="958.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.03%)</title><rect x="206.2" y="931.0" width="0.4" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="209.2" y="942.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.03%)</title><rect x="206.2" y="915.0" width="0.4" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="209.2" y="926.0"></text>
</g>
<g>
<title>[NIO Selector #3 tid=4266] (122 samples, 3.91%)</title><rect x="206.6" y="979.0" width="46.1" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="209.6" y="990.0">[NIO..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (122 samples, 3.91%)</title><rect x="206.6" y="963.0" width="46.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="209.6" y="974.0">one/..</text>
</g>
<g>
<title>gettimeofday (1 samples, 0.03%)</title><rect x="207.0" y="947.0" width="0.4" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="210.0" y="958.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (1 samples, 0.03%)</title><rect x="207.4" y="947.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="210.4" y="958.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (4 samples, 0.13%)</title><rect x="207.7" y="947.0" width="1.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="210.7" y="958.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (4 samples, 0.13%)</title><rect x="207.7" y="931.0" width="1.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="210.7" y="942.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.findNext (4 samples, 0.13%)</title><rect x="207.7" y="915.0" width="1.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="210.7" y="926.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (33 samples, 1.06%)</title><rect x="209.3" y="947.0" width="12.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="212.3" y="958.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (33 samples, 1.06%)</title><rect x="209.3" y="931.0" width="12.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="212.3" y="942.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (1 samples, 0.03%)</title><rect x="209.6" y="915.0" width="0.4" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="212.6" y="926.0"></text>
</g>
<g>
<title>clock_gettime (2 samples, 0.06%)</title><rect x="210.0" y="915.0" width="0.8" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="213.0" y="926.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.03%)</title><rect x="210.4" y="899.0" width="0.4" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="213.4" y="910.0"></text>
</g>
<g>
<title>epoll_wait (29 samples, 0.93%)</title><rect x="210.8" y="915.0" width="10.9" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="213.8" y="926.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (19 samples, 0.61%)</title><rect x="214.5" y="899.0" width="7.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="217.5" y="910.0"></text>
</g>
<g>
<title>do_syscall_64 (19 samples, 0.61%)</title><rect x="214.5" y="883.0" width="7.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="217.5" y="894.0"></text>
</g>
<g>
<title>__x64_sys_epoll_wait (17 samples, 0.54%)</title><rect x="215.3" y="867.0" width="6.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="218.3" y="878.0"></text>
</g>
<g>
<title>do_epoll_wait (17 samples, 0.54%)</title><rect x="215.3" y="851.0" width="6.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="218.3" y="862.0"></text>
</g>
<g>
<title>__fdget (2 samples, 0.06%)</title><rect x="215.3" y="835.0" width="0.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="218.3" y="846.0"></text>
</g>
<g>
<title>__fget_light (2 samples, 0.06%)</title><rect x="215.3" y="819.0" width="0.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="218.3" y="830.0"></text>
</g>
<g>
<title>__fget (2 samples, 0.06%)</title><rect x="215.3" y="803.0" width="0.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="218.3" y="814.0"></text>
</g>
<g>
<title>ep_poll (15 samples, 0.48%)</title><rect x="216.1" y="835.0" width="5.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="219.1" y="846.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.0 (6 samples, 0.19%)</title><rect x="216.4" y="819.0" width="2.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="219.4" y="830.0"></text>
</g>
<g>
<title>ep_send_events_proc (5 samples, 0.16%)</title><rect x="216.8" y="803.0" width="1.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="219.8" y="814.0"></text>
</g>
<g>
<title>ep_item_poll.isra.0 (3 samples, 0.10%)</title><rect x="217.6" y="787.0" width="1.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="220.6" y="798.0"></text>
</g>
<g>
<title>sock_poll (3 samples, 0.10%)</title><rect x="217.6" y="771.0" width="1.1" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="220.6" y="782.0"></text>
</g>
<g>
<title>tcp_poll (1 samples, 0.03%)</title><rect x="217.9" y="755.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="220.9" y="766.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (1 samples, 0.03%)</title><rect x="218.3" y="755.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="221.3" y="766.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (8 samples, 0.26%)</title><rect x="218.7" y="819.0" width="3.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="221.7" y="830.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (8 samples, 0.26%)</title><rect x="218.7" y="803.0" width="3.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="221.7" y="814.0"></text>
</g>
<g>
<title>schedule (7 samples, 0.22%)</title><rect x="219.1" y="787.0" width="2.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="222.1" y="798.0"></text>
</g>
<g>
<title>__schedule (7 samples, 0.22%)</title><rect x="219.1" y="771.0" width="2.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="222.1" y="782.0"></text>
</g>
<g>
<title>finish_task_switch (7 samples, 0.22%)</title><rect x="219.1" y="755.0" width="2.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="222.1" y="766.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (82 samples, 2.63%)</title><rect x="221.7" y="947.0" width="31.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="224.7" y="958.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (82 samples, 2.63%)</title><rect x="221.7" y="931.0" width="31.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="224.7" y="942.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (37 samples, 1.19%)</title><rect x="221.7" y="915.0" width="14.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="224.7" y="926.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (1 samples, 0.03%)</title><rect x="222.1" y="899.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="225.1" y="910.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (28 samples, 0.90%)</title><rect x="222.5" y="899.0" width="10.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="225.5" y="910.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (28 samples, 0.90%)</title><rect x="222.5" y="883.0" width="10.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="225.5" y="894.0"></text>
</g>
<g>
<title>RequestHandler1_put.handleRequest (24 samples, 0.77%)</title><rect x="222.5" y="867.0" width="9.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="225.5" y="878.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (4 samples, 0.13%)</title><rect x="222.5" y="851.0" width="1.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="225.5" y="862.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (4 samples, 0.13%)</title><rect x="222.5" y="835.0" width="1.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="225.5" y="846.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.03%)</title><rect x="222.5" y="819.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="225.5" y="830.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (1 samples, 0.03%)</title><rect x="222.5" y="803.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="225.5" y="814.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.03%)</title><rect x="222.9" y="819.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="225.9" y="830.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.03%)</title><rect x="222.9" y="803.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="225.9" y="814.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (1 samples, 0.03%)</title><rect x="222.9" y="787.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="225.9" y="798.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.03%)</title><rect x="223.2" y="819.0" width="0.4" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="226.2" y="830.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (1 samples, 0.03%)</title><rect x="223.6" y="819.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="226.6" y="830.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.03%)</title><rect x="223.6" y="803.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="226.6" y="814.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.03%)</title><rect x="223.6" y="787.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="226.6" y="798.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (1 samples, 0.03%)</title><rect x="223.6" y="771.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="226.6" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivlev/ThreadController.put (20 samples, 0.64%)</title><rect x="224.0" y="851.0" width="7.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="227.0" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (19 samples, 0.61%)</title><rect x="224.4" y="835.0" width="7.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="227.4" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (19 samples, 0.61%)</title><rect x="224.4" y="819.0" width="7.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="227.4" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (1 samples, 0.03%)</title><rect x="224.4" y="803.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="227.4" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (1 samples, 0.03%)</title><rect x="224.4" y="787.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="227.4" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (1 samples, 0.03%)</title><rect x="224.4" y="771.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="227.4" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (1 samples, 0.03%)</title><rect x="224.4" y="755.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="227.4" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (1 samples, 0.03%)</title><rect x="224.4" y="739.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="227.4" y="750.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (1 samples, 0.03%)</title><rect x="224.4" y="723.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="227.4" y="734.0"></text>
</g>
<g>
<title>Unsafe_Park (1 samples, 0.03%)</title><rect x="224.4" y="707.0" width="0.4" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="227.4" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (18 samples, 0.58%)</title><rect x="224.8" y="803.0" width="6.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="227.8" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (18 samples, 0.58%)</title><rect x="224.8" y="787.0" width="6.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="227.8" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (18 samples, 0.58%)</title><rect x="224.8" y="771.0" width="6.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="227.8" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (18 samples, 0.58%)</title><rect x="224.8" y="755.0" width="6.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="227.8" y="766.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (17 samples, 0.54%)</title><rect x="225.1" y="739.0" width="6.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="228.1" y="750.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/ld-2.31.so (1 samples, 0.03%)</title><rect x="225.1" y="723.0" width="0.4" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="228.1" y="734.0"></text>
</g>
<g>
<title>Unsafe_Unpark (3 samples, 0.10%)</title><rect x="225.5" y="723.0" width="1.1" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="228.5" y="734.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock (1 samples, 0.03%)</title><rect x="225.9" y="707.0" width="0.4" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="228.9" y="718.0"></text>
</g>
<g>
<title>java_lang_Thread::thread(oopDesc*) (1 samples, 0.03%)</title><rect x="226.3" y="707.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="229.3" y="718.0"></text>
</g>
<g>
<title>__pthread_cond_signal (13 samples, 0.42%)</title><rect x="226.6" y="723.0" width="5.0" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="229.6" y="734.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (9 samples, 0.29%)</title><rect x="228.2" y="707.0" width="3.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="231.2" y="718.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.03%)</title><rect x="228.2" y="691.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="231.2" y="702.0"></text>
</g>
<g>
<title>do_syscall_64 (8 samples, 0.26%)</title><rect x="228.5" y="691.0" width="3.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="231.5" y="702.0"></text>
</g>
<g>
<title>__x64_sys_futex (7 samples, 0.22%)</title><rect x="228.9" y="675.0" width="2.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="231.9" y="686.0"></text>
</g>
<g>
<title>do_futex (7 samples, 0.22%)</title><rect x="228.9" y="659.0" width="2.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="231.9" y="670.0"></text>
</g>
<g>
<title>futex_wake (6 samples, 0.19%)</title><rect x="229.3" y="643.0" width="2.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="232.3" y="654.0"></text>
</g>
<g>
<title>wake_up_q (6 samples, 0.19%)</title><rect x="229.3" y="627.0" width="2.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="232.3" y="638.0"></text>
</g>
<g>
<title>try_to_wake_up (6 samples, 0.19%)</title><rect x="229.3" y="611.0" width="2.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="232.3" y="622.0"></text>
</g>
<g>
<title>__lock_text_start (6 samples, 0.19%)</title><rect x="229.3" y="595.0" width="2.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="232.3" y="606.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (4 samples, 0.13%)</title><rect x="231.6" y="867.0" width="1.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="234.6" y="878.0"></text>
</g>
<g>
<title>java/util/HashMap.get (4 samples, 0.13%)</title><rect x="231.6" y="851.0" width="1.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="234.6" y="862.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (4 samples, 0.13%)</title><rect x="231.6" y="835.0" width="1.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="234.6" y="846.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (4 samples, 0.13%)</title><rect x="231.6" y="819.0" width="1.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="234.6" y="830.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (4 samples, 0.13%)</title><rect x="231.6" y="803.0" width="1.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="234.6" y="814.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (2 samples, 0.06%)</title><rect x="233.1" y="899.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="236.1" y="910.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2 samples, 0.06%)</title><rect x="233.1" y="883.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="236.1" y="894.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2 samples, 0.06%)</title><rect x="233.1" y="867.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="236.1" y="878.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (1 samples, 0.03%)</title><rect x="233.8" y="899.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="236.8" y="910.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (1 samples, 0.03%)</title><rect x="233.8" y="883.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="236.8" y="894.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (1 samples, 0.03%)</title><rect x="233.8" y="867.0" width="0.4" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="236.8" y="878.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (1 samples, 0.03%)</title><rect x="234.2" y="899.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="237.2" y="910.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.03%)</title><rect x="234.2" y="883.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="237.2" y="894.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (3 samples, 0.10%)</title><rect x="234.6" y="899.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="237.6" y="910.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.03%)</title><rect x="235.3" y="883.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="238.3" y="894.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (45 samples, 1.44%)</title><rect x="235.7" y="915.0" width="17.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="238.7" y="926.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (45 samples, 1.44%)</title><rect x="235.7" y="899.0" width="17.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="238.7" y="910.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (5 samples, 0.16%)</title><rect x="236.1" y="883.0" width="1.9" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="239.1" y="894.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (2 samples, 0.06%)</title><rect x="236.1" y="867.0" width="0.8" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="239.1" y="878.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.03%)</title><rect x="236.9" y="867.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="239.9" y="878.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (1 samples, 0.03%)</title><rect x="237.2" y="867.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="240.2" y="878.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (1 samples, 0.03%)</title><rect x="237.6" y="867.0" width="0.4" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="240.6" y="878.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (1 samples, 0.03%)</title><rect x="237.6" y="851.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="240.6" y="862.0"></text>
</g>
<g>
<title>recv (39 samples, 1.25%)</title><rect x="238.0" y="883.0" width="14.7" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="241.0" y="894.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (30 samples, 0.96%)</title><rect x="241.4" y="867.0" width="11.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="244.4" y="878.0"></text>
</g>
<g>
<title>do_syscall_64 (30 samples, 0.96%)</title><rect x="241.4" y="851.0" width="11.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="244.4" y="862.0"></text>
</g>
<g>
<title>__x64_sys_recvfrom (24 samples, 0.77%)</title><rect x="243.7" y="835.0" width="9.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="246.7" y="846.0"></text>
</g>
<g>
<title>__sys_recvfrom (23 samples, 0.74%)</title><rect x="243.7" y="819.0" width="8.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="246.7" y="830.0"></text>
</g>
<g>
<title>sock_recvmsg (20 samples, 0.64%)</title><rect x="243.7" y="803.0" width="7.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="246.7" y="814.0"></text>
</g>
<g>
<title>inet6_recvmsg (19 samples, 0.61%)</title><rect x="243.7" y="787.0" width="7.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="246.7" y="798.0"></text>
</g>
<g>
<title>tcp_recvmsg (19 samples, 0.61%)</title><rect x="243.7" y="771.0" width="7.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="246.7" y="782.0"></text>
</g>
<g>
<title>__kfree_skb (5 samples, 0.16%)</title><rect x="243.7" y="755.0" width="1.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="246.7" y="766.0"></text>
</g>
<g>
<title>kfree_skbmem (1 samples, 0.03%)</title><rect x="243.7" y="739.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="246.7" y="750.0"></text>
</g>
<g>
<title>skb_release_all (3 samples, 0.10%)</title><rect x="244.0" y="739.0" width="1.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="247.0" y="750.0"></text>
</g>
<g>
<title>skb_release_head_state (3 samples, 0.10%)</title><rect x="244.0" y="723.0" width="1.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="247.0" y="734.0"></text>
</g>
<g>
<title>dst_release (3 samples, 0.10%)</title><rect x="244.0" y="707.0" width="1.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="247.0" y="718.0"></text>
</g>
<g>
<title>skb_release_head_state (1 samples, 0.03%)</title><rect x="245.2" y="739.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="248.2" y="750.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (1 samples, 0.03%)</title><rect x="245.5" y="755.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="248.5" y="766.0"></text>
</g>
<g>
<title>release_sock (2 samples, 0.06%)</title><rect x="245.9" y="755.0" width="0.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="248.9" y="766.0"></text>
</g>
<g>
<title>_raw_spin_unlock_bh (1 samples, 0.03%)</title><rect x="246.3" y="739.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="249.3" y="750.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (10 samples, 0.32%)</title><rect x="246.7" y="755.0" width="3.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="249.7" y="766.0"></text>
</g>
<g>
<title>__skb_datagram_iter (9 samples, 0.29%)</title><rect x="247.1" y="739.0" width="3.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="250.1" y="750.0"></text>
</g>
<g>
<title>_copy_to_iter (1 samples, 0.03%)</title><rect x="247.4" y="723.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="250.4" y="734.0"></text>
</g>
<g>
<title>simple_copy_to_iter (7 samples, 0.22%)</title><rect x="247.8" y="723.0" width="2.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="250.8" y="734.0"></text>
</g>
<g>
<title>__check_object_size (1 samples, 0.03%)</title><rect x="247.8" y="707.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="250.8" y="718.0"></text>
</g>
<g>
<title>__virt_addr_valid (1 samples, 0.03%)</title><rect x="247.8" y="691.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="250.8" y="702.0"></text>
</g>
<g>
<title>_copy_to_iter (5 samples, 0.16%)</title><rect x="248.2" y="707.0" width="1.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="251.2" y="718.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (4 samples, 0.13%)</title><rect x="248.6" y="691.0" width="1.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="251.6" y="702.0"></text>
</g>
<g>
<title>check_stack_object (1 samples, 0.03%)</title><rect x="250.1" y="707.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="253.1" y="718.0"></text>
</g>
<g>
<title>tcp_cleanup_rbuf (1 samples, 0.03%)</title><rect x="250.5" y="755.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="253.5" y="766.0"></text>
</g>
<g>
<title>tcp_send_ack (1 samples, 0.03%)</title><rect x="250.5" y="739.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="253.5" y="750.0"></text>
</g>
<g>
<title>__tcp_send_ack.part.0 (1 samples, 0.03%)</title><rect x="250.5" y="723.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="253.5" y="734.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (1 samples, 0.03%)</title><rect x="250.5" y="707.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="253.5" y="718.0"></text>
</g>
<g>
<title>ip_queue_xmit (1 samples, 0.03%)</title><rect x="250.5" y="691.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="253.5" y="702.0"></text>
</g>
<g>
<title>__ip_queue_xmit (1 samples, 0.03%)</title><rect x="250.5" y="675.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="253.5" y="686.0"></text>
</g>
<g>
<title>ip_local_out (1 samples, 0.03%)</title><rect x="250.5" y="659.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="253.5" y="670.0"></text>
</g>
<g>
<title>ip_output (1 samples, 0.03%)</title><rect x="250.5" y="643.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="253.5" y="654.0"></text>
</g>
<g>
<title>ip_finish_output (1 samples, 0.03%)</title><rect x="250.5" y="627.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="253.5" y="638.0"></text>
</g>
<g>
<title>__ip_finish_output (1 samples, 0.03%)</title><rect x="250.5" y="611.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="253.5" y="622.0"></text>
</g>
<g>
<title>ip_finish_output2 (1 samples, 0.03%)</title><rect x="250.5" y="595.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="253.5" y="606.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (1 samples, 0.03%)</title><rect x="250.5" y="579.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="253.5" y="590.0"></text>
</g>
<g>
<title>do_softirq.part.0 (1 samples, 0.03%)</title><rect x="250.5" y="563.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="253.5" y="574.0"></text>
</g>
<g>
<title>do_softirq_own_stack (1 samples, 0.03%)</title><rect x="250.5" y="547.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="253.5" y="558.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.03%)</title><rect x="250.5" y="531.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="253.5" y="542.0"></text>
</g>
<g>
<title>net_rx_action (1 samples, 0.03%)</title><rect x="250.5" y="515.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="253.5" y="526.0"></text>
</g>
<g>
<title>process_backlog (1 samples, 0.03%)</title><rect x="250.5" y="499.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="253.5" y="510.0"></text>
</g>
<g>
<title>__netif_receive_skb (1 samples, 0.03%)</title><rect x="250.5" y="483.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="253.5" y="494.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (1 samples, 0.03%)</title><rect x="250.5" y="467.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="253.5" y="478.0"></text>
</g>
<g>
<title>ip_rcv (1 samples, 0.03%)</title><rect x="250.5" y="451.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="253.5" y="462.0"></text>
</g>
<g>
<title>ip_rcv_finish (1 samples, 0.03%)</title><rect x="250.5" y="435.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="253.5" y="446.0"></text>
</g>
<g>
<title>ip_local_deliver (1 samples, 0.03%)</title><rect x="250.5" y="419.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="253.5" y="430.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (1 samples, 0.03%)</title><rect x="250.5" y="403.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="253.5" y="414.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (1 samples, 0.03%)</title><rect x="250.5" y="387.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="253.5" y="398.0"></text>
</g>
<g>
<title>security_socket_recvmsg (1 samples, 0.03%)</title><rect x="250.8" y="787.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="253.8" y="798.0"></text>
</g>
<g>
<title>sockfd_lookup_light (3 samples, 0.10%)</title><rect x="251.2" y="803.0" width="1.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="254.2" y="814.0"></text>
</g>
<g>
<title>__fdget (1 samples, 0.03%)</title><rect x="251.2" y="787.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="254.2" y="798.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.03%)</title><rect x="251.2" y="771.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="254.2" y="782.0"></text>
</g>
<g>
<title>__fget (1 samples, 0.03%)</title><rect x="251.2" y="755.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="254.2" y="766.0"></text>
</g>
<g>
<title>__fget_light (2 samples, 0.06%)</title><rect x="251.6" y="787.0" width="0.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="254.6" y="798.0"></text>
</g>
<g>
<title>import_single_range (1 samples, 0.03%)</title><rect x="252.4" y="819.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="255.4" y="830.0"></text>
</g>
<g>
<title>[NIO Selector #4 tid=4267] (154 samples, 4.93%)</title><rect x="252.7" y="979.0" width="58.3" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="255.7" y="990.0">[NIO S..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (154 samples, 4.93%)</title><rect x="252.7" y="963.0" width="58.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="255.7" y="974.0">one/ni..</text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="252.7" y="947.0" width="0.4" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="255.7" y="958.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="252.7" y="931.0" width="0.4" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="255.7" y="942.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.03%)</title><rect x="252.7" y="915.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="255.7" y="926.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (42 samples, 1.35%)</title><rect x="253.1" y="947.0" width="15.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="256.1" y="958.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (35 samples, 1.12%)</title><rect x="255.8" y="931.0" width="13.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="258.8" y="942.0"></text>
</g>
<g>
<title>clock_gettime (1 samples, 0.03%)</title><rect x="256.5" y="915.0" width="0.4" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="259.5" y="926.0"></text>
</g>
<g>
<title>epoll_wait (32 samples, 1.03%)</title><rect x="256.9" y="915.0" width="12.1" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="259.9" y="926.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (22 samples, 0.70%)</title><rect x="260.7" y="899.0" width="8.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="263.7" y="910.0"></text>
</g>
<g>
<title>do_syscall_64 (22 samples, 0.70%)</title><rect x="260.7" y="883.0" width="8.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="263.7" y="894.0"></text>
</g>
<g>
<title>__x64_sys_epoll_wait (21 samples, 0.67%)</title><rect x="261.0" y="867.0" width="8.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="264.0" y="878.0"></text>
</g>
<g>
<title>do_epoll_wait (21 samples, 0.67%)</title><rect x="261.0" y="851.0" width="8.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="264.0" y="862.0"></text>
</g>
<g>
<title>__fdget (2 samples, 0.06%)</title><rect x="261.0" y="835.0" width="0.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="264.0" y="846.0"></text>
</g>
<g>
<title>__fget_light (2 samples, 0.06%)</title><rect x="261.0" y="819.0" width="0.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="264.0" y="830.0"></text>
</g>
<g>
<title>__fget (2 samples, 0.06%)</title><rect x="261.0" y="803.0" width="0.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="264.0" y="814.0"></text>
</g>
<g>
<title>ep_poll (19 samples, 0.61%)</title><rect x="261.8" y="835.0" width="7.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="264.8" y="846.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.0 (9 samples, 0.29%)</title><rect x="262.6" y="819.0" width="3.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="265.6" y="830.0"></text>
</g>
<g>
<title>ep_send_events_proc (9 samples, 0.29%)</title><rect x="262.6" y="803.0" width="3.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="265.6" y="814.0"></text>
</g>
<g>
<title>ep_item_poll.isra.0 (7 samples, 0.22%)</title><rect x="262.9" y="787.0" width="2.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="265.9" y="798.0"></text>
</g>
<g>
<title>sock_poll (7 samples, 0.22%)</title><rect x="262.9" y="771.0" width="2.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="265.9" y="782.0"></text>
</g>
<g>
<title>tcp_poll (1 samples, 0.03%)</title><rect x="264.1" y="755.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="267.1" y="766.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (3 samples, 0.10%)</title><rect x="264.5" y="755.0" width="1.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="267.5" y="766.0"></text>
</g>
<g>
<title>sock_poll (1 samples, 0.03%)</title><rect x="265.6" y="787.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="268.6" y="798.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (7 samples, 0.22%)</title><rect x="266.0" y="819.0" width="2.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="269.0" y="830.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (7 samples, 0.22%)</title><rect x="266.0" y="803.0" width="2.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="269.0" y="814.0"></text>
</g>
<g>
<title>__schedule (1 samples, 0.03%)</title><rect x="266.3" y="787.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="269.3" y="798.0"></text>
</g>
<g>
<title>schedule (5 samples, 0.16%)</title><rect x="266.7" y="787.0" width="1.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="269.7" y="798.0"></text>
</g>
<g>
<title>__schedule (5 samples, 0.16%)</title><rect x="266.7" y="771.0" width="1.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="269.7" y="782.0"></text>
</g>
<g>
<title>finish_task_switch (5 samples, 0.16%)</title><rect x="266.7" y="755.0" width="1.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="269.7" y="766.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (1 samples, 0.03%)</title><rect x="268.6" y="819.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="271.6" y="830.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (111 samples, 3.56%)</title><rect x="269.0" y="947.0" width="42.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="272.0" y="958.0">one..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (109 samples, 3.49%)</title><rect x="269.7" y="931.0" width="41.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="272.7" y="942.0">one..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (60 samples, 1.92%)</title><rect x="269.7" y="915.0" width="22.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="272.7" y="926.0">o..</text>
</g>
<g>
<title>java/lang/Integer.parseInt (1 samples, 0.03%)</title><rect x="270.1" y="899.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="273.1" y="910.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (42 samples, 1.35%)</title><rect x="270.5" y="899.0" width="15.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="273.5" y="910.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (42 samples, 1.35%)</title><rect x="270.5" y="883.0" width="15.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="273.5" y="894.0"></text>
</g>
<g>
<title>RequestHandler1_put.handleRequest (42 samples, 1.35%)</title><rect x="270.5" y="867.0" width="15.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="273.5" y="878.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (1 samples, 0.03%)</title><rect x="270.5" y="851.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="273.5" y="862.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (1 samples, 0.03%)</title><rect x="270.5" y="835.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="273.5" y="846.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivlev/ThreadController.put (41 samples, 1.31%)</title><rect x="270.9" y="851.0" width="15.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="273.9" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (40 samples, 1.28%)</title><rect x="271.3" y="835.0" width="15.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="274.3" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (39 samples, 1.25%)</title><rect x="271.6" y="819.0" width="14.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="274.6" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.enqueue (3 samples, 0.10%)</title><rect x="272.4" y="803.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="275.4" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (3 samples, 0.10%)</title><rect x="272.4" y="787.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="275.4" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (3 samples, 0.10%)</title><rect x="272.4" y="771.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="275.4" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.transferForSignal (3 samples, 0.10%)</title><rect x="272.4" y="755.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="275.4" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (1 samples, 0.03%)</title><rect x="273.5" y="803.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="276.5" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (1 samples, 0.03%)</title><rect x="273.5" y="787.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="276.5" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (1 samples, 0.03%)</title><rect x="273.5" y="771.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="276.5" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (1 samples, 0.03%)</title><rect x="273.5" y="755.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="276.5" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (1 samples, 0.03%)</title><rect x="273.5" y="739.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="276.5" y="750.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (1 samples, 0.03%)</title><rect x="273.5" y="723.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="276.5" y="734.0"></text>
</g>
<g>
<title>Unsafe_Park (1 samples, 0.03%)</title><rect x="273.5" y="707.0" width="0.4" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="276.5" y="718.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (1 samples, 0.03%)</title><rect x="273.5" y="691.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="276.5" y="702.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (1 samples, 0.03%)</title><rect x="273.5" y="675.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="276.5" y="686.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/ld-2.31.so (1 samples, 0.03%)</title><rect x="273.5" y="659.0" width="0.4" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="276.5" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (33 samples, 1.06%)</title><rect x="273.9" y="803.0" width="12.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="276.9" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (33 samples, 1.06%)</title><rect x="273.9" y="787.0" width="12.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="276.9" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (33 samples, 1.06%)</title><rect x="273.9" y="771.0" width="12.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="276.9" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (33 samples, 1.06%)</title><rect x="273.9" y="755.0" width="12.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="276.9" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.enqueue (1 samples, 0.03%)</title><rect x="273.9" y="739.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="276.9" y="750.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (32 samples, 1.03%)</title><rect x="274.3" y="739.0" width="12.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="277.3" y="750.0"></text>
</g>
<g>
<title>Unsafe_Unpark (4 samples, 0.13%)</title><rect x="274.3" y="723.0" width="1.5" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="277.3" y="734.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (1 samples, 0.03%)</title><rect x="274.3" y="707.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="277.3" y="718.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (1 samples, 0.03%)</title><rect x="274.7" y="707.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="277.7" y="718.0"></text>
</g>
<g>
<title>oopDesc::address_field(int) const (2 samples, 0.06%)</title><rect x="275.0" y="707.0" width="0.8" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="278.0" y="718.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="275.8" y="723.0" width="0.4" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="278.8" y="734.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/ld-2.31.so (1 samples, 0.03%)</title><rect x="275.8" y="707.0" width="0.4" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="278.8" y="718.0"></text>
</g>
<g>
<title>__pthread_cond_signal (27 samples, 0.87%)</title><rect x="276.2" y="723.0" width="10.2" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="279.2" y="734.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (19 samples, 0.61%)</title><rect x="279.2" y="707.0" width="7.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="282.2" y="718.0"></text>
</g>
<g>
<title>do_syscall_64 (19 samples, 0.61%)</title><rect x="279.2" y="691.0" width="7.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="282.2" y="702.0"></text>
</g>
<g>
<title>__x64_sys_futex (17 samples, 0.54%)</title><rect x="280.0" y="675.0" width="6.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="283.0" y="686.0"></text>
</g>
<g>
<title>do_futex (16 samples, 0.51%)</title><rect x="280.3" y="659.0" width="6.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="283.3" y="670.0"></text>
</g>
<g>
<title>_raw_spin_lock (1 samples, 0.03%)</title><rect x="280.3" y="643.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="283.3" y="654.0"></text>
</g>
<g>
<title>futex_wake (15 samples, 0.48%)</title><rect x="280.7" y="643.0" width="5.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="283.7" y="654.0"></text>
</g>
<g>
<title>try_to_wake_up (1 samples, 0.03%)</title><rect x="280.7" y="627.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="283.7" y="638.0"></text>
</g>
<g>
<title>wake_up_q (14 samples, 0.45%)</title><rect x="281.1" y="627.0" width="5.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="284.1" y="638.0"></text>
</g>
<g>
<title>try_to_wake_up (13 samples, 0.42%)</title><rect x="281.5" y="611.0" width="4.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="284.5" y="622.0"></text>
</g>
<g>
<title>__lock_text_start (13 samples, 0.42%)</title><rect x="281.5" y="595.0" width="4.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="284.5" y="606.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (2 samples, 0.06%)</title><rect x="286.4" y="899.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="289.4" y="910.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (1 samples, 0.03%)</title><rect x="286.4" y="883.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="289.4" y="894.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.03%)</title><rect x="286.4" y="867.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="289.4" y="878.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.03%)</title><rect x="286.4" y="851.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="289.4" y="862.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (1 samples, 0.03%)</title><rect x="286.4" y="835.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="289.4" y="846.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.03%)</title><rect x="286.8" y="883.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="289.8" y="894.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.03%)</title><rect x="286.8" y="867.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="289.8" y="878.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (3 samples, 0.10%)</title><rect x="287.1" y="899.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="290.1" y="910.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (3 samples, 0.10%)</title><rect x="287.1" y="883.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="290.1" y="894.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (1 samples, 0.03%)</title><rect x="287.9" y="867.0" width="0.4" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="290.9" y="878.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (2 samples, 0.06%)</title><rect x="288.3" y="899.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="291.3" y="910.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.03%)</title><rect x="288.6" y="883.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="291.6" y="894.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.03%)</title><rect x="288.6" y="867.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="291.6" y="878.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (9 samples, 0.29%)</title><rect x="289.0" y="899.0" width="3.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="292.0" y="910.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (5 samples, 0.16%)</title><rect x="290.5" y="883.0" width="1.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="293.5" y="894.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (49 samples, 1.57%)</title><rect x="292.4" y="915.0" width="18.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="295.4" y="926.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (49 samples, 1.57%)</title><rect x="292.4" y="899.0" width="18.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="295.4" y="910.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (6 samples, 0.19%)</title><rect x="293.6" y="883.0" width="2.2" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="296.6" y="894.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (3 samples, 0.10%)</title><rect x="294.3" y="867.0" width="1.2" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="297.3" y="878.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (1 samples, 0.03%)</title><rect x="295.5" y="867.0" width="0.3" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="298.5" y="878.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (1 samples, 0.03%)</title><rect x="295.8" y="883.0" width="0.4" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="298.8" y="894.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (1 samples, 0.03%)</title><rect x="296.2" y="883.0" width="0.4" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="299.2" y="894.0"></text>
</g>
<g>
<title>recv (38 samples, 1.22%)</title><rect x="296.6" y="883.0" width="14.4" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="299.6" y="894.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (33 samples, 1.06%)</title><rect x="298.5" y="867.0" width="12.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="301.5" y="878.0"></text>
</g>
<g>
<title>__x64_sys_recvfrom (2 samples, 0.06%)</title><rect x="298.5" y="851.0" width="0.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="301.5" y="862.0"></text>
</g>
<g>
<title>do_syscall_64 (31 samples, 0.99%)</title><rect x="299.2" y="851.0" width="11.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="302.2" y="862.0"></text>
</g>
<g>
<title>__x64_sys_recvfrom (27 samples, 0.87%)</title><rect x="300.7" y="835.0" width="10.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="303.7" y="846.0"></text>
</g>
<g>
<title>__sys_recvfrom (27 samples, 0.87%)</title><rect x="300.7" y="819.0" width="10.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="303.7" y="830.0"></text>
</g>
<g>
<title>sock_recvmsg (22 samples, 0.70%)</title><rect x="301.1" y="803.0" width="8.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="304.1" y="814.0"></text>
</g>
<g>
<title>apparmor_socket_recvmsg (1 samples, 0.03%)</title><rect x="301.1" y="787.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="304.1" y="798.0"></text>
</g>
<g>
<title>inet6_recvmsg (15 samples, 0.48%)</title><rect x="301.5" y="787.0" width="5.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="304.5" y="798.0"></text>
</g>
<g>
<title>tcp_recvmsg (14 samples, 0.45%)</title><rect x="301.9" y="771.0" width="5.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="304.9" y="782.0"></text>
</g>
<g>
<title>__kfree_skb (4 samples, 0.13%)</title><rect x="302.3" y="755.0" width="1.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="305.3" y="766.0"></text>
</g>
<g>
<title>skb_release_all (3 samples, 0.10%)</title><rect x="302.3" y="739.0" width="1.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="305.3" y="750.0"></text>
</g>
<g>
<title>skb_release_data (2 samples, 0.06%)</title><rect x="302.3" y="723.0" width="0.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="305.3" y="734.0"></text>
</g>
<g>
<title>skb_release_head_state (1 samples, 0.03%)</title><rect x="303.0" y="723.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="306.0" y="734.0"></text>
</g>
<g>
<title>dst_release (1 samples, 0.03%)</title><rect x="303.0" y="707.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="306.0" y="718.0"></text>
</g>
<g>
<title>skb_release_head_state (1 samples, 0.03%)</title><rect x="303.4" y="739.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="306.4" y="750.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (6 samples, 0.19%)</title><rect x="303.8" y="755.0" width="2.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="306.8" y="766.0"></text>
</g>
<g>
<title>__skb_datagram_iter (6 samples, 0.19%)</title><rect x="303.8" y="739.0" width="2.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="306.8" y="750.0"></text>
</g>
<g>
<title>simple_copy_to_iter (5 samples, 0.16%)</title><rect x="304.1" y="723.0" width="1.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="307.1" y="734.0"></text>
</g>
<g>
<title>_copy_to_iter (4 samples, 0.13%)</title><rect x="304.1" y="707.0" width="1.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="307.1" y="718.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (4 samples, 0.13%)</title><rect x="304.1" y="691.0" width="1.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="307.1" y="702.0"></text>
</g>
<g>
<title>check_stack_object (1 samples, 0.03%)</title><rect x="305.7" y="707.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="308.7" y="718.0"></text>
</g>
<g>
<title>tcp_rcv_space_adjust (1 samples, 0.03%)</title><rect x="306.0" y="755.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="309.0" y="766.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (1 samples, 0.03%)</title><rect x="306.0" y="739.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="309.0" y="750.0"></text>
</g>
<g>
<title>read_tsc (1 samples, 0.03%)</title><rect x="306.0" y="723.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="309.0" y="734.0"></text>
</g>
<g>
<title>tcp_release_cb (2 samples, 0.06%)</title><rect x="306.4" y="755.0" width="0.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="309.4" y="766.0"></text>
</g>
<g>
<title>security_socket_recvmsg (6 samples, 0.19%)</title><rect x="307.2" y="787.0" width="2.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="310.2" y="798.0"></text>
</g>
<g>
<title>apparmor_socket_recvmsg (5 samples, 0.16%)</title><rect x="307.6" y="771.0" width="1.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="310.6" y="782.0"></text>
</g>
<g>
<title>aa_sk_perm (5 samples, 0.16%)</title><rect x="307.6" y="755.0" width="1.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="310.6" y="766.0"></text>
</g>
<g>
<title>sockfd_lookup_light (4 samples, 0.13%)</title><rect x="309.4" y="803.0" width="1.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="312.4" y="814.0"></text>
</g>
<g>
<title>__fdget (3 samples, 0.10%)</title><rect x="309.4" y="787.0" width="1.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="312.4" y="798.0"></text>
</g>
<g>
<title>__fget_light (3 samples, 0.10%)</title><rect x="309.4" y="771.0" width="1.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="312.4" y="782.0"></text>
</g>
<g>
<title>__fget (3 samples, 0.10%)</title><rect x="309.4" y="755.0" width="1.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="312.4" y="766.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.03%)</title><rect x="310.6" y="787.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="313.6" y="798.0"></text>
</g>
<g>
<title>[NIO Selector #5 tid=4268] (116 samples, 3.72%)</title><rect x="311.0" y="979.0" width="43.8" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="314.0" y="990.0">[NIO..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (116 samples, 3.72%)</title><rect x="311.0" y="963.0" width="43.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="314.0" y="974.0">one/..</text>
</g>
<g>
<title>gettimeofday (1 samples, 0.03%)</title><rect x="311.3" y="947.0" width="0.4" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="314.3" y="958.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (3 samples, 0.10%)</title><rect x="311.7" y="947.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="314.7" y="958.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (3 samples, 0.10%)</title><rect x="311.7" y="931.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="314.7" y="942.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.findNext (3 samples, 0.10%)</title><rect x="311.7" y="915.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="314.7" y="926.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (34 samples, 1.09%)</title><rect x="312.8" y="947.0" width="12.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="315.8" y="958.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (34 samples, 1.09%)</title><rect x="312.8" y="931.0" width="12.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="315.8" y="942.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSelector_epollWait (1 samples, 0.03%)</title><rect x="313.6" y="915.0" width="0.4" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="316.6" y="926.0"></text>
</g>
<g>
<title>clock_gettime (1 samples, 0.03%)</title><rect x="314.0" y="915.0" width="0.4" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="317.0" y="926.0"></text>
</g>
<g>
<title>epoll_wait (30 samples, 0.96%)</title><rect x="314.4" y="915.0" width="11.3" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="317.4" y="926.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (19 samples, 0.61%)</title><rect x="318.5" y="899.0" width="7.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="321.5" y="910.0"></text>
</g>
<g>
<title>do_syscall_64 (19 samples, 0.61%)</title><rect x="318.5" y="883.0" width="7.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="321.5" y="894.0"></text>
</g>
<g>
<title>__x64_sys_epoll_wait (17 samples, 0.54%)</title><rect x="319.3" y="867.0" width="6.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="322.3" y="878.0"></text>
</g>
<g>
<title>do_epoll_wait (17 samples, 0.54%)</title><rect x="319.3" y="851.0" width="6.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="322.3" y="862.0"></text>
</g>
<g>
<title>__fdget (2 samples, 0.06%)</title><rect x="319.7" y="835.0" width="0.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="322.7" y="846.0"></text>
</g>
<g>
<title>__fget_light (2 samples, 0.06%)</title><rect x="319.7" y="819.0" width="0.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="322.7" y="830.0"></text>
</g>
<g>
<title>__fget (2 samples, 0.06%)</title><rect x="319.7" y="803.0" width="0.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="322.7" y="814.0"></text>
</g>
<g>
<title>ep_poll (14 samples, 0.45%)</title><rect x="320.4" y="835.0" width="5.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="323.4" y="846.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.0 (6 samples, 0.19%)</title><rect x="321.2" y="819.0" width="2.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="324.2" y="830.0"></text>
</g>
<g>
<title>ep_send_events_proc (5 samples, 0.16%)</title><rect x="321.2" y="803.0" width="1.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="324.2" y="814.0"></text>
</g>
<g>
<title>ep_item_poll.isra.0 (2 samples, 0.06%)</title><rect x="321.9" y="787.0" width="0.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="324.9" y="798.0"></text>
</g>
<g>
<title>sock_poll (2 samples, 0.06%)</title><rect x="321.9" y="771.0" width="0.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="324.9" y="782.0"></text>
</g>
<g>
<title>tcp_poll (1 samples, 0.03%)</title><rect x="322.3" y="755.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="325.3" y="766.0"></text>
</g>
<g>
<title>sock_poll (1 samples, 0.03%)</title><rect x="322.7" y="787.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="325.7" y="798.0"></text>
</g>
<g>
<title>mutex_lock (1 samples, 0.03%)</title><rect x="323.1" y="803.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="326.1" y="814.0"></text>
</g>
<g>
<title>mutex_unlock (1 samples, 0.03%)</title><rect x="323.4" y="819.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="326.4" y="830.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (5 samples, 0.16%)</title><rect x="323.8" y="819.0" width="1.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="326.8" y="830.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (5 samples, 0.16%)</title><rect x="323.8" y="803.0" width="1.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="326.8" y="814.0"></text>
</g>
<g>
<title>schedule (3 samples, 0.10%)</title><rect x="324.6" y="787.0" width="1.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="327.6" y="798.0"></text>
</g>
<g>
<title>__schedule (3 samples, 0.10%)</title><rect x="324.6" y="771.0" width="1.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="327.6" y="782.0"></text>
</g>
<g>
<title>finish_task_switch (3 samples, 0.10%)</title><rect x="324.6" y="755.0" width="1.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="327.6" y="766.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (77 samples, 2.47%)</title><rect x="325.7" y="947.0" width="29.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="328.7" y="958.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (74 samples, 2.37%)</title><rect x="326.8" y="931.0" width="28.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="329.8" y="942.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (40 samples, 1.28%)</title><rect x="326.8" y="915.0" width="15.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="329.8" y="926.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (27 samples, 0.87%)</title><rect x="326.8" y="899.0" width="10.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="329.8" y="910.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (26 samples, 0.83%)</title><rect x="327.2" y="883.0" width="9.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="330.2" y="894.0"></text>
</g>
<g>
<title>RequestHandler1_put.handleRequest (25 samples, 0.80%)</title><rect x="327.2" y="867.0" width="9.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="330.2" y="878.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (3 samples, 0.10%)</title><rect x="327.2" y="851.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="330.2" y="862.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (3 samples, 0.10%)</title><rect x="327.2" y="835.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="330.2" y="846.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.03%)</title><rect x="327.2" y="819.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="330.2" y="830.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (1 samples, 0.03%)</title><rect x="327.2" y="803.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="330.2" y="814.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.03%)</title><rect x="327.6" y="819.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="330.6" y="830.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.03%)</title><rect x="327.6" y="803.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="330.6" y="814.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (1 samples, 0.03%)</title><rect x="327.6" y="787.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="330.6" y="798.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (1 samples, 0.03%)</title><rect x="328.0" y="819.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="331.0" y="830.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.03%)</title><rect x="328.0" y="803.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="331.0" y="814.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.03%)</title><rect x="328.0" y="787.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="331.0" y="798.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (1 samples, 0.03%)</title><rect x="328.0" y="771.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="331.0" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivlev/ThreadController.put (22 samples, 0.70%)</title><rect x="328.3" y="851.0" width="8.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="331.3" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (21 samples, 0.67%)</title><rect x="328.7" y="835.0" width="8.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="331.7" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (21 samples, 0.67%)</title><rect x="328.7" y="819.0" width="8.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="331.7" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.enqueue (1 samples, 0.03%)</title><rect x="329.1" y="803.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="332.1" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (1 samples, 0.03%)</title><rect x="329.1" y="787.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="332.1" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (1 samples, 0.03%)</title><rect x="329.1" y="771.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="332.1" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.transferForSignal (1 samples, 0.03%)</title><rect x="329.1" y="755.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="332.1" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (19 samples, 0.61%)</title><rect x="329.5" y="803.0" width="7.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="332.5" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (19 samples, 0.61%)</title><rect x="329.5" y="787.0" width="7.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="332.5" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (19 samples, 0.61%)</title><rect x="329.5" y="771.0" width="7.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="332.5" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (19 samples, 0.61%)</title><rect x="329.5" y="755.0" width="7.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="332.5" y="766.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (18 samples, 0.58%)</title><rect x="329.9" y="739.0" width="6.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="332.9" y="750.0"></text>
</g>
<g>
<title>Parker::unpark() (1 samples, 0.03%)</title><rect x="329.9" y="723.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="332.9" y="734.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (1 samples, 0.03%)</title><rect x="330.2" y="723.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="333.2" y="734.0"></text>
</g>
<g>
<title>ThreadsListHandle::~ThreadsListHandle() (1 samples, 0.03%)</title><rect x="330.6" y="723.0" width="0.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="333.6" y="734.0"></text>
</g>
<g>
<title>Unsafe_Unpark (2 samples, 0.06%)</title><rect x="331.0" y="723.0" width="0.7" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="334.0" y="734.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.235] (1 samples, 0.03%)</title><rect x="331.0" y="707.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="334.0" y="718.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (1 samples, 0.03%)</title><rect x="331.4" y="707.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="334.4" y="718.0"></text>
</g>
<g>
<title>__pthread_cond_signal (12 samples, 0.38%)</title><rect x="331.7" y="723.0" width="4.6" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="334.7" y="734.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (9 samples, 0.29%)</title><rect x="332.9" y="707.0" width="3.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="335.9" y="718.0"></text>
</g>
<g>
<title>do_syscall_64 (9 samples, 0.29%)</title><rect x="332.9" y="691.0" width="3.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="335.9" y="702.0"></text>
</g>
<g>
<title>__x64_sys_futex (9 samples, 0.29%)</title><rect x="332.9" y="675.0" width="3.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="335.9" y="686.0"></text>
</g>
<g>
<title>do_futex (8 samples, 0.26%)</title><rect x="333.3" y="659.0" width="3.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="336.3" y="670.0"></text>
</g>
<g>
<title>futex_wake (8 samples, 0.26%)</title><rect x="333.3" y="643.0" width="3.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="336.3" y="654.0"></text>
</g>
<g>
<title>wake_up_q (7 samples, 0.22%)</title><rect x="333.6" y="627.0" width="2.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="336.6" y="638.0"></text>
</g>
<g>
<title>try_to_wake_up (7 samples, 0.22%)</title><rect x="333.6" y="611.0" width="2.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="336.6" y="622.0"></text>
</g>
<g>
<title>__lock_text_start (7 samples, 0.22%)</title><rect x="333.6" y="595.0" width="2.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="336.6" y="606.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.03%)</title><rect x="336.3" y="723.0" width="0.4" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="339.3" y="734.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (1 samples, 0.03%)</title><rect x="336.7" y="867.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="339.7" y="878.0"></text>
</g>
<g>
<title>java/util/HashMap.get (1 samples, 0.03%)</title><rect x="336.7" y="851.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="339.7" y="862.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (1 samples, 0.03%)</title><rect x="336.7" y="835.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="339.7" y="846.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (1 samples, 0.03%)</title><rect x="336.7" y="819.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="339.7" y="830.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (1 samples, 0.03%)</title><rect x="336.7" y="803.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="339.7" y="814.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (4 samples, 0.13%)</title><rect x="337.0" y="899.0" width="1.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="340.0" y="910.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.03%)</title><rect x="337.0" y="883.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="340.0" y="894.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.03%)</title><rect x="337.0" y="867.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="340.0" y="878.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.startsWith (3 samples, 0.10%)</title><rect x="337.4" y="883.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="340.4" y="894.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (2 samples, 0.06%)</title><rect x="338.6" y="899.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="341.6" y="910.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (2 samples, 0.06%)</title><rect x="338.6" y="883.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="341.6" y="894.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (1 samples, 0.03%)</title><rect x="338.9" y="867.0" width="0.4" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="341.9" y="878.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (1 samples, 0.03%)</title><rect x="339.3" y="899.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="342.3" y="910.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.03%)</title><rect x="339.3" y="883.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="342.3" y="894.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (6 samples, 0.19%)</title><rect x="339.7" y="899.0" width="2.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="342.7" y="910.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2 samples, 0.06%)</title><rect x="341.2" y="883.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="344.2" y="894.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (34 samples, 1.09%)</title><rect x="342.0" y="915.0" width="12.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="345.0" y="926.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (34 samples, 1.09%)</title><rect x="342.0" y="899.0" width="12.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="345.0" y="910.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (3 samples, 0.10%)</title><rect x="343.5" y="883.0" width="1.1" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="346.5" y="894.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (1 samples, 0.03%)</title><rect x="343.5" y="867.0" width="0.3" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="346.5" y="878.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (1 samples, 0.03%)</title><rect x="343.8" y="867.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="346.8" y="878.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (1 samples, 0.03%)</title><rect x="344.2" y="867.0" width="0.4" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="347.2" y="878.0"></text>
</g>
<g>
<title>recv (27 samples, 0.87%)</title><rect x="344.6" y="883.0" width="10.2" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="347.6" y="894.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (20 samples, 0.64%)</title><rect x="347.3" y="867.0" width="7.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="350.3" y="878.0"></text>
</g>
<g>
<title>do_syscall_64 (20 samples, 0.64%)</title><rect x="347.3" y="851.0" width="7.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="350.3" y="862.0"></text>
</g>
<g>
<title>__x64_sys_recvfrom (17 samples, 0.54%)</title><rect x="348.4" y="835.0" width="6.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="351.4" y="846.0"></text>
</g>
<g>
<title>__sys_recvfrom (15 samples, 0.48%)</title><rect x="348.4" y="819.0" width="5.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="351.4" y="830.0"></text>
</g>
<g>
<title>sock_recvmsg (9 samples, 0.29%)</title><rect x="348.4" y="803.0" width="3.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="351.4" y="814.0"></text>
</g>
<g>
<title>inet6_recvmsg (8 samples, 0.26%)</title><rect x="348.4" y="787.0" width="3.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="351.4" y="798.0"></text>
</g>
<g>
<title>tcp_recvmsg (8 samples, 0.26%)</title><rect x="348.4" y="771.0" width="3.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="351.4" y="782.0"></text>
</g>
<g>
<title>__kfree_skb (3 samples, 0.10%)</title><rect x="349.1" y="755.0" width="1.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="352.1" y="766.0"></text>
</g>
<g>
<title>skb_release_all (3 samples, 0.10%)</title><rect x="349.1" y="739.0" width="1.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="352.1" y="750.0"></text>
</g>
<g>
<title>skb_release_head_state (2 samples, 0.06%)</title><rect x="349.1" y="723.0" width="0.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="352.1" y="734.0"></text>
</g>
<g>
<title>dst_release (2 samples, 0.06%)</title><rect x="349.1" y="707.0" width="0.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="352.1" y="718.0"></text>
</g>
<g>
<title>sock_rfree (1 samples, 0.03%)</title><rect x="349.9" y="723.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="352.9" y="734.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (3 samples, 0.10%)</title><rect x="350.3" y="755.0" width="1.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="353.3" y="766.0"></text>
</g>
<g>
<title>__skb_datagram_iter (3 samples, 0.10%)</title><rect x="350.3" y="739.0" width="1.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="353.3" y="750.0"></text>
</g>
<g>
<title>simple_copy_to_iter (3 samples, 0.10%)</title><rect x="350.3" y="723.0" width="1.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="353.3" y="734.0"></text>
</g>
<g>
<title>__check_object_size (2 samples, 0.06%)</title><rect x="350.3" y="707.0" width="0.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="353.3" y="718.0"></text>
</g>
<g>
<title>_copy_to_iter (1 samples, 0.03%)</title><rect x="351.0" y="707.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="354.0" y="718.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (1 samples, 0.03%)</title><rect x="351.0" y="691.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="354.0" y="702.0"></text>
</g>
<g>
<title>security_socket_recvmsg (1 samples, 0.03%)</title><rect x="351.4" y="787.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="354.4" y="798.0"></text>
</g>
<g>
<title>sockfd_lookup_light (6 samples, 0.19%)</title><rect x="351.8" y="803.0" width="2.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="354.8" y="814.0"></text>
</g>
<g>
<title>__fdget (3 samples, 0.10%)</title><rect x="352.2" y="787.0" width="1.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="355.2" y="798.0"></text>
</g>
<g>
<title>__fget (1 samples, 0.03%)</title><rect x="352.2" y="771.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="355.2" y="782.0"></text>
</g>
<g>
<title>__fget_light (2 samples, 0.06%)</title><rect x="352.5" y="771.0" width="0.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="355.5" y="782.0"></text>
</g>
<g>
<title>__fget (2 samples, 0.06%)</title><rect x="352.5" y="755.0" width="0.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="355.5" y="766.0"></text>
</g>
<g>
<title>__fget_light (2 samples, 0.06%)</title><rect x="353.3" y="787.0" width="0.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="356.3" y="798.0"></text>
</g>
<g>
<title>import_single_range (1 samples, 0.03%)</title><rect x="354.1" y="819.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="357.1" y="830.0"></text>
</g>
<g>
<title>sockfd_lookup_light (1 samples, 0.03%)</title><rect x="354.4" y="819.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="357.4" y="830.0"></text>
</g>
<g>
<title>[NIO Selector #6 tid=4269] (120 samples, 3.84%)</title><rect x="354.8" y="979.0" width="45.4" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="357.8" y="990.0">[NIO..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (120 samples, 3.84%)</title><rect x="354.8" y="963.0" width="45.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="357.8" y="974.0">one/..</text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (3 samples, 0.10%)</title><rect x="354.8" y="947.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="357.8" y="958.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (3 samples, 0.10%)</title><rect x="354.8" y="931.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="357.8" y="942.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.findNext (3 samples, 0.10%)</title><rect x="354.8" y="915.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="357.8" y="926.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (21 samples, 0.67%)</title><rect x="355.9" y="947.0" width="8.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="358.9" y="958.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (21 samples, 0.67%)</title><rect x="355.9" y="931.0" width="8.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="358.9" y="942.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSelector_epollWait (1 samples, 0.03%)</title><rect x="356.3" y="915.0" width="0.4" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="359.3" y="926.0"></text>
</g>
<g>
<title>clock_gettime (2 samples, 0.06%)</title><rect x="356.7" y="915.0" width="0.8" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="359.7" y="926.0"></text>
</g>
<g>
<title>clock_gettime (1 samples, 0.03%)</title><rect x="357.1" y="899.0" width="0.4" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="360.1" y="910.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.03%)</title><rect x="357.1" y="883.0" width="0.4" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="360.1" y="894.0"></text>
</g>
<g>
<title>epoll_wait (16 samples, 0.51%)</title><rect x="357.5" y="915.0" width="6.0" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="360.5" y="926.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (13 samples, 0.42%)</title><rect x="358.6" y="899.0" width="4.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="361.6" y="910.0"></text>
</g>
<g>
<title>do_syscall_64 (13 samples, 0.42%)</title><rect x="358.6" y="883.0" width="4.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="361.6" y="894.0"></text>
</g>
<g>
<title>__x64_sys_epoll_wait (12 samples, 0.38%)</title><rect x="359.0" y="867.0" width="4.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="362.0" y="878.0"></text>
</g>
<g>
<title>do_epoll_wait (12 samples, 0.38%)</title><rect x="359.0" y="851.0" width="4.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="362.0" y="862.0"></text>
</g>
<g>
<title>__fdget (1 samples, 0.03%)</title><rect x="359.0" y="835.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="362.0" y="846.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.03%)</title><rect x="359.0" y="819.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="362.0" y="830.0"></text>
</g>
<g>
<title>__fget (1 samples, 0.03%)</title><rect x="359.0" y="803.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="362.0" y="814.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.03%)</title><rect x="359.3" y="835.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="362.3" y="846.0"></text>
</g>
<g>
<title>ep_poll (10 samples, 0.32%)</title><rect x="359.7" y="835.0" width="3.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="362.7" y="846.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.0 (4 samples, 0.13%)</title><rect x="360.1" y="819.0" width="1.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="363.1" y="830.0"></text>
</g>
<g>
<title>ep_send_events_proc (4 samples, 0.13%)</title><rect x="360.1" y="803.0" width="1.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="363.1" y="814.0"></text>
</g>
<g>
<title>ep_item_poll.isra.0 (3 samples, 0.10%)</title><rect x="360.5" y="787.0" width="1.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="363.5" y="798.0"></text>
</g>
<g>
<title>sock_poll (3 samples, 0.10%)</title><rect x="360.5" y="771.0" width="1.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="363.5" y="782.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (1 samples, 0.03%)</title><rect x="361.2" y="755.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="364.2" y="766.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (5 samples, 0.16%)</title><rect x="361.6" y="819.0" width="1.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="364.6" y="830.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (5 samples, 0.16%)</title><rect x="361.6" y="803.0" width="1.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="364.6" y="814.0"></text>
</g>
<g>
<title>schedule (4 samples, 0.13%)</title><rect x="362.0" y="787.0" width="1.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="365.0" y="798.0"></text>
</g>
<g>
<title>__schedule (3 samples, 0.10%)</title><rect x="362.4" y="771.0" width="1.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="365.4" y="782.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.03%)</title><rect x="363.1" y="755.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="366.1" y="766.0"></text>
</g>
<g>
<title>epoll_wait@plt (1 samples, 0.03%)</title><rect x="363.5" y="915.0" width="0.4" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="366.5" y="926.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (96 samples, 3.08%)</title><rect x="363.9" y="947.0" width="36.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="366.9" y="958.0">one..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (96 samples, 3.08%)</title><rect x="363.9" y="931.0" width="36.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="366.9" y="942.0">one..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (53 samples, 1.70%)</title><rect x="363.9" y="915.0" width="20.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="366.9" y="926.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (41 samples, 1.31%)</title><rect x="363.9" y="899.0" width="15.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="366.9" y="910.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (40 samples, 1.28%)</title><rect x="364.3" y="883.0" width="15.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="367.3" y="894.0"></text>
</g>
<g>
<title>RequestHandler1_put.handleRequest (37 samples, 1.19%)</title><rect x="364.3" y="867.0" width="14.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="367.3" y="878.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (2 samples, 0.06%)</title><rect x="364.3" y="851.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="367.3" y="862.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (2 samples, 0.06%)</title><rect x="364.3" y="835.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="367.3" y="846.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (2 samples, 0.06%)</title><rect x="364.3" y="819.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="367.3" y="830.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.06%)</title><rect x="364.3" y="803.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="367.3" y="814.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.06%)</title><rect x="364.3" y="787.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="367.3" y="798.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (2 samples, 0.06%)</title><rect x="364.3" y="771.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="367.3" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivlev/ThreadController.put (35 samples, 1.12%)</title><rect x="365.0" y="851.0" width="13.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="368.0" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (35 samples, 1.12%)</title><rect x="365.0" y="835.0" width="13.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="368.0" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (35 samples, 1.12%)</title><rect x="365.0" y="819.0" width="13.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="368.0" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.enqueue (3 samples, 0.10%)</title><rect x="365.0" y="803.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="368.0" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (3 samples, 0.10%)</title><rect x="365.0" y="787.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="368.0" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (3 samples, 0.10%)</title><rect x="365.0" y="771.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="368.0" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.transferForSignal (3 samples, 0.10%)</title><rect x="365.0" y="755.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="368.0" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (2 samples, 0.06%)</title><rect x="366.2" y="803.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="369.2" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (2 samples, 0.06%)</title><rect x="366.2" y="787.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="369.2" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (2 samples, 0.06%)</title><rect x="366.2" y="771.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="369.2" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (2 samples, 0.06%)</title><rect x="366.2" y="755.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="369.2" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (2 samples, 0.06%)</title><rect x="366.2" y="739.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="369.2" y="750.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (2 samples, 0.06%)</title><rect x="366.2" y="723.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="369.2" y="734.0"></text>
</g>
<g>
<title>Unsafe_Park (1 samples, 0.03%)</title><rect x="366.2" y="707.0" width="0.3" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="369.2" y="718.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (1 samples, 0.03%)</title><rect x="366.2" y="691.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="369.2" y="702.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (1 samples, 0.03%)</title><rect x="366.2" y="675.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="369.2" y="686.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="366.5" y="707.0" width="0.4" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="369.5" y="718.0"></text>
</g>
<g>
<title>__pthread_cond_wait (1 samples, 0.03%)</title><rect x="366.5" y="691.0" width="0.4" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="369.5" y="702.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.03%)</title><rect x="366.5" y="675.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="369.5" y="686.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.03%)</title><rect x="366.5" y="659.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="369.5" y="670.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.03%)</title><rect x="366.5" y="643.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="369.5" y="654.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.03%)</title><rect x="366.5" y="627.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="369.5" y="638.0"></text>
</g>
<g>
<title>futex_wait (1 samples, 0.03%)</title><rect x="366.5" y="611.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="369.5" y="622.0"></text>
</g>
<g>
<title>futex_wait_queue_me (1 samples, 0.03%)</title><rect x="366.5" y="595.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="369.5" y="606.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.03%)</title><rect x="366.5" y="579.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="369.5" y="590.0"></text>
</g>
<g>
<title>__schedule (1 samples, 0.03%)</title><rect x="366.5" y="563.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="369.5" y="574.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.03%)</title><rect x="366.5" y="547.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="369.5" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (30 samples, 0.96%)</title><rect x="366.9" y="803.0" width="11.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="369.9" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (30 samples, 0.96%)</title><rect x="366.9" y="787.0" width="11.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="369.9" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (30 samples, 0.96%)</title><rect x="366.9" y="771.0" width="11.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="369.9" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (30 samples, 0.96%)</title><rect x="366.9" y="755.0" width="11.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="369.9" y="766.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (29 samples, 0.93%)</title><rect x="367.3" y="739.0" width="11.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="370.3" y="750.0"></text>
</g>
<g>
<title>Unsafe_Unpark (7 samples, 0.22%)</title><rect x="367.7" y="723.0" width="2.6" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="370.7" y="734.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/ld-2.31.so (1 samples, 0.03%)</title><rect x="367.7" y="707.0" width="0.3" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="370.7" y="718.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (1 samples, 0.03%)</title><rect x="368.0" y="707.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="371.0" y="718.0"></text>
</g>
<g>
<title>__lll_lock_wait (1 samples, 0.03%)</title><rect x="368.4" y="707.0" width="0.4" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="371.4" y="718.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.03%)</title><rect x="368.4" y="691.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="371.4" y="702.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.03%)</title><rect x="368.4" y="675.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="371.4" y="686.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.03%)</title><rect x="368.4" y="659.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="371.4" y="670.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.03%)</title><rect x="368.4" y="643.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="371.4" y="654.0"></text>
</g>
<g>
<title>futex_wait (1 samples, 0.03%)</title><rect x="368.4" y="627.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="371.4" y="638.0"></text>
</g>
<g>
<title>futex_wait_setup (1 samples, 0.03%)</title><rect x="368.4" y="611.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="371.4" y="622.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock (1 samples, 0.03%)</title><rect x="368.8" y="707.0" width="0.4" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="371.8" y="718.0"></text>
</g>
<g>
<title>java_lang_Thread::thread(oopDesc*) (1 samples, 0.03%)</title><rect x="369.2" y="707.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="372.2" y="718.0"></text>
</g>
<g>
<title>pthread_mutex_lock (2 samples, 0.06%)</title><rect x="369.6" y="707.0" width="0.7" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="372.6" y="718.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="370.3" y="723.0" width="0.4" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="373.3" y="734.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/ld-2.31.so (1 samples, 0.03%)</title><rect x="370.3" y="707.0" width="0.4" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="373.3" y="718.0"></text>
</g>
<g>
<title>__pthread_cond_signal (20 samples, 0.64%)</title><rect x="370.7" y="723.0" width="7.6" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="373.7" y="734.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (16 samples, 0.51%)</title><rect x="372.2" y="707.0" width="6.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="375.2" y="718.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.03%)</title><rect x="372.2" y="691.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="375.2" y="702.0"></text>
</g>
<g>
<title>do_syscall_64 (15 samples, 0.48%)</title><rect x="372.6" y="691.0" width="5.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="375.6" y="702.0"></text>
</g>
<g>
<title>__x64_sys_futex (15 samples, 0.48%)</title><rect x="372.6" y="675.0" width="5.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="375.6" y="686.0"></text>
</g>
<g>
<title>do_futex (15 samples, 0.48%)</title><rect x="372.6" y="659.0" width="5.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="375.6" y="670.0"></text>
</g>
<g>
<title>futex_wake (15 samples, 0.48%)</title><rect x="372.6" y="643.0" width="5.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="375.6" y="654.0"></text>
</g>
<g>
<title>get_futex_key (1 samples, 0.03%)</title><rect x="373.3" y="627.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="376.3" y="638.0"></text>
</g>
<g>
<title>mark_wake_futex (2 samples, 0.06%)</title><rect x="373.7" y="627.0" width="0.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="376.7" y="638.0"></text>
</g>
<g>
<title>wake_up_q (10 samples, 0.32%)</title><rect x="374.5" y="627.0" width="3.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="377.5" y="638.0"></text>
</g>
<g>
<title>try_to_wake_up (10 samples, 0.32%)</title><rect x="374.5" y="611.0" width="3.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="377.5" y="622.0"></text>
</g>
<g>
<title>__lock_text_start (10 samples, 0.32%)</title><rect x="374.5" y="595.0" width="3.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="377.5" y="606.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (2 samples, 0.06%)</title><rect x="378.3" y="867.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="381.3" y="878.0"></text>
</g>
<g>
<title>java/util/HashMap.get (2 samples, 0.06%)</title><rect x="378.3" y="851.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="381.3" y="862.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (2 samples, 0.06%)</title><rect x="378.3" y="835.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="381.3" y="846.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (2 samples, 0.06%)</title><rect x="378.3" y="819.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="381.3" y="830.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (2 samples, 0.06%)</title><rect x="378.3" y="803.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="381.3" y="814.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (1 samples, 0.03%)</title><rect x="378.6" y="787.0" width="0.4" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="381.6" y="798.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (1 samples, 0.03%)</title><rect x="379.0" y="867.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="382.0" y="878.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.03%)</title><rect x="379.0" y="851.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="382.0" y="862.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.03%)</title><rect x="379.0" y="835.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="382.0" y="846.0"></text>
</g>
<g>
<title>RequestHandler1_put.handleRequest (1 samples, 0.03%)</title><rect x="379.0" y="819.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="382.0" y="830.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (6 samples, 0.19%)</title><rect x="379.4" y="899.0" width="2.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="382.4" y="910.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (1 samples, 0.03%)</title><rect x="379.4" y="883.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="382.4" y="894.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.03%)</title><rect x="379.4" y="867.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="382.4" y="878.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.03%)</title><rect x="379.4" y="851.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="382.4" y="862.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (1 samples, 0.03%)</title><rect x="379.4" y="835.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="382.4" y="846.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2 samples, 0.06%)</title><rect x="379.8" y="883.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="382.8" y="894.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2 samples, 0.06%)</title><rect x="379.8" y="867.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="382.8" y="878.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.startsWith (3 samples, 0.10%)</title><rect x="380.5" y="883.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="383.5" y="894.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (1 samples, 0.03%)</title><rect x="381.7" y="899.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="384.7" y="910.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.03%)</title><rect x="381.7" y="883.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="384.7" y="894.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.03%)</title><rect x="381.7" y="867.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="384.7" y="878.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (5 samples, 0.16%)</title><rect x="382.0" y="899.0" width="1.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="385.0" y="910.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2 samples, 0.06%)</title><rect x="383.2" y="883.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="386.2" y="894.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (2 samples, 0.06%)</title><rect x="383.9" y="915.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="386.9" y="926.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (41 samples, 1.31%)</title><rect x="384.7" y="915.0" width="15.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="387.7" y="926.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (41 samples, 1.31%)</title><rect x="384.7" y="899.0" width="15.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="387.7" y="910.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (11 samples, 0.35%)</title><rect x="385.1" y="883.0" width="4.1" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="388.1" y="894.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (2 samples, 0.06%)</title><rect x="385.4" y="867.0" width="0.8" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="388.4" y="878.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.03%)</title><rect x="386.2" y="867.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="389.2" y="878.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (6 samples, 0.19%)</title><rect x="386.6" y="867.0" width="2.2" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="389.6" y="878.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (3 samples, 0.10%)</title><rect x="386.6" y="851.0" width="1.1" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="389.6" y="862.0"></text>
</g>
<g>
<title>ResourceMark::reset_to_mark() (1 samples, 0.03%)</title><rect x="387.7" y="851.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="390.7" y="862.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.03%)</title><rect x="388.1" y="851.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="391.1" y="862.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (1 samples, 0.03%)</title><rect x="388.5" y="851.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="391.5" y="862.0"></text>
</g>
<g>
<title>void AccessInternal::arraycopy_conjoint&lt;signed char&gt;(signed char*, signed char*, unsigned long) (1 samples, 0.03%)</title><rect x="388.8" y="867.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="391.8" y="878.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (1 samples, 0.03%)</title><rect x="389.2" y="883.0" width="0.4" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="392.2" y="894.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (2 samples, 0.06%)</title><rect x="389.6" y="883.0" width="0.8" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="392.6" y="894.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (1 samples, 0.03%)</title><rect x="390.4" y="883.0" width="0.3" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="393.4" y="894.0"></text>
</g>
<g>
<title>recv (25 samples, 0.80%)</title><rect x="390.7" y="883.0" width="9.5" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="393.7" y="894.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (21 samples, 0.67%)</title><rect x="392.2" y="867.0" width="8.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="395.2" y="878.0"></text>
</g>
<g>
<title>do_syscall_64 (21 samples, 0.67%)</title><rect x="392.2" y="851.0" width="8.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="395.2" y="862.0"></text>
</g>
<g>
<title>__x64_sys_recvfrom (19 samples, 0.61%)</title><rect x="393.0" y="835.0" width="7.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="396.0" y="846.0"></text>
</g>
<g>
<title>__sys_recvfrom (19 samples, 0.61%)</title><rect x="393.0" y="819.0" width="7.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="396.0" y="830.0"></text>
</g>
<g>
<title>sock_recvmsg (17 samples, 0.54%)</title><rect x="393.0" y="803.0" width="6.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="396.0" y="814.0"></text>
</g>
<g>
<title>inet6_recvmsg (14 samples, 0.45%)</title><rect x="393.0" y="787.0" width="5.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="396.0" y="798.0"></text>
</g>
<g>
<title>tcp_recvmsg (14 samples, 0.45%)</title><rect x="393.0" y="771.0" width="5.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="396.0" y="782.0"></text>
</g>
<g>
<title>__kfree_skb (2 samples, 0.06%)</title><rect x="393.8" y="755.0" width="0.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="396.8" y="766.0"></text>
</g>
<g>
<title>skb_release_all (2 samples, 0.06%)</title><rect x="393.8" y="739.0" width="0.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="396.8" y="750.0"></text>
</g>
<g>
<title>dst_release (1 samples, 0.03%)</title><rect x="393.8" y="723.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="396.8" y="734.0"></text>
</g>
<g>
<title>skb_release_head_state (1 samples, 0.03%)</title><rect x="394.1" y="723.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="397.1" y="734.0"></text>
</g>
<g>
<title>dst_release (1 samples, 0.03%)</title><rect x="394.1" y="707.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="397.1" y="718.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (8 samples, 0.26%)</title><rect x="394.5" y="755.0" width="3.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="397.5" y="766.0"></text>
</g>
<g>
<title>__skb_datagram_iter (8 samples, 0.26%)</title><rect x="394.5" y="739.0" width="3.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="397.5" y="750.0"></text>
</g>
<g>
<title>simple_copy_to_iter (7 samples, 0.22%)</title><rect x="394.9" y="723.0" width="2.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="397.9" y="734.0"></text>
</g>
<g>
<title>__check_object_size (3 samples, 0.10%)</title><rect x="394.9" y="707.0" width="1.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="397.9" y="718.0"></text>
</g>
<g>
<title>__virt_addr_valid (2 samples, 0.06%)</title><rect x="395.3" y="691.0" width="0.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="398.3" y="702.0"></text>
</g>
<g>
<title>_copy_to_iter (4 samples, 0.13%)</title><rect x="396.0" y="707.0" width="1.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="399.0" y="718.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (2 samples, 0.06%)</title><rect x="396.4" y="691.0" width="0.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="399.4" y="702.0"></text>
</g>
<g>
<title>copyout (1 samples, 0.03%)</title><rect x="397.2" y="691.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="400.2" y="702.0"></text>
</g>
<g>
<title>tcp_rcv_space_adjust (2 samples, 0.06%)</title><rect x="397.5" y="755.0" width="0.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="400.5" y="766.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (2 samples, 0.06%)</title><rect x="397.5" y="739.0" width="0.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="400.5" y="750.0"></text>
</g>
<g>
<title>read_tsc (2 samples, 0.06%)</title><rect x="397.5" y="723.0" width="0.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="400.5" y="734.0"></text>
</g>
<g>
<title>security_socket_recvmsg (3 samples, 0.10%)</title><rect x="398.3" y="787.0" width="1.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="401.3" y="798.0"></text>
</g>
<g>
<title>apparmor_socket_recvmsg (2 samples, 0.06%)</title><rect x="398.7" y="771.0" width="0.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="401.7" y="782.0"></text>
</g>
<g>
<title>aa_sk_perm (2 samples, 0.06%)</title><rect x="398.7" y="755.0" width="0.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="401.7" y="766.0"></text>
</g>
<g>
<title>sockfd_lookup_light (2 samples, 0.06%)</title><rect x="399.4" y="803.0" width="0.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="402.4" y="814.0"></text>
</g>
<g>
<title>__fdget (2 samples, 0.06%)</title><rect x="399.4" y="787.0" width="0.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="402.4" y="798.0"></text>
</g>
<g>
<title>__fget_light (2 samples, 0.06%)</title><rect x="399.4" y="771.0" width="0.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="402.4" y="782.0"></text>
</g>
<g>
<title>__fget (2 samples, 0.06%)</title><rect x="399.4" y="755.0" width="0.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="402.4" y="766.0"></text>
</g>
<g>
<title>[NIO Selector #7 tid=4270] (150 samples, 4.81%)</title><rect x="400.2" y="979.0" width="56.7" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="403.2" y="990.0">[NIO S..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (150 samples, 4.81%)</title><rect x="400.2" y="963.0" width="56.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="403.2" y="974.0">one/ni..</text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (2 samples, 0.06%)</title><rect x="400.2" y="947.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="403.2" y="958.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (2 samples, 0.06%)</title><rect x="400.2" y="931.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="403.2" y="942.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.findNext (2 samples, 0.06%)</title><rect x="400.2" y="915.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="403.2" y="926.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (39 samples, 1.25%)</title><rect x="400.9" y="947.0" width="14.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="403.9" y="958.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (39 samples, 1.25%)</title><rect x="400.9" y="931.0" width="14.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="403.9" y="942.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (2 samples, 0.06%)</title><rect x="401.7" y="915.0" width="0.8" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="404.7" y="926.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSelector_epollWait (2 samples, 0.06%)</title><rect x="402.5" y="915.0" width="0.7" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="405.5" y="926.0"></text>
</g>
<g>
<title>clock_gettime (4 samples, 0.13%)</title><rect x="403.2" y="915.0" width="1.5" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="406.2" y="926.0"></text>
</g>
<g>
<title>clock_gettime (1 samples, 0.03%)</title><rect x="404.3" y="899.0" width="0.4" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="407.3" y="910.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.03%)</title><rect x="404.3" y="883.0" width="0.4" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="407.3" y="894.0"></text>
</g>
<g>
<title>epoll_wait (29 samples, 0.93%)</title><rect x="404.7" y="915.0" width="11.0" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="407.7" y="926.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (22 samples, 0.70%)</title><rect x="407.4" y="899.0" width="8.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="410.4" y="910.0"></text>
</g>
<g>
<title>__x64_sys_epoll_wait (1 samples, 0.03%)</title><rect x="407.4" y="883.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="410.4" y="894.0"></text>
</g>
<g>
<title>do_syscall_64 (21 samples, 0.67%)</title><rect x="407.7" y="883.0" width="8.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="410.7" y="894.0"></text>
</g>
<g>
<title>__x64_sys_epoll_wait (18 samples, 0.58%)</title><rect x="408.9" y="867.0" width="6.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="411.9" y="878.0"></text>
</g>
<g>
<title>do_epoll_wait (18 samples, 0.58%)</title><rect x="408.9" y="851.0" width="6.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="411.9" y="862.0"></text>
</g>
<g>
<title>ep_poll (17 samples, 0.54%)</title><rect x="408.9" y="835.0" width="6.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="411.9" y="846.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.0 (5 samples, 0.16%)</title><rect x="409.3" y="819.0" width="1.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="412.3" y="830.0"></text>
</g>
<g>
<title>ep_item_poll.isra.0 (1 samples, 0.03%)</title><rect x="409.6" y="803.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="412.6" y="814.0"></text>
</g>
<g>
<title>ep_send_events_proc (3 samples, 0.10%)</title><rect x="410.0" y="803.0" width="1.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="413.0" y="814.0"></text>
</g>
<g>
<title>ep_item_poll.isra.0 (1 samples, 0.03%)</title><rect x="410.4" y="787.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="413.4" y="798.0"></text>
</g>
<g>
<title>sock_poll (1 samples, 0.03%)</title><rect x="410.8" y="787.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="413.8" y="798.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (11 samples, 0.35%)</title><rect x="411.1" y="819.0" width="4.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="414.1" y="830.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (11 samples, 0.35%)</title><rect x="411.1" y="803.0" width="4.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="414.1" y="814.0"></text>
</g>
<g>
<title>schedule (8 samples, 0.26%)</title><rect x="412.3" y="787.0" width="3.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="415.3" y="798.0"></text>
</g>
<g>
<title>__schedule (8 samples, 0.26%)</title><rect x="412.3" y="771.0" width="3.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="415.3" y="782.0"></text>
</g>
<g>
<title>finish_task_switch (7 samples, 0.22%)</title><rect x="412.7" y="755.0" width="2.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="415.7" y="766.0"></text>
</g>
<g>
<title>fput_many (1 samples, 0.03%)</title><rect x="415.3" y="835.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="418.3" y="846.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (109 samples, 3.49%)</title><rect x="415.7" y="947.0" width="41.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="418.7" y="958.0">one..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (107 samples, 3.43%)</title><rect x="416.4" y="931.0" width="40.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="419.4" y="942.0">one..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (60 samples, 1.92%)</title><rect x="416.4" y="915.0" width="22.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="419.4" y="926.0">o..</text>
</g>
<g>
<title>java/lang/Integer.parseInt (1 samples, 0.03%)</title><rect x="416.4" y="899.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="419.4" y="910.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (45 samples, 1.44%)</title><rect x="416.8" y="899.0" width="17.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="419.8" y="910.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (45 samples, 1.44%)</title><rect x="416.8" y="883.0" width="17.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="419.8" y="894.0"></text>
</g>
<g>
<title>RequestHandler1_put.handleRequest (45 samples, 1.44%)</title><rect x="416.8" y="867.0" width="17.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="419.8" y="878.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (6 samples, 0.19%)</title><rect x="416.8" y="851.0" width="2.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="419.8" y="862.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (6 samples, 0.19%)</title><rect x="416.8" y="835.0" width="2.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="419.8" y="846.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.03%)</title><rect x="417.6" y="819.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="420.6" y="830.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.03%)</title><rect x="417.6" y="803.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="420.6" y="814.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (1 samples, 0.03%)</title><rect x="417.6" y="787.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="420.6" y="798.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (3 samples, 0.10%)</title><rect x="418.0" y="819.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="421.0" y="830.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.03%)</title><rect x="418.7" y="803.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="421.7" y="814.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.03%)</title><rect x="418.7" y="787.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="421.7" y="798.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (1 samples, 0.03%)</title><rect x="418.7" y="771.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="421.7" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivlev/ThreadController.put (39 samples, 1.25%)</title><rect x="419.1" y="851.0" width="14.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="422.1" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (39 samples, 1.25%)</title><rect x="419.1" y="835.0" width="14.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="422.1" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (39 samples, 1.25%)</title><rect x="419.1" y="819.0" width="14.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="422.1" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.enqueue (2 samples, 0.06%)</title><rect x="419.1" y="803.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="422.1" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (2 samples, 0.06%)</title><rect x="419.1" y="787.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="422.1" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (2 samples, 0.06%)</title><rect x="419.1" y="771.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="422.1" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.transferForSignal (2 samples, 0.06%)</title><rect x="419.1" y="755.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="422.1" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (37 samples, 1.19%)</title><rect x="419.8" y="803.0" width="14.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="422.8" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (37 samples, 1.19%)</title><rect x="419.8" y="787.0" width="14.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="422.8" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (37 samples, 1.19%)</title><rect x="419.8" y="771.0" width="14.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="422.8" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (37 samples, 1.19%)</title><rect x="419.8" y="755.0" width="14.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="422.8" y="766.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (36 samples, 1.15%)</title><rect x="420.2" y="739.0" width="13.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="423.2" y="750.0"></text>
</g>
<g>
<title>Unsafe_Unpark (3 samples, 0.10%)</title><rect x="420.2" y="723.0" width="1.2" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="423.2" y="734.0"></text>
</g>
<g>
<title>oopDesc::address_field(int) const (1 samples, 0.03%)</title><rect x="420.6" y="707.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="423.6" y="718.0"></text>
</g>
<g>
<title>pthread_mutex_lock (1 samples, 0.03%)</title><rect x="421.0" y="707.0" width="0.4" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="424.0" y="718.0"></text>
</g>
<g>
<title>__pthread_cond_signal (33 samples, 1.06%)</title><rect x="421.4" y="723.0" width="12.4" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="424.4" y="734.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (28 samples, 0.90%)</title><rect x="423.2" y="707.0" width="10.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="426.2" y="718.0"></text>
</g>
<g>
<title>do_syscall_64 (28 samples, 0.90%)</title><rect x="423.2" y="691.0" width="10.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="426.2" y="702.0"></text>
</g>
<g>
<title>__x64_sys_futex (26 samples, 0.83%)</title><rect x="424.0" y="675.0" width="9.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="427.0" y="686.0"></text>
</g>
<g>
<title>do_futex (26 samples, 0.83%)</title><rect x="424.0" y="659.0" width="9.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="427.0" y="670.0"></text>
</g>
<g>
<title>futex_wake (25 samples, 0.80%)</title><rect x="424.4" y="643.0" width="9.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="427.4" y="654.0"></text>
</g>
<g>
<title>mark_wake_futex (1 samples, 0.03%)</title><rect x="424.8" y="627.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="427.8" y="638.0"></text>
</g>
<g>
<title>wake_up_q (23 samples, 0.74%)</title><rect x="425.1" y="627.0" width="8.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="428.1" y="638.0"></text>
</g>
<g>
<title>try_to_wake_up (23 samples, 0.74%)</title><rect x="425.1" y="611.0" width="8.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="428.1" y="622.0"></text>
</g>
<g>
<title>__lock_text_start (23 samples, 0.74%)</title><rect x="425.1" y="595.0" width="8.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="428.1" y="606.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (6 samples, 0.19%)</title><rect x="433.8" y="899.0" width="2.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="436.8" y="910.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (2 samples, 0.06%)</title><rect x="433.8" y="883.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="436.8" y="894.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.06%)</title><rect x="433.8" y="867.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="436.8" y="878.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.06%)</title><rect x="433.8" y="851.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="436.8" y="862.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (2 samples, 0.06%)</title><rect x="433.8" y="835.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="436.8" y="846.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.03%)</title><rect x="434.2" y="819.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="437.2" y="830.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (3 samples, 0.10%)</title><rect x="434.6" y="883.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="437.6" y="894.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (3 samples, 0.10%)</title><rect x="434.6" y="867.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="437.6" y="878.0"></text>
</g>
<g>
<title>_new_array_nozero_Java (1 samples, 0.03%)</title><rect x="435.3" y="851.0" width="0.4" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="438.3" y="862.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.startsWith (1 samples, 0.03%)</title><rect x="435.7" y="883.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="438.7" y="894.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (2 samples, 0.06%)</title><rect x="436.1" y="899.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="439.1" y="910.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (2 samples, 0.06%)</title><rect x="436.1" y="883.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="439.1" y="894.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (1 samples, 0.03%)</title><rect x="436.1" y="867.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="439.1" y="878.0"></text>
</g>
<g>
<title>java/lang/String.charAt (1 samples, 0.03%)</title><rect x="436.1" y="851.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="439.1" y="862.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (1 samples, 0.03%)</title><rect x="436.5" y="867.0" width="0.4" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="439.5" y="878.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (1 samples, 0.03%)</title><rect x="436.9" y="899.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="439.9" y="910.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.03%)</title><rect x="436.9" y="883.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="439.9" y="894.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.03%)</title><rect x="436.9" y="867.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="439.9" y="878.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (5 samples, 0.16%)</title><rect x="437.2" y="899.0" width="1.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="440.2" y="910.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (3 samples, 0.10%)</title><rect x="438.0" y="883.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="441.0" y="894.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (2 samples, 0.06%)</title><rect x="439.1" y="915.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="442.1" y="926.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (45 samples, 1.44%)</title><rect x="439.9" y="915.0" width="17.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="442.9" y="926.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (44 samples, 1.41%)</title><rect x="440.3" y="899.0" width="16.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="443.3" y="910.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (8 samples, 0.26%)</title><rect x="441.8" y="883.0" width="3.0" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="444.8" y="894.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (2 samples, 0.06%)</title><rect x="442.1" y="867.0" width="0.8" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="445.1" y="878.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.03%)</title><rect x="442.9" y="867.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="445.9" y="878.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (2 samples, 0.06%)</title><rect x="443.3" y="867.0" width="0.7" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="446.3" y="878.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (1 samples, 0.03%)</title><rect x="444.0" y="867.0" width="0.4" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="447.0" y="878.0"></text>
</g>
<g>
<title>void AccessInternal::arraycopy_conjoint&lt;signed char&gt;(signed char*, signed char*, unsigned long) (1 samples, 0.03%)</title><rect x="444.4" y="867.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="447.4" y="878.0"></text>
</g>
<g>
<title>recv (32 samples, 1.03%)</title><rect x="444.8" y="883.0" width="12.1" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="447.8" y="894.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (28 samples, 0.90%)</title><rect x="446.3" y="867.0" width="10.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="449.3" y="878.0"></text>
</g>
<g>
<title>do_syscall_64 (28 samples, 0.90%)</title><rect x="446.3" y="851.0" width="10.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="449.3" y="862.0"></text>
</g>
<g>
<title>__sys_recvfrom (1 samples, 0.03%)</title><rect x="448.2" y="835.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="451.2" y="846.0"></text>
</g>
<g>
<title>__x64_sys_recvfrom (22 samples, 0.70%)</title><rect x="448.6" y="835.0" width="8.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="451.6" y="846.0"></text>
</g>
<g>
<title>__sys_recvfrom (20 samples, 0.64%)</title><rect x="448.6" y="819.0" width="7.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="451.6" y="830.0"></text>
</g>
<g>
<title>sock_recvmsg (18 samples, 0.58%)</title><rect x="448.6" y="803.0" width="6.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="451.6" y="814.0"></text>
</g>
<g>
<title>inet6_recvmsg (14 samples, 0.45%)</title><rect x="448.6" y="787.0" width="5.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="451.6" y="798.0"></text>
</g>
<g>
<title>tcp_recvmsg (14 samples, 0.45%)</title><rect x="448.6" y="771.0" width="5.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="451.6" y="782.0"></text>
</g>
<g>
<title>__kfree_skb (1 samples, 0.03%)</title><rect x="450.8" y="755.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="453.8" y="766.0"></text>
</g>
<g>
<title>skb_release_all (1 samples, 0.03%)</title><rect x="450.8" y="739.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="453.8" y="750.0"></text>
</g>
<g>
<title>skb_release_head_state (1 samples, 0.03%)</title><rect x="450.8" y="723.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="453.8" y="734.0"></text>
</g>
<g>
<title>dst_release (1 samples, 0.03%)</title><rect x="450.8" y="707.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="453.8" y="718.0"></text>
</g>
<g>
<title>release_sock (1 samples, 0.03%)</title><rect x="451.2" y="755.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="454.2" y="766.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (2 samples, 0.06%)</title><rect x="451.6" y="755.0" width="0.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="454.6" y="766.0"></text>
</g>
<g>
<title>__skb_datagram_iter (2 samples, 0.06%)</title><rect x="451.6" y="739.0" width="0.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="454.6" y="750.0"></text>
</g>
<g>
<title>simple_copy_to_iter (1 samples, 0.03%)</title><rect x="452.0" y="723.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="455.0" y="734.0"></text>
</g>
<g>
<title>__check_object_size (1 samples, 0.03%)</title><rect x="452.0" y="707.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="455.0" y="718.0"></text>
</g>
<g>
<title>__virt_addr_valid (1 samples, 0.03%)</title><rect x="452.0" y="691.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="455.0" y="702.0"></text>
</g>
<g>
<title>tcp_cleanup_rbuf (1 samples, 0.03%)</title><rect x="452.4" y="755.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="455.4" y="766.0"></text>
</g>
<g>
<title>tcp_rcv_space_adjust (2 samples, 0.06%)</title><rect x="452.7" y="755.0" width="0.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="455.7" y="766.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (2 samples, 0.06%)</title><rect x="452.7" y="739.0" width="0.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="455.7" y="750.0"></text>
</g>
<g>
<title>ktime_get (2 samples, 0.06%)</title><rect x="452.7" y="723.0" width="0.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="455.7" y="734.0"></text>
</g>
<g>
<title>tcp_release_cb (1 samples, 0.03%)</title><rect x="453.5" y="755.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="456.5" y="766.0"></text>
</g>
<g>
<title>security_socket_recvmsg (4 samples, 0.13%)</title><rect x="453.9" y="787.0" width="1.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="456.9" y="798.0"></text>
</g>
<g>
<title>aa_sk_perm (1 samples, 0.03%)</title><rect x="454.2" y="771.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="457.2" y="782.0"></text>
</g>
<g>
<title>apparmor_socket_recvmsg (2 samples, 0.06%)</title><rect x="454.6" y="771.0" width="0.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="457.6" y="782.0"></text>
</g>
<g>
<title>aa_sk_perm (2 samples, 0.06%)</title><rect x="454.6" y="755.0" width="0.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="457.6" y="766.0"></text>
</g>
<g>
<title>sockfd_lookup_light (2 samples, 0.06%)</title><rect x="455.4" y="803.0" width="0.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="458.4" y="814.0"></text>
</g>
<g>
<title>__fdget (2 samples, 0.06%)</title><rect x="455.4" y="787.0" width="0.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="458.4" y="798.0"></text>
</g>
<g>
<title>__fget_light (2 samples, 0.06%)</title><rect x="455.4" y="771.0" width="0.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="458.4" y="782.0"></text>
</g>
<g>
<title>__fget (2 samples, 0.06%)</title><rect x="455.4" y="755.0" width="0.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="458.4" y="766.0"></text>
</g>
<g>
<title>fput (1 samples, 0.03%)</title><rect x="456.1" y="819.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="459.1" y="830.0"></text>
</g>
<g>
<title>import_single_range (1 samples, 0.03%)</title><rect x="456.5" y="819.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="459.5" y="830.0"></text>
</g>
<g>
<title>[Service Thread tid=4258] (1 samples, 0.03%)</title><rect x="456.9" y="979.0" width="0.4" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="459.9" y="990.0"></text>
</g>
<g>
<title>start_thread (1 samples, 0.03%)</title><rect x="456.9" y="963.0" width="0.4" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="459.9" y="974.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (1 samples, 0.03%)</title><rect x="456.9" y="947.0" width="0.4" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="459.9" y="958.0"></text>
</g>
<g>
<title>Thread::call_run() (1 samples, 0.03%)</title><rect x="456.9" y="931.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="459.9" y="942.0"></text>
</g>
<g>
<title>JavaThread::run() (1 samples, 0.03%)</title><rect x="456.9" y="915.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="459.9" y="926.0"></text>
</g>
<g>
<title>ServiceThread::service_thread_entry(JavaThread*, Thread*) (1 samples, 0.03%)</title><rect x="456.9" y="899.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="459.9" y="910.0"></text>
</g>
<g>
<title>JvmtiDeferredEvent::post() (1 samples, 0.03%)</title><rect x="456.9" y="883.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="459.9" y="894.0"></text>
</g>
<g>
<title>JvmtiExport::post_compiled_method_load(nmethod*) (1 samples, 0.03%)</title><rect x="456.9" y="867.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="459.9" y="878.0"></text>
</g>
<g>
<title>create_inline_record(nmethod*) (1 samples, 0.03%)</title><rect x="456.9" y="851.0" width="0.4" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="459.9" y="862.0"></text>
</g>
<g>
<title>ScopeDesc::sender() const (1 samples, 0.03%)</title><rect x="456.9" y="835.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="459.9" y="846.0"></text>
</g>
<g>
<title>[VM Periodic Tas tid=4259] (1 samples, 0.03%)</title><rect x="457.3" y="979.0" width="0.4" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="460.3" y="990.0"></text>
</g>
<g>
<title>start_thread (1 samples, 0.03%)</title><rect x="457.3" y="963.0" width="0.4" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="460.3" y="974.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (1 samples, 0.03%)</title><rect x="457.3" y="947.0" width="0.4" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="460.3" y="958.0"></text>
</g>
<g>
<title>Thread::call_run() (1 samples, 0.03%)</title><rect x="457.3" y="931.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="460.3" y="942.0"></text>
</g>
<g>
<title>WatcherThread::run() (1 samples, 0.03%)</title><rect x="457.3" y="915.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="460.3" y="926.0"></text>
</g>
<g>
<title>Monitor::unlock() (1 samples, 0.03%)</title><rect x="457.3" y="899.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="460.3" y="910.0"></text>
</g>
<g>
<title>[VM Thread tid=4251] (1 samples, 0.03%)</title><rect x="457.7" y="979.0" width="0.3" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="460.7" y="990.0"></text>
</g>
<g>
<title>start_thread (1 samples, 0.03%)</title><rect x="457.7" y="963.0" width="0.3" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="460.7" y="974.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (1 samples, 0.03%)</title><rect x="457.7" y="947.0" width="0.3" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="460.7" y="958.0"></text>
</g>
<g>
<title>Thread::call_run() (1 samples, 0.03%)</title><rect x="457.7" y="931.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="460.7" y="942.0"></text>
</g>
<g>
<title>VMThread::run() (1 samples, 0.03%)</title><rect x="457.7" y="915.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="460.7" y="926.0"></text>
</g>
<g>
<title>VMThread::loop() (1 samples, 0.03%)</title><rect x="457.7" y="899.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="460.7" y="910.0"></text>
</g>
<g>
<title>__sched_yield (1 samples, 0.03%)</title><rect x="457.7" y="883.0" width="0.3" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="460.7" y="894.0"></text>
</g>
<g>
<title>[pool-1-thread-1 tid=4426] (15 samples, 0.48%)</title><rect x="458.0" y="979.0" width="5.7" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="461.0" y="990.0"></text>
</g>
<g>
<title>[unknown_Java] (1 samples, 0.03%)</title><rect x="458.0" y="963.0" width="0.4" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="461.0" y="974.0"></text>
</g>
<g>
<title>Interpreter (1 samples, 0.03%)</title><rect x="458.0" y="947.0" width="0.4" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="461.0" y="958.0"></text>
</g>
<g>
<title>java/lang/Thread.run (14 samples, 0.45%)</title><rect x="458.4" y="963.0" width="5.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="461.4" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (14 samples, 0.45%)</title><rect x="458.4" y="947.0" width="5.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="461.4" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (14 samples, 0.45%)</title><rect x="458.4" y="931.0" width="5.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="461.4" y="942.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl$$Lambda$72/552887719.run (14 samples, 0.45%)</title><rect x="458.4" y="915.0" width="5.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="461.4" y="926.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.lambda$flush$6 (14 samples, 0.45%)</title><rect x="458.4" y="899.0" width="5.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="461.4" y="910.0"></text>
</g>
<g>
<title>ru/mail/polis/MemTable.iterator (2 samples, 0.06%)</title><rect x="458.4" y="883.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="461.4" y="894.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (2 samples, 0.06%)</title><rect x="458.4" y="867.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="461.4" y="878.0"></text>
</g>
<g>
<title>jdk/internal/loader/ClassLoaders$AppClassLoader.loadClass (2 samples, 0.06%)</title><rect x="458.4" y="851.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="461.4" y="862.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClass (2 samples, 0.06%)</title><rect x="458.4" y="835.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="461.4" y="846.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClassOrNull (2 samples, 0.06%)</title><rect x="458.4" y="819.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="461.4" y="830.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findClassOnClassPathOrNull (2 samples, 0.06%)</title><rect x="458.4" y="803.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="461.4" y="814.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.defineClass (2 samples, 0.06%)</title><rect x="458.4" y="787.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="461.4" y="798.0"></text>
</g>
<g>
<title>java/security/SecureClassLoader.defineClass (2 samples, 0.06%)</title><rect x="458.4" y="771.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="461.4" y="782.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass (2 samples, 0.06%)</title><rect x="458.4" y="755.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="461.4" y="766.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass1 (2 samples, 0.06%)</title><rect x="458.4" y="739.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="461.4" y="750.0"></text>
</g>
<g>
<title>Java_java_lang_ClassLoader_defineClass1 (2 samples, 0.06%)</title><rect x="458.4" y="723.0" width="0.8" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="461.4" y="734.0"></text>
</g>
<g>
<title>JVM_DefineClassWithSource (2 samples, 0.06%)</title><rect x="458.4" y="707.0" width="0.8" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="461.4" y="718.0"></text>
</g>
<g>
<title>jvm_define_class_common(JNIEnv_*, char const*, _jobject*, signed char const*, int, _jobject*, char const*, Thread*) (2 samples, 0.06%)</title><rect x="458.4" y="691.0" width="0.8" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="461.4" y="702.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_from_stream(Symbol*, Handle, Handle, ClassFileStream*, Thread*) (2 samples, 0.06%)</title><rect x="458.4" y="675.0" width="0.8" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="461.4" y="686.0"></text>
</g>
<g>
<title>KlassFactory::create_from_stream(ClassFileStream*, Symbol*, ClassLoaderData*, Handle, InstanceKlass const*, GrowableArray&lt;Handle&gt;*, Thread*) (1 samples, 0.03%)</title><rect x="458.4" y="659.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="461.4" y="670.0"></text>
</g>
<g>
<title>ClassFileParser::ClassFileParser(ClassFileStream*, Symbol*, ClassLoaderData*, Handle, InstanceKlass const*, GrowableArray&lt;Handle&gt;*, ClassFileParser::Publicity, Thread*) (1 samples, 0.03%)</title><rect x="458.4" y="643.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="461.4" y="654.0"></text>
</g>
<g>
<title>ClassFileParser::parse_stream(ClassFileStream const*, Thread*) [clone .part.140] (1 samples, 0.03%)</title><rect x="458.4" y="627.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="461.4" y="638.0"></text>
</g>
<g>
<title>ClassFileParser::parse_constant_pool(ClassFileStream const*, ConstantPool*, int, Thread*) (1 samples, 0.03%)</title><rect x="458.4" y="611.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="461.4" y="622.0"></text>
</g>
<g>
<title>ClassFileParser::parse_constant_pool_entries(ClassFileStream const*, ConstantPool*, int, Thread*) (1 samples, 0.03%)</title><rect x="458.4" y="595.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="461.4" y="606.0"></text>
</g>
<g>
<title>SymbolTable::lookup(int, char const*, int, unsigned int) (1 samples, 0.03%)</title><rect x="458.4" y="579.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="461.4" y="590.0"></text>
</g>
<g>
<title>SystemDictionary::find_or_define_instance_class(Symbol*, Handle, InstanceKlass*, Thread*) (1 samples, 0.03%)</title><rect x="458.8" y="659.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="461.8" y="670.0"></text>
</g>
<g>
<title>PlaceholderTable::find_and_remove(int, unsigned int, Symbol*, ClassLoaderData*, PlaceholderTable::classloadAction, Thread*) (1 samples, 0.03%)</title><rect x="458.8" y="643.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="461.8" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/SSTable.write (11 samples, 0.35%)</title><rect x="459.2" y="883.0" width="4.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="462.2" y="894.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.next (1 samples, 0.03%)</title><rect x="459.2" y="867.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="462.2" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (1 samples, 0.03%)</title><rect x="459.2" y="851.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="462.2" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (1 samples, 0.03%)</title><rect x="459.2" y="835.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="462.2" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.advance (1 samples, 0.03%)</title><rect x="459.2" y="819.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="462.2" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.ascend (1 samples, 0.03%)</title><rect x="459.2" y="803.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="462.2" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.tooHigh (1 samples, 0.03%)</title><rect x="459.2" y="787.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="462.2" y="798.0"></text>
</g>
<g>
<title>InterpreterRuntime::frequency_counter_overflow(JavaThread*, unsigned char*) (1 samples, 0.03%)</title><rect x="459.2" y="771.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="462.2" y="782.0"></text>
</g>
<g>
<title>InterpreterRuntime::frequency_counter_overflow_inner(JavaThread*, unsigned char*) (1 samples, 0.03%)</title><rect x="459.2" y="755.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="462.2" y="766.0"></text>
</g>
<g>
<title>TieredThresholdPolicy::event(methodHandle const&amp;, methodHandle const&amp;, int, int, CompLevel, CompiledMethod*, JavaThread*) (1 samples, 0.03%)</title><rect x="459.2" y="739.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="462.2" y="750.0"></text>
</g>
<g>
<title>TieredThresholdPolicy::method_invocation_event(methodHandle const&amp;, methodHandle const&amp;, CompLevel, CompiledMethod*, JavaThread*) (1 samples, 0.03%)</title><rect x="459.2" y="723.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="462.2" y="734.0"></text>
</g>
<g>
<title>Method::build_interpreter_method_data(methodHandle const&amp;, Thread*) (1 samples, 0.03%)</title><rect x="459.2" y="707.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="462.2" y="718.0"></text>
</g>
<g>
<title>MethodData::allocate(ClassLoaderData*, methodHandle const&amp;, Thread*) (1 samples, 0.03%)</title><rect x="459.2" y="691.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="462.2" y="702.0"></text>
</g>
<g>
<title>Metaspace::allocate(ClassLoaderData*, unsigned long, MetaspaceObj::Type, Thread*) (1 samples, 0.03%)</title><rect x="459.2" y="675.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="462.2" y="686.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.write (10 samples, 0.32%)</title><rect x="459.5" y="867.0" width="3.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="462.5" y="878.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.beginBlocking (1 samples, 0.03%)</title><rect x="459.5" y="851.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="462.5" y="862.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (1 samples, 0.03%)</title><rect x="459.5" y="835.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="462.5" y="846.0"></text>
</g>
<g>
<title>java/lang/Thread.isInterrupted (1 samples, 0.03%)</title><rect x="459.5" y="819.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="462.5" y="830.0"></text>
</g>
<g>
<title>java/lang/Thread.isInterrupted (1 samples, 0.03%)</title><rect x="459.5" y="803.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="462.5" y="814.0"></text>
</g>
<g>
<title>JVM_IsInterrupted (1 samples, 0.03%)</title><rect x="459.5" y="787.0" width="0.4" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="462.5" y="798.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.217] (1 samples, 0.03%)</title><rect x="459.5" y="771.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="462.5" y="782.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (9 samples, 0.29%)</title><rect x="459.9" y="851.0" width="3.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="462.9" y="862.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.writeFromNativeBuffer (7 samples, 0.22%)</title><rect x="460.3" y="835.0" width="2.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="463.3" y="846.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.write (7 samples, 0.22%)</title><rect x="460.3" y="819.0" width="2.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="463.3" y="830.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.write0 (7 samples, 0.22%)</title><rect x="460.3" y="803.0" width="2.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="463.3" y="814.0"></text>
</g>
<g>
<title>__libc_write (7 samples, 0.22%)</title><rect x="460.3" y="787.0" width="2.6" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="463.3" y="798.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (3 samples, 0.10%)</title><rect x="461.8" y="771.0" width="1.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="464.8" y="782.0"></text>
</g>
<g>
<title>do_syscall_64 (3 samples, 0.10%)</title><rect x="461.8" y="755.0" width="1.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="464.8" y="766.0"></text>
</g>
<g>
<title>__x64_sys_write (2 samples, 0.06%)</title><rect x="462.2" y="739.0" width="0.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="465.2" y="750.0"></text>
</g>
<g>
<title>ksys_write (2 samples, 0.06%)</title><rect x="462.2" y="723.0" width="0.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="465.2" y="734.0"></text>
</g>
<g>
<title>vfs_write (2 samples, 0.06%)</title><rect x="462.2" y="707.0" width="0.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="465.2" y="718.0"></text>
</g>
<g>
<title>__vfs_write (2 samples, 0.06%)</title><rect x="462.2" y="691.0" width="0.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="465.2" y="702.0"></text>
</g>
<g>
<title>new_sync_write (2 samples, 0.06%)</title><rect x="462.2" y="675.0" width="0.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="465.2" y="686.0"></text>
</g>
<g>
<title>ext4_file_write_iter (2 samples, 0.06%)</title><rect x="462.2" y="659.0" width="0.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="465.2" y="670.0"></text>
</g>
<g>
<title>__generic_file_write_iter (2 samples, 0.06%)</title><rect x="462.2" y="643.0" width="0.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="465.2" y="654.0"></text>
</g>
<g>
<title>generic_perform_write (2 samples, 0.06%)</title><rect x="462.2" y="627.0" width="0.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="465.2" y="638.0"></text>
</g>
<g>
<title>ext4_da_write_begin (1 samples, 0.03%)</title><rect x="462.2" y="611.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="465.2" y="622.0"></text>
</g>
<g>
<title>grab_cache_page_write_begin (1 samples, 0.03%)</title><rect x="462.2" y="595.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="465.2" y="606.0"></text>
</g>
<g>
<title>pagecache_get_page (1 samples, 0.03%)</title><rect x="462.2" y="579.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="465.2" y="590.0"></text>
</g>
<g>
<title>find_get_entry (1 samples, 0.03%)</title><rect x="462.2" y="563.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="465.2" y="574.0"></text>
</g>
<g>
<title>xas_start (1 samples, 0.03%)</title><rect x="462.2" y="547.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="465.2" y="558.0"></text>
</g>
<g>
<title>ext4_da_write_end (1 samples, 0.03%)</title><rect x="462.6" y="611.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="465.6" y="622.0"></text>
</g>
<g>
<title>generic_write_end (1 samples, 0.03%)</title><rect x="462.6" y="595.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="465.6" y="606.0"></text>
</g>
<g>
<title>__mark_inode_dirty (1 samples, 0.03%)</title><rect x="462.6" y="579.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="465.6" y="590.0"></text>
</g>
<g>
<title>ext4_dirty_inode (1 samples, 0.03%)</title><rect x="462.6" y="563.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="465.6" y="574.0"></text>
</g>
<g>
<title>ext4_mark_inode_dirty (1 samples, 0.03%)</title><rect x="462.6" y="547.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="465.6" y="558.0"></text>
</g>
<g>
<title>ext4_mark_iloc_dirty (1 samples, 0.03%)</title><rect x="462.6" y="531.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="465.6" y="542.0"></text>
</g>
<g>
<title>ext4_do_update_inode (1 samples, 0.03%)</title><rect x="462.6" y="515.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="465.6" y="526.0"></text>
</g>
<g>
<title>ext4_inode_csum_set (1 samples, 0.03%)</title><rect x="462.6" y="499.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="465.6" y="510.0"></text>
</g>
<g>
<title>ext4_inode_csum.isra.0 (1 samples, 0.03%)</title><rect x="462.6" y="483.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="465.6" y="494.0"></text>
</g>
<g>
<title>crypto_shash_update (1 samples, 0.03%)</title><rect x="462.6" y="467.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="465.6" y="478.0"></text>
</g>
<g>
<title>crc32c_pcl_intel_update (1 samples, 0.03%)</title><rect x="462.6" y="451.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="465.6" y="462.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (1 samples, 0.03%)</title><rect x="462.9" y="835.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="465.9" y="846.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/TableSet.fromFlushingToSSTable (1 samples, 0.03%)</title><rect x="463.3" y="883.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="466.3" y="894.0"></text>
</g>
<g>
<title>InterpreterRuntime::_new(JavaThread*, ConstantPool*, int) (1 samples, 0.03%)</title><rect x="463.3" y="867.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="466.3" y="878.0"></text>
</g>
<g>
<title>ConstantPool::klass_at_impl(constantPoolHandle const&amp;, int, bool, Thread*) (1 samples, 0.03%)</title><rect x="463.3" y="851.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="466.3" y="862.0"></text>
</g>
<g>
<title>LinkResolver::check_klass_accessability(Klass*, Klass*, bool, Thread*) (1 samples, 0.03%)</title><rect x="463.3" y="835.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="466.3" y="846.0"></text>
</g>
<g>
<title>[worker_0 tid=4341] (240 samples, 7.69%)</title><rect x="463.7" y="979.0" width="90.7" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="466.7" y="990.0">[worker_0 ..</text>
</g>
<g>
<title>java/lang/Thread.run (240 samples, 7.69%)</title><rect x="463.7" y="963.0" width="90.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="466.7" y="974.0">java/lang/..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (240 samples, 7.69%)</title><rect x="463.7" y="947.0" width="90.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="466.7" y="958.0">java/util/..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (240 samples, 7.69%)</title><rect x="463.7" y="931.0" width="90.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="466.7" y="942.0">java/util/..</text>
</g>
<g>
<title>I2C/C2I adapters (1 samples, 0.03%)</title><rect x="464.1" y="915.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="467.1" y="926.0"></text>
</g>
<g>
<title>java/lang/Thread.interrupted (1 samples, 0.03%)</title><rect x="464.5" y="915.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="467.5" y="926.0"></text>
</g>
<g>
<title>java/lang/Thread.isInterrupted (1 samples, 0.03%)</title><rect x="464.5" y="899.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="467.5" y="910.0"></text>
</g>
<g>
<title>JVM_IsInterrupted (1 samples, 0.03%)</title><rect x="464.5" y="883.0" width="0.3" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="467.5" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.unlock (2 samples, 0.06%)</title><rect x="464.8" y="915.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="467.8" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (2 samples, 0.06%)</title><rect x="464.8" y="899.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="467.8" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (2 samples, 0.06%)</title><rect x="464.8" y="883.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="467.8" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (78 samples, 2.50%)</title><rect x="465.6" y="915.0" width="29.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="468.6" y="926.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (78 samples, 2.50%)</title><rect x="465.6" y="899.0" width="29.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="468.6" y="910.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (61 samples, 1.95%)</title><rect x="465.6" y="883.0" width="23.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="468.6" y="894.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (5 samples, 0.16%)</title><rect x="465.6" y="867.0" width="1.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="468.6" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.fullyRelease (4 samples, 0.13%)</title><rect x="467.5" y="867.0" width="1.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="470.5" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (4 samples, 0.13%)</title><rect x="467.5" y="851.0" width="1.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="470.5" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (4 samples, 0.13%)</title><rect x="467.5" y="835.0" width="1.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="470.5" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (4 samples, 0.13%)</title><rect x="467.5" y="819.0" width="1.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="470.5" y="830.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (4 samples, 0.13%)</title><rect x="467.5" y="803.0" width="1.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="470.5" y="814.0"></text>
</g>
<g>
<title>Unsafe_Unpark (1 samples, 0.03%)</title><rect x="467.5" y="787.0" width="0.4" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="470.5" y="798.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (1 samples, 0.03%)</title><rect x="467.5" y="771.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="470.5" y="782.0"></text>
</g>
<g>
<title>__pthread_cond_signal (3 samples, 0.10%)</title><rect x="467.9" y="787.0" width="1.1" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="470.9" y="798.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.03%)</title><rect x="468.6" y="771.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="471.6" y="782.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.03%)</title><rect x="468.6" y="755.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="471.6" y="766.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.03%)</title><rect x="468.6" y="739.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="471.6" y="750.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.03%)</title><rect x="468.6" y="723.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="471.6" y="734.0"></text>
</g>
<g>
<title>futex_wake (1 samples, 0.03%)</title><rect x="468.6" y="707.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="471.6" y="718.0"></text>
</g>
<g>
<title>wake_up_q (1 samples, 0.03%)</title><rect x="468.6" y="691.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="471.6" y="702.0"></text>
</g>
<g>
<title>try_to_wake_up (1 samples, 0.03%)</title><rect x="468.6" y="675.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="471.6" y="686.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.03%)</title><rect x="468.6" y="659.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="471.6" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (52 samples, 1.67%)</title><rect x="469.0" y="867.0" width="19.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="472.0" y="878.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (52 samples, 1.67%)</title><rect x="469.0" y="851.0" width="19.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="472.0" y="862.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.03%)</title><rect x="469.4" y="835.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="472.4" y="846.0"></text>
</g>
<g>
<title>Unsafe_Park (23 samples, 0.74%)</title><rect x="469.8" y="835.0" width="8.6" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="472.8" y="846.0"></text>
</g>
<g>
<title>JavaThreadParkedState::JavaThreadParkedState(JavaThread*, bool) (1 samples, 0.03%)</title><rect x="470.5" y="819.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="473.5" y="830.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (5 samples, 0.16%)</title><rect x="470.9" y="819.0" width="1.9" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="473.9" y="830.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/ld-2.31.so (1 samples, 0.03%)</title><rect x="472.0" y="803.0" width="0.4" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="475.0" y="814.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (1 samples, 0.03%)</title><rect x="472.4" y="803.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="475.4" y="814.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/ld-2.31.so (1 samples, 0.03%)</title><rect x="472.4" y="787.0" width="0.4" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="475.4" y="798.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.235] (1 samples, 0.03%)</title><rect x="472.8" y="819.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="475.8" y="830.0"></text>
</g>
<g>
<title>__GI___pthread_mutex_trylock (1 samples, 0.03%)</title><rect x="473.2" y="819.0" width="0.3" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="476.2" y="830.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock (7 samples, 0.22%)</title><rect x="473.5" y="819.0" width="2.7" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="476.5" y="830.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (3 samples, 0.10%)</title><rect x="475.0" y="803.0" width="1.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="478.0" y="814.0"></text>
</g>
<g>
<title>do_syscall_64 (3 samples, 0.10%)</title><rect x="475.0" y="787.0" width="1.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="478.0" y="798.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.03%)</title><rect x="475.8" y="771.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="478.8" y="782.0"></text>
</g>
<g>
<title>java_lang_Thread::get_thread_status(oopDesc*) (1 samples, 0.03%)</title><rect x="476.2" y="819.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="479.2" y="830.0"></text>
</g>
<g>
<title>java_lang_Thread::set_thread_status(oopDesc*, java_lang_Thread::ThreadStatus) (1 samples, 0.03%)</title><rect x="476.6" y="819.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="479.6" y="830.0"></text>
</g>
<g>
<title>pthread_mutex_trylock@plt (3 samples, 0.10%)</title><rect x="476.9" y="819.0" width="1.2" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="479.9" y="830.0"></text>
</g>
<g>
<title>pthread_mutex_unlock@plt (1 samples, 0.03%)</title><rect x="478.1" y="819.0" width="0.3" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="481.1" y="830.0"></text>
</g>
<g>
<title>[unknown] (23 samples, 0.74%)</title><rect x="478.4" y="835.0" width="8.7" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="481.4" y="846.0"></text>
</g>
<g>
<title>__pthread_cond_wait (20 samples, 0.64%)</title><rect x="478.4" y="819.0" width="7.6" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="481.4" y="830.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (15 samples, 0.48%)</title><rect x="480.3" y="803.0" width="5.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="483.3" y="814.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.03%)</title><rect x="480.3" y="787.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="483.3" y="798.0"></text>
</g>
<g>
<title>do_syscall_64 (14 samples, 0.45%)</title><rect x="480.7" y="787.0" width="5.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="483.7" y="798.0"></text>
</g>
<g>
<title>__x64_sys_futex (14 samples, 0.45%)</title><rect x="480.7" y="771.0" width="5.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="483.7" y="782.0"></text>
</g>
<g>
<title>do_futex (12 samples, 0.38%)</title><rect x="481.5" y="755.0" width="4.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="484.5" y="766.0"></text>
</g>
<g>
<title>futex_wait (12 samples, 0.38%)</title><rect x="481.5" y="739.0" width="4.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="484.5" y="750.0"></text>
</g>
<g>
<title>futex_wait_queue_me (6 samples, 0.19%)</title><rect x="481.5" y="723.0" width="2.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="484.5" y="734.0"></text>
</g>
<g>
<title>schedule (5 samples, 0.16%)</title><rect x="481.8" y="707.0" width="1.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="484.8" y="718.0"></text>
</g>
<g>
<title>__schedule (5 samples, 0.16%)</title><rect x="481.8" y="691.0" width="1.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="484.8" y="702.0"></text>
</g>
<g>
<title>finish_task_switch (4 samples, 0.13%)</title><rect x="482.2" y="675.0" width="1.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="485.2" y="686.0"></text>
</g>
<g>
<title>futex_wait_setup (4 samples, 0.13%)</title><rect x="483.7" y="723.0" width="1.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="486.7" y="734.0"></text>
</g>
<g>
<title>get_futex_key (1 samples, 0.03%)</title><rect x="484.1" y="707.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="487.1" y="718.0"></text>
</g>
<g>
<title>get_futex_value_locked (2 samples, 0.06%)</title><rect x="484.5" y="707.0" width="0.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="487.5" y="718.0"></text>
</g>
<g>
<title>hash_futex (2 samples, 0.06%)</title><rect x="485.3" y="723.0" width="0.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="488.3" y="734.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (3 samples, 0.10%)</title><rect x="486.0" y="819.0" width="1.1" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="489.0" y="830.0"></text>
</g>
<g>
<title>java_lang_Thread::set_thread_status(oopDesc*, java_lang_Thread::ThreadStatus) (4 samples, 0.13%)</title><rect x="487.1" y="835.0" width="1.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="490.1" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (1 samples, 0.03%)</title><rect x="488.7" y="883.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="491.7" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (1 samples, 0.03%)</title><rect x="488.7" y="867.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="491.7" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (1 samples, 0.03%)</title><rect x="488.7" y="851.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="491.7" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (16 samples, 0.51%)</title><rect x="489.0" y="883.0" width="6.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="492.0" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (16 samples, 0.51%)</title><rect x="489.0" y="867.0" width="6.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="492.0" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (16 samples, 0.51%)</title><rect x="489.0" y="851.0" width="6.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="492.0" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (16 samples, 0.51%)</title><rect x="489.0" y="835.0" width="6.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="492.0" y="846.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (13 samples, 0.42%)</title><rect x="490.2" y="819.0" width="4.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="493.2" y="830.0"></text>
</g>
<g>
<title>Unsafe_Unpark (2 samples, 0.06%)</title><rect x="490.2" y="803.0" width="0.7" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="493.2" y="814.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (1 samples, 0.03%)</title><rect x="490.2" y="787.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="493.2" y="798.0"></text>
</g>
<g>
<title>pthread_mutex_lock@plt (1 samples, 0.03%)</title><rect x="490.5" y="787.0" width="0.4" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="493.5" y="798.0"></text>
</g>
<g>
<title>__pthread_cond_signal (11 samples, 0.35%)</title><rect x="490.9" y="803.0" width="4.2" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="493.9" y="814.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (10 samples, 0.32%)</title><rect x="491.3" y="787.0" width="3.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="494.3" y="798.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.03%)</title><rect x="491.3" y="771.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="494.3" y="782.0"></text>
</g>
<g>
<title>do_syscall_64 (9 samples, 0.29%)</title><rect x="491.7" y="771.0" width="3.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="494.7" y="782.0"></text>
</g>
<g>
<title>__x64_sys_futex (9 samples, 0.29%)</title><rect x="491.7" y="755.0" width="3.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="494.7" y="766.0"></text>
</g>
<g>
<title>do_futex (9 samples, 0.29%)</title><rect x="491.7" y="739.0" width="3.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="494.7" y="750.0"></text>
</g>
<g>
<title>futex_wake (8 samples, 0.26%)</title><rect x="492.1" y="723.0" width="3.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="495.1" y="734.0"></text>
</g>
<g>
<title>mark_wake_futex (1 samples, 0.03%)</title><rect x="492.1" y="707.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="495.1" y="718.0"></text>
</g>
<g>
<title>wake_up_q (7 samples, 0.22%)</title><rect x="492.4" y="707.0" width="2.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="495.4" y="718.0"></text>
</g>
<g>
<title>try_to_wake_up (7 samples, 0.22%)</title><rect x="492.4" y="691.0" width="2.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="495.4" y="702.0"></text>
</g>
<g>
<title>__lock_text_start (7 samples, 0.22%)</title><rect x="492.4" y="675.0" width="2.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="495.4" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivlev/ThreadController$$Lambda$65/822960827.run (157 samples, 5.03%)</title><rect x="495.1" y="915.0" width="59.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="498.1" y="926.0">ru/mai..</text>
</g>
<g>
<title>ru/mail/polis/service/ivlev/ThreadController.lambda$put$3 (157 samples, 5.03%)</title><rect x="495.1" y="899.0" width="59.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="498.1" y="910.0">ru/mai..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (134 samples, 4.29%)</title><rect x="495.1" y="883.0" width="50.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="498.1" y="894.0">one/n..</text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (2 samples, 0.06%)</title><rect x="495.5" y="867.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="498.5" y="878.0"></text>
</g>
<g>
<title>Handle::Handle(Thread*, oopDesc*) (1 samples, 0.03%)</title><rect x="495.5" y="851.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="498.5" y="862.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (1 samples, 0.03%)</title><rect x="495.8" y="851.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="498.8" y="862.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (1 samples, 0.03%)</title><rect x="495.8" y="835.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="498.8" y="846.0"></text>
</g>
<g>
<title>SpinPause (1 samples, 0.03%)</title><rect x="495.8" y="819.0" width="0.4" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="498.8" y="830.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (129 samples, 4.13%)</title><rect x="496.2" y="867.0" width="48.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="499.2" y="878.0">one/..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (5 samples, 0.16%)</title><rect x="496.2" y="851.0" width="1.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="499.2" y="862.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (5 samples, 0.16%)</title><rect x="496.2" y="835.0" width="1.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="499.2" y="846.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (5 samples, 0.16%)</title><rect x="496.2" y="819.0" width="1.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="499.2" y="830.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (5 samples, 0.16%)</title><rect x="496.2" y="803.0" width="1.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="499.2" y="814.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (5 samples, 0.16%)</title><rect x="496.2" y="787.0" width="1.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="499.2" y="798.0"></text>
</g>
<g>
<title>java/lang/String.charAt (5 samples, 0.16%)</title><rect x="496.2" y="771.0" width="1.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="499.2" y="782.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (124 samples, 3.97%)</title><rect x="498.1" y="851.0" width="46.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="501.1" y="862.0">one/..</text>
</g>
<g>
<title>one/nio/net/Session.write (124 samples, 3.97%)</title><rect x="498.1" y="835.0" width="46.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="501.1" y="846.0">one/..</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (124 samples, 3.97%)</title><rect x="498.1" y="819.0" width="46.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="501.1" y="830.0">one/..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (124 samples, 3.97%)</title><rect x="498.1" y="803.0" width="46.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="501.1" y="814.0">one/..</text>
</g>
<g>
<title>__send (122 samples, 3.91%)</title><rect x="498.1" y="787.0" width="46.1" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="501.1" y="798.0">__send</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (115 samples, 3.68%)</title><rect x="500.8" y="771.0" width="43.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="503.8" y="782.0">entr..</text>
</g>
<g>
<title>__x64_sys_sendto (2 samples, 0.06%)</title><rect x="500.8" y="755.0" width="0.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="503.8" y="766.0"></text>
</g>
<g>
<title>do_syscall_64 (113 samples, 3.62%)</title><rect x="501.5" y="755.0" width="42.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="504.5" y="766.0">do_s..</text>
</g>
<g>
<title>__sys_sendto (1 samples, 0.03%)</title><rect x="502.6" y="739.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="505.6" y="750.0"></text>
</g>
<g>
<title>__x64_sys_sendto (109 samples, 3.49%)</title><rect x="503.0" y="739.0" width="41.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="506.0" y="750.0">__x..</text>
</g>
<g>
<title>__sys_sendto (109 samples, 3.49%)</title><rect x="503.0" y="723.0" width="41.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="506.0" y="734.0">__s..</text>
</g>
<g>
<title>sock_sendmsg (108 samples, 3.46%)</title><rect x="503.0" y="707.0" width="40.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="506.0" y="718.0">soc..</text>
</g>
<g>
<title>inet6_sendmsg (107 samples, 3.43%)</title><rect x="503.4" y="691.0" width="40.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="506.4" y="702.0">ine..</text>
</g>
<g>
<title>tcp_sendmsg (107 samples, 3.43%)</title><rect x="503.4" y="675.0" width="40.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="506.4" y="686.0">tcp..</text>
</g>
<g>
<title>tcp_push (1 samples, 0.03%)</title><rect x="503.4" y="659.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="506.4" y="670.0"></text>
</g>
<g>
<title>tcp_release_cb (1 samples, 0.03%)</title><rect x="503.8" y="659.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="506.8" y="670.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (105 samples, 3.36%)</title><rect x="504.2" y="659.0" width="39.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="507.2" y="670.0">tcp..</text>
</g>
<g>
<title>_copy_from_iter_full (1 samples, 0.03%)</title><rect x="505.3" y="643.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="508.3" y="654.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (1 samples, 0.03%)</title><rect x="505.3" y="627.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="508.3" y="638.0"></text>
</g>
<g>
<title>check_stack_object (1 samples, 0.03%)</title><rect x="505.7" y="643.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="508.7" y="654.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (3 samples, 0.10%)</title><rect x="506.0" y="643.0" width="1.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="509.0" y="654.0"></text>
</g>
<g>
<title>__alloc_skb (2 samples, 0.06%)</title><rect x="506.4" y="627.0" width="0.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="509.4" y="638.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.0 (1 samples, 0.03%)</title><rect x="506.4" y="611.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="509.4" y="622.0"></text>
</g>
<g>
<title>memset_erms (1 samples, 0.03%)</title><rect x="506.4" y="595.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="509.4" y="606.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (1 samples, 0.03%)</title><rect x="506.8" y="611.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="509.8" y="622.0"></text>
</g>
<g>
<title>tcp_push (96 samples, 3.08%)</title><rect x="507.2" y="643.0" width="36.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="510.2" y="654.0">tcp..</text>
</g>
<g>
<title>__tcp_push_pending_frames (96 samples, 3.08%)</title><rect x="507.2" y="627.0" width="36.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="510.2" y="638.0">__t..</text>
</g>
<g>
<title>tcp_write_xmit (96 samples, 3.08%)</title><rect x="507.2" y="611.0" width="36.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="510.2" y="622.0">tcp..</text>
</g>
<g>
<title>__tcp_transmit_skb (86 samples, 2.76%)</title><rect x="507.9" y="595.0" width="32.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="510.9" y="606.0">__..</text>
</g>
<g>
<title>ip_queue_xmit (80 samples, 2.56%)</title><rect x="510.2" y="579.0" width="30.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="513.2" y="590.0">ip..</text>
</g>
<g>
<title>__ip_queue_xmit (80 samples, 2.56%)</title><rect x="510.2" y="563.0" width="30.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="513.2" y="574.0">__..</text>
</g>
<g>
<title>ip_local_out (78 samples, 2.50%)</title><rect x="511.0" y="547.0" width="29.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="514.0" y="558.0">ip..</text>
</g>
<g>
<title>__ip_local_out (1 samples, 0.03%)</title><rect x="511.0" y="531.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="514.0" y="542.0"></text>
</g>
<g>
<title>ip_send_check (1 samples, 0.03%)</title><rect x="511.0" y="515.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="514.0" y="526.0"></text>
</g>
<g>
<title>ip_output (77 samples, 2.47%)</title><rect x="511.3" y="531.0" width="29.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="514.3" y="542.0">ip..</text>
</g>
<g>
<title>__ip_finish_output (1 samples, 0.03%)</title><rect x="511.7" y="515.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="514.7" y="526.0"></text>
</g>
<g>
<title>ip_finish_output (75 samples, 2.40%)</title><rect x="512.1" y="515.0" width="28.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="515.1" y="526.0">ip..</text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (2 samples, 0.06%)</title><rect x="512.1" y="499.0" width="0.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="515.1" y="510.0"></text>
</g>
<g>
<title>__ip_finish_output (73 samples, 2.34%)</title><rect x="512.9" y="499.0" width="27.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="515.9" y="510.0">_..</text>
</g>
<g>
<title>ip_finish_output2 (72 samples, 2.31%)</title><rect x="513.2" y="483.0" width="27.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="516.2" y="494.0">i..</text>
</g>
<g>
<title>__local_bh_enable_ip (67 samples, 2.15%)</title><rect x="513.6" y="467.0" width="25.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="516.6" y="478.0">_..</text>
</g>
<g>
<title>do_softirq.part.0 (67 samples, 2.15%)</title><rect x="513.6" y="451.0" width="25.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="516.6" y="462.0">d..</text>
</g>
<g>
<title>do_softirq_own_stack (66 samples, 2.11%)</title><rect x="514.0" y="435.0" width="24.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="517.0" y="446.0">d..</text>
</g>
<g>
<title>__softirqentry_text_start (65 samples, 2.08%)</title><rect x="514.0" y="419.0" width="24.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="517.0" y="430.0">_..</text>
</g>
<g>
<title>net_rx_action (65 samples, 2.08%)</title><rect x="514.0" y="403.0" width="24.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="517.0" y="414.0">n..</text>
</g>
<g>
<title>process_backlog (64 samples, 2.05%)</title><rect x="514.4" y="387.0" width="24.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="517.4" y="398.0">p..</text>
</g>
<g>
<title>__netif_receive_skb (63 samples, 2.02%)</title><rect x="514.7" y="371.0" width="23.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="517.7" y="382.0">_..</text>
</g>
<g>
<title>__netif_receive_skb_one_core (63 samples, 2.02%)</title><rect x="514.7" y="355.0" width="23.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="517.7" y="366.0">_..</text>
</g>
<g>
<title>__netif_receive_skb_core (2 samples, 0.06%)</title><rect x="515.1" y="339.0" width="0.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="518.1" y="350.0"></text>
</g>
<g>
<title>ip_rcv (60 samples, 1.92%)</title><rect x="515.9" y="339.0" width="22.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="518.9" y="350.0">i..</text>
</g>
<g>
<title>ip_rcv_finish (60 samples, 1.92%)</title><rect x="515.9" y="323.0" width="22.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="518.9" y="334.0">i..</text>
</g>
<g>
<title>ip_local_deliver (60 samples, 1.92%)</title><rect x="515.9" y="307.0" width="22.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="518.9" y="318.0">i..</text>
</g>
<g>
<title>ip_local_deliver_finish (60 samples, 1.92%)</title><rect x="515.9" y="291.0" width="22.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="518.9" y="302.0">i..</text>
</g>
<g>
<title>ip_protocol_deliver_rcu (59 samples, 1.89%)</title><rect x="515.9" y="275.0" width="22.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="518.9" y="286.0">i..</text>
</g>
<g>
<title>_raw_spin_lock (1 samples, 0.03%)</title><rect x="516.3" y="259.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="519.3" y="270.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (1 samples, 0.03%)</title><rect x="516.6" y="259.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="519.6" y="270.0"></text>
</g>
<g>
<title>tcp_v4_rcv (56 samples, 1.79%)</title><rect x="517.0" y="259.0" width="21.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="520.0" y="270.0">t..</text>
</g>
<g>
<title>__inet_lookup_established (2 samples, 0.06%)</title><rect x="517.4" y="243.0" width="0.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="520.4" y="254.0"></text>
</g>
<g>
<title>ipv4_dst_check (1 samples, 0.03%)</title><rect x="518.1" y="243.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="521.1" y="254.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (2 samples, 0.06%)</title><rect x="518.5" y="243.0" width="0.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="521.5" y="254.0"></text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (1 samples, 0.03%)</title><rect x="518.9" y="227.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="521.9" y="238.0"></text>
</g>
<g>
<title>tcp_rcv_established (1 samples, 0.03%)</title><rect x="519.3" y="243.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="522.3" y="254.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (49 samples, 1.57%)</title><rect x="519.7" y="243.0" width="18.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="522.7" y="254.0"></text>
</g>
<g>
<title>tcp_check_space (1 samples, 0.03%)</title><rect x="519.7" y="227.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="522.7" y="238.0"></text>
</g>
<g>
<title>tcp_rcv_established (48 samples, 1.54%)</title><rect x="520.0" y="227.0" width="18.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="523.0" y="238.0"></text>
</g>
<g>
<title>__tcp_ack_snd_check (5 samples, 0.16%)</title><rect x="520.8" y="211.0" width="1.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="523.8" y="222.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (5 samples, 0.16%)</title><rect x="520.8" y="195.0" width="1.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="523.8" y="206.0"></text>
</g>
<g>
<title>sk_reset_timer (5 samples, 0.16%)</title><rect x="520.8" y="179.0" width="1.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="523.8" y="190.0"></text>
</g>
<g>
<title>mod_timer (5 samples, 0.16%)</title><rect x="520.8" y="163.0" width="1.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="523.8" y="174.0"></text>
</g>
<g>
<title>__lock_text_start (5 samples, 0.16%)</title><rect x="520.8" y="147.0" width="1.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="523.8" y="158.0"></text>
</g>
<g>
<title>sock_def_readable (1 samples, 0.03%)</title><rect x="522.7" y="211.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="525.7" y="222.0"></text>
</g>
<g>
<title>tcp_ack (10 samples, 0.32%)</title><rect x="523.1" y="211.0" width="3.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="526.1" y="222.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (8 samples, 0.26%)</title><rect x="523.1" y="195.0" width="3.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="526.1" y="206.0"></text>
</g>
<g>
<title>__kfree_skb (3 samples, 0.10%)</title><rect x="523.4" y="179.0" width="1.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="526.4" y="190.0"></text>
</g>
<g>
<title>kfree_skbmem (1 samples, 0.03%)</title><rect x="523.4" y="163.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="526.4" y="174.0"></text>
</g>
<g>
<title>kmem_cache_free (1 samples, 0.03%)</title><rect x="523.4" y="147.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="526.4" y="158.0"></text>
</g>
<g>
<title>__slab_free (1 samples, 0.03%)</title><rect x="523.4" y="131.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="526.4" y="142.0"></text>
</g>
<g>
<title>skb_release_all (1 samples, 0.03%)</title><rect x="523.8" y="163.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="526.8" y="174.0"></text>
</g>
<g>
<title>skb_release_data (1 samples, 0.03%)</title><rect x="523.8" y="147.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="526.8" y="158.0"></text>
</g>
<g>
<title>skb_release_data (1 samples, 0.03%)</title><rect x="524.2" y="163.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="527.2" y="174.0"></text>
</g>
<g>
<title>bictcp_acked (1 samples, 0.03%)</title><rect x="524.6" y="179.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="527.6" y="190.0"></text>
</g>
<g>
<title>skb_release_all (1 samples, 0.03%)</title><rect x="525.0" y="179.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="528.0" y="190.0"></text>
</g>
<g>
<title>tcp_ack_update_rtt.isra.0 (1 samples, 0.03%)</title><rect x="525.3" y="179.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="528.3" y="190.0"></text>
</g>
<g>
<title>tcp_rack_advance (1 samples, 0.03%)</title><rect x="525.7" y="179.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="528.7" y="190.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (1 samples, 0.03%)</title><rect x="526.1" y="195.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="529.1" y="206.0"></text>
</g>
<g>
<title>tcp_update_pacing_rate (1 samples, 0.03%)</title><rect x="526.5" y="195.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="529.5" y="206.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (1 samples, 0.03%)</title><rect x="526.8" y="211.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="529.8" y="222.0"></text>
</g>
<g>
<title>tcp_data_ready (27 samples, 0.87%)</title><rect x="527.2" y="211.0" width="10.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="530.2" y="222.0"></text>
</g>
<g>
<title>sock_def_readable (27 samples, 0.87%)</title><rect x="527.2" y="195.0" width="10.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="530.2" y="206.0"></text>
</g>
<g>
<title>__wake_up_sync_key (27 samples, 0.87%)</title><rect x="527.2" y="179.0" width="10.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="530.2" y="190.0"></text>
</g>
<g>
<title>__wake_up_common_lock (27 samples, 0.87%)</title><rect x="527.2" y="163.0" width="10.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="530.2" y="174.0"></text>
</g>
<g>
<title>__lock_text_start (27 samples, 0.87%)</title><rect x="527.2" y="147.0" width="10.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="530.2" y="158.0"></text>
</g>
<g>
<title>tcp_event_data_recv (2 samples, 0.06%)</title><rect x="537.4" y="211.0" width="0.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="540.4" y="222.0"></text>
</g>
<g>
<title>tcp_v4_rcv (1 samples, 0.03%)</title><rect x="538.2" y="275.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="541.2" y="286.0"></text>
</g>
<g>
<title>net_rx_action (1 samples, 0.03%)</title><rect x="538.6" y="419.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="541.6" y="430.0"></text>
</g>
<g>
<title>dev_queue_xmit (4 samples, 0.13%)</title><rect x="538.9" y="467.0" width="1.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="541.9" y="478.0"></text>
</g>
<g>
<title>__dev_queue_xmit (4 samples, 0.13%)</title><rect x="538.9" y="451.0" width="1.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="541.9" y="462.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (2 samples, 0.06%)</title><rect x="539.3" y="435.0" width="0.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="542.3" y="446.0"></text>
</g>
<g>
<title>loopback_xmit (1 samples, 0.03%)</title><rect x="539.7" y="419.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="542.7" y="430.0"></text>
</g>
<g>
<title>sk_free (1 samples, 0.03%)</title><rect x="539.7" y="403.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="542.7" y="414.0"></text>
</g>
<g>
<title>validate_xmit_skb (1 samples, 0.03%)</title><rect x="540.1" y="435.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="543.1" y="446.0"></text>
</g>
<g>
<title>netif_skb_features (1 samples, 0.03%)</title><rect x="540.1" y="419.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="543.1" y="430.0"></text>
</g>
<g>
<title>rb_first (1 samples, 0.03%)</title><rect x="540.5" y="595.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="543.5" y="606.0"></text>
</g>
<g>
<title>skb_clone (1 samples, 0.03%)</title><rect x="540.8" y="595.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="543.8" y="606.0"></text>
</g>
<g>
<title>skb_push (1 samples, 0.03%)</title><rect x="541.2" y="595.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="544.2" y="606.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (3 samples, 0.10%)</title><rect x="541.6" y="595.0" width="1.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="544.6" y="606.0"></text>
</g>
<g>
<title>tcp_rearm_rto (2 samples, 0.06%)</title><rect x="542.0" y="579.0" width="0.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="545.0" y="590.0"></text>
</g>
<g>
<title>sk_reset_timer (2 samples, 0.06%)</title><rect x="542.0" y="563.0" width="0.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="545.0" y="574.0"></text>
</g>
<g>
<title>mod_timer (2 samples, 0.06%)</title><rect x="542.0" y="547.0" width="0.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="545.0" y="558.0"></text>
</g>
<g>
<title>__lock_text_start (2 samples, 0.06%)</title><rect x="542.0" y="531.0" width="0.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="545.0" y="542.0"></text>
</g>
<g>
<title>tcp_mtu_probe (1 samples, 0.03%)</title><rect x="542.7" y="595.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="545.7" y="606.0"></text>
</g>
<g>
<title>tcp_v4_send_check (1 samples, 0.03%)</title><rect x="543.1" y="595.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="546.1" y="606.0"></text>
</g>
<g>
<title>tcp_send_mss (1 samples, 0.03%)</title><rect x="543.5" y="643.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="546.5" y="654.0"></text>
</g>
<g>
<title>ipv4_mtu (1 samples, 0.03%)</title><rect x="543.5" y="627.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="546.5" y="638.0"></text>
</g>
<g>
<title>sockfd_lookup_light (1 samples, 0.03%)</title><rect x="543.9" y="707.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="546.9" y="718.0"></text>
</g>
<g>
<title>__fdget (1 samples, 0.03%)</title><rect x="543.9" y="691.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="546.9" y="702.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.03%)</title><rect x="543.9" y="675.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="546.9" y="686.0"></text>
</g>
<g>
<title>__fget (1 samples, 0.03%)</title><rect x="543.9" y="659.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="546.9" y="670.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (2 samples, 0.06%)</title><rect x="544.2" y="787.0" width="0.8" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="547.2" y="798.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (2 samples, 0.06%)</title><rect x="545.0" y="867.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="548.0" y="878.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (2 samples, 0.06%)</title><rect x="545.0" y="851.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="548.0" y="862.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (2 samples, 0.06%)</title><rect x="545.0" y="835.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="548.0" y="846.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (1 samples, 0.03%)</title><rect x="545.7" y="883.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="548.7" y="894.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (1 samples, 0.03%)</title><rect x="545.7" y="867.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="548.7" y="878.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="545.7" y="851.0" width="0.4" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="548.7" y="862.0"></text>
</g>
<g>
<title>__pthread_cond_wait (1 samples, 0.03%)</title><rect x="545.7" y="835.0" width="0.4" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="548.7" y="846.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.03%)</title><rect x="545.7" y="819.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="548.7" y="830.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.03%)</title><rect x="545.7" y="803.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="548.7" y="814.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.03%)</title><rect x="545.7" y="787.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="548.7" y="798.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.03%)</title><rect x="545.7" y="771.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="548.7" y="782.0"></text>
</g>
<g>
<title>futex_wait (1 samples, 0.03%)</title><rect x="545.7" y="755.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="548.7" y="766.0"></text>
</g>
<g>
<title>futex_wait_queue_me (1 samples, 0.03%)</title><rect x="545.7" y="739.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="548.7" y="750.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.03%)</title><rect x="545.7" y="723.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="548.7" y="734.0"></text>
</g>
<g>
<title>__schedule (1 samples, 0.03%)</title><rect x="545.7" y="707.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="548.7" y="718.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.03%)</title><rect x="545.7" y="691.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="548.7" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.upsert (22 samples, 0.70%)</title><rect x="546.1" y="883.0" width="8.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="549.1" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.unlock (2 samples, 0.06%)</title><rect x="546.1" y="867.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="549.1" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.releaseShared (2 samples, 0.06%)</title><rect x="546.1" y="851.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="549.1" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryReleaseShared (2 samples, 0.06%)</title><rect x="546.1" y="835.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="549.1" y="846.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.remove (2 samples, 0.06%)</title><rect x="546.1" y="819.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="549.1" y="830.0"></text>
</g>
<g>
<title>ru/mail/polis/MemTable.upsert (20 samples, 0.64%)</title><rect x="546.9" y="867.0" width="7.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="549.9" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.put (20 samples, 0.64%)</title><rect x="546.9" y="851.0" width="7.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="549.9" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (15 samples, 0.48%)</title><rect x="548.4" y="835.0" width="5.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="551.4" y="846.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (1 samples, 0.03%)</title><rect x="549.5" y="819.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="552.5" y="830.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (1 samples, 0.03%)</title><rect x="549.5" y="803.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="552.5" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Node.&lt;init&gt; (1 samples, 0.03%)</title><rect x="549.9" y="819.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="552.9" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.addCount (1 samples, 0.03%)</title><rect x="550.3" y="819.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="553.3" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (9 samples, 0.29%)</title><rect x="550.7" y="819.0" width="3.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="553.7" y="830.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (9 samples, 0.29%)</title><rect x="550.7" y="803.0" width="3.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="553.7" y="814.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (9 samples, 0.29%)</title><rect x="550.7" y="787.0" width="3.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="553.7" y="798.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (9 samples, 0.29%)</title><rect x="550.7" y="771.0" width="3.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="553.7" y="782.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (1 samples, 0.03%)</title><rect x="554.1" y="835.0" width="0.3" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="557.1" y="846.0"></text>
</g>
<g>
<title>[worker_1 tid=4346] (240 samples, 7.69%)</title><rect x="554.4" y="979.0" width="90.8" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="557.4" y="990.0">[worker_1 ..</text>
</g>
<g>
<title>java/lang/Thread.run (240 samples, 7.69%)</title><rect x="554.4" y="963.0" width="90.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="557.4" y="974.0">java/lang/..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (240 samples, 7.69%)</title><rect x="554.4" y="947.0" width="90.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="557.4" y="958.0">java/util/..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (240 samples, 7.69%)</title><rect x="554.4" y="931.0" width="90.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="557.4" y="942.0">java/util/..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.unlock (1 samples, 0.03%)</title><rect x="554.8" y="915.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="557.8" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (1 samples, 0.03%)</title><rect x="554.8" y="899.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="557.8" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (1 samples, 0.03%)</title><rect x="554.8" y="883.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="557.8" y="894.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivlev/ThreadController.lambda$put$3 (1 samples, 0.03%)</title><rect x="554.8" y="867.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="557.8" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (88 samples, 2.82%)</title><rect x="555.2" y="915.0" width="33.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="558.2" y="926.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (88 samples, 2.82%)</title><rect x="555.2" y="899.0" width="33.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="558.2" y="910.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (60 samples, 1.92%)</title><rect x="555.2" y="883.0" width="22.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="558.2" y="894.0">j..</text>
</g>
<g>
<title>java/lang/Thread.interrupted (1 samples, 0.03%)</title><rect x="556.0" y="867.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="559.0" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (2 samples, 0.06%)</title><rect x="556.3" y="867.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="559.3" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.fullyRelease (5 samples, 0.16%)</title><rect x="557.1" y="867.0" width="1.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="560.1" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (5 samples, 0.16%)</title><rect x="557.1" y="851.0" width="1.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="560.1" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (3 samples, 0.10%)</title><rect x="557.8" y="835.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="560.8" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (3 samples, 0.10%)</title><rect x="557.8" y="819.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="560.8" y="830.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (2 samples, 0.06%)</title><rect x="558.2" y="803.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="561.2" y="814.0"></text>
</g>
<g>
<title>ThreadsListHandle::~ThreadsListHandle() (1 samples, 0.03%)</title><rect x="558.2" y="787.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="561.2" y="798.0"></text>
</g>
<g>
<title>Unsafe_Unpark (1 samples, 0.03%)</title><rect x="558.6" y="787.0" width="0.4" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="561.6" y="798.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.03%)</title><rect x="558.6" y="771.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="561.6" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (50 samples, 1.60%)</title><rect x="559.0" y="867.0" width="18.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="562.0" y="878.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (50 samples, 1.60%)</title><rect x="559.0" y="851.0" width="18.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="562.0" y="862.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.03%)</title><rect x="559.7" y="835.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="562.7" y="846.0"></text>
</g>
<g>
<title>Unsafe_Park (22 samples, 0.70%)</title><rect x="560.1" y="835.0" width="8.3" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="563.1" y="846.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (1 samples, 0.03%)</title><rect x="560.9" y="819.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="563.9" y="830.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (2 samples, 0.06%)</title><rect x="561.2" y="819.0" width="0.8" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="564.2" y="830.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (1 samples, 0.03%)</title><rect x="561.6" y="803.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="564.6" y="814.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/ld-2.31.so (1 samples, 0.03%)</title><rect x="561.6" y="787.0" width="0.4" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="564.6" y="798.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.03%)</title><rect x="562.0" y="819.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="565.0" y="830.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock (15 samples, 0.48%)</title><rect x="562.4" y="819.0" width="5.7" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="565.4" y="830.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (6 samples, 0.19%)</title><rect x="565.8" y="803.0" width="2.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="568.8" y="814.0"></text>
</g>
<g>
<title>do_syscall_64 (6 samples, 0.19%)</title><rect x="565.8" y="787.0" width="2.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="568.8" y="798.0"></text>
</g>
<g>
<title>__x64_sys_futex (4 samples, 0.13%)</title><rect x="566.5" y="771.0" width="1.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="569.5" y="782.0"></text>
</g>
<g>
<title>do_futex (2 samples, 0.06%)</title><rect x="566.9" y="755.0" width="0.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="569.9" y="766.0"></text>
</g>
<g>
<title>futex_wake (1 samples, 0.03%)</title><rect x="566.9" y="739.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="569.9" y="750.0"></text>
</g>
<g>
<title>get_futex_key_refs.isra.0 (1 samples, 0.03%)</title><rect x="566.9" y="723.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="569.9" y="734.0"></text>
</g>
<g>
<title>get_futex_key (1 samples, 0.03%)</title><rect x="567.3" y="739.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="570.3" y="750.0"></text>
</g>
<g>
<title>futex_wake (1 samples, 0.03%)</title><rect x="567.7" y="755.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="570.7" y="766.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.03%)</title><rect x="568.1" y="819.0" width="0.3" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="571.1" y="830.0"></text>
</g>
<g>
<title>[unknown] (24 samples, 0.77%)</title><rect x="568.4" y="835.0" width="9.1" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="571.4" y="846.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/ld-2.31.so (2 samples, 0.06%)</title><rect x="568.4" y="819.0" width="0.8" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="571.4" y="830.0"></text>
</g>
<g>
<title>__pthread_cond_wait (20 samples, 0.64%)</title><rect x="569.2" y="819.0" width="7.5" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="572.2" y="830.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (14 samples, 0.45%)</title><rect x="571.5" y="803.0" width="5.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="574.5" y="814.0"></text>
</g>
<g>
<title>do_syscall_64 (14 samples, 0.45%)</title><rect x="571.5" y="787.0" width="5.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="574.5" y="798.0"></text>
</g>
<g>
<title>__x64_sys_futex (14 samples, 0.45%)</title><rect x="571.5" y="771.0" width="5.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="574.5" y="782.0"></text>
</g>
<g>
<title>do_futex (13 samples, 0.42%)</title><rect x="571.5" y="755.0" width="4.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="574.5" y="766.0"></text>
</g>
<g>
<title>futex_wait (13 samples, 0.42%)</title><rect x="571.5" y="739.0" width="4.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="574.5" y="750.0"></text>
</g>
<g>
<title>futex_wait_queue_me (7 samples, 0.22%)</title><rect x="572.6" y="723.0" width="2.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="575.6" y="734.0"></text>
</g>
<g>
<title>schedule (7 samples, 0.22%)</title><rect x="572.6" y="707.0" width="2.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="575.6" y="718.0"></text>
</g>
<g>
<title>__schedule (7 samples, 0.22%)</title><rect x="572.6" y="691.0" width="2.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="575.6" y="702.0"></text>
</g>
<g>
<title>finish_task_switch (7 samples, 0.22%)</title><rect x="572.6" y="675.0" width="2.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="575.6" y="686.0"></text>
</g>
<g>
<title>futex_wait_setup (3 samples, 0.10%)</title><rect x="575.2" y="723.0" width="1.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="578.2" y="734.0"></text>
</g>
<g>
<title>get_futex_value_locked (2 samples, 0.06%)</title><rect x="575.6" y="707.0" width="0.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="578.6" y="718.0"></text>
</g>
<g>
<title>futex_wait (1 samples, 0.03%)</title><rect x="576.4" y="755.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="579.4" y="766.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (1 samples, 0.03%)</title><rect x="576.7" y="819.0" width="0.4" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="579.7" y="830.0"></text>
</g>
<g>
<title>__pthread_mutex_cond_lock (1 samples, 0.03%)</title><rect x="577.1" y="819.0" width="0.4" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="580.1" y="830.0"></text>
</g>
<g>
<title>java_lang_Thread::set_thread_status(oopDesc*, java_lang_Thread::ThreadStatus) (1 samples, 0.03%)</title><rect x="577.5" y="835.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="580.5" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (5 samples, 0.16%)</title><rect x="577.9" y="883.0" width="1.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="580.9" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (5 samples, 0.16%)</title><rect x="577.9" y="867.0" width="1.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="580.9" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (5 samples, 0.16%)</title><rect x="577.9" y="851.0" width="1.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="580.9" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (4 samples, 0.13%)</title><rect x="578.3" y="835.0" width="1.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="581.3" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (4 samples, 0.13%)</title><rect x="578.3" y="819.0" width="1.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="581.3" y="830.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (4 samples, 0.13%)</title><rect x="578.3" y="803.0" width="1.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="581.3" y="814.0"></text>
</g>
<g>
<title>Unsafe_Park (2 samples, 0.06%)</title><rect x="578.3" y="787.0" width="0.7" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="581.3" y="798.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock (2 samples, 0.06%)</title><rect x="578.3" y="771.0" width="0.7" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="581.3" y="782.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.06%)</title><rect x="579.0" y="787.0" width="0.8" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="582.0" y="798.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/ld-2.31.so (1 samples, 0.03%)</title><rect x="579.0" y="771.0" width="0.4" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="582.0" y="782.0"></text>
</g>
<g>
<title>__GI___pthread_mutex_trylock (1 samples, 0.03%)</title><rect x="579.4" y="771.0" width="0.4" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="582.4" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (23 samples, 0.74%)</title><rect x="579.8" y="883.0" width="8.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="582.8" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (23 samples, 0.74%)</title><rect x="579.8" y="867.0" width="8.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="582.8" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (23 samples, 0.74%)</title><rect x="579.8" y="851.0" width="8.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="582.8" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (23 samples, 0.74%)</title><rect x="579.8" y="835.0" width="8.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="582.8" y="846.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (21 samples, 0.67%)</title><rect x="580.5" y="819.0" width="8.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="583.5" y="830.0"></text>
</g>
<g>
<title>Unsafe_Unpark (4 samples, 0.13%)</title><rect x="580.5" y="803.0" width="1.5" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="583.5" y="814.0"></text>
</g>
<g>
<title>ThreadsListHandle::~ThreadsListHandle() (1 samples, 0.03%)</title><rect x="580.5" y="787.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="583.5" y="798.0"></text>
</g>
<g>
<title>java_lang_Thread::thread(oopDesc*) (2 samples, 0.06%)</title><rect x="580.9" y="787.0" width="0.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="583.9" y="798.0"></text>
</g>
<g>
<title>pthread_mutex_lock (1 samples, 0.03%)</title><rect x="581.7" y="787.0" width="0.3" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="584.7" y="798.0"></text>
</g>
<g>
<title>__pthread_cond_signal (17 samples, 0.54%)</title><rect x="582.0" y="803.0" width="6.5" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="585.0" y="814.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (15 samples, 0.48%)</title><rect x="582.8" y="787.0" width="5.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="585.8" y="798.0"></text>
</g>
<g>
<title>do_syscall_64 (15 samples, 0.48%)</title><rect x="582.8" y="771.0" width="5.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="585.8" y="782.0"></text>
</g>
<g>
<title>__x64_sys_futex (15 samples, 0.48%)</title><rect x="582.8" y="755.0" width="5.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="585.8" y="766.0"></text>
</g>
<g>
<title>do_futex (15 samples, 0.48%)</title><rect x="582.8" y="739.0" width="5.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="585.8" y="750.0"></text>
</g>
<g>
<title>_raw_spin_lock (1 samples, 0.03%)</title><rect x="582.8" y="723.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="585.8" y="734.0"></text>
</g>
<g>
<title>futex_wake (14 samples, 0.45%)</title><rect x="583.2" y="723.0" width="5.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="586.2" y="734.0"></text>
</g>
<g>
<title>mark_wake_futex (1 samples, 0.03%)</title><rect x="583.6" y="707.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="586.6" y="718.0"></text>
</g>
<g>
<title>wake_up_q (12 samples, 0.38%)</title><rect x="583.9" y="707.0" width="4.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="586.9" y="718.0"></text>
</g>
<g>
<title>try_to_wake_up (12 samples, 0.38%)</title><rect x="583.9" y="691.0" width="4.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="586.9" y="702.0"></text>
</g>
<g>
<title>__lock_text_start (12 samples, 0.38%)</title><rect x="583.9" y="675.0" width="4.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="586.9" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivlev/ThreadController$$Lambda$65/822960827.run (150 samples, 4.81%)</title><rect x="588.5" y="915.0" width="56.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="591.5" y="926.0">ru/mai..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (1 samples, 0.03%)</title><rect x="588.8" y="899.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="591.8" y="910.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivlev/ThreadController.lambda$put$3 (148 samples, 4.74%)</title><rect x="589.2" y="899.0" width="56.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="592.2" y="910.0">ru/ma..</text>
</g>
<g>
<title>java/lang/String.isEmpty (1 samples, 0.03%)</title><rect x="589.2" y="883.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="592.2" y="894.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (125 samples, 4.01%)</title><rect x="589.6" y="883.0" width="47.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="592.6" y="894.0">one/..</text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.03%)</title><rect x="590.4" y="867.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="593.4" y="878.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (1 samples, 0.03%)</title><rect x="590.4" y="851.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="593.4" y="862.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (1 samples, 0.03%)</title><rect x="590.4" y="835.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="593.4" y="846.0"></text>
</g>
<g>
<title>SpinPause (1 samples, 0.03%)</title><rect x="590.4" y="819.0" width="0.3" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="593.4" y="830.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (120 samples, 3.84%)</title><rect x="590.7" y="867.0" width="45.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="593.7" y="878.0">one/..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (3 samples, 0.10%)</title><rect x="590.7" y="851.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="593.7" y="862.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (117 samples, 3.75%)</title><rect x="591.9" y="851.0" width="44.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="594.9" y="862.0">one/..</text>
</g>
<g>
<title>one/nio/net/Session.write (117 samples, 3.75%)</title><rect x="591.9" y="835.0" width="44.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="594.9" y="846.0">one/..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (1 samples, 0.03%)</title><rect x="591.9" y="819.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="594.9" y="830.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (116 samples, 3.72%)</title><rect x="592.2" y="819.0" width="43.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="595.2" y="830.0">one/..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (116 samples, 3.72%)</title><rect x="592.2" y="803.0" width="43.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="595.2" y="814.0">one/..</text>
</g>
<g>
<title>__pthread_disable_asynccancel (1 samples, 0.03%)</title><rect x="592.6" y="787.0" width="0.4" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="595.6" y="798.0"></text>
</g>
<g>
<title>__send (114 samples, 3.65%)</title><rect x="593.0" y="787.0" width="43.1" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="596.0" y="798.0">__send</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (108 samples, 3.46%)</title><rect x="595.3" y="771.0" width="40.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="598.3" y="782.0">ent..</text>
</g>
<g>
<title>__x64_sys_sendto (1 samples, 0.03%)</title><rect x="595.3" y="755.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="598.3" y="766.0"></text>
</g>
<g>
<title>do_syscall_64 (107 samples, 3.43%)</title><rect x="595.7" y="755.0" width="40.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="598.7" y="766.0">do_..</text>
</g>
<g>
<title>__x64_sys_sendto (104 samples, 3.33%)</title><rect x="596.8" y="739.0" width="39.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="599.8" y="750.0">__x..</text>
</g>
<g>
<title>__sys_sendto (103 samples, 3.30%)</title><rect x="596.8" y="723.0" width="38.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="599.8" y="734.0">__s..</text>
</g>
<g>
<title>fput_many (1 samples, 0.03%)</title><rect x="597.2" y="707.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="600.2" y="718.0"></text>
</g>
<g>
<title>sock_sendmsg (97 samples, 3.11%)</title><rect x="597.5" y="707.0" width="36.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="600.5" y="718.0">soc..</text>
</g>
<g>
<title>inet6_sendmsg (97 samples, 3.11%)</title><rect x="597.5" y="691.0" width="36.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="600.5" y="702.0">ine..</text>
</g>
<g>
<title>tcp_sendmsg (97 samples, 3.11%)</title><rect x="597.5" y="675.0" width="36.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="600.5" y="686.0">tcp..</text>
</g>
<g>
<title>_raw_spin_lock_bh (1 samples, 0.03%)</title><rect x="597.5" y="659.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="600.5" y="670.0"></text>
</g>
<g>
<title>release_sock (2 samples, 0.06%)</title><rect x="597.9" y="659.0" width="0.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="600.9" y="670.0"></text>
</g>
<g>
<title>_raw_spin_unlock_bh (2 samples, 0.06%)</title><rect x="597.9" y="643.0" width="0.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="600.9" y="654.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (2 samples, 0.06%)</title><rect x="597.9" y="627.0" width="0.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="600.9" y="638.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (94 samples, 3.01%)</title><rect x="598.7" y="659.0" width="35.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="601.7" y="670.0">tcp..</text>
</g>
<g>
<title>__check_object_size (1 samples, 0.03%)</title><rect x="599.1" y="643.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="602.1" y="654.0"></text>
</g>
<g>
<title>__virt_addr_valid (1 samples, 0.03%)</title><rect x="599.1" y="627.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="602.1" y="638.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (4 samples, 0.13%)</title><rect x="599.4" y="643.0" width="1.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="602.4" y="654.0"></text>
</g>
<g>
<title>__alloc_skb (3 samples, 0.10%)</title><rect x="599.4" y="627.0" width="1.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="602.4" y="638.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.0 (3 samples, 0.10%)</title><rect x="599.4" y="611.0" width="1.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="602.4" y="622.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (2 samples, 0.06%)</title><rect x="599.4" y="595.0" width="0.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="602.4" y="606.0"></text>
</g>
<g>
<title>kmalloc_slab (1 samples, 0.03%)</title><rect x="599.8" y="579.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="602.8" y="590.0"></text>
</g>
<g>
<title>memset_erms (1 samples, 0.03%)</title><rect x="600.2" y="595.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="603.2" y="606.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (1 samples, 0.03%)</title><rect x="600.6" y="627.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="603.6" y="638.0"></text>
</g>
<g>
<title>tcp_push (85 samples, 2.72%)</title><rect x="600.9" y="643.0" width="32.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="603.9" y="654.0">tc..</text>
</g>
<g>
<title>__tcp_push_pending_frames (84 samples, 2.69%)</title><rect x="600.9" y="627.0" width="31.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="603.9" y="638.0">__..</text>
</g>
<g>
<title>tcp_write_xmit (84 samples, 2.69%)</title><rect x="600.9" y="611.0" width="31.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="603.9" y="622.0">tc..</text>
</g>
<g>
<title>__tcp_transmit_skb (78 samples, 2.50%)</title><rect x="601.3" y="595.0" width="29.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="604.3" y="606.0">__..</text>
</g>
<g>
<title>ip_queue_xmit (72 samples, 2.31%)</title><rect x="602.5" y="579.0" width="27.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="605.5" y="590.0">i..</text>
</g>
<g>
<title>__ip_queue_xmit (72 samples, 2.31%)</title><rect x="602.5" y="563.0" width="27.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="605.5" y="574.0">_..</text>
</g>
<g>
<title>__sk_dst_check (1 samples, 0.03%)</title><rect x="602.5" y="547.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="605.5" y="558.0"></text>
</g>
<g>
<title>ipv4_dst_check (1 samples, 0.03%)</title><rect x="602.5" y="531.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="605.5" y="542.0"></text>
</g>
<g>
<title>ip_local_out (71 samples, 2.27%)</title><rect x="602.8" y="547.0" width="26.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="605.8" y="558.0">i..</text>
</g>
<g>
<title>ip_finish_output (1 samples, 0.03%)</title><rect x="602.8" y="531.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="605.8" y="542.0"></text>
</g>
<g>
<title>ip_output (70 samples, 2.24%)</title><rect x="603.2" y="531.0" width="26.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="606.2" y="542.0">i..</text>
</g>
<g>
<title>ip_finish_output (70 samples, 2.24%)</title><rect x="603.2" y="515.0" width="26.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="606.2" y="526.0">i..</text>
</g>
<g>
<title>__ip_finish_output (70 samples, 2.24%)</title><rect x="603.2" y="499.0" width="26.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="606.2" y="510.0">_..</text>
</g>
<g>
<title>ip_finish_output2 (70 samples, 2.24%)</title><rect x="603.2" y="483.0" width="26.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="606.2" y="494.0">i..</text>
</g>
<g>
<title>__local_bh_enable_ip (62 samples, 1.99%)</title><rect x="604.7" y="467.0" width="23.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="607.7" y="478.0">_..</text>
</g>
<g>
<title>do_softirq.part.0 (62 samples, 1.99%)</title><rect x="604.7" y="451.0" width="23.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="607.7" y="462.0">d..</text>
</g>
<g>
<title>do_softirq_own_stack (62 samples, 1.99%)</title><rect x="604.7" y="435.0" width="23.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="607.7" y="446.0">d..</text>
</g>
<g>
<title>__softirqentry_text_start (62 samples, 1.99%)</title><rect x="604.7" y="419.0" width="23.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="607.7" y="430.0">_..</text>
</g>
<g>
<title>__kfree_skb_flush (1 samples, 0.03%)</title><rect x="605.1" y="403.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="608.1" y="414.0"></text>
</g>
<g>
<title>net_rx_action (60 samples, 1.92%)</title><rect x="605.5" y="403.0" width="22.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="608.5" y="414.0">n..</text>
</g>
<g>
<title>process_backlog (59 samples, 1.89%)</title><rect x="605.9" y="387.0" width="22.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="608.9" y="398.0">p..</text>
</g>
<g>
<title>__netif_receive_skb (59 samples, 1.89%)</title><rect x="605.9" y="371.0" width="22.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="608.9" y="382.0">_..</text>
</g>
<g>
<title>__netif_receive_skb_one_core (59 samples, 1.89%)</title><rect x="605.9" y="355.0" width="22.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="608.9" y="366.0">_..</text>
</g>
<g>
<title>__netif_receive_skb_core (2 samples, 0.06%)</title><rect x="605.9" y="339.0" width="0.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="608.9" y="350.0"></text>
</g>
<g>
<title>ip_rcv (56 samples, 1.79%)</title><rect x="606.6" y="339.0" width="21.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="609.6" y="350.0">i..</text>
</g>
<g>
<title>ip_rcv_core.isra.0 (2 samples, 0.06%)</title><rect x="606.6" y="323.0" width="0.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="609.6" y="334.0"></text>
</g>
<g>
<title>ip_rcv_finish (54 samples, 1.73%)</title><rect x="607.4" y="323.0" width="20.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="610.4" y="334.0"></text>
</g>
<g>
<title>ip_local_deliver (52 samples, 1.67%)</title><rect x="607.4" y="307.0" width="19.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="610.4" y="318.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (52 samples, 1.67%)</title><rect x="607.4" y="291.0" width="19.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="610.4" y="302.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (52 samples, 1.67%)</title><rect x="607.4" y="275.0" width="19.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="610.4" y="286.0"></text>
</g>
<g>
<title>tcp_v4_rcv (51 samples, 1.63%)</title><rect x="607.8" y="259.0" width="19.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="610.8" y="270.0"></text>
</g>
<g>
<title>__inet_lookup_established (3 samples, 0.10%)</title><rect x="608.1" y="243.0" width="1.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="611.1" y="254.0"></text>
</g>
<g>
<title>inet_ehashfn (1 samples, 0.03%)</title><rect x="608.9" y="227.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="611.9" y="238.0"></text>
</g>
<g>
<title>inet_ehashfn (1 samples, 0.03%)</title><rect x="609.3" y="243.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="612.3" y="254.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (2 samples, 0.06%)</title><rect x="609.6" y="243.0" width="0.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="612.6" y="254.0"></text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (2 samples, 0.06%)</title><rect x="609.6" y="227.0" width="0.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="612.6" y="238.0"></text>
</g>
<g>
<title>tcp_parse_md5sig_option (1 samples, 0.03%)</title><rect x="610.4" y="243.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="613.4" y="254.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (43 samples, 1.38%)</title><rect x="610.8" y="243.0" width="16.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="613.8" y="254.0"></text>
</g>
<g>
<title>ktime_get_seconds (1 samples, 0.03%)</title><rect x="610.8" y="227.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="613.8" y="238.0"></text>
</g>
<g>
<title>tcp_check_space (1 samples, 0.03%)</title><rect x="611.2" y="227.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="614.2" y="238.0"></text>
</g>
<g>
<title>tcp_rcv_established (41 samples, 1.31%)</title><rect x="611.5" y="227.0" width="15.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="614.5" y="238.0"></text>
</g>
<g>
<title>__tcp_ack_snd_check (2 samples, 0.06%)</title><rect x="611.9" y="211.0" width="0.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="614.9" y="222.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (2 samples, 0.06%)</title><rect x="611.9" y="195.0" width="0.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="614.9" y="206.0"></text>
</g>
<g>
<title>sk_reset_timer (2 samples, 0.06%)</title><rect x="611.9" y="179.0" width="0.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="614.9" y="190.0"></text>
</g>
<g>
<title>mod_timer (2 samples, 0.06%)</title><rect x="611.9" y="163.0" width="0.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="614.9" y="174.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.03%)</title><rect x="611.9" y="147.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="614.9" y="158.0"></text>
</g>
<g>
<title>lock_timer_base (1 samples, 0.03%)</title><rect x="612.3" y="147.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="615.3" y="158.0"></text>
</g>
<g>
<title>tcp_ack (9 samples, 0.29%)</title><rect x="612.7" y="211.0" width="3.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="615.7" y="222.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (5 samples, 0.16%)</title><rect x="613.8" y="195.0" width="1.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="616.8" y="206.0"></text>
</g>
<g>
<title>__kfree_skb (1 samples, 0.03%)</title><rect x="614.6" y="179.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="617.6" y="190.0"></text>
</g>
<g>
<title>skb_release_all (1 samples, 0.03%)</title><rect x="614.6" y="163.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="617.6" y="174.0"></text>
</g>
<g>
<title>skb_release_data (1 samples, 0.03%)</title><rect x="614.6" y="147.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="617.6" y="158.0"></text>
</g>
<g>
<title>bictcp_acked (1 samples, 0.03%)</title><rect x="614.9" y="179.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="617.9" y="190.0"></text>
</g>
<g>
<title>tcp_ack_update_rtt.isra.0 (1 samples, 0.03%)</title><rect x="615.3" y="179.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="618.3" y="190.0"></text>
</g>
<g>
<title>tcp_newly_delivered (1 samples, 0.03%)</title><rect x="615.7" y="195.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="618.7" y="206.0"></text>
</g>
<g>
<title>tcp_data_ready (28 samples, 0.90%)</title><rect x="616.1" y="211.0" width="10.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="619.1" y="222.0"></text>
</g>
<g>
<title>sock_def_readable (28 samples, 0.90%)</title><rect x="616.1" y="195.0" width="10.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="619.1" y="206.0"></text>
</g>
<g>
<title>__wake_up_sync_key (28 samples, 0.90%)</title><rect x="616.1" y="179.0" width="10.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="619.1" y="190.0"></text>
</g>
<g>
<title>__wake_up_common_lock (28 samples, 0.90%)</title><rect x="616.1" y="163.0" width="10.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="619.1" y="174.0"></text>
</g>
<g>
<title>__lock_text_start (28 samples, 0.90%)</title><rect x="616.1" y="147.0" width="10.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="619.1" y="158.0"></text>
</g>
<g>
<title>tcp_rearm_rto (1 samples, 0.03%)</title><rect x="626.7" y="211.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="629.7" y="222.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (1 samples, 0.03%)</title><rect x="627.0" y="307.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="630.0" y="318.0"></text>
</g>
<g>
<title>ip_rcv_finish_core.isra.0 (1 samples, 0.03%)</title><rect x="627.4" y="307.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="630.4" y="318.0"></text>
</g>
<g>
<title>ip_rcv_core.isra.0 (1 samples, 0.03%)</title><rect x="627.8" y="339.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="630.8" y="350.0"></text>
</g>
<g>
<title>dev_queue_xmit (4 samples, 0.13%)</title><rect x="628.2" y="467.0" width="1.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="631.2" y="478.0"></text>
</g>
<g>
<title>__dev_queue_xmit (4 samples, 0.13%)</title><rect x="628.2" y="451.0" width="1.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="631.2" y="462.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (1 samples, 0.03%)</title><rect x="628.5" y="435.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="631.5" y="446.0"></text>
</g>
<g>
<title>tcp_wfree (1 samples, 0.03%)</title><rect x="628.5" y="419.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="631.5" y="430.0"></text>
</g>
<g>
<title>loopback_xmit (1 samples, 0.03%)</title><rect x="628.9" y="435.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="631.9" y="446.0"></text>
</g>
<g>
<title>validate_xmit_skb (1 samples, 0.03%)</title><rect x="629.3" y="435.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="632.3" y="446.0"></text>
</g>
<g>
<title>skb_clone (2 samples, 0.06%)</title><rect x="629.7" y="579.0" width="0.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="632.7" y="590.0"></text>
</g>
<g>
<title>__copy_skb_header (1 samples, 0.03%)</title><rect x="629.7" y="563.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="632.7" y="574.0"></text>
</g>
<g>
<title>__skb_clone (1 samples, 0.03%)</title><rect x="630.1" y="563.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="633.1" y="574.0"></text>
</g>
<g>
<title>tcp_rate_skb_sent (1 samples, 0.03%)</title><rect x="630.4" y="579.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="633.4" y="590.0"></text>
</g>
<g>
<title>read_tsc (1 samples, 0.03%)</title><rect x="630.8" y="595.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="633.8" y="606.0"></text>
</g>
<g>
<title>sk_reset_timer (1 samples, 0.03%)</title><rect x="631.2" y="595.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="634.2" y="606.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (2 samples, 0.06%)</title><rect x="631.6" y="595.0" width="0.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="634.6" y="606.0"></text>
</g>
<g>
<title>tcp_rearm_rto (2 samples, 0.06%)</title><rect x="631.6" y="579.0" width="0.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="634.6" y="590.0"></text>
</g>
<g>
<title>sk_reset_timer (2 samples, 0.06%)</title><rect x="631.6" y="563.0" width="0.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="634.6" y="574.0"></text>
</g>
<g>
<title>mod_timer (2 samples, 0.06%)</title><rect x="631.6" y="547.0" width="0.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="634.6" y="558.0"></text>
</g>
<g>
<title>__lock_text_start (2 samples, 0.06%)</title><rect x="631.6" y="531.0" width="0.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="634.6" y="542.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (1 samples, 0.03%)</title><rect x="632.3" y="595.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="635.3" y="606.0"></text>
</g>
<g>
<title>tcp_write_xmit (1 samples, 0.03%)</title><rect x="632.7" y="627.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="635.7" y="638.0"></text>
</g>
<g>
<title>tcp_send_mss (3 samples, 0.10%)</title><rect x="633.1" y="643.0" width="1.1" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="636.1" y="654.0"></text>
</g>
<g>
<title>ipv4_mtu (3 samples, 0.10%)</title><rect x="633.1" y="627.0" width="1.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="636.1" y="638.0"></text>
</g>
<g>
<title>sockfd_lookup_light (4 samples, 0.13%)</title><rect x="634.2" y="707.0" width="1.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="637.2" y="718.0"></text>
</g>
<g>
<title>__fdget (4 samples, 0.13%)</title><rect x="634.2" y="691.0" width="1.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="637.2" y="702.0"></text>
</g>
<g>
<title>__fget_light (4 samples, 0.13%)</title><rect x="634.2" y="675.0" width="1.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="637.2" y="686.0"></text>
</g>
<g>
<title>__fget (4 samples, 0.13%)</title><rect x="634.2" y="659.0" width="1.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="637.2" y="670.0"></text>
</g>
<g>
<title>import_single_range (1 samples, 0.03%)</title><rect x="635.7" y="723.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="638.7" y="734.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (2 samples, 0.06%)</title><rect x="636.1" y="867.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="639.1" y="878.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.upsert (22 samples, 0.70%)</title><rect x="636.9" y="883.0" width="8.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="639.9" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock (1 samples, 0.03%)</title><rect x="636.9" y="867.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="639.9" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireShared (1 samples, 0.03%)</title><rect x="636.9" y="851.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="639.9" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryAcquireShared (1 samples, 0.03%)</title><rect x="636.9" y="835.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="639.9" y="846.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (1 samples, 0.03%)</title><rect x="636.9" y="819.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="639.9" y="830.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (1 samples, 0.03%)</title><rect x="636.9" y="803.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="639.9" y="814.0"></text>
</g>
<g>
<title>ru/mail/polis/MemTable.upsert (21 samples, 0.67%)</title><rect x="637.2" y="867.0" width="8.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="640.2" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.put (21 samples, 0.67%)</title><rect x="637.2" y="851.0" width="8.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="640.2" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (18 samples, 0.58%)</title><rect x="638.0" y="835.0" width="6.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="641.0" y="846.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (2 samples, 0.06%)</title><rect x="638.4" y="819.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="641.4" y="830.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (2 samples, 0.06%)</title><rect x="638.4" y="803.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="641.4" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Node.&lt;init&gt; (1 samples, 0.03%)</title><rect x="639.1" y="819.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="642.1" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (14 samples, 0.45%)</title><rect x="639.5" y="819.0" width="5.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="642.5" y="830.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (14 samples, 0.45%)</title><rect x="639.5" y="803.0" width="5.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="642.5" y="814.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (14 samples, 0.45%)</title><rect x="639.5" y="787.0" width="5.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="642.5" y="798.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (14 samples, 0.45%)</title><rect x="639.5" y="771.0" width="5.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="642.5" y="782.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.03%)</title><rect x="644.8" y="835.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="647.8" y="846.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.03%)</title><rect x="644.8" y="819.0" width="0.4" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="647.8" y="830.0"></text>
</g>
<g>
<title>[worker_2 tid=4350] (241 samples, 7.72%)</title><rect x="645.2" y="979.0" width="91.1" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="648.2" y="990.0">[worker_2 t..</text>
</g>
<g>
<title>java/lang/Thread.run (241 samples, 7.72%)</title><rect x="645.2" y="963.0" width="91.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="648.2" y="974.0">java/lang/T..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (241 samples, 7.72%)</title><rect x="645.2" y="947.0" width="91.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="648.2" y="958.0">java/util/c..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (241 samples, 7.72%)</title><rect x="645.2" y="931.0" width="91.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="648.2" y="942.0">java/util/c..</text>
</g>
<g>
<title>java/lang/Thread.interrupted (3 samples, 0.10%)</title><rect x="645.2" y="915.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="648.2" y="926.0"></text>
</g>
<g>
<title>java/lang/Thread.isInterrupted (3 samples, 0.10%)</title><rect x="645.2" y="899.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="648.2" y="910.0"></text>
</g>
<g>
<title>JVM_IsInterrupted (3 samples, 0.10%)</title><rect x="645.2" y="883.0" width="1.1" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="648.2" y="894.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.03%)</title><rect x="645.2" y="867.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="648.2" y="878.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (1 samples, 0.03%)</title><rect x="645.6" y="867.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="648.6" y="878.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (1 samples, 0.03%)</title><rect x="645.9" y="867.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="648.9" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.unlock (2 samples, 0.06%)</title><rect x="646.3" y="915.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="649.3" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (2 samples, 0.06%)</title><rect x="646.3" y="899.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="649.3" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (2 samples, 0.06%)</title><rect x="646.3" y="883.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="649.3" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (1 samples, 0.03%)</title><rect x="646.7" y="867.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="649.7" y="878.0"></text>
</g>
<g>
<title>vtable stub (1 samples, 0.03%)</title><rect x="646.7" y="851.0" width="0.4" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="649.7" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (82 samples, 2.63%)</title><rect x="647.1" y="915.0" width="31.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="650.1" y="926.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (82 samples, 2.63%)</title><rect x="647.1" y="899.0" width="31.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="650.1" y="910.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (66 samples, 2.11%)</title><rect x="647.1" y="883.0" width="24.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="650.1" y="894.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (1 samples, 0.03%)</title><rect x="647.4" y="867.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="650.4" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (4 samples, 0.13%)</title><rect x="647.8" y="867.0" width="1.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="650.8" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.fullyRelease (9 samples, 0.29%)</title><rect x="649.3" y="867.0" width="3.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="652.3" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (9 samples, 0.29%)</title><rect x="649.3" y="851.0" width="3.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="652.3" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (7 samples, 0.22%)</title><rect x="650.1" y="835.0" width="2.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="653.1" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (7 samples, 0.22%)</title><rect x="650.1" y="819.0" width="2.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="653.1" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.tryRelease (1 samples, 0.03%)</title><rect x="650.1" y="803.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="653.1" y="814.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (6 samples, 0.19%)</title><rect x="650.5" y="803.0" width="2.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="653.5" y="814.0"></text>
</g>
<g>
<title>Unsafe_Unpark (1 samples, 0.03%)</title><rect x="650.5" y="787.0" width="0.4" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="653.5" y="798.0"></text>
</g>
<g>
<title>oopDesc::address_field(int) const (1 samples, 0.03%)</title><rect x="650.5" y="771.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="653.5" y="782.0"></text>
</g>
<g>
<title>__pthread_cond_signal (5 samples, 0.16%)</title><rect x="650.9" y="787.0" width="1.8" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="653.9" y="798.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.06%)</title><rect x="652.0" y="771.0" width="0.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="655.0" y="782.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.06%)</title><rect x="652.0" y="755.0" width="0.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="655.0" y="766.0"></text>
</g>
<g>
<title>__x64_sys_futex (2 samples, 0.06%)</title><rect x="652.0" y="739.0" width="0.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="655.0" y="750.0"></text>
</g>
<g>
<title>do_futex (2 samples, 0.06%)</title><rect x="652.0" y="723.0" width="0.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="655.0" y="734.0"></text>
</g>
<g>
<title>futex_wake (2 samples, 0.06%)</title><rect x="652.0" y="707.0" width="0.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="655.0" y="718.0"></text>
</g>
<g>
<title>wake_up_q (2 samples, 0.06%)</title><rect x="652.0" y="691.0" width="0.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="655.0" y="702.0"></text>
</g>
<g>
<title>try_to_wake_up (2 samples, 0.06%)</title><rect x="652.0" y="675.0" width="0.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="655.0" y="686.0"></text>
</g>
<g>
<title>__lock_text_start (2 samples, 0.06%)</title><rect x="652.0" y="659.0" width="0.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="655.0" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (51 samples, 1.63%)</title><rect x="652.7" y="867.0" width="19.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="655.7" y="878.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (51 samples, 1.63%)</title><rect x="652.7" y="851.0" width="19.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="655.7" y="862.0"></text>
</g>
<g>
<title>JavaThreadParkedState::JavaThreadParkedState(JavaThread*, bool) (1 samples, 0.03%)</title><rect x="653.1" y="835.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="656.1" y="846.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.235] (1 samples, 0.03%)</title><rect x="653.5" y="835.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="656.5" y="846.0"></text>
</g>
<g>
<title>Unsafe_Park (26 samples, 0.83%)</title><rect x="653.9" y="835.0" width="9.8" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="656.9" y="846.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (2 samples, 0.06%)</title><rect x="653.9" y="819.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="656.9" y="830.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (6 samples, 0.19%)</title><rect x="654.6" y="819.0" width="2.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="657.6" y="830.0"></text>
</g>
<g>
<title>JavaFrameAnchor::make_walkable(JavaThread*) (1 samples, 0.03%)</title><rect x="656.1" y="803.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="659.1" y="814.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (1 samples, 0.03%)</title><rect x="656.5" y="803.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="659.5" y="814.0"></text>
</g>
<g>
<title>__GI___pthread_mutex_trylock (1 samples, 0.03%)</title><rect x="656.9" y="819.0" width="0.4" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="659.9" y="830.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock (15 samples, 0.48%)</title><rect x="657.3" y="819.0" width="5.7" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="660.3" y="830.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (7 samples, 0.22%)</title><rect x="660.3" y="803.0" width="2.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="663.3" y="814.0"></text>
</g>
<g>
<title>do_syscall_64 (7 samples, 0.22%)</title><rect x="660.3" y="787.0" width="2.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="663.3" y="798.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.03%)</title><rect x="662.6" y="771.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="665.6" y="782.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.03%)</title><rect x="662.6" y="755.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="665.6" y="766.0"></text>
</g>
<g>
<title>futex_wake (1 samples, 0.03%)</title><rect x="662.6" y="739.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="665.6" y="750.0"></text>
</g>
<g>
<title>java_lang_Thread::set_thread_status(oopDesc*, java_lang_Thread::ThreadStatus) (1 samples, 0.03%)</title><rect x="663.0" y="819.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="666.0" y="830.0"></text>
</g>
<g>
<title>os::is_interrupted(Thread*, bool) (1 samples, 0.03%)</title><rect x="663.3" y="819.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="666.3" y="830.0"></text>
</g>
<g>
<title>[unknown] (21 samples, 0.67%)</title><rect x="663.7" y="835.0" width="7.9" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="666.7" y="846.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/ld-2.31.so (1 samples, 0.03%)</title><rect x="663.7" y="819.0" width="0.4" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="666.7" y="830.0"></text>
</g>
<g>
<title>__pthread_cond_wait (19 samples, 0.61%)</title><rect x="664.1" y="819.0" width="7.2" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="667.1" y="830.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (13 samples, 0.42%)</title><rect x="666.4" y="803.0" width="4.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="669.4" y="814.0"></text>
</g>
<g>
<title>do_syscall_64 (13 samples, 0.42%)</title><rect x="666.4" y="787.0" width="4.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="669.4" y="798.0"></text>
</g>
<g>
<title>__x64_sys_futex (12 samples, 0.38%)</title><rect x="666.7" y="771.0" width="4.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="669.7" y="782.0"></text>
</g>
<g>
<title>do_futex (9 samples, 0.29%)</title><rect x="667.9" y="755.0" width="3.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="670.9" y="766.0"></text>
</g>
<g>
<title>futex_wait (9 samples, 0.29%)</title><rect x="667.9" y="739.0" width="3.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="670.9" y="750.0"></text>
</g>
<g>
<title>futex_wait_queue_me (7 samples, 0.22%)</title><rect x="667.9" y="723.0" width="2.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="670.9" y="734.0"></text>
</g>
<g>
<title>schedule (6 samples, 0.19%)</title><rect x="668.2" y="707.0" width="2.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="671.2" y="718.0"></text>
</g>
<g>
<title>__schedule (6 samples, 0.19%)</title><rect x="668.2" y="691.0" width="2.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="671.2" y="702.0"></text>
</g>
<g>
<title>finish_task_switch (5 samples, 0.16%)</title><rect x="668.6" y="675.0" width="1.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="671.6" y="686.0"></text>
</g>
<g>
<title>futex_wait_setup (2 samples, 0.06%)</title><rect x="670.5" y="723.0" width="0.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="673.5" y="734.0"></text>
</g>
<g>
<title>get_futex_value_locked (2 samples, 0.06%)</title><rect x="670.5" y="707.0" width="0.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="673.5" y="718.0"></text>
</g>
<g>
<title>__pthread_mutex_cond_lock (1 samples, 0.03%)</title><rect x="671.3" y="819.0" width="0.3" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="674.3" y="830.0"></text>
</g>
<g>
<title>java_lang_Thread::set_thread_status(oopDesc*, java_lang_Thread::ThreadStatus) (1 samples, 0.03%)</title><rect x="671.6" y="835.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="674.6" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (16 samples, 0.51%)</title><rect x="672.0" y="883.0" width="6.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="675.0" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (16 samples, 0.51%)</title><rect x="672.0" y="867.0" width="6.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="675.0" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (16 samples, 0.51%)</title><rect x="672.0" y="851.0" width="6.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="675.0" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (16 samples, 0.51%)</title><rect x="672.0" y="835.0" width="6.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="675.0" y="846.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (15 samples, 0.48%)</title><rect x="672.4" y="819.0" width="5.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="675.4" y="830.0"></text>
</g>
<g>
<title>Unsafe_Unpark (6 samples, 0.19%)</title><rect x="672.4" y="803.0" width="2.3" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="675.4" y="814.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (1 samples, 0.03%)</title><rect x="672.8" y="787.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="675.8" y="798.0"></text>
</g>
<g>
<title>java_lang_Thread::thread(oopDesc*) (2 samples, 0.06%)</title><rect x="673.2" y="787.0" width="0.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="676.2" y="798.0"></text>
</g>
<g>
<title>oopDesc::address_field(int) const (1 samples, 0.03%)</title><rect x="673.9" y="787.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="676.9" y="798.0"></text>
</g>
<g>
<title>pthread_mutex_lock (1 samples, 0.03%)</title><rect x="674.3" y="787.0" width="0.4" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="677.3" y="798.0"></text>
</g>
<g>
<title>__pthread_cond_signal (9 samples, 0.29%)</title><rect x="674.7" y="803.0" width="3.4" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="677.7" y="814.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (6 samples, 0.19%)</title><rect x="675.8" y="787.0" width="2.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="678.8" y="798.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.03%)</title><rect x="675.8" y="771.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="678.8" y="782.0"></text>
</g>
<g>
<title>do_syscall_64 (5 samples, 0.16%)</title><rect x="676.2" y="771.0" width="1.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="679.2" y="782.0"></text>
</g>
<g>
<title>__x64_sys_futex (5 samples, 0.16%)</title><rect x="676.2" y="755.0" width="1.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="679.2" y="766.0"></text>
</g>
<g>
<title>do_futex (5 samples, 0.16%)</title><rect x="676.2" y="739.0" width="1.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="679.2" y="750.0"></text>
</g>
<g>
<title>futex_wake (5 samples, 0.16%)</title><rect x="676.2" y="723.0" width="1.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="679.2" y="734.0"></text>
</g>
<g>
<title>wake_up_q (4 samples, 0.13%)</title><rect x="676.6" y="707.0" width="1.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="679.6" y="718.0"></text>
</g>
<g>
<title>try_to_wake_up (4 samples, 0.13%)</title><rect x="676.6" y="691.0" width="1.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="679.6" y="702.0"></text>
</g>
<g>
<title>__lock_text_start (4 samples, 0.13%)</title><rect x="676.6" y="675.0" width="1.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="679.6" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivlev/ThreadController$$Lambda$65/822960827.run (154 samples, 4.93%)</title><rect x="678.1" y="915.0" width="58.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="681.1" y="926.0">ru/mai..</text>
</g>
<g>
<title>ru/mail/polis/service/ivlev/ThreadController.lambda$put$3 (152 samples, 4.87%)</title><rect x="678.8" y="899.0" width="57.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="681.8" y="910.0">ru/mai..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (132 samples, 4.23%)</title><rect x="678.8" y="883.0" width="49.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="681.8" y="894.0">one/n..</text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.03%)</title><rect x="680.0" y="867.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="683.0" y="878.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (1 samples, 0.03%)</title><rect x="680.0" y="851.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="683.0" y="862.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (1 samples, 0.03%)</title><rect x="680.0" y="835.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="683.0" y="846.0"></text>
</g>
<g>
<title>SpinPause (1 samples, 0.03%)</title><rect x="680.0" y="819.0" width="0.3" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="683.0" y="830.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.03%)</title><rect x="680.3" y="867.0" width="0.4" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="683.3" y="878.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (125 samples, 4.01%)</title><rect x="680.7" y="867.0" width="47.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="683.7" y="878.0">one/..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (2 samples, 0.06%)</title><rect x="680.7" y="851.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="683.7" y="862.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (1 samples, 0.03%)</title><rect x="681.1" y="835.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="684.1" y="846.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (1 samples, 0.03%)</title><rect x="681.1" y="819.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="684.1" y="830.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (1 samples, 0.03%)</title><rect x="681.1" y="803.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="684.1" y="814.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (1 samples, 0.03%)</title><rect x="681.1" y="787.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="684.1" y="798.0"></text>
</g>
<g>
<title>java/lang/String.charAt (1 samples, 0.03%)</title><rect x="681.1" y="771.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="684.1" y="782.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (123 samples, 3.94%)</title><rect x="681.5" y="851.0" width="46.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="684.5" y="862.0">one/..</text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.03%)</title><rect x="681.5" y="835.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="684.5" y="846.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (1 samples, 0.03%)</title><rect x="681.5" y="819.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="684.5" y="830.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (1 samples, 0.03%)</title><rect x="681.5" y="803.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="684.5" y="814.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.03%)</title><rect x="681.5" y="787.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="684.5" y="798.0"></text>
</g>
<g>
<title>AllocTracer::send_allocation_in_new_tlab(Klass*, HeapWord*, unsigned long, unsigned long, Thread*) (1 samples, 0.03%)</title><rect x="681.5" y="771.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="684.5" y="782.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (122 samples, 3.91%)</title><rect x="681.9" y="835.0" width="46.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="684.9" y="846.0">one/..</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (122 samples, 3.91%)</title><rect x="681.9" y="819.0" width="46.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="684.9" y="830.0">one/..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (122 samples, 3.91%)</title><rect x="681.9" y="803.0" width="46.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="684.9" y="814.0">one/..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (3 samples, 0.10%)</title><rect x="682.6" y="787.0" width="1.1" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="685.6" y="798.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (1 samples, 0.03%)</title><rect x="682.6" y="771.0" width="0.4" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="685.6" y="782.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (2 samples, 0.06%)</title><rect x="683.0" y="771.0" width="0.7" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="686.0" y="782.0"></text>
</g>
<g>
<title>__send (117 samples, 3.75%)</title><rect x="683.7" y="787.0" width="44.3" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="686.7" y="798.0">__send</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (112 samples, 3.59%)</title><rect x="685.6" y="771.0" width="42.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="688.6" y="782.0">entr..</text>
</g>
<g>
<title>__x64_sys_sendto (2 samples, 0.06%)</title><rect x="685.6" y="755.0" width="0.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="688.6" y="766.0"></text>
</g>
<g>
<title>do_syscall_64 (110 samples, 3.52%)</title><rect x="686.4" y="755.0" width="41.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="689.4" y="766.0">do_..</text>
</g>
<g>
<title>__x64_sys_sendto (109 samples, 3.49%)</title><rect x="686.8" y="739.0" width="41.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="689.8" y="750.0">__x..</text>
</g>
<g>
<title>__sys_sendto (109 samples, 3.49%)</title><rect x="686.8" y="723.0" width="41.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="689.8" y="734.0">__s..</text>
</g>
<g>
<title>sock_sendmsg (105 samples, 3.36%)</title><rect x="687.1" y="707.0" width="39.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="690.1" y="718.0">soc..</text>
</g>
<g>
<title>inet6_sendmsg (104 samples, 3.33%)</title><rect x="687.1" y="691.0" width="39.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="690.1" y="702.0">ine..</text>
</g>
<g>
<title>tcp_sendmsg (104 samples, 3.33%)</title><rect x="687.1" y="675.0" width="39.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="690.1" y="686.0">tcp..</text>
</g>
<g>
<title>_raw_spin_lock_bh (2 samples, 0.06%)</title><rect x="687.1" y="659.0" width="0.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="690.1" y="670.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (1 samples, 0.03%)</title><rect x="687.9" y="659.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="690.9" y="670.0"></text>
</g>
<g>
<title>tcp_rate_check_app_limited (1 samples, 0.03%)</title><rect x="688.3" y="659.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="691.3" y="670.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (100 samples, 3.20%)</title><rect x="688.7" y="659.0" width="37.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="691.7" y="670.0">tcp..</text>
</g>
<g>
<title>__check_object_size (1 samples, 0.03%)</title><rect x="688.7" y="643.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="691.7" y="654.0"></text>
</g>
<g>
<title>__virt_addr_valid (1 samples, 0.03%)</title><rect x="688.7" y="627.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="691.7" y="638.0"></text>
</g>
<g>
<title>_copy_from_iter_full (1 samples, 0.03%)</title><rect x="689.0" y="643.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="692.0" y="654.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (1 samples, 0.03%)</title><rect x="689.0" y="627.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="692.0" y="638.0"></text>
</g>
<g>
<title>sk_page_frag_refill (1 samples, 0.03%)</title><rect x="689.4" y="643.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="692.4" y="654.0"></text>
</g>
<g>
<title>skb_page_frag_refill (1 samples, 0.03%)</title><rect x="689.4" y="627.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="692.4" y="638.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (4 samples, 0.13%)</title><rect x="689.8" y="643.0" width="1.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="692.8" y="654.0"></text>
</g>
<g>
<title>__alloc_skb (4 samples, 0.13%)</title><rect x="689.8" y="627.0" width="1.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="692.8" y="638.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.0 (3 samples, 0.10%)</title><rect x="689.8" y="611.0" width="1.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="692.8" y="622.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (2 samples, 0.06%)</title><rect x="689.8" y="595.0" width="0.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="692.8" y="606.0"></text>
</g>
<g>
<title>memcg_kmem_put_cache (1 samples, 0.03%)</title><rect x="690.6" y="595.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="693.6" y="606.0"></text>
</g>
<g>
<title>ksize (1 samples, 0.03%)</title><rect x="690.9" y="611.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="693.9" y="622.0"></text>
</g>
<g>
<title>__ksize (1 samples, 0.03%)</title><rect x="690.9" y="595.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="693.9" y="606.0"></text>
</g>
<g>
<title>tcp_push (91 samples, 2.92%)</title><rect x="691.3" y="643.0" width="34.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="694.3" y="654.0">tc..</text>
</g>
<g>
<title>__tcp_push_pending_frames (91 samples, 2.92%)</title><rect x="691.3" y="627.0" width="34.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="694.3" y="638.0">__..</text>
</g>
<g>
<title>tcp_write_xmit (91 samples, 2.92%)</title><rect x="691.3" y="611.0" width="34.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="694.3" y="622.0">tc..</text>
</g>
<g>
<title>__tcp_transmit_skb (83 samples, 2.66%)</title><rect x="692.4" y="595.0" width="31.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="695.4" y="606.0">__..</text>
</g>
<g>
<title>ip_queue_xmit (78 samples, 2.50%)</title><rect x="693.6" y="579.0" width="29.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="696.6" y="590.0">ip..</text>
</g>
<g>
<title>__ip_queue_xmit (78 samples, 2.50%)</title><rect x="693.6" y="563.0" width="29.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="696.6" y="574.0">__..</text>
</g>
<g>
<title>ip_local_out (77 samples, 2.47%)</title><rect x="694.0" y="547.0" width="29.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="697.0" y="558.0">ip..</text>
</g>
<g>
<title>ip_output (77 samples, 2.47%)</title><rect x="694.0" y="531.0" width="29.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="697.0" y="542.0">ip..</text>
</g>
<g>
<title>ip_finish_output (77 samples, 2.47%)</title><rect x="694.0" y="515.0" width="29.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="697.0" y="526.0">ip..</text>
</g>
<g>
<title>__ip_finish_output (77 samples, 2.47%)</title><rect x="694.0" y="499.0" width="29.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="697.0" y="510.0">__..</text>
</g>
<g>
<title>__local_bh_enable_ip (1 samples, 0.03%)</title><rect x="694.0" y="483.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="697.0" y="494.0"></text>
</g>
<g>
<title>ip_finish_output2 (76 samples, 2.44%)</title><rect x="694.3" y="483.0" width="28.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="697.3" y="494.0">ip..</text>
</g>
<g>
<title>__dev_queue_xmit (1 samples, 0.03%)</title><rect x="694.3" y="467.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="697.3" y="478.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (68 samples, 2.18%)</title><rect x="694.7" y="467.0" width="25.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="697.7" y="478.0">_..</text>
</g>
<g>
<title>do_softirq.part.0 (68 samples, 2.18%)</title><rect x="694.7" y="451.0" width="25.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="697.7" y="462.0">d..</text>
</g>
<g>
<title>do_softirq_own_stack (65 samples, 2.08%)</title><rect x="695.8" y="435.0" width="24.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="698.8" y="446.0">d..</text>
</g>
<g>
<title>__softirqentry_text_start (65 samples, 2.08%)</title><rect x="695.8" y="419.0" width="24.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="698.8" y="430.0">_..</text>
</g>
<g>
<title>net_rx_action (63 samples, 2.02%)</title><rect x="696.6" y="403.0" width="23.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="699.6" y="414.0">n..</text>
</g>
<g>
<title>__kfree_skb_flush (1 samples, 0.03%)</title><rect x="696.6" y="387.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="699.6" y="398.0"></text>
</g>
<g>
<title>process_backlog (62 samples, 1.99%)</title><rect x="697.0" y="387.0" width="23.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="700.0" y="398.0">p..</text>
</g>
<g>
<title>__netif_receive_skb (61 samples, 1.95%)</title><rect x="697.4" y="371.0" width="23.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="700.4" y="382.0">_..</text>
</g>
<g>
<title>__netif_receive_skb_one_core (61 samples, 1.95%)</title><rect x="697.4" y="355.0" width="23.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="700.4" y="366.0">_..</text>
</g>
<g>
<title>__netif_receive_skb_core (1 samples, 0.03%)</title><rect x="697.4" y="339.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="700.4" y="350.0"></text>
</g>
<g>
<title>ip_rcv (60 samples, 1.92%)</title><rect x="697.7" y="339.0" width="22.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="700.7" y="350.0">i..</text>
</g>
<g>
<title>ip_rcv_finish (60 samples, 1.92%)</title><rect x="697.7" y="323.0" width="22.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="700.7" y="334.0">i..</text>
</g>
<g>
<title>ip_local_deliver (59 samples, 1.89%)</title><rect x="697.7" y="307.0" width="22.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="700.7" y="318.0">i..</text>
</g>
<g>
<title>ip_local_deliver_finish (59 samples, 1.89%)</title><rect x="697.7" y="291.0" width="22.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="700.7" y="302.0">i..</text>
</g>
<g>
<title>ip_protocol_deliver_rcu (59 samples, 1.89%)</title><rect x="697.7" y="275.0" width="22.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="700.7" y="286.0">i..</text>
</g>
<g>
<title>tcp_v4_rcv (59 samples, 1.89%)</title><rect x="697.7" y="259.0" width="22.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="700.7" y="270.0">t..</text>
</g>
<g>
<title>__inet_lookup_established (3 samples, 0.10%)</title><rect x="698.9" y="243.0" width="1.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="701.9" y="254.0"></text>
</g>
<g>
<title>inet_ehashfn (1 samples, 0.03%)</title><rect x="699.6" y="227.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="702.6" y="238.0"></text>
</g>
<g>
<title>security_sock_rcv_skb (1 samples, 0.03%)</title><rect x="700.0" y="243.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="703.0" y="254.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (1 samples, 0.03%)</title><rect x="700.4" y="243.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="703.4" y="254.0"></text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (1 samples, 0.03%)</title><rect x="700.4" y="227.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="703.4" y="238.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (50 samples, 1.60%)</title><rect x="700.8" y="243.0" width="18.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="703.8" y="254.0"></text>
</g>
<g>
<title>tcp_rcv_established (50 samples, 1.60%)</title><rect x="700.8" y="227.0" width="18.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="703.8" y="238.0"></text>
</g>
<g>
<title>__tcp_ack_snd_check (2 samples, 0.06%)</title><rect x="700.8" y="211.0" width="0.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="703.8" y="222.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (2 samples, 0.06%)</title><rect x="700.8" y="195.0" width="0.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="703.8" y="206.0"></text>
</g>
<g>
<title>sk_reset_timer (2 samples, 0.06%)</title><rect x="700.8" y="179.0" width="0.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="703.8" y="190.0"></text>
</g>
<g>
<title>mod_timer (2 samples, 0.06%)</title><rect x="700.8" y="163.0" width="0.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="703.8" y="174.0"></text>
</g>
<g>
<title>__lock_text_start (2 samples, 0.06%)</title><rect x="700.8" y="147.0" width="0.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="703.8" y="158.0"></text>
</g>
<g>
<title>tcp_ack (10 samples, 0.32%)</title><rect x="701.5" y="211.0" width="3.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="704.5" y="222.0"></text>
</g>
<g>
<title>bictcp_acked (1 samples, 0.03%)</title><rect x="701.9" y="195.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="704.9" y="206.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (7 samples, 0.22%)</title><rect x="702.3" y="195.0" width="2.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="705.3" y="206.0"></text>
</g>
<g>
<title>__kfree_skb (4 samples, 0.13%)</title><rect x="702.6" y="179.0" width="1.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="705.6" y="190.0"></text>
</g>
<g>
<title>kfree_skbmem (1 samples, 0.03%)</title><rect x="702.6" y="163.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="705.6" y="174.0"></text>
</g>
<g>
<title>kmem_cache_free (1 samples, 0.03%)</title><rect x="702.6" y="147.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="705.6" y="158.0"></text>
</g>
<g>
<title>__slab_free (1 samples, 0.03%)</title><rect x="702.6" y="131.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="705.6" y="142.0"></text>
</g>
<g>
<title>skb_release_all (3 samples, 0.10%)</title><rect x="703.0" y="163.0" width="1.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="706.0" y="174.0"></text>
</g>
<g>
<title>skb_release_data (3 samples, 0.10%)</title><rect x="703.0" y="147.0" width="1.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="706.0" y="158.0"></text>
</g>
<g>
<title>skb_free_head (3 samples, 0.10%)</title><rect x="703.0" y="131.0" width="1.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="706.0" y="142.0"></text>
</g>
<g>
<title>kfree (3 samples, 0.10%)</title><rect x="703.0" y="115.0" width="1.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="706.0" y="126.0"></text>
</g>
<g>
<title>__slab_free (2 samples, 0.06%)</title><rect x="703.4" y="99.0" width="0.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="706.4" y="110.0"></text>
</g>
<g>
<title>tcp_ack_update_rtt.isra.0 (1 samples, 0.03%)</title><rect x="704.2" y="179.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="707.2" y="190.0"></text>
</g>
<g>
<title>tcp_chrono_stop (1 samples, 0.03%)</title><rect x="704.5" y="179.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="707.5" y="190.0"></text>
</g>
<g>
<title>tcp_rack_advance (1 samples, 0.03%)</title><rect x="704.9" y="195.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="707.9" y="206.0"></text>
</g>
<g>
<title>tcp_data_ready (36 samples, 1.15%)</title><rect x="705.3" y="211.0" width="13.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="708.3" y="222.0"></text>
</g>
<g>
<title>sock_def_readable (36 samples, 1.15%)</title><rect x="705.3" y="195.0" width="13.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="708.3" y="206.0"></text>
</g>
<g>
<title>__wake_up_sync_key (35 samples, 1.12%)</title><rect x="705.7" y="179.0" width="13.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="708.7" y="190.0"></text>
</g>
<g>
<title>__wake_up_common_lock (35 samples, 1.12%)</title><rect x="705.7" y="163.0" width="13.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="708.7" y="174.0"></text>
</g>
<g>
<title>__lock_text_start (35 samples, 1.12%)</title><rect x="705.7" y="147.0" width="13.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="708.7" y="158.0"></text>
</g>
<g>
<title>tcp_event_data_recv (1 samples, 0.03%)</title><rect x="718.9" y="211.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="721.9" y="222.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (1 samples, 0.03%)</title><rect x="719.3" y="211.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="722.3" y="222.0"></text>
</g>
<g>
<title>tcp_v4_inbound_md5_hash (1 samples, 0.03%)</title><rect x="719.7" y="243.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="722.7" y="254.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (1 samples, 0.03%)</title><rect x="720.0" y="307.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="723.0" y="318.0"></text>
</g>
<g>
<title>dev_queue_xmit (7 samples, 0.22%)</title><rect x="720.4" y="467.0" width="2.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="723.4" y="478.0"></text>
</g>
<g>
<title>__dev_queue_xmit (7 samples, 0.22%)</title><rect x="720.4" y="451.0" width="2.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="723.4" y="462.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (4 samples, 0.13%)</title><rect x="720.4" y="435.0" width="1.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="723.4" y="446.0"></text>
</g>
<g>
<title>loopback_xmit (4 samples, 0.13%)</title><rect x="720.4" y="419.0" width="1.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="723.4" y="430.0"></text>
</g>
<g>
<title>eth_type_trans (2 samples, 0.06%)</title><rect x="720.4" y="403.0" width="0.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="723.4" y="414.0"></text>
</g>
<g>
<title>netif_rx (1 samples, 0.03%)</title><rect x="721.2" y="403.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="724.2" y="414.0"></text>
</g>
<g>
<title>netif_rx_internal (1 samples, 0.03%)</title><rect x="721.2" y="387.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="724.2" y="398.0"></text>
</g>
<g>
<title>sk_free (1 samples, 0.03%)</title><rect x="721.6" y="403.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="724.6" y="414.0"></text>
</g>
<g>
<title>validate_xmit_skb (3 samples, 0.10%)</title><rect x="721.9" y="435.0" width="1.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="724.9" y="446.0"></text>
</g>
<g>
<title>netif_skb_features (2 samples, 0.06%)</title><rect x="722.3" y="419.0" width="0.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="725.3" y="430.0"></text>
</g>
<g>
<title>skb_clone (2 samples, 0.06%)</title><rect x="723.1" y="579.0" width="0.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="726.1" y="590.0"></text>
</g>
<g>
<title>__copy_skb_header (1 samples, 0.03%)</title><rect x="723.1" y="563.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="726.1" y="574.0"></text>
</g>
<g>
<title>__skb_clone (1 samples, 0.03%)</title><rect x="723.4" y="563.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="726.4" y="574.0"></text>
</g>
<g>
<title>skb_push (1 samples, 0.03%)</title><rect x="723.8" y="595.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="726.8" y="606.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (2 samples, 0.06%)</title><rect x="724.2" y="595.0" width="0.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="727.2" y="606.0"></text>
</g>
<g>
<title>tcp_rearm_rto (1 samples, 0.03%)</title><rect x="724.6" y="579.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="727.6" y="590.0"></text>
</g>
<g>
<title>sk_reset_timer (1 samples, 0.03%)</title><rect x="724.6" y="563.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="727.6" y="574.0"></text>
</g>
<g>
<title>mod_timer (1 samples, 0.03%)</title><rect x="724.6" y="547.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="727.6" y="558.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.03%)</title><rect x="724.6" y="531.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="727.6" y="542.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (2 samples, 0.06%)</title><rect x="725.0" y="595.0" width="0.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="728.0" y="606.0"></text>
</g>
<g>
<title>sk_reset_timer (1 samples, 0.03%)</title><rect x="725.3" y="579.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="728.3" y="590.0"></text>
</g>
<g>
<title>mod_timer (1 samples, 0.03%)</title><rect x="725.3" y="563.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="728.3" y="574.0"></text>
</g>
<g>
<title>tcp_rate_check_app_limited (1 samples, 0.03%)</title><rect x="725.7" y="643.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="728.7" y="654.0"></text>
</g>
<g>
<title>tcp_send_mss (1 samples, 0.03%)</title><rect x="726.1" y="643.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="729.1" y="654.0"></text>
</g>
<g>
<title>ipv4_mtu (1 samples, 0.03%)</title><rect x="726.1" y="627.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="729.1" y="638.0"></text>
</g>
<g>
<title>security_socket_sendmsg (1 samples, 0.03%)</title><rect x="726.5" y="691.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="729.5" y="702.0"></text>
</g>
<g>
<title>apparmor_socket_sendmsg (1 samples, 0.03%)</title><rect x="726.5" y="675.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="729.5" y="686.0"></text>
</g>
<g>
<title>aa_sk_perm (1 samples, 0.03%)</title><rect x="726.5" y="659.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="729.5" y="670.0"></text>
</g>
<g>
<title>sockfd_lookup_light (3 samples, 0.10%)</title><rect x="726.8" y="707.0" width="1.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="729.8" y="718.0"></text>
</g>
<g>
<title>__fdget (1 samples, 0.03%)</title><rect x="727.2" y="691.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="730.2" y="702.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.03%)</title><rect x="727.2" y="675.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="730.2" y="686.0"></text>
</g>
<g>
<title>__fget (1 samples, 0.03%)</title><rect x="727.2" y="659.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="730.2" y="670.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.03%)</title><rect x="727.6" y="691.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="730.6" y="702.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (2 samples, 0.06%)</title><rect x="728.0" y="867.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="731.0" y="878.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.03%)</title><rect x="728.4" y="851.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="731.4" y="862.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.03%)</title><rect x="728.4" y="835.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="731.4" y="846.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.upsert (20 samples, 0.64%)</title><rect x="728.7" y="883.0" width="7.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="731.7" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.unlock (1 samples, 0.03%)</title><rect x="728.7" y="867.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="731.7" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.releaseShared (1 samples, 0.03%)</title><rect x="728.7" y="851.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="731.7" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryReleaseShared (1 samples, 0.03%)</title><rect x="728.7" y="835.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="731.7" y="846.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.remove (1 samples, 0.03%)</title><rect x="728.7" y="819.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="731.7" y="830.0"></text>
</g>
<g>
<title>ru/mail/polis/MemTable.upsert (19 samples, 0.61%)</title><rect x="729.1" y="867.0" width="7.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="732.1" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.put (19 samples, 0.61%)</title><rect x="729.1" y="851.0" width="7.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="732.1" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (15 samples, 0.48%)</title><rect x="729.9" y="835.0" width="5.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="732.9" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.addCount (1 samples, 0.03%)</title><rect x="730.2" y="819.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="733.2" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (13 samples, 0.42%)</title><rect x="730.6" y="819.0" width="4.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="733.6" y="830.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (13 samples, 0.42%)</title><rect x="730.6" y="803.0" width="4.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="733.6" y="814.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (13 samples, 0.42%)</title><rect x="730.6" y="787.0" width="4.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="733.6" y="798.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (13 samples, 0.42%)</title><rect x="730.6" y="771.0" width="4.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="733.6" y="782.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (1 samples, 0.03%)</title><rect x="735.5" y="835.0" width="0.4" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="738.5" y="846.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.03%)</title><rect x="735.9" y="835.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="738.9" y="846.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.03%)</title><rect x="735.9" y="819.0" width="0.4" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="738.9" y="830.0"></text>
</g>
<g>
<title>[worker_3 tid=4348] (243 samples, 7.79%)</title><rect x="736.3" y="979.0" width="91.9" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="739.3" y="990.0">[worker_3 t..</text>
</g>
<g>
<title>java/lang/Thread.run (243 samples, 7.79%)</title><rect x="736.3" y="963.0" width="91.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="739.3" y="974.0">java/lang/T..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (243 samples, 7.79%)</title><rect x="736.3" y="947.0" width="91.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="739.3" y="958.0">java/util/c..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (243 samples, 7.79%)</title><rect x="736.3" y="931.0" width="91.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="739.3" y="942.0">java/util/c..</text>
</g>
<g>
<title>java/lang/Thread.interrupted (6 samples, 0.19%)</title><rect x="737.1" y="915.0" width="2.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="740.1" y="926.0"></text>
</g>
<g>
<title>java/lang/Thread.isInterrupted (6 samples, 0.19%)</title><rect x="737.1" y="899.0" width="2.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="740.1" y="910.0"></text>
</g>
<g>
<title>JVM_IsInterrupted (4 samples, 0.13%)</title><rect x="737.1" y="883.0" width="1.5" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="740.1" y="894.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.03%)</title><rect x="737.4" y="867.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="740.4" y="878.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (1 samples, 0.03%)</title><rect x="737.8" y="867.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="740.8" y="878.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.03%)</title><rect x="738.2" y="867.0" width="0.4" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="741.2" y="878.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (1 samples, 0.03%)</title><rect x="738.6" y="883.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="741.6" y="894.0"></text>
</g>
<g>
<title>os::is_interrupted(Thread*, bool) (1 samples, 0.03%)</title><rect x="738.9" y="883.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="741.9" y="894.0"></text>
</g>
<g>
<title>java/lang/Thread.isInterrupted (1 samples, 0.03%)</title><rect x="739.3" y="915.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="742.3" y="926.0"></text>
</g>
<g>
<title>java/lang/Thread.isInterrupted (1 samples, 0.03%)</title><rect x="739.3" y="899.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="742.3" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.lock (1 samples, 0.03%)</title><rect x="739.7" y="915.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="742.7" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (1 samples, 0.03%)</title><rect x="739.7" y="899.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="742.7" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.tryAcquire (1 samples, 0.03%)</title><rect x="739.7" y="883.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="742.7" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (89 samples, 2.85%)</title><rect x="740.1" y="915.0" width="33.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="743.1" y="926.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (89 samples, 2.85%)</title><rect x="740.1" y="899.0" width="33.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="743.1" y="910.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (70 samples, 2.24%)</title><rect x="740.1" y="883.0" width="26.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="743.1" y="894.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.checkInterruptWhileWaiting (1 samples, 0.03%)</title><rect x="740.5" y="867.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="743.5" y="878.0"></text>
</g>
<g>
<title>java/lang/Thread.interrupted (1 samples, 0.03%)</title><rect x="740.5" y="851.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="743.5" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (5 samples, 0.16%)</title><rect x="740.8" y="867.0" width="1.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="743.8" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.fullyRelease (7 samples, 0.22%)</title><rect x="742.7" y="867.0" width="2.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="745.7" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (7 samples, 0.22%)</title><rect x="742.7" y="851.0" width="2.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="745.7" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (6 samples, 0.19%)</title><rect x="742.7" y="835.0" width="2.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="745.7" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (5 samples, 0.16%)</title><rect x="742.7" y="819.0" width="1.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="745.7" y="830.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (5 samples, 0.16%)</title><rect x="742.7" y="803.0" width="1.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="745.7" y="814.0"></text>
</g>
<g>
<title>Unsafe_Unpark (2 samples, 0.06%)</title><rect x="742.7" y="787.0" width="0.8" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="745.7" y="798.0"></text>
</g>
<g>
<title>ThreadsListHandle::~ThreadsListHandle() (1 samples, 0.03%)</title><rect x="742.7" y="771.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="745.7" y="782.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock (1 samples, 0.03%)</title><rect x="743.1" y="771.0" width="0.4" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="746.1" y="782.0"></text>
</g>
<g>
<title>__pthread_cond_signal (3 samples, 0.10%)</title><rect x="743.5" y="787.0" width="1.1" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="746.5" y="798.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (3 samples, 0.10%)</title><rect x="743.5" y="771.0" width="1.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="746.5" y="782.0"></text>
</g>
<g>
<title>do_syscall_64 (3 samples, 0.10%)</title><rect x="743.5" y="755.0" width="1.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="746.5" y="766.0"></text>
</g>
<g>
<title>__x64_sys_futex (3 samples, 0.10%)</title><rect x="743.5" y="739.0" width="1.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="746.5" y="750.0"></text>
</g>
<g>
<title>do_futex (2 samples, 0.06%)</title><rect x="743.9" y="723.0" width="0.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="746.9" y="734.0"></text>
</g>
<g>
<title>futex_wake (2 samples, 0.06%)</title><rect x="743.9" y="707.0" width="0.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="746.9" y="718.0"></text>
</g>
<g>
<title>wake_up_q (2 samples, 0.06%)</title><rect x="743.9" y="691.0" width="0.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="746.9" y="702.0"></text>
</g>
<g>
<title>try_to_wake_up (2 samples, 0.06%)</title><rect x="743.9" y="675.0" width="0.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="746.9" y="686.0"></text>
</g>
<g>
<title>__lock_text_start (2 samples, 0.06%)</title><rect x="743.9" y="659.0" width="0.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="746.9" y="670.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (1 samples, 0.03%)</title><rect x="744.6" y="819.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="747.6" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.tryRelease (1 samples, 0.03%)</title><rect x="745.0" y="835.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="748.0" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (56 samples, 1.79%)</title><rect x="745.4" y="867.0" width="21.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="748.4" y="878.0">j..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (56 samples, 1.79%)</title><rect x="745.4" y="851.0" width="21.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="748.4" y="862.0">j..</text>
</g>
<g>
<title>JavaThreadParkedState::JavaThreadParkedState(JavaThread*, bool) (1 samples, 0.03%)</title><rect x="746.1" y="835.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="749.1" y="846.0"></text>
</g>
<g>
<title>Unsafe_Park (23 samples, 0.74%)</title><rect x="746.5" y="835.0" width="8.7" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="749.5" y="846.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (1 samples, 0.03%)</title><rect x="746.5" y="819.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="749.5" y="830.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (5 samples, 0.16%)</title><rect x="746.9" y="819.0" width="1.9" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="749.9" y="830.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (1 samples, 0.03%)</title><rect x="748.0" y="803.0" width="0.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="751.0" y="814.0"></text>
</g>
<g>
<title>Monitor::unlock() (1 samples, 0.03%)</title><rect x="748.4" y="803.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="751.4" y="814.0"></text>
</g>
<g>
<title>Thread::is_interrupted(Thread*, bool) (1 samples, 0.03%)</title><rect x="748.8" y="819.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="751.8" y="830.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.03%)</title><rect x="749.2" y="819.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="752.2" y="830.0"></text>
</g>
<g>
<title>__GI___pthread_mutex_trylock (1 samples, 0.03%)</title><rect x="749.5" y="819.0" width="0.4" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="752.5" y="830.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock (9 samples, 0.29%)</title><rect x="749.9" y="819.0" width="3.4" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="752.9" y="830.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (4 samples, 0.13%)</title><rect x="751.8" y="803.0" width="1.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="754.8" y="814.0"></text>
</g>
<g>
<title>do_syscall_64 (4 samples, 0.13%)</title><rect x="751.8" y="787.0" width="1.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="754.8" y="798.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.03%)</title><rect x="753.3" y="819.0" width="0.4" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="756.3" y="830.0"></text>
</g>
<g>
<title>java_lang_Thread::set_thread_status(oopDesc*, java_lang_Thread::ThreadStatus) (2 samples, 0.06%)</title><rect x="753.7" y="819.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="756.7" y="830.0"></text>
</g>
<g>
<title>pthread_mutex_unlock@plt (2 samples, 0.06%)</title><rect x="754.4" y="819.0" width="0.8" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="757.4" y="830.0"></text>
</g>
<g>
<title>[unknown] (26 samples, 0.83%)</title><rect x="755.2" y="835.0" width="9.8" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="758.2" y="846.0"></text>
</g>
<g>
<title>__pthread_cond_wait (24 samples, 0.77%)</title><rect x="755.2" y="819.0" width="9.1" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="758.2" y="830.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (15 samples, 0.48%)</title><rect x="758.6" y="803.0" width="5.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="761.6" y="814.0"></text>
</g>
<g>
<title>do_syscall_64 (15 samples, 0.48%)</title><rect x="758.6" y="787.0" width="5.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="761.6" y="798.0"></text>
</g>
<g>
<title>__x64_sys_futex (14 samples, 0.45%)</title><rect x="759.0" y="771.0" width="5.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="762.0" y="782.0"></text>
</g>
<g>
<title>do_futex (14 samples, 0.45%)</title><rect x="759.0" y="755.0" width="5.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="762.0" y="766.0"></text>
</g>
<g>
<title>futex_wait (12 samples, 0.38%)</title><rect x="759.7" y="739.0" width="4.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="762.7" y="750.0"></text>
</g>
<g>
<title>futex_wait_queue_me (12 samples, 0.38%)</title><rect x="759.7" y="723.0" width="4.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="762.7" y="734.0"></text>
</g>
<g>
<title>schedule (11 samples, 0.35%)</title><rect x="760.1" y="707.0" width="4.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="763.1" y="718.0"></text>
</g>
<g>
<title>__schedule (11 samples, 0.35%)</title><rect x="760.1" y="691.0" width="4.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="763.1" y="702.0"></text>
</g>
<g>
<title>finish_task_switch (10 samples, 0.32%)</title><rect x="760.5" y="675.0" width="3.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="763.5" y="686.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (1 samples, 0.03%)</title><rect x="764.3" y="819.0" width="0.4" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="767.3" y="830.0"></text>
</g>
<g>
<title>__pthread_mutex_cond_lock (1 samples, 0.03%)</title><rect x="764.7" y="819.0" width="0.3" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="767.7" y="830.0"></text>
</g>
<g>
<title>java_lang_Thread::set_thread_status(oopDesc*, java_lang_Thread::ThreadStatus) (4 samples, 0.13%)</title><rect x="765.0" y="835.0" width="1.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="768.0" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (2 samples, 0.06%)</title><rect x="766.5" y="883.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="769.5" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (2 samples, 0.06%)</title><rect x="766.5" y="867.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="769.5" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (2 samples, 0.06%)</title><rect x="766.5" y="851.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="769.5" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (17 samples, 0.54%)</title><rect x="767.3" y="883.0" width="6.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="770.3" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (17 samples, 0.54%)</title><rect x="767.3" y="867.0" width="6.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="770.3" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (17 samples, 0.54%)</title><rect x="767.3" y="851.0" width="6.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="770.3" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (17 samples, 0.54%)</title><rect x="767.3" y="835.0" width="6.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="770.3" y="846.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (17 samples, 0.54%)</title><rect x="767.3" y="819.0" width="6.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="770.3" y="830.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (1 samples, 0.03%)</title><rect x="767.3" y="803.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="770.3" y="814.0"></text>
</g>
<g>
<title>ThreadsListHandle::~ThreadsListHandle() (1 samples, 0.03%)</title><rect x="767.7" y="803.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="770.7" y="814.0"></text>
</g>
<g>
<title>Unsafe_Unpark (2 samples, 0.06%)</title><rect x="768.1" y="803.0" width="0.7" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="771.1" y="814.0"></text>
</g>
<g>
<title>pthread_mutex_lock (1 samples, 0.03%)</title><rect x="768.1" y="787.0" width="0.3" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="771.1" y="798.0"></text>
</g>
<g>
<title>pthread_mutex_lock@plt (1 samples, 0.03%)</title><rect x="768.4" y="787.0" width="0.4" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="771.4" y="798.0"></text>
</g>
<g>
<title>__pthread_cond_signal (13 samples, 0.42%)</title><rect x="768.8" y="803.0" width="4.9" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="771.8" y="814.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (9 samples, 0.29%)</title><rect x="770.3" y="787.0" width="3.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="773.3" y="798.0"></text>
</g>
<g>
<title>do_syscall_64 (9 samples, 0.29%)</title><rect x="770.3" y="771.0" width="3.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="773.3" y="782.0"></text>
</g>
<g>
<title>__x64_sys_futex (7 samples, 0.22%)</title><rect x="771.1" y="755.0" width="2.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="774.1" y="766.0"></text>
</g>
<g>
<title>do_futex (7 samples, 0.22%)</title><rect x="771.1" y="739.0" width="2.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="774.1" y="750.0"></text>
</g>
<g>
<title>futex_wake (7 samples, 0.22%)</title><rect x="771.1" y="723.0" width="2.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="774.1" y="734.0"></text>
</g>
<g>
<title>wake_up_q (7 samples, 0.22%)</title><rect x="771.1" y="707.0" width="2.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="774.1" y="718.0"></text>
</g>
<g>
<title>_raw_spin_lock_irqsave (1 samples, 0.03%)</title><rect x="771.1" y="691.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="774.1" y="702.0"></text>
</g>
<g>
<title>try_to_wake_up (6 samples, 0.19%)</title><rect x="771.5" y="691.0" width="2.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="774.5" y="702.0"></text>
</g>
<g>
<title>__lock_text_start (6 samples, 0.19%)</title><rect x="771.5" y="675.0" width="2.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="774.5" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivlev/ThreadController$$Lambda$65/822960827.run (144 samples, 4.61%)</title><rect x="773.7" y="915.0" width="54.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="776.7" y="926.0">ru/ma..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (1 samples, 0.03%)</title><rect x="773.7" y="899.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="776.7" y="910.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivlev/ThreadController.lambda$put$3 (143 samples, 4.58%)</title><rect x="774.1" y="899.0" width="54.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="777.1" y="910.0">ru/ma..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (121 samples, 3.88%)</title><rect x="774.1" y="883.0" width="45.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="777.1" y="894.0">one/..</text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.03%)</title><rect x="775.2" y="867.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="778.2" y="878.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (1 samples, 0.03%)</title><rect x="775.2" y="851.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="778.2" y="862.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (1 samples, 0.03%)</title><rect x="775.2" y="835.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="778.2" y="846.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.71] (1 samples, 0.03%)</title><rect x="775.2" y="819.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="778.2" y="830.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (116 samples, 3.72%)</title><rect x="775.6" y="867.0" width="43.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="778.6" y="878.0">one/..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (2 samples, 0.06%)</title><rect x="775.6" y="851.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="778.6" y="862.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (2 samples, 0.06%)</title><rect x="775.6" y="835.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="778.6" y="846.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (2 samples, 0.06%)</title><rect x="775.6" y="819.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="778.6" y="830.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (2 samples, 0.06%)</title><rect x="775.6" y="803.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="778.6" y="814.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (2 samples, 0.06%)</title><rect x="775.6" y="787.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="778.6" y="798.0"></text>
</g>
<g>
<title>java/lang/String.charAt (2 samples, 0.06%)</title><rect x="775.6" y="771.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="778.6" y="782.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.03%)</title><rect x="776.0" y="755.0" width="0.4" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="779.0" y="766.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (114 samples, 3.65%)</title><rect x="776.4" y="851.0" width="43.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="779.4" y="862.0">one/..</text>
</g>
<g>
<title>one/nio/net/Session.write (114 samples, 3.65%)</title><rect x="776.4" y="835.0" width="43.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="779.4" y="846.0">one/..</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (114 samples, 3.65%)</title><rect x="776.4" y="819.0" width="43.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="779.4" y="830.0">one/..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (114 samples, 3.65%)</title><rect x="776.4" y="803.0" width="43.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="779.4" y="814.0">one/..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (6 samples, 0.19%)</title><rect x="777.1" y="787.0" width="2.3" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="780.1" y="798.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (2 samples, 0.06%)</title><rect x="777.1" y="771.0" width="0.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="780.1" y="782.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.03%)</title><rect x="777.9" y="771.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="780.9" y="782.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (3 samples, 0.10%)</title><rect x="778.3" y="771.0" width="1.1" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="781.3" y="782.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (1 samples, 0.03%)</title><rect x="778.6" y="755.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="781.6" y="766.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (1 samples, 0.03%)</title><rect x="779.0" y="755.0" width="0.4" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="782.0" y="766.0"></text>
</g>
<g>
<title>ResourceMark::reset_to_mark() (1 samples, 0.03%)</title><rect x="779.0" y="739.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="782.0" y="750.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (1 samples, 0.03%)</title><rect x="779.4" y="787.0" width="0.4" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="782.4" y="798.0"></text>
</g>
<g>
<title>__send (105 samples, 3.36%)</title><rect x="779.8" y="787.0" width="39.7" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="782.8" y="798.0">__s..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (100 samples, 3.20%)</title><rect x="781.7" y="771.0" width="37.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="784.7" y="782.0">ent..</text>
</g>
<g>
<title>do_syscall_64 (100 samples, 3.20%)</title><rect x="781.7" y="755.0" width="37.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="784.7" y="766.0">do_..</text>
</g>
<g>
<title>__x64_sys_sendto (98 samples, 3.14%)</title><rect x="782.4" y="739.0" width="37.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="785.4" y="750.0">__x..</text>
</g>
<g>
<title>__sys_sendto (98 samples, 3.14%)</title><rect x="782.4" y="723.0" width="37.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="785.4" y="734.0">__s..</text>
</g>
<g>
<title>sock_sendmsg (94 samples, 3.01%)</title><rect x="782.8" y="707.0" width="35.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="785.8" y="718.0">soc..</text>
</g>
<g>
<title>apparmor_socket_sendmsg (2 samples, 0.06%)</title><rect x="782.8" y="691.0" width="0.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="785.8" y="702.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.03%)</title><rect x="783.2" y="675.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="786.2" y="686.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.03%)</title><rect x="783.2" y="659.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="786.2" y="670.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.03%)</title><rect x="783.2" y="643.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="786.2" y="654.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.03%)</title><rect x="783.2" y="627.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="786.2" y="638.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.03%)</title><rect x="783.2" y="611.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="786.2" y="622.0"></text>
</g>
<g>
<title>rebalance_domains (1 samples, 0.03%)</title><rect x="783.2" y="595.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="786.2" y="606.0"></text>
</g>
<g>
<title>inet6_sendmsg (92 samples, 2.95%)</title><rect x="783.6" y="691.0" width="34.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="786.6" y="702.0">in..</text>
</g>
<g>
<title>release_sock (1 samples, 0.03%)</title><rect x="784.3" y="675.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="787.3" y="686.0"></text>
</g>
<g>
<title>tcp_sendmsg (89 samples, 2.85%)</title><rect x="784.7" y="675.0" width="33.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="787.7" y="686.0">tc..</text>
</g>
<g>
<title>release_sock (1 samples, 0.03%)</title><rect x="784.7" y="659.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="787.7" y="670.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (88 samples, 2.82%)</title><rect x="785.1" y="659.0" width="33.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="788.1" y="670.0">tc..</text>
</g>
<g>
<title>sk_page_frag_refill (2 samples, 0.06%)</title><rect x="785.5" y="643.0" width="0.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="788.5" y="654.0"></text>
</g>
<g>
<title>skb_page_frag_refill (2 samples, 0.06%)</title><rect x="785.5" y="627.0" width="0.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="788.5" y="638.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (2 samples, 0.06%)</title><rect x="786.2" y="643.0" width="0.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="789.2" y="654.0"></text>
</g>
<g>
<title>__alloc_skb (2 samples, 0.06%)</title><rect x="786.2" y="627.0" width="0.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="789.2" y="638.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (1 samples, 0.03%)</title><rect x="786.2" y="611.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="789.2" y="622.0"></text>
</g>
<g>
<title>ksize (1 samples, 0.03%)</title><rect x="786.6" y="611.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="789.6" y="622.0"></text>
</g>
<g>
<title>__ksize (1 samples, 0.03%)</title><rect x="786.6" y="595.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="789.6" y="606.0"></text>
</g>
<g>
<title>tcp_push (80 samples, 2.56%)</title><rect x="787.0" y="643.0" width="30.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="790.0" y="654.0">tc..</text>
</g>
<g>
<title>__tcp_push_pending_frames (80 samples, 2.56%)</title><rect x="787.0" y="627.0" width="30.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="790.0" y="638.0">__..</text>
</g>
<g>
<title>tcp_write_xmit (80 samples, 2.56%)</title><rect x="787.0" y="611.0" width="30.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="790.0" y="622.0">tc..</text>
</g>
<g>
<title>__tcp_transmit_skb (72 samples, 2.31%)</title><rect x="788.1" y="595.0" width="27.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="791.1" y="606.0">_..</text>
</g>
<g>
<title>ip_queue_xmit (68 samples, 2.18%)</title><rect x="788.5" y="579.0" width="25.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="791.5" y="590.0">i..</text>
</g>
<g>
<title>__ip_queue_xmit (68 samples, 2.18%)</title><rect x="788.5" y="563.0" width="25.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="791.5" y="574.0">_..</text>
</g>
<g>
<title>__ip_local_out (1 samples, 0.03%)</title><rect x="788.5" y="547.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="791.5" y="558.0"></text>
</g>
<g>
<title>__sk_dst_check (1 samples, 0.03%)</title><rect x="788.9" y="547.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="791.9" y="558.0"></text>
</g>
<g>
<title>ip_local_out (65 samples, 2.08%)</title><rect x="789.2" y="547.0" width="24.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="792.2" y="558.0">i..</text>
</g>
<g>
<title>ip_output (63 samples, 2.02%)</title><rect x="790.0" y="531.0" width="23.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="793.0" y="542.0">i..</text>
</g>
<g>
<title>__ip_finish_output (1 samples, 0.03%)</title><rect x="790.0" y="515.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="793.0" y="526.0"></text>
</g>
<g>
<title>ip_finish_output (62 samples, 1.99%)</title><rect x="790.4" y="515.0" width="23.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="793.4" y="526.0">i..</text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (2 samples, 0.06%)</title><rect x="790.4" y="499.0" width="0.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="793.4" y="510.0"></text>
</g>
<g>
<title>__ip_finish_output (59 samples, 1.89%)</title><rect x="791.1" y="499.0" width="22.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="794.1" y="510.0">_..</text>
</g>
<g>
<title>ip_finish_output2 (59 samples, 1.89%)</title><rect x="791.1" y="483.0" width="22.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="794.1" y="494.0">i..</text>
</g>
<g>
<title>__local_bh_enable_ip (54 samples, 1.73%)</title><rect x="791.1" y="467.0" width="20.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="794.1" y="478.0"></text>
</g>
<g>
<title>do_softirq.part.0 (54 samples, 1.73%)</title><rect x="791.1" y="451.0" width="20.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="794.1" y="462.0"></text>
</g>
<g>
<title>do_softirq_own_stack (54 samples, 1.73%)</title><rect x="791.1" y="435.0" width="20.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="794.1" y="446.0"></text>
</g>
<g>
<title>__softirqentry_text_start (54 samples, 1.73%)</title><rect x="791.1" y="419.0" width="20.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="794.1" y="430.0"></text>
</g>
<g>
<title>net_rx_action (54 samples, 1.73%)</title><rect x="791.1" y="403.0" width="20.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="794.1" y="414.0"></text>
</g>
<g>
<title>process_backlog (52 samples, 1.67%)</title><rect x="791.9" y="387.0" width="19.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="794.9" y="398.0"></text>
</g>
<g>
<title>__netif_receive_skb (49 samples, 1.57%)</title><rect x="793.0" y="371.0" width="18.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="796.0" y="382.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (49 samples, 1.57%)</title><rect x="793.0" y="355.0" width="18.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="796.0" y="366.0"></text>
</g>
<g>
<title>__netif_receive_skb_core (2 samples, 0.06%)</title><rect x="793.0" y="339.0" width="0.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="796.0" y="350.0"></text>
</g>
<g>
<title>ip_rcv (47 samples, 1.51%)</title><rect x="793.8" y="339.0" width="17.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="796.8" y="350.0"></text>
</g>
<g>
<title>ip_rcv_core.isra.0 (1 samples, 0.03%)</title><rect x="793.8" y="323.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="796.8" y="334.0"></text>
</g>
<g>
<title>ip_rcv_finish (46 samples, 1.47%)</title><rect x="794.1" y="323.0" width="17.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="797.1" y="334.0"></text>
</g>
<g>
<title>ip_local_deliver (46 samples, 1.47%)</title><rect x="794.1" y="307.0" width="17.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="797.1" y="318.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (46 samples, 1.47%)</title><rect x="794.1" y="291.0" width="17.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="797.1" y="302.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (46 samples, 1.47%)</title><rect x="794.1" y="275.0" width="17.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="797.1" y="286.0"></text>
</g>
<g>
<title>_raw_spin_lock (2 samples, 0.06%)</title><rect x="794.1" y="259.0" width="0.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="797.1" y="270.0"></text>
</g>
<g>
<title>tcp_v4_rcv (44 samples, 1.41%)</title><rect x="794.9" y="259.0" width="16.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="797.9" y="270.0"></text>
</g>
<g>
<title>__inet_lookup_established (3 samples, 0.10%)</title><rect x="795.3" y="243.0" width="1.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="798.3" y="254.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (3 samples, 0.10%)</title><rect x="796.4" y="243.0" width="1.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="799.4" y="254.0"></text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (2 samples, 0.06%)</title><rect x="796.4" y="227.0" width="0.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="799.4" y="238.0"></text>
</g>
<g>
<title>security_sock_rcv_skb (1 samples, 0.03%)</title><rect x="797.2" y="227.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="800.2" y="238.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (37 samples, 1.19%)</title><rect x="797.5" y="243.0" width="14.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="800.5" y="254.0"></text>
</g>
<g>
<title>tcp_check_space (1 samples, 0.03%)</title><rect x="797.5" y="227.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="800.5" y="238.0"></text>
</g>
<g>
<title>tcp_rcv_established (36 samples, 1.15%)</title><rect x="797.9" y="227.0" width="13.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="800.9" y="238.0"></text>
</g>
<g>
<title>__tcp_ack_snd_check (4 samples, 0.13%)</title><rect x="798.3" y="211.0" width="1.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="801.3" y="222.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (4 samples, 0.13%)</title><rect x="798.3" y="195.0" width="1.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="801.3" y="206.0"></text>
</g>
<g>
<title>sk_reset_timer (4 samples, 0.13%)</title><rect x="798.3" y="179.0" width="1.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="801.3" y="190.0"></text>
</g>
<g>
<title>mod_timer (4 samples, 0.13%)</title><rect x="798.3" y="163.0" width="1.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="801.3" y="174.0"></text>
</g>
<g>
<title>__lock_text_start (4 samples, 0.13%)</title><rect x="798.3" y="147.0" width="1.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="801.3" y="158.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (1 samples, 0.03%)</title><rect x="799.8" y="211.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="802.8" y="222.0"></text>
</g>
<g>
<title>sock_def_readable (2 samples, 0.06%)</title><rect x="800.2" y="211.0" width="0.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="803.2" y="222.0"></text>
</g>
<g>
<title>tcp_ack (6 samples, 0.19%)</title><rect x="801.0" y="211.0" width="2.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="804.0" y="222.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (6 samples, 0.19%)</title><rect x="801.0" y="195.0" width="2.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="804.0" y="206.0"></text>
</g>
<g>
<title>__kfree_skb (3 samples, 0.10%)</title><rect x="802.1" y="179.0" width="1.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="805.1" y="190.0"></text>
</g>
<g>
<title>kfree_skbmem (1 samples, 0.03%)</title><rect x="802.1" y="163.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="805.1" y="174.0"></text>
</g>
<g>
<title>kmem_cache_free (1 samples, 0.03%)</title><rect x="802.1" y="147.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="805.1" y="158.0"></text>
</g>
<g>
<title>skb_release_all (2 samples, 0.06%)</title><rect x="802.5" y="163.0" width="0.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="805.5" y="174.0"></text>
</g>
<g>
<title>skb_release_data (2 samples, 0.06%)</title><rect x="802.5" y="147.0" width="0.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="805.5" y="158.0"></text>
</g>
<g>
<title>skb_free_head (1 samples, 0.03%)</title><rect x="802.8" y="131.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="805.8" y="142.0"></text>
</g>
<g>
<title>kfree (1 samples, 0.03%)</title><rect x="802.8" y="115.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="805.8" y="126.0"></text>
</g>
<g>
<title>tcp_data_ready (21 samples, 0.67%)</title><rect x="803.2" y="211.0" width="8.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="806.2" y="222.0"></text>
</g>
<g>
<title>sock_def_readable (21 samples, 0.67%)</title><rect x="803.2" y="195.0" width="8.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="806.2" y="206.0"></text>
</g>
<g>
<title>__wake_up_sync_key (21 samples, 0.67%)</title><rect x="803.2" y="179.0" width="8.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="806.2" y="190.0"></text>
</g>
<g>
<title>__wake_up_common_lock (21 samples, 0.67%)</title><rect x="803.2" y="163.0" width="8.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="806.2" y="174.0"></text>
</g>
<g>
<title>__lock_text_start (21 samples, 0.67%)</title><rect x="803.2" y="147.0" width="8.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="806.2" y="158.0"></text>
</g>
<g>
<title>tcp_event_data_recv (1 samples, 0.03%)</title><rect x="811.2" y="211.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="814.2" y="222.0"></text>
</g>
<g>
<title>dev_queue_xmit (5 samples, 0.16%)</title><rect x="811.5" y="467.0" width="1.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="814.5" y="478.0"></text>
</g>
<g>
<title>__dev_queue_xmit (5 samples, 0.16%)</title><rect x="811.5" y="451.0" width="1.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="814.5" y="462.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (2 samples, 0.06%)</title><rect x="812.3" y="435.0" width="0.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="815.3" y="446.0"></text>
</g>
<g>
<title>eth_type_trans (1 samples, 0.03%)</title><rect x="812.3" y="419.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="815.3" y="430.0"></text>
</g>
<g>
<title>skb_clone_tx_timestamp (1 samples, 0.03%)</title><rect x="812.7" y="419.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="815.7" y="430.0"></text>
</g>
<g>
<title>loopback_xmit (1 samples, 0.03%)</title><rect x="813.1" y="435.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="816.1" y="446.0"></text>
</g>
<g>
<title>ipv4_mtu (1 samples, 0.03%)</title><rect x="813.4" y="499.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="816.4" y="510.0"></text>
</g>
<g>
<title>ip_output (1 samples, 0.03%)</title><rect x="813.8" y="547.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="816.8" y="558.0"></text>
</g>
<g>
<title>skb_clone (1 samples, 0.03%)</title><rect x="814.2" y="579.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="817.2" y="590.0"></text>
</g>
<g>
<title>__copy_skb_header (1 samples, 0.03%)</title><rect x="814.2" y="563.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="817.2" y="574.0"></text>
</g>
<g>
<title>tcp_options_write (1 samples, 0.03%)</title><rect x="814.6" y="579.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="817.6" y="590.0"></text>
</g>
<g>
<title>tcp_update_skb_after_send (1 samples, 0.03%)</title><rect x="814.9" y="579.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="817.9" y="590.0"></text>
</g>
<g>
<title>skb_push (1 samples, 0.03%)</title><rect x="815.3" y="595.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="818.3" y="606.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (2 samples, 0.06%)</title><rect x="815.7" y="595.0" width="0.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="818.7" y="606.0"></text>
</g>
<g>
<title>tcp_rearm_rto (2 samples, 0.06%)</title><rect x="815.7" y="579.0" width="0.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="818.7" y="590.0"></text>
</g>
<g>
<title>sk_reset_timer (1 samples, 0.03%)</title><rect x="816.1" y="563.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="819.1" y="574.0"></text>
</g>
<g>
<title>mod_timer (1 samples, 0.03%)</title><rect x="816.1" y="547.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="819.1" y="558.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.03%)</title><rect x="816.1" y="531.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="819.1" y="542.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (2 samples, 0.06%)</title><rect x="816.5" y="595.0" width="0.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="819.5" y="606.0"></text>
</g>
<g>
<title>tcp_send_mss (3 samples, 0.10%)</title><rect x="817.2" y="643.0" width="1.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="820.2" y="654.0"></text>
</g>
<g>
<title>tcp_current_mss (3 samples, 0.10%)</title><rect x="817.2" y="627.0" width="1.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="820.2" y="638.0"></text>
</g>
<g>
<title>sockfd_lookup_light (3 samples, 0.10%)</title><rect x="818.3" y="707.0" width="1.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="821.3" y="718.0"></text>
</g>
<g>
<title>__fdget (1 samples, 0.03%)</title><rect x="818.3" y="691.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="821.3" y="702.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.03%)</title><rect x="818.3" y="675.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="821.3" y="686.0"></text>
</g>
<g>
<title>__fget (1 samples, 0.03%)</title><rect x="818.3" y="659.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="821.3" y="670.0"></text>
</g>
<g>
<title>__fget_light (2 samples, 0.06%)</title><rect x="818.7" y="691.0" width="0.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="821.7" y="702.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (1 samples, 0.03%)</title><rect x="819.5" y="867.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="822.5" y="878.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.03%)</title><rect x="819.5" y="851.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="822.5" y="862.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.03%)</title><rect x="819.5" y="835.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="822.5" y="846.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.upsert (21 samples, 0.67%)</title><rect x="819.9" y="883.0" width="7.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="822.9" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock (1 samples, 0.03%)</title><rect x="819.9" y="867.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="822.9" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireShared (1 samples, 0.03%)</title><rect x="819.9" y="851.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="822.9" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryAcquireShared (1 samples, 0.03%)</title><rect x="819.9" y="835.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="822.9" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.compareAndSetState (1 samples, 0.03%)</title><rect x="819.9" y="819.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="822.9" y="830.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LII_Z (1 samples, 0.03%)</title><rect x="819.9" y="803.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="822.9" y="814.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleInts$FieldInstanceReadWrite.compareAndSet (1 samples, 0.03%)</title><rect x="819.9" y="787.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="822.9" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.unlock (1 samples, 0.03%)</title><rect x="820.2" y="867.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="823.2" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.releaseShared (1 samples, 0.03%)</title><rect x="820.2" y="851.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="823.2" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryReleaseShared (1 samples, 0.03%)</title><rect x="820.2" y="835.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="823.2" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.compareAndSetState (1 samples, 0.03%)</title><rect x="820.2" y="819.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="823.2" y="830.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LII_Z (1 samples, 0.03%)</title><rect x="820.2" y="803.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="823.2" y="814.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleInts$FieldInstanceReadWrite.compareAndSet (1 samples, 0.03%)</title><rect x="820.2" y="787.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="823.2" y="798.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (1 samples, 0.03%)</title><rect x="820.2" y="771.0" width="0.4" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="823.2" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/MemTable.upsert (19 samples, 0.61%)</title><rect x="820.6" y="867.0" width="7.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="823.6" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.put (19 samples, 0.61%)</title><rect x="820.6" y="851.0" width="7.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="823.6" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (12 samples, 0.38%)</title><rect x="823.3" y="835.0" width="4.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="826.3" y="846.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (2 samples, 0.06%)</title><rect x="823.6" y="819.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="826.6" y="830.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (2 samples, 0.06%)</title><rect x="823.6" y="803.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="826.6" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.addCount (1 samples, 0.03%)</title><rect x="824.4" y="819.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="827.4" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/LongAdder.add (1 samples, 0.03%)</title><rect x="824.4" y="803.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="827.4" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/Striped64.casBase (1 samples, 0.03%)</title><rect x="824.4" y="787.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="827.4" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (8 samples, 0.26%)</title><rect x="824.8" y="819.0" width="3.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="827.8" y="830.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (8 samples, 0.26%)</title><rect x="824.8" y="803.0" width="3.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="827.8" y="814.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (8 samples, 0.26%)</title><rect x="824.8" y="787.0" width="3.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="827.8" y="798.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (8 samples, 0.26%)</title><rect x="824.8" y="771.0" width="3.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="827.8" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivlev/ThreadController.toByteBuffer (1 samples, 0.03%)</title><rect x="827.8" y="883.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="830.8" y="894.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (1 samples, 0.03%)</title><rect x="827.8" y="867.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="830.8" y="878.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (1 samples, 0.03%)</title><rect x="827.8" y="851.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="830.8" y="862.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (1 samples, 0.03%)</title><rect x="827.8" y="835.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="830.8" y="846.0"></text>
</g>
<g>
<title>[worker_4 tid=4349] (239 samples, 7.66%)</title><rect x="828.2" y="979.0" width="90.3" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="831.2" y="990.0">[worker_4 ..</text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.03%)</title><rect x="828.2" y="963.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="831.2" y="974.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (1 samples, 0.03%)</title><rect x="828.2" y="947.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="831.2" y="958.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) [clone .part.93] (1 samples, 0.03%)</title><rect x="828.2" y="931.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="831.2" y="942.0"></text>
</g>
<g>
<title>ObjectMonitor::EnterI(Thread*) (1 samples, 0.03%)</title><rect x="828.2" y="915.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="831.2" y="926.0"></text>
</g>
<g>
<title>SpinPause (1 samples, 0.03%)</title><rect x="828.2" y="899.0" width="0.4" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="831.2" y="910.0"></text>
</g>
<g>
<title>java/lang/Thread.run (238 samples, 7.63%)</title><rect x="828.6" y="963.0" width="89.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="831.6" y="974.0">java/lang/..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (238 samples, 7.63%)</title><rect x="828.6" y="947.0" width="89.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="831.6" y="958.0">java/util/..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (238 samples, 7.63%)</title><rect x="828.6" y="931.0" width="89.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="831.6" y="942.0">java/util/..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.unlock (2 samples, 0.06%)</title><rect x="828.6" y="915.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="831.6" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (2 samples, 0.06%)</title><rect x="828.6" y="899.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="831.6" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (2 samples, 0.06%)</title><rect x="828.6" y="883.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="831.6" y="894.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivlev/ThreadController.lambda$put$3 (1 samples, 0.03%)</title><rect x="828.9" y="867.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="831.9" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (87 samples, 2.79%)</title><rect x="829.3" y="915.0" width="32.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="832.3" y="926.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (87 samples, 2.79%)</title><rect x="829.3" y="899.0" width="32.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="832.3" y="910.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (66 samples, 2.11%)</title><rect x="829.3" y="883.0" width="25.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="832.3" y="894.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (3 samples, 0.10%)</title><rect x="830.4" y="867.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="833.4" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.fullyRelease (7 samples, 0.22%)</title><rect x="831.6" y="867.0" width="2.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="834.6" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (7 samples, 0.22%)</title><rect x="831.6" y="851.0" width="2.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="834.6" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (5 samples, 0.16%)</title><rect x="832.3" y="835.0" width="1.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="835.3" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (5 samples, 0.16%)</title><rect x="832.3" y="819.0" width="1.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="835.3" y="830.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (5 samples, 0.16%)</title><rect x="832.3" y="803.0" width="1.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="835.3" y="814.0"></text>
</g>
<g>
<title>__pthread_cond_signal (4 samples, 0.13%)</title><rect x="832.7" y="787.0" width="1.5" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="835.7" y="798.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (4 samples, 0.13%)</title><rect x="832.7" y="771.0" width="1.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="835.7" y="782.0"></text>
</g>
<g>
<title>do_syscall_64 (4 samples, 0.13%)</title><rect x="832.7" y="755.0" width="1.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="835.7" y="766.0"></text>
</g>
<g>
<title>__x64_sys_futex (4 samples, 0.13%)</title><rect x="832.7" y="739.0" width="1.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="835.7" y="750.0"></text>
</g>
<g>
<title>do_futex (4 samples, 0.13%)</title><rect x="832.7" y="723.0" width="1.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="835.7" y="734.0"></text>
</g>
<g>
<title>futex_wake (4 samples, 0.13%)</title><rect x="832.7" y="707.0" width="1.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="835.7" y="718.0"></text>
</g>
<g>
<title>wake_up_q (3 samples, 0.10%)</title><rect x="833.1" y="691.0" width="1.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="836.1" y="702.0"></text>
</g>
<g>
<title>try_to_wake_up (3 samples, 0.10%)</title><rect x="833.1" y="675.0" width="1.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="836.1" y="686.0"></text>
</g>
<g>
<title>__lock_text_start (3 samples, 0.10%)</title><rect x="833.1" y="659.0" width="1.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="836.1" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.isOnSyncQueue (1 samples, 0.03%)</title><rect x="834.2" y="867.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="837.2" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.findNodeFromTail (1 samples, 0.03%)</title><rect x="834.2" y="851.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="837.2" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (52 samples, 1.67%)</title><rect x="834.6" y="867.0" width="19.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="837.6" y="878.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (52 samples, 1.67%)</title><rect x="834.6" y="851.0" width="19.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="837.6" y="862.0"></text>
</g>
<g>
<title>Unsafe_Park (22 samples, 0.70%)</title><rect x="834.6" y="835.0" width="8.3" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="837.6" y="846.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (9 samples, 0.29%)</title><rect x="835.4" y="819.0" width="3.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="838.4" y="830.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (3 samples, 0.10%)</title><rect x="836.9" y="803.0" width="1.1" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="839.9" y="814.0"></text>
</g>
<g>
<title>Monitor::unlock() (1 samples, 0.03%)</title><rect x="838.0" y="803.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="841.0" y="814.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.03%)</title><rect x="838.4" y="803.0" width="0.4" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="841.4" y="814.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock (8 samples, 0.26%)</title><rect x="838.8" y="819.0" width="3.0" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="841.8" y="830.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (3 samples, 0.10%)</title><rect x="840.7" y="803.0" width="1.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="843.7" y="814.0"></text>
</g>
<g>
<title>do_syscall_64 (3 samples, 0.10%)</title><rect x="840.7" y="787.0" width="1.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="843.7" y="798.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.03%)</title><rect x="841.4" y="771.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="844.4" y="782.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.03%)</title><rect x="841.4" y="755.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="844.4" y="766.0"></text>
</g>
<g>
<title>futex_wake (1 samples, 0.03%)</title><rect x="841.4" y="739.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="844.4" y="750.0"></text>
</g>
<g>
<title>get_futex_key (1 samples, 0.03%)</title><rect x="841.4" y="723.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="844.4" y="734.0"></text>
</g>
<g>
<title>java_lang_Thread::set_thread_status(oopDesc*, java_lang_Thread::ThreadStatus) (2 samples, 0.06%)</title><rect x="841.8" y="819.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="844.8" y="830.0"></text>
</g>
<g>
<title>os::is_interrupted(Thread*, bool) (1 samples, 0.03%)</title><rect x="842.5" y="819.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="845.5" y="830.0"></text>
</g>
<g>
<title>[unknown] (29 samples, 0.93%)</title><rect x="842.9" y="835.0" width="11.0" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="845.9" y="846.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/ld-2.31.so (1 samples, 0.03%)</title><rect x="842.9" y="819.0" width="0.4" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="845.9" y="830.0"></text>
</g>
<g>
<title>__pthread_cond_wait (26 samples, 0.83%)</title><rect x="843.3" y="819.0" width="9.8" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="846.3" y="830.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (16 samples, 0.51%)</title><rect x="847.1" y="803.0" width="6.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="850.1" y="814.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.03%)</title><rect x="847.1" y="787.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="850.1" y="798.0"></text>
</g>
<g>
<title>do_syscall_64 (15 samples, 0.48%)</title><rect x="847.5" y="787.0" width="5.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="850.5" y="798.0"></text>
</g>
<g>
<title>__x64_sys_futex (13 samples, 0.42%)</title><rect x="847.8" y="771.0" width="4.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="850.8" y="782.0"></text>
</g>
<g>
<title>do_futex (13 samples, 0.42%)</title><rect x="847.8" y="755.0" width="4.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="850.8" y="766.0"></text>
</g>
<g>
<title>futex_wait (13 samples, 0.42%)</title><rect x="847.8" y="739.0" width="4.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="850.8" y="750.0"></text>
</g>
<g>
<title>futex_wait_queue_me (8 samples, 0.26%)</title><rect x="848.6" y="723.0" width="3.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="851.6" y="734.0"></text>
</g>
<g>
<title>schedule (5 samples, 0.16%)</title><rect x="849.7" y="707.0" width="1.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="852.7" y="718.0"></text>
</g>
<g>
<title>__schedule (4 samples, 0.13%)</title><rect x="850.1" y="691.0" width="1.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="853.1" y="702.0"></text>
</g>
<g>
<title>finish_task_switch (3 samples, 0.10%)</title><rect x="850.5" y="675.0" width="1.1" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="853.5" y="686.0"></text>
</g>
<g>
<title>futex_wait_setup (1 samples, 0.03%)</title><rect x="851.6" y="723.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="854.6" y="734.0"></text>
</g>
<g>
<title>get_futex_key (1 samples, 0.03%)</title><rect x="851.6" y="707.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="854.6" y="718.0"></text>
</g>
<g>
<title>plist_add (1 samples, 0.03%)</title><rect x="852.0" y="723.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="855.0" y="734.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.03%)</title><rect x="852.4" y="723.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="855.4" y="734.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.03%)</title><rect x="852.7" y="771.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="855.7" y="782.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (1 samples, 0.03%)</title><rect x="853.1" y="819.0" width="0.4" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="856.1" y="830.0"></text>
</g>
<g>
<title>__pthread_mutex_cond_lock (1 samples, 0.03%)</title><rect x="853.5" y="819.0" width="0.4" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="856.5" y="830.0"></text>
</g>
<g>
<title>java_lang_Thread::set_thread_status(oopDesc*, java_lang_Thread::ThreadStatus) (1 samples, 0.03%)</title><rect x="853.9" y="835.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="856.9" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (7 samples, 0.22%)</title><rect x="854.3" y="883.0" width="2.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="857.3" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (7 samples, 0.22%)</title><rect x="854.3" y="867.0" width="2.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="857.3" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (7 samples, 0.22%)</title><rect x="854.3" y="851.0" width="2.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="857.3" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (1 samples, 0.03%)</title><rect x="856.5" y="835.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="859.5" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (1 samples, 0.03%)</title><rect x="856.5" y="819.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="859.5" y="830.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (1 samples, 0.03%)</title><rect x="856.5" y="803.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="859.5" y="814.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="856.5" y="787.0" width="0.4" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="859.5" y="798.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (1 samples, 0.03%)</title><rect x="856.5" y="771.0" width="0.4" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="859.5" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (14 samples, 0.45%)</title><rect x="856.9" y="883.0" width="5.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="859.9" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (14 samples, 0.45%)</title><rect x="856.9" y="867.0" width="5.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="859.9" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (14 samples, 0.45%)</title><rect x="856.9" y="851.0" width="5.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="859.9" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (14 samples, 0.45%)</title><rect x="856.9" y="835.0" width="5.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="859.9" y="846.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (12 samples, 0.38%)</title><rect x="857.7" y="819.0" width="4.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="860.7" y="830.0"></text>
</g>
<g>
<title>ThreadsListHandle::~ThreadsListHandle() (1 samples, 0.03%)</title><rect x="857.7" y="803.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="860.7" y="814.0"></text>
</g>
<g>
<title>Unsafe_Unpark (2 samples, 0.06%)</title><rect x="858.0" y="803.0" width="0.8" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="861.0" y="814.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.235] (1 samples, 0.03%)</title><rect x="858.0" y="787.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="861.0" y="798.0"></text>
</g>
<g>
<title>pthread_mutex_lock (1 samples, 0.03%)</title><rect x="858.4" y="787.0" width="0.4" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="861.4" y="798.0"></text>
</g>
<g>
<title>__pthread_cond_signal (9 samples, 0.29%)</title><rect x="858.8" y="803.0" width="3.4" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="861.8" y="814.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (8 samples, 0.26%)</title><rect x="859.2" y="787.0" width="3.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="862.2" y="798.0"></text>
</g>
<g>
<title>do_syscall_64 (8 samples, 0.26%)</title><rect x="859.2" y="771.0" width="3.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="862.2" y="782.0"></text>
</g>
<g>
<title>__x64_sys_futex (6 samples, 0.19%)</title><rect x="859.9" y="755.0" width="2.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="862.9" y="766.0"></text>
</g>
<g>
<title>do_futex (6 samples, 0.19%)</title><rect x="859.9" y="739.0" width="2.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="862.9" y="750.0"></text>
</g>
<g>
<title>futex_wake (6 samples, 0.19%)</title><rect x="859.9" y="723.0" width="2.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="862.9" y="734.0"></text>
</g>
<g>
<title>wake_up_q (6 samples, 0.19%)</title><rect x="859.9" y="707.0" width="2.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="862.9" y="718.0"></text>
</g>
<g>
<title>try_to_wake_up (6 samples, 0.19%)</title><rect x="859.9" y="691.0" width="2.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="862.9" y="702.0"></text>
</g>
<g>
<title>__lock_text_start (6 samples, 0.19%)</title><rect x="859.9" y="675.0" width="2.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="862.9" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivlev/ThreadController$$Lambda$65/822960827.run (149 samples, 4.77%)</title><rect x="862.2" y="915.0" width="56.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="865.2" y="926.0">ru/mai..</text>
</g>
<g>
<title>ru/mail/polis/service/ivlev/ThreadController.lambda$put$3 (148 samples, 4.74%)</title><rect x="862.6" y="899.0" width="55.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="865.6" y="910.0">ru/ma..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (133 samples, 4.26%)</title><rect x="862.6" y="883.0" width="50.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="865.6" y="894.0">one/n..</text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.03%)</title><rect x="864.1" y="867.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="867.1" y="878.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (1 samples, 0.03%)</title><rect x="864.1" y="851.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="867.1" y="862.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (1 samples, 0.03%)</title><rect x="864.1" y="835.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="867.1" y="846.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.71] (1 samples, 0.03%)</title><rect x="864.1" y="819.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="867.1" y="830.0"></text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (1 samples, 0.03%)</title><rect x="864.5" y="867.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="867.5" y="878.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.03%)</title><rect x="864.5" y="851.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="867.5" y="862.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.03%)</title><rect x="864.5" y="835.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="867.5" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (1 samples, 0.03%)</title><rect x="864.8" y="867.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="867.8" y="878.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (124 samples, 3.97%)</title><rect x="865.2" y="867.0" width="46.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="868.2" y="878.0">one/..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (1 samples, 0.03%)</title><rect x="865.2" y="851.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="868.2" y="862.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (1 samples, 0.03%)</title><rect x="865.2" y="835.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="868.2" y="846.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (1 samples, 0.03%)</title><rect x="865.2" y="819.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="868.2" y="830.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (1 samples, 0.03%)</title><rect x="865.2" y="803.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="868.2" y="814.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (1 samples, 0.03%)</title><rect x="865.2" y="787.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="868.2" y="798.0"></text>
</g>
<g>
<title>java/lang/String.charAt (1 samples, 0.03%)</title><rect x="865.2" y="771.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="868.2" y="782.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (123 samples, 3.94%)</title><rect x="865.6" y="851.0" width="46.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="868.6" y="862.0">one/..</text>
</g>
<g>
<title>one/nio/net/Session.write (123 samples, 3.94%)</title><rect x="865.6" y="835.0" width="46.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="868.6" y="846.0">one/..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (1 samples, 0.03%)</title><rect x="865.6" y="819.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="868.6" y="830.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (122 samples, 3.91%)</title><rect x="866.0" y="819.0" width="46.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="869.0" y="830.0">one/..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (122 samples, 3.91%)</title><rect x="866.0" y="803.0" width="46.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="869.0" y="814.0">one/..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (8 samples, 0.26%)</title><rect x="866.0" y="787.0" width="3.0" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="869.0" y="798.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (1 samples, 0.03%)</title><rect x="867.9" y="771.0" width="0.4" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="870.9" y="782.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (1 samples, 0.03%)</title><rect x="868.3" y="771.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="871.3" y="782.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (1 samples, 0.03%)</title><rect x="868.6" y="771.0" width="0.4" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="871.6" y="782.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (1 samples, 0.03%)</title><rect x="868.6" y="755.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="871.6" y="766.0"></text>
</g>
<g>
<title>__send (112 samples, 3.59%)</title><rect x="869.0" y="787.0" width="42.4" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="872.0" y="798.0">__send</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (109 samples, 3.49%)</title><rect x="870.1" y="771.0" width="41.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="873.1" y="782.0">ent..</text>
</g>
<g>
<title>__x64_sys_sendto (1 samples, 0.03%)</title><rect x="870.1" y="755.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="873.1" y="766.0"></text>
</g>
<g>
<title>do_syscall_64 (108 samples, 3.46%)</title><rect x="870.5" y="755.0" width="40.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="873.5" y="766.0">do_..</text>
</g>
<g>
<title>__x64_sys_sendto (108 samples, 3.46%)</title><rect x="870.5" y="739.0" width="40.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="873.5" y="750.0">__x..</text>
</g>
<g>
<title>__sys_sendto (107 samples, 3.43%)</title><rect x="870.5" y="723.0" width="40.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="873.5" y="734.0">__s..</text>
</g>
<g>
<title>sock_sendmsg (104 samples, 3.33%)</title><rect x="870.9" y="707.0" width="39.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="873.9" y="718.0">soc..</text>
</g>
<g>
<title>apparmor_socket_sendmsg (1 samples, 0.03%)</title><rect x="870.9" y="691.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="873.9" y="702.0"></text>
</g>
<g>
<title>inet6_sendmsg (102 samples, 3.27%)</title><rect x="871.3" y="691.0" width="38.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="874.3" y="702.0">ine..</text>
</g>
<g>
<title>tcp_sendmsg (102 samples, 3.27%)</title><rect x="871.3" y="675.0" width="38.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="874.3" y="686.0">tcp..</text>
</g>
<g>
<title>tcp_sendmsg_locked (101 samples, 3.24%)</title><rect x="871.3" y="659.0" width="38.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="874.3" y="670.0">tcp..</text>
</g>
<g>
<title>__virt_addr_valid (1 samples, 0.03%)</title><rect x="872.0" y="643.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="875.0" y="654.0"></text>
</g>
<g>
<title>copyin (1 samples, 0.03%)</title><rect x="872.4" y="643.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="875.4" y="654.0"></text>
</g>
<g>
<title>sk_page_frag_refill (1 samples, 0.03%)</title><rect x="872.8" y="643.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="875.8" y="654.0"></text>
</g>
<g>
<title>skb_page_frag_refill (1 samples, 0.03%)</title><rect x="872.8" y="627.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="875.8" y="638.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (6 samples, 0.19%)</title><rect x="873.2" y="643.0" width="2.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="876.2" y="654.0"></text>
</g>
<g>
<title>__alloc_skb (6 samples, 0.19%)</title><rect x="873.2" y="627.0" width="2.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="876.2" y="638.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.0 (2 samples, 0.06%)</title><rect x="873.2" y="611.0" width="0.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="876.2" y="622.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (2 samples, 0.06%)</title><rect x="873.2" y="595.0" width="0.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="876.2" y="606.0"></text>
</g>
<g>
<title>kmalloc_slab (1 samples, 0.03%)</title><rect x="873.5" y="579.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="876.5" y="590.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (3 samples, 0.10%)</title><rect x="873.9" y="611.0" width="1.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="876.9" y="622.0"></text>
</g>
<g>
<title>memcg_kmem_put_cache (1 samples, 0.03%)</title><rect x="875.1" y="611.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="878.1" y="622.0"></text>
</g>
<g>
<title>skb_entail (1 samples, 0.03%)</title><rect x="875.4" y="643.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="878.4" y="654.0"></text>
</g>
<g>
<title>tcp_push (86 samples, 2.76%)</title><rect x="875.8" y="643.0" width="32.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="878.8" y="654.0">tc..</text>
</g>
<g>
<title>__tcp_push_pending_frames (86 samples, 2.76%)</title><rect x="875.8" y="627.0" width="32.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="878.8" y="638.0">__..</text>
</g>
<g>
<title>tcp_write_xmit (86 samples, 2.76%)</title><rect x="875.8" y="611.0" width="32.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="878.8" y="622.0">tc..</text>
</g>
<g>
<title>__tcp_transmit_skb (81 samples, 2.60%)</title><rect x="875.8" y="595.0" width="30.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="878.8" y="606.0">__..</text>
</g>
<g>
<title>__skb_clone (1 samples, 0.03%)</title><rect x="876.9" y="579.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="879.9" y="590.0"></text>
</g>
<g>
<title>__tcp_v4_send_check (1 samples, 0.03%)</title><rect x="877.3" y="579.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="880.3" y="590.0"></text>
</g>
<g>
<title>ip_queue_xmit (73 samples, 2.34%)</title><rect x="877.7" y="579.0" width="27.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="880.7" y="590.0">i..</text>
</g>
<g>
<title>__ip_queue_xmit (73 samples, 2.34%)</title><rect x="877.7" y="563.0" width="27.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="880.7" y="574.0">_..</text>
</g>
<g>
<title>ip_local_out (71 samples, 2.27%)</title><rect x="878.1" y="547.0" width="26.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="881.1" y="558.0">i..</text>
</g>
<g>
<title>ip_output (71 samples, 2.27%)</title><rect x="878.1" y="531.0" width="26.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="881.1" y="542.0">i..</text>
</g>
<g>
<title>ip_finish_output (71 samples, 2.27%)</title><rect x="878.1" y="515.0" width="26.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="881.1" y="526.0">i..</text>
</g>
<g>
<title>__ip_finish_output (71 samples, 2.27%)</title><rect x="878.1" y="499.0" width="26.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="881.1" y="510.0">_..</text>
</g>
<g>
<title>__local_bh_enable_ip (1 samples, 0.03%)</title><rect x="878.5" y="483.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="881.5" y="494.0"></text>
</g>
<g>
<title>ip_finish_output2 (69 samples, 2.21%)</title><rect x="878.8" y="483.0" width="26.1" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="881.8" y="494.0">i..</text>
</g>
<g>
<title>__local_bh_enable_ip (59 samples, 1.89%)</title><rect x="879.6" y="467.0" width="22.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="882.6" y="478.0">_..</text>
</g>
<g>
<title>do_softirq.part.0 (59 samples, 1.89%)</title><rect x="879.6" y="451.0" width="22.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="882.6" y="462.0">d..</text>
</g>
<g>
<title>do_softirq_own_stack (58 samples, 1.86%)</title><rect x="880.0" y="435.0" width="21.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="883.0" y="446.0">d..</text>
</g>
<g>
<title>__softirqentry_text_start (58 samples, 1.86%)</title><rect x="880.0" y="419.0" width="21.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="883.0" y="430.0">_..</text>
</g>
<g>
<title>net_rx_action (57 samples, 1.83%)</title><rect x="880.3" y="403.0" width="21.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="883.3" y="414.0">n..</text>
</g>
<g>
<title>process_backlog (57 samples, 1.83%)</title><rect x="880.3" y="387.0" width="21.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="883.3" y="398.0">p..</text>
</g>
<g>
<title>__netif_receive_skb (56 samples, 1.79%)</title><rect x="880.3" y="371.0" width="21.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="883.3" y="382.0">_..</text>
</g>
<g>
<title>__netif_receive_skb_one_core (56 samples, 1.79%)</title><rect x="880.3" y="355.0" width="21.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="883.3" y="366.0">_..</text>
</g>
<g>
<title>ip_rcv (54 samples, 1.73%)</title><rect x="880.3" y="339.0" width="20.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="883.3" y="350.0"></text>
</g>
<g>
<title>ip_rcv_finish (54 samples, 1.73%)</title><rect x="880.3" y="323.0" width="20.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="883.3" y="334.0"></text>
</g>
<g>
<title>ip_local_deliver (52 samples, 1.67%)</title><rect x="880.7" y="307.0" width="19.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="883.7" y="318.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (52 samples, 1.67%)</title><rect x="880.7" y="291.0" width="19.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="883.7" y="302.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (52 samples, 1.67%)</title><rect x="880.7" y="275.0" width="19.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="883.7" y="286.0"></text>
</g>
<g>
<title>_raw_spin_lock (1 samples, 0.03%)</title><rect x="880.7" y="259.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="883.7" y="270.0"></text>
</g>
<g>
<title>tcp_v4_rcv (51 samples, 1.63%)</title><rect x="881.1" y="259.0" width="19.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="884.1" y="270.0"></text>
</g>
<g>
<title>ipv4_dst_check (1 samples, 0.03%)</title><rect x="881.9" y="243.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="884.9" y="254.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (1 samples, 0.03%)</title><rect x="882.2" y="243.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="885.2" y="254.0"></text>
</g>
<g>
<title>apparmor_socket_sock_rcv_skb (1 samples, 0.03%)</title><rect x="882.2" y="227.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="885.2" y="238.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (47 samples, 1.51%)</title><rect x="882.6" y="243.0" width="17.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="885.6" y="254.0"></text>
</g>
<g>
<title>ktime_get_seconds (1 samples, 0.03%)</title><rect x="882.6" y="227.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="885.6" y="238.0"></text>
</g>
<g>
<title>tcp_data_ready (1 samples, 0.03%)</title><rect x="883.0" y="227.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="886.0" y="238.0"></text>
</g>
<g>
<title>tcp_rcv_established (45 samples, 1.44%)</title><rect x="883.4" y="227.0" width="17.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="886.4" y="238.0"></text>
</g>
<g>
<title>__tcp_ack_snd_check (4 samples, 0.13%)</title><rect x="884.1" y="211.0" width="1.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="887.1" y="222.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (4 samples, 0.13%)</title><rect x="884.1" y="195.0" width="1.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="887.1" y="206.0"></text>
</g>
<g>
<title>sk_reset_timer (4 samples, 0.13%)</title><rect x="884.1" y="179.0" width="1.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="887.1" y="190.0"></text>
</g>
<g>
<title>lock_timer_base (1 samples, 0.03%)</title><rect x="884.1" y="163.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="887.1" y="174.0"></text>
</g>
<g>
<title>mod_timer (3 samples, 0.10%)</title><rect x="884.5" y="163.0" width="1.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="887.5" y="174.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.03%)</title><rect x="885.3" y="147.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="888.3" y="158.0"></text>
</g>
<g>
<title>tcp_ack (11 samples, 0.35%)</title><rect x="885.6" y="211.0" width="4.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="888.6" y="222.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (6 samples, 0.19%)</title><rect x="886.8" y="195.0" width="2.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="889.8" y="206.0"></text>
</g>
<g>
<title>__kfree_skb (1 samples, 0.03%)</title><rect x="887.5" y="179.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="890.5" y="190.0"></text>
</g>
<g>
<title>skb_release_all (1 samples, 0.03%)</title><rect x="887.5" y="163.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="890.5" y="174.0"></text>
</g>
<g>
<title>skb_release_data (1 samples, 0.03%)</title><rect x="887.5" y="147.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="890.5" y="158.0"></text>
</g>
<g>
<title>kfree_skbmem (1 samples, 0.03%)</title><rect x="887.9" y="179.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="890.9" y="190.0"></text>
</g>
<g>
<title>tcp_ack_update_rtt.isra.0 (2 samples, 0.06%)</title><rect x="888.3" y="179.0" width="0.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="891.3" y="190.0"></text>
</g>
<g>
<title>tcp_rack_advance (1 samples, 0.03%)</title><rect x="889.0" y="195.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="892.0" y="206.0"></text>
</g>
<g>
<title>tcp_rate_skb_delivered (1 samples, 0.03%)</title><rect x="889.4" y="195.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="892.4" y="206.0"></text>
</g>
<g>
<title>tcp_data_ready (25 samples, 0.80%)</title><rect x="889.8" y="211.0" width="9.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="892.8" y="222.0"></text>
</g>
<g>
<title>sock_def_readable (25 samples, 0.80%)</title><rect x="889.8" y="195.0" width="9.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="892.8" y="206.0"></text>
</g>
<g>
<title>__wake_up_sync_key (25 samples, 0.80%)</title><rect x="889.8" y="179.0" width="9.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="892.8" y="190.0"></text>
</g>
<g>
<title>__wake_up_common_lock (25 samples, 0.80%)</title><rect x="889.8" y="163.0" width="9.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="892.8" y="174.0"></text>
</g>
<g>
<title>__lock_text_start (25 samples, 0.80%)</title><rect x="889.8" y="147.0" width="9.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="892.8" y="158.0"></text>
</g>
<g>
<title>tcp_queue_rcv (2 samples, 0.06%)</title><rect x="899.3" y="211.0" width="0.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="902.3" y="222.0"></text>
</g>
<g>
<title>tcp_rearm_rto (1 samples, 0.03%)</title><rect x="900.0" y="211.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="903.0" y="222.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (1 samples, 0.03%)</title><rect x="900.4" y="307.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="903.4" y="318.0"></text>
</g>
<g>
<title>ip_rcv_finish (2 samples, 0.06%)</title><rect x="900.8" y="339.0" width="0.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="903.8" y="350.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (1 samples, 0.03%)</title><rect x="901.5" y="371.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="904.5" y="382.0"></text>
</g>
<g>
<title>dev_queue_xmit (8 samples, 0.26%)</title><rect x="901.9" y="467.0" width="3.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="904.9" y="478.0"></text>
</g>
<g>
<title>__dev_queue_xmit (7 samples, 0.22%)</title><rect x="901.9" y="451.0" width="2.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="904.9" y="462.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (5 samples, 0.16%)</title><rect x="902.7" y="435.0" width="1.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="905.7" y="446.0"></text>
</g>
<g>
<title>loopback_xmit (4 samples, 0.13%)</title><rect x="903.0" y="419.0" width="1.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="906.0" y="430.0"></text>
</g>
<g>
<title>eth_type_trans (1 samples, 0.03%)</title><rect x="903.0" y="403.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="906.0" y="414.0"></text>
</g>
<g>
<title>netif_rx (1 samples, 0.03%)</title><rect x="903.4" y="403.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="906.4" y="414.0"></text>
</g>
<g>
<title>netif_rx_internal (1 samples, 0.03%)</title><rect x="903.4" y="387.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="906.4" y="398.0"></text>
</g>
<g>
<title>enqueue_to_backlog (1 samples, 0.03%)</title><rect x="903.4" y="371.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="906.4" y="382.0"></text>
</g>
<g>
<title>skb_clone_tx_timestamp (1 samples, 0.03%)</title><rect x="903.8" y="403.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="906.8" y="414.0"></text>
</g>
<g>
<title>tcp_wfree (1 samples, 0.03%)</title><rect x="904.2" y="403.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="907.2" y="414.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (1 samples, 0.03%)</title><rect x="904.5" y="451.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="907.5" y="462.0"></text>
</g>
<g>
<title>ipv4_dst_check (1 samples, 0.03%)</title><rect x="904.9" y="547.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="907.9" y="558.0"></text>
</g>
<g>
<title>skb_clone (1 samples, 0.03%)</title><rect x="905.3" y="579.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="908.3" y="590.0"></text>
</g>
<g>
<title>skb_push (1 samples, 0.03%)</title><rect x="905.7" y="579.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="908.7" y="590.0"></text>
</g>
<g>
<title>tcp_established_options (1 samples, 0.03%)</title><rect x="906.1" y="579.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="909.1" y="590.0"></text>
</g>
<g>
<title>read_tsc (1 samples, 0.03%)</title><rect x="906.4" y="595.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="909.4" y="606.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (3 samples, 0.10%)</title><rect x="906.8" y="595.0" width="1.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="909.8" y="606.0"></text>
</g>
<g>
<title>tcp_rearm_rto (3 samples, 0.10%)</title><rect x="906.8" y="579.0" width="1.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="909.8" y="590.0"></text>
</g>
<g>
<title>sk_reset_timer (3 samples, 0.10%)</title><rect x="906.8" y="563.0" width="1.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="909.8" y="574.0"></text>
</g>
<g>
<title>mod_timer (3 samples, 0.10%)</title><rect x="906.8" y="547.0" width="1.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="909.8" y="558.0"></text>
</g>
<g>
<title>__lock_text_start (2 samples, 0.06%)</title><rect x="907.2" y="531.0" width="0.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="910.2" y="542.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (1 samples, 0.03%)</title><rect x="907.9" y="595.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="910.9" y="606.0"></text>
</g>
<g>
<title>mod_timer (1 samples, 0.03%)</title><rect x="907.9" y="579.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="910.9" y="590.0"></text>
</g>
<g>
<title>tcp_send_mss (3 samples, 0.10%)</title><rect x="908.3" y="643.0" width="1.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="911.3" y="654.0"></text>
</g>
<g>
<title>ipv4_mtu (1 samples, 0.03%)</title><rect x="908.3" y="627.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="911.3" y="638.0"></text>
</g>
<g>
<title>tcp_current_mss (2 samples, 0.06%)</title><rect x="908.7" y="627.0" width="0.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="911.7" y="638.0"></text>
</g>
<g>
<title>ipv4_mtu (1 samples, 0.03%)</title><rect x="909.1" y="611.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="912.1" y="622.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (1 samples, 0.03%)</title><rect x="909.5" y="659.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="912.5" y="670.0"></text>
</g>
<g>
<title>security_socket_sendmsg (1 samples, 0.03%)</title><rect x="909.8" y="691.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="912.8" y="702.0"></text>
</g>
<g>
<title>sockfd_lookup_light (2 samples, 0.06%)</title><rect x="910.2" y="707.0" width="0.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="913.2" y="718.0"></text>
</g>
<g>
<title>__fdget (2 samples, 0.06%)</title><rect x="910.2" y="691.0" width="0.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="913.2" y="702.0"></text>
</g>
<g>
<title>__fget_light (2 samples, 0.06%)</title><rect x="910.2" y="675.0" width="0.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="913.2" y="686.0"></text>
</g>
<g>
<title>__fget (2 samples, 0.06%)</title><rect x="910.2" y="659.0" width="0.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="913.2" y="670.0"></text>
</g>
<g>
<title>sockfd_lookup_light (1 samples, 0.03%)</title><rect x="911.0" y="723.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="914.0" y="734.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (2 samples, 0.06%)</title><rect x="911.4" y="787.0" width="0.7" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="914.4" y="798.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (2 samples, 0.06%)</title><rect x="912.1" y="867.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="915.1" y="878.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.03%)</title><rect x="912.5" y="851.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="915.5" y="862.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.03%)</title><rect x="912.5" y="835.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="915.5" y="846.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.upsert (15 samples, 0.48%)</title><rect x="912.9" y="883.0" width="5.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="915.9" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.unlock (1 samples, 0.03%)</title><rect x="912.9" y="867.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="915.9" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.releaseShared (1 samples, 0.03%)</title><rect x="912.9" y="851.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="915.9" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryReleaseShared (1 samples, 0.03%)</title><rect x="912.9" y="835.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="915.9" y="846.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.remove (1 samples, 0.03%)</title><rect x="912.9" y="819.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="915.9" y="830.0"></text>
</g>
<g>
<title>ru/mail/polis/MemTable.upsert (14 samples, 0.45%)</title><rect x="913.2" y="867.0" width="5.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="916.2" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.put (14 samples, 0.45%)</title><rect x="913.2" y="851.0" width="5.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="916.2" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (12 samples, 0.38%)</title><rect x="913.6" y="835.0" width="4.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="916.6" y="846.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (1 samples, 0.03%)</title><rect x="914.0" y="819.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="917.0" y="830.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (1 samples, 0.03%)</title><rect x="914.0" y="803.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="917.0" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (10 samples, 0.32%)</title><rect x="914.4" y="819.0" width="3.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="917.4" y="830.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (10 samples, 0.32%)</title><rect x="914.4" y="803.0" width="3.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="917.4" y="814.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (10 samples, 0.32%)</title><rect x="914.4" y="787.0" width="3.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="917.4" y="798.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (10 samples, 0.32%)</title><rect x="914.4" y="771.0" width="3.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="917.4" y="782.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (1 samples, 0.03%)</title><rect x="918.2" y="835.0" width="0.3" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="921.2" y="846.0"></text>
</g>
<g>
<title>[worker_5 tid=4343] (240 samples, 7.69%)</title><rect x="918.5" y="979.0" width="90.8" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="921.5" y="990.0">[worker_5 ..</text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.03%)</title><rect x="918.5" y="963.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="921.5" y="974.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (1 samples, 0.03%)</title><rect x="918.5" y="947.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="921.5" y="958.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) [clone .part.93] (1 samples, 0.03%)</title><rect x="918.5" y="931.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="921.5" y="942.0"></text>
</g>
<g>
<title>java/lang/Thread.run (239 samples, 7.66%)</title><rect x="918.9" y="963.0" width="90.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="921.9" y="974.0">java/lang/..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (239 samples, 7.66%)</title><rect x="918.9" y="947.0" width="90.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="921.9" y="958.0">java/util/..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (239 samples, 7.66%)</title><rect x="918.9" y="931.0" width="90.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="921.9" y="942.0">java/util/..</text>
</g>
<g>
<title>java/lang/Thread.interrupted (2 samples, 0.06%)</title><rect x="920.0" y="915.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="923.0" y="926.0"></text>
</g>
<g>
<title>java/lang/Thread.isInterrupted (2 samples, 0.06%)</title><rect x="920.0" y="899.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="923.0" y="910.0"></text>
</g>
<g>
<title>JVM_IsInterrupted (2 samples, 0.06%)</title><rect x="920.0" y="883.0" width="0.8" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="923.0" y="894.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (2 samples, 0.06%)</title><rect x="920.0" y="867.0" width="0.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="923.0" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.unlock (1 samples, 0.03%)</title><rect x="920.8" y="915.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="923.8" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (86 samples, 2.76%)</title><rect x="921.2" y="915.0" width="32.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="924.2" y="926.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (86 samples, 2.76%)</title><rect x="921.2" y="899.0" width="32.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="924.2" y="910.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (64 samples, 2.05%)</title><rect x="921.2" y="883.0" width="24.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="924.2" y="894.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (4 samples, 0.13%)</title><rect x="921.2" y="867.0" width="1.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="924.2" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (1 samples, 0.03%)</title><rect x="922.3" y="851.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="925.3" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (1 samples, 0.03%)</title><rect x="922.3" y="835.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="925.3" y="846.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (1 samples, 0.03%)</title><rect x="922.3" y="819.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="925.3" y="830.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="922.3" y="803.0" width="0.4" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="925.3" y="814.0"></text>
</g>
<g>
<title>__pthread_cond_wait (1 samples, 0.03%)</title><rect x="922.3" y="787.0" width="0.4" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="925.3" y="798.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.03%)</title><rect x="922.3" y="771.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="925.3" y="782.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.03%)</title><rect x="922.3" y="755.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="925.3" y="766.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.03%)</title><rect x="922.3" y="739.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="925.3" y="750.0"></text>
</g>
<g>
<title>futex_wait (1 samples, 0.03%)</title><rect x="922.3" y="723.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="925.3" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.fullyRelease (6 samples, 0.19%)</title><rect x="922.7" y="867.0" width="2.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="925.7" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (6 samples, 0.19%)</title><rect x="922.7" y="851.0" width="2.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="925.7" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (5 samples, 0.16%)</title><rect x="923.1" y="835.0" width="1.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="926.1" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (5 samples, 0.16%)</title><rect x="923.1" y="819.0" width="1.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="926.1" y="830.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (5 samples, 0.16%)</title><rect x="923.1" y="803.0" width="1.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="926.1" y="814.0"></text>
</g>
<g>
<title>Unsafe_Unpark (2 samples, 0.06%)</title><rect x="923.1" y="787.0" width="0.7" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="926.1" y="798.0"></text>
</g>
<g>
<title>java_lang_Thread::thread(oopDesc*) (1 samples, 0.03%)</title><rect x="923.1" y="771.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="926.1" y="782.0"></text>
</g>
<g>
<title>oopDesc::address_field(int) const (1 samples, 0.03%)</title><rect x="923.5" y="771.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="926.5" y="782.0"></text>
</g>
<g>
<title>__pthread_cond_signal (3 samples, 0.10%)</title><rect x="923.8" y="787.0" width="1.2" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="926.8" y="798.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (3 samples, 0.10%)</title><rect x="923.8" y="771.0" width="1.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="926.8" y="782.0"></text>
</g>
<g>
<title>do_syscall_64 (3 samples, 0.10%)</title><rect x="923.8" y="755.0" width="1.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="926.8" y="766.0"></text>
</g>
<g>
<title>__x64_sys_futex (3 samples, 0.10%)</title><rect x="923.8" y="739.0" width="1.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="926.8" y="750.0"></text>
</g>
<g>
<title>do_futex (3 samples, 0.10%)</title><rect x="923.8" y="723.0" width="1.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="926.8" y="734.0"></text>
</g>
<g>
<title>futex_wake (3 samples, 0.10%)</title><rect x="923.8" y="707.0" width="1.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="926.8" y="718.0"></text>
</g>
<g>
<title>wake_up_q (3 samples, 0.10%)</title><rect x="923.8" y="691.0" width="1.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="926.8" y="702.0"></text>
</g>
<g>
<title>try_to_wake_up (3 samples, 0.10%)</title><rect x="923.8" y="675.0" width="1.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="926.8" y="686.0"></text>
</g>
<g>
<title>__lock_text_start (3 samples, 0.10%)</title><rect x="923.8" y="659.0" width="1.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="926.8" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (54 samples, 1.73%)</title><rect x="925.0" y="867.0" width="20.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="928.0" y="878.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (54 samples, 1.73%)</title><rect x="925.0" y="851.0" width="20.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="928.0" y="862.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/ld-2.31.so (1 samples, 0.03%)</title><rect x="925.3" y="835.0" width="0.4" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="928.3" y="846.0"></text>
</g>
<g>
<title>Unsafe_Park (20 samples, 0.64%)</title><rect x="925.7" y="835.0" width="7.6" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="928.7" y="846.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (1 samples, 0.03%)</title><rect x="925.7" y="819.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="928.7" y="830.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (8 samples, 0.26%)</title><rect x="926.1" y="819.0" width="3.0" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="929.1" y="830.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (1 samples, 0.03%)</title><rect x="928.0" y="803.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="931.0" y="814.0"></text>
</g>
<g>
<title>Monitor::unlock() (1 samples, 0.03%)</title><rect x="928.4" y="803.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="931.4" y="814.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.03%)</title><rect x="928.7" y="803.0" width="0.4" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="931.7" y="814.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.235] (1 samples, 0.03%)</title><rect x="929.1" y="819.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="932.1" y="830.0"></text>
</g>
<g>
<title>__GI___pthread_mutex_trylock (1 samples, 0.03%)</title><rect x="929.5" y="819.0" width="0.4" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="932.5" y="830.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock (8 samples, 0.26%)</title><rect x="929.9" y="819.0" width="3.0" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="932.9" y="830.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (5 samples, 0.16%)</title><rect x="931.0" y="803.0" width="1.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="934.0" y="814.0"></text>
</g>
<g>
<title>do_syscall_64 (5 samples, 0.16%)</title><rect x="931.0" y="787.0" width="1.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="934.0" y="798.0"></text>
</g>
<g>
<title>__x64_sys_futex (4 samples, 0.13%)</title><rect x="931.4" y="771.0" width="1.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="934.4" y="782.0"></text>
</g>
<g>
<title>do_futex (3 samples, 0.10%)</title><rect x="931.4" y="755.0" width="1.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="934.4" y="766.0"></text>
</g>
<g>
<title>futex_wake (3 samples, 0.10%)</title><rect x="931.4" y="739.0" width="1.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="934.4" y="750.0"></text>
</g>
<g>
<title>get_futex_key_refs.isra.0 (1 samples, 0.03%)</title><rect x="932.1" y="723.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="935.1" y="734.0"></text>
</g>
<g>
<title>futex_wake (1 samples, 0.03%)</title><rect x="932.5" y="755.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="935.5" y="766.0"></text>
</g>
<g>
<title>java_lang_Thread::set_thread_status(oopDesc*, java_lang_Thread::ThreadStatus) (1 samples, 0.03%)</title><rect x="932.9" y="819.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="935.9" y="830.0"></text>
</g>
<g>
<title>[unknown] (32 samples, 1.03%)</title><rect x="933.3" y="835.0" width="12.1" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="936.3" y="846.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/ld-2.31.so (1 samples, 0.03%)</title><rect x="933.3" y="819.0" width="0.4" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="936.3" y="830.0"></text>
</g>
<g>
<title>__GI___pthread_mutex_trylock (1 samples, 0.03%)</title><rect x="933.7" y="819.0" width="0.3" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="936.7" y="830.0"></text>
</g>
<g>
<title>__pthread_cond_wait (28 samples, 0.90%)</title><rect x="934.0" y="819.0" width="10.6" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="937.0" y="830.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (18 samples, 0.58%)</title><rect x="937.8" y="803.0" width="6.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="940.8" y="814.0"></text>
</g>
<g>
<title>do_syscall_64 (18 samples, 0.58%)</title><rect x="937.8" y="787.0" width="6.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="940.8" y="798.0"></text>
</g>
<g>
<title>__x64_sys_futex (15 samples, 0.48%)</title><rect x="939.0" y="771.0" width="5.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="942.0" y="782.0"></text>
</g>
<g>
<title>do_futex (14 samples, 0.45%)</title><rect x="939.0" y="755.0" width="5.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="942.0" y="766.0"></text>
</g>
<g>
<title>futex_wait (14 samples, 0.45%)</title><rect x="939.0" y="739.0" width="5.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="942.0" y="750.0"></text>
</g>
<g>
<title>futex_wait_queue_me (13 samples, 0.42%)</title><rect x="939.0" y="723.0" width="4.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="942.0" y="734.0"></text>
</g>
<g>
<title>schedule (11 samples, 0.35%)</title><rect x="939.7" y="707.0" width="4.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="942.7" y="718.0"></text>
</g>
<g>
<title>__schedule (11 samples, 0.35%)</title><rect x="939.7" y="691.0" width="4.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="942.7" y="702.0"></text>
</g>
<g>
<title>finish_task_switch (10 samples, 0.32%)</title><rect x="940.1" y="675.0" width="3.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="943.1" y="686.0"></text>
</g>
<g>
<title>futex_wait_setup (1 samples, 0.03%)</title><rect x="943.9" y="723.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="946.9" y="734.0"></text>
</g>
<g>
<title>futex_wait (1 samples, 0.03%)</title><rect x="944.2" y="755.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="947.2" y="766.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (2 samples, 0.06%)</title><rect x="944.6" y="819.0" width="0.8" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="947.6" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (5 samples, 0.16%)</title><rect x="945.4" y="883.0" width="1.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="948.4" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (5 samples, 0.16%)</title><rect x="945.4" y="867.0" width="1.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="948.4" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (5 samples, 0.16%)</title><rect x="945.4" y="851.0" width="1.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="948.4" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (17 samples, 0.54%)</title><rect x="947.3" y="883.0" width="6.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="950.3" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (17 samples, 0.54%)</title><rect x="947.3" y="867.0" width="6.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="950.3" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (17 samples, 0.54%)</title><rect x="947.3" y="851.0" width="6.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="950.3" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (17 samples, 0.54%)</title><rect x="947.3" y="835.0" width="6.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="950.3" y="846.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (17 samples, 0.54%)</title><rect x="947.3" y="819.0" width="6.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="950.3" y="830.0"></text>
</g>
<g>
<title>Unsafe_Unpark (2 samples, 0.06%)</title><rect x="947.3" y="803.0" width="0.7" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="950.3" y="814.0"></text>
</g>
<g>
<title>__pthread_cond_signal (15 samples, 0.48%)</title><rect x="948.0" y="803.0" width="5.7" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="951.0" y="814.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (13 samples, 0.42%)</title><rect x="948.8" y="787.0" width="4.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="951.8" y="798.0"></text>
</g>
<g>
<title>do_syscall_64 (13 samples, 0.42%)</title><rect x="948.8" y="771.0" width="4.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="951.8" y="782.0"></text>
</g>
<g>
<title>__x64_sys_futex (13 samples, 0.42%)</title><rect x="948.8" y="755.0" width="4.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="951.8" y="766.0"></text>
</g>
<g>
<title>do_futex (13 samples, 0.42%)</title><rect x="948.8" y="739.0" width="4.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="951.8" y="750.0"></text>
</g>
<g>
<title>futex_wake (13 samples, 0.42%)</title><rect x="948.8" y="723.0" width="4.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="951.8" y="734.0"></text>
</g>
<g>
<title>wake_up_q (13 samples, 0.42%)</title><rect x="948.8" y="707.0" width="4.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="951.8" y="718.0"></text>
</g>
<g>
<title>try_to_wake_up (13 samples, 0.42%)</title><rect x="948.8" y="691.0" width="4.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="951.8" y="702.0"></text>
</g>
<g>
<title>__lock_text_start (13 samples, 0.42%)</title><rect x="948.8" y="675.0" width="4.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="951.8" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivlev/ThreadController$$Lambda$65/822960827.run (147 samples, 4.71%)</title><rect x="953.7" y="915.0" width="55.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="956.7" y="926.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/service/ivlev/ThreadController.lambda$put$3 (147 samples, 4.71%)</title><rect x="953.7" y="899.0" width="55.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="956.7" y="910.0">ru/ma..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (122 samples, 3.91%)</title><rect x="953.7" y="883.0" width="46.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="956.7" y="894.0">one/..</text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (1 samples, 0.03%)</title><rect x="954.5" y="867.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="957.5" y="878.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (117 samples, 3.75%)</title><rect x="954.8" y="867.0" width="44.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="957.8" y="878.0">one/..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (4 samples, 0.13%)</title><rect x="954.8" y="851.0" width="1.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="957.8" y="862.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (2 samples, 0.06%)</title><rect x="955.6" y="835.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="958.6" y="846.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (2 samples, 0.06%)</title><rect x="955.6" y="819.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="958.6" y="830.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (2 samples, 0.06%)</title><rect x="955.6" y="803.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="958.6" y="814.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (2 samples, 0.06%)</title><rect x="955.6" y="787.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="958.6" y="798.0"></text>
</g>
<g>
<title>java/lang/String.charAt (2 samples, 0.06%)</title><rect x="955.6" y="771.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="958.6" y="782.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (2 samples, 0.06%)</title><rect x="955.6" y="755.0" width="0.7" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="958.6" y="766.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (113 samples, 3.62%)</title><rect x="956.3" y="851.0" width="42.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="959.3" y="862.0">one/..</text>
</g>
<g>
<title>one/nio/net/Session.write (112 samples, 3.59%)</title><rect x="956.7" y="835.0" width="42.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="959.7" y="846.0">one/..</text>
</g>
<g>
<title>gettimeofday (1 samples, 0.03%)</title><rect x="956.7" y="819.0" width="0.4" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="959.7" y="830.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (1 samples, 0.03%)</title><rect x="957.1" y="819.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="960.1" y="830.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (110 samples, 3.52%)</title><rect x="957.5" y="819.0" width="41.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="960.5" y="830.0">one..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (110 samples, 3.52%)</title><rect x="957.5" y="803.0" width="41.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="960.5" y="814.0">one..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (5 samples, 0.16%)</title><rect x="958.2" y="787.0" width="1.9" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="961.2" y="798.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (1 samples, 0.03%)</title><rect x="958.6" y="771.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="961.6" y="782.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (3 samples, 0.10%)</title><rect x="959.0" y="771.0" width="1.1" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="962.0" y="782.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.03%)</title><rect x="959.4" y="755.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="962.4" y="766.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (1 samples, 0.03%)</title><rect x="959.7" y="755.0" width="0.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="962.7" y="766.0"></text>
</g>
<g>
<title>__send (103 samples, 3.30%)</title><rect x="960.1" y="787.0" width="39.0" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="963.1" y="798.0">__s..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (102 samples, 3.27%)</title><rect x="960.5" y="771.0" width="38.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="963.5" y="782.0">ent..</text>
</g>
<g>
<title>do_syscall_64 (102 samples, 3.27%)</title><rect x="960.5" y="755.0" width="38.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="963.5" y="766.0">do_..</text>
</g>
<g>
<title>__x64_sys_sendto (101 samples, 3.24%)</title><rect x="960.9" y="739.0" width="38.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="963.9" y="750.0">__x..</text>
</g>
<g>
<title>__sys_sendto (99 samples, 3.17%)</title><rect x="960.9" y="723.0" width="37.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="963.9" y="734.0">__s..</text>
</g>
<g>
<title>sock_sendmsg (94 samples, 3.01%)</title><rect x="961.6" y="707.0" width="35.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="964.6" y="718.0">soc..</text>
</g>
<g>
<title>apparmor_socket_sendmsg (1 samples, 0.03%)</title><rect x="962.0" y="691.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="965.0" y="702.0"></text>
</g>
<g>
<title>inet6_sendmsg (89 samples, 2.85%)</title><rect x="962.4" y="691.0" width="33.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="965.4" y="702.0">in..</text>
</g>
<g>
<title>tcp_sendmsg (88 samples, 2.82%)</title><rect x="962.8" y="675.0" width="33.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="965.8" y="686.0">tc..</text>
</g>
<g>
<title>_cond_resched (1 samples, 0.03%)</title><rect x="962.8" y="659.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="965.8" y="670.0"></text>
</g>
<g>
<title>sk_page_frag_refill (1 samples, 0.03%)</title><rect x="963.1" y="659.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="966.1" y="670.0"></text>
</g>
<g>
<title>tcp_release_cb (1 samples, 0.03%)</title><rect x="963.5" y="659.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="966.5" y="670.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (83 samples, 2.66%)</title><rect x="963.9" y="659.0" width="31.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="966.9" y="670.0">tc..</text>
</g>
<g>
<title>copyin (1 samples, 0.03%)</title><rect x="964.3" y="643.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="967.3" y="654.0"></text>
</g>
<g>
<title>sk_page_frag_refill (1 samples, 0.03%)</title><rect x="964.7" y="643.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="967.7" y="654.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (6 samples, 0.19%)</title><rect x="965.0" y="643.0" width="2.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="968.0" y="654.0"></text>
</g>
<g>
<title>__alloc_skb (5 samples, 0.16%)</title><rect x="965.4" y="627.0" width="1.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="968.4" y="638.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.0 (1 samples, 0.03%)</title><rect x="965.8" y="611.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="968.8" y="622.0"></text>
</g>
<g>
<title>_cond_resched (1 samples, 0.03%)</title><rect x="965.8" y="595.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="968.8" y="606.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (2 samples, 0.06%)</title><rect x="966.2" y="611.0" width="0.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="969.2" y="622.0"></text>
</g>
<g>
<title>ksize (1 samples, 0.03%)</title><rect x="966.9" y="611.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="969.9" y="622.0"></text>
</g>
<g>
<title>__ksize (1 samples, 0.03%)</title><rect x="966.9" y="595.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="969.9" y="606.0"></text>
</g>
<g>
<title>skb_entail (2 samples, 0.06%)</title><rect x="967.3" y="643.0" width="0.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="970.3" y="654.0"></text>
</g>
<g>
<title>tcp_push (71 samples, 2.27%)</title><rect x="968.1" y="643.0" width="26.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="971.1" y="654.0">t..</text>
</g>
<g>
<title>__tcp_push_pending_frames (70 samples, 2.24%)</title><rect x="968.1" y="627.0" width="26.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="971.1" y="638.0">_..</text>
</g>
<g>
<title>tcp_write_xmit (70 samples, 2.24%)</title><rect x="968.1" y="611.0" width="26.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="971.1" y="622.0">t..</text>
</g>
<g>
<title>__tcp_transmit_skb (60 samples, 1.92%)</title><rect x="968.1" y="595.0" width="22.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="971.1" y="606.0">_..</text>
</g>
<g>
<title>__tcp_select_window (1 samples, 0.03%)</title><rect x="968.8" y="579.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="971.8" y="590.0"></text>
</g>
<g>
<title>ip_queue_xmit (56 samples, 1.79%)</title><rect x="969.2" y="579.0" width="21.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="972.2" y="590.0">i..</text>
</g>
<g>
<title>__ip_queue_xmit (55 samples, 1.76%)</title><rect x="969.2" y="563.0" width="20.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="972.2" y="574.0"></text>
</g>
<g>
<title>ip_local_out (55 samples, 1.76%)</title><rect x="969.2" y="547.0" width="20.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="972.2" y="558.0"></text>
</g>
<g>
<title>ip_output (55 samples, 1.76%)</title><rect x="969.2" y="531.0" width="20.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="972.2" y="542.0"></text>
</g>
<g>
<title>ip_finish_output (55 samples, 1.76%)</title><rect x="969.2" y="515.0" width="20.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="972.2" y="526.0"></text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (1 samples, 0.03%)</title><rect x="969.2" y="499.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="972.2" y="510.0"></text>
</g>
<g>
<title>__ip_finish_output (54 samples, 1.73%)</title><rect x="969.6" y="499.0" width="20.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="972.6" y="510.0"></text>
</g>
<g>
<title>ip_finish_output2 (53 samples, 1.70%)</title><rect x="970.0" y="483.0" width="20.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="973.0" y="494.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (46 samples, 1.47%)</title><rect x="970.3" y="467.0" width="17.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="973.3" y="478.0"></text>
</g>
<g>
<title>do_softirq.part.0 (46 samples, 1.47%)</title><rect x="970.3" y="451.0" width="17.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="973.3" y="462.0"></text>
</g>
<g>
<title>do_softirq_own_stack (46 samples, 1.47%)</title><rect x="970.3" y="435.0" width="17.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="973.3" y="446.0"></text>
</g>
<g>
<title>__softirqentry_text_start (46 samples, 1.47%)</title><rect x="970.3" y="419.0" width="17.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="973.3" y="430.0"></text>
</g>
<g>
<title>net_rx_action (45 samples, 1.44%)</title><rect x="970.7" y="403.0" width="17.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="973.7" y="414.0"></text>
</g>
<g>
<title>process_backlog (45 samples, 1.44%)</title><rect x="970.7" y="387.0" width="17.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="973.7" y="398.0"></text>
</g>
<g>
<title>__netif_receive_skb (44 samples, 1.41%)</title><rect x="971.1" y="371.0" width="16.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="974.1" y="382.0"></text>
</g>
<g>
<title>__netif_receive_skb_core (1 samples, 0.03%)</title><rect x="971.1" y="355.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="974.1" y="366.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (43 samples, 1.38%)</title><rect x="971.5" y="355.0" width="16.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="974.5" y="366.0"></text>
</g>
<g>
<title>__netif_receive_skb_core (1 samples, 0.03%)</title><rect x="971.5" y="339.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="974.5" y="350.0"></text>
</g>
<g>
<title>ip_rcv (42 samples, 1.35%)</title><rect x="971.8" y="339.0" width="15.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="974.8" y="350.0"></text>
</g>
<g>
<title>ip_rcv_finish (42 samples, 1.35%)</title><rect x="971.8" y="323.0" width="15.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="974.8" y="334.0"></text>
</g>
<g>
<title>ip_local_deliver (41 samples, 1.31%)</title><rect x="971.8" y="307.0" width="15.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="974.8" y="318.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (41 samples, 1.31%)</title><rect x="971.8" y="291.0" width="15.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="974.8" y="302.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (41 samples, 1.31%)</title><rect x="971.8" y="275.0" width="15.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="974.8" y="286.0"></text>
</g>
<g>
<title>tcp_v4_fill_cb (1 samples, 0.03%)</title><rect x="972.2" y="259.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="975.2" y="270.0"></text>
</g>
<g>
<title>tcp_v4_rcv (39 samples, 1.25%)</title><rect x="972.6" y="259.0" width="14.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="975.6" y="270.0"></text>
</g>
<g>
<title>__inet_lookup_established (2 samples, 0.06%)</title><rect x="972.6" y="243.0" width="0.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="975.6" y="254.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (2 samples, 0.06%)</title><rect x="973.4" y="243.0" width="0.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="976.4" y="254.0"></text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (2 samples, 0.06%)</title><rect x="973.4" y="227.0" width="0.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="976.4" y="238.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (35 samples, 1.12%)</title><rect x="974.1" y="243.0" width="13.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="977.1" y="254.0"></text>
</g>
<g>
<title>tcp_check_space (1 samples, 0.03%)</title><rect x="974.1" y="227.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="977.1" y="238.0"></text>
</g>
<g>
<title>tcp_rcv_established (34 samples, 1.09%)</title><rect x="974.5" y="227.0" width="12.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="977.5" y="238.0"></text>
</g>
<g>
<title>__tcp_ack_snd_check (3 samples, 0.10%)</title><rect x="974.5" y="211.0" width="1.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="977.5" y="222.0"></text>
</g>
<g>
<title>sk_reset_timer (1 samples, 0.03%)</title><rect x="974.5" y="195.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="977.5" y="206.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (2 samples, 0.06%)</title><rect x="974.9" y="195.0" width="0.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="977.9" y="206.0"></text>
</g>
<g>
<title>sk_reset_timer (2 samples, 0.06%)</title><rect x="974.9" y="179.0" width="0.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="977.9" y="190.0"></text>
</g>
<g>
<title>mod_timer (2 samples, 0.06%)</title><rect x="974.9" y="163.0" width="0.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="977.9" y="174.0"></text>
</g>
<g>
<title>__lock_text_start (2 samples, 0.06%)</title><rect x="974.9" y="147.0" width="0.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="977.9" y="158.0"></text>
</g>
<g>
<title>tcp_ack (8 samples, 0.26%)</title><rect x="975.6" y="211.0" width="3.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="978.6" y="222.0"></text>
</g>
<g>
<title>bictcp_acked (1 samples, 0.03%)</title><rect x="976.0" y="195.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="979.0" y="206.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (5 samples, 0.16%)</title><rect x="976.4" y="195.0" width="1.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="979.4" y="206.0"></text>
</g>
<g>
<title>__kfree_skb (1 samples, 0.03%)</title><rect x="977.1" y="179.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="980.1" y="190.0"></text>
</g>
<g>
<title>skb_release_all (1 samples, 0.03%)</title><rect x="977.1" y="163.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="980.1" y="174.0"></text>
</g>
<g>
<title>skb_release_data (1 samples, 0.03%)</title><rect x="977.1" y="147.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="980.1" y="158.0"></text>
</g>
<g>
<title>tcp_ack_update_rtt.isra.0 (1 samples, 0.03%)</title><rect x="977.5" y="179.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="980.5" y="190.0"></text>
</g>
<g>
<title>tcp_rate_skb_delivered (1 samples, 0.03%)</title><rect x="977.9" y="179.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="980.9" y="190.0"></text>
</g>
<g>
<title>tcp_rate_skb_delivered (1 samples, 0.03%)</title><rect x="978.3" y="195.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="981.3" y="206.0"></text>
</g>
<g>
<title>tcp_data_ready (21 samples, 0.67%)</title><rect x="978.7" y="211.0" width="7.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="981.7" y="222.0"></text>
</g>
<g>
<title>sock_def_readable (21 samples, 0.67%)</title><rect x="978.7" y="195.0" width="7.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="981.7" y="206.0"></text>
</g>
<g>
<title>__wake_up_sync_key (20 samples, 0.64%)</title><rect x="979.0" y="179.0" width="7.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="982.0" y="190.0"></text>
</g>
<g>
<title>__wake_up_common_lock (20 samples, 0.64%)</title><rect x="979.0" y="163.0" width="7.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="982.0" y="174.0"></text>
</g>
<g>
<title>__lock_text_start (20 samples, 0.64%)</title><rect x="979.0" y="147.0" width="7.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="982.0" y="158.0"></text>
</g>
<g>
<title>tcp_queue_rcv (1 samples, 0.03%)</title><rect x="986.6" y="211.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="989.6" y="222.0"></text>
</g>
<g>
<title>tcp_rearm_rto (1 samples, 0.03%)</title><rect x="987.0" y="211.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="990.0" y="222.0"></text>
</g>
<g>
<title>ip_rcv_finish_core.isra.0 (1 samples, 0.03%)</title><rect x="987.3" y="307.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="990.3" y="318.0"></text>
</g>
<g>
<title>dev_queue_xmit (6 samples, 0.19%)</title><rect x="987.7" y="467.0" width="2.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="990.7" y="478.0"></text>
</g>
<g>
<title>__dev_queue_xmit (5 samples, 0.16%)</title><rect x="987.7" y="451.0" width="1.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="990.7" y="462.0"></text>
</g>
<g>
<title>validate_xmit_skb (1 samples, 0.03%)</title><rect x="989.2" y="435.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="992.2" y="446.0"></text>
</g>
<g>
<title>netif_skb_features (1 samples, 0.03%)</title><rect x="989.2" y="419.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="992.2" y="430.0"></text>
</g>
<g>
<title>skb_network_protocol (1 samples, 0.03%)</title><rect x="989.2" y="403.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="992.2" y="414.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (1 samples, 0.03%)</title><rect x="989.6" y="451.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="992.6" y="462.0"></text>
</g>
<g>
<title>__sk_dst_check (1 samples, 0.03%)</title><rect x="990.0" y="563.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="993.0" y="574.0"></text>
</g>
<g>
<title>skb_clone (1 samples, 0.03%)</title><rect x="990.4" y="579.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="993.4" y="590.0"></text>
</g>
<g>
<title>__skb_clone (1 samples, 0.03%)</title><rect x="990.4" y="563.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="993.4" y="574.0"></text>
</g>
<g>
<title>__copy_skb_header (1 samples, 0.03%)</title><rect x="990.4" y="547.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="993.4" y="558.0"></text>
</g>
<g>
<title>__usecs_to_jiffies (1 samples, 0.03%)</title><rect x="990.7" y="595.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="993.7" y="606.0"></text>
</g>
<g>
<title>bictcp_cwnd_event (2 samples, 0.06%)</title><rect x="991.1" y="595.0" width="0.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="994.1" y="606.0"></text>
</g>
<g>
<title>ip_queue_xmit (1 samples, 0.03%)</title><rect x="991.9" y="595.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="994.9" y="606.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (4 samples, 0.13%)</title><rect x="992.3" y="595.0" width="1.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="995.3" y="606.0"></text>
</g>
<g>
<title>tcp_rearm_rto (4 samples, 0.13%)</title><rect x="992.3" y="579.0" width="1.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="995.3" y="590.0"></text>
</g>
<g>
<title>sk_reset_timer (4 samples, 0.13%)</title><rect x="992.3" y="563.0" width="1.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="995.3" y="574.0"></text>
</g>
<g>
<title>mod_timer (3 samples, 0.10%)</title><rect x="992.6" y="547.0" width="1.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="995.6" y="558.0"></text>
</g>
<g>
<title>__lock_text_start (2 samples, 0.06%)</title><rect x="992.6" y="531.0" width="0.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="995.6" y="542.0"></text>
</g>
<g>
<title>lock_timer_base (1 samples, 0.03%)</title><rect x="993.4" y="531.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="996.4" y="542.0"></text>
</g>
<g>
<title>_raw_spin_lock_irqsave (1 samples, 0.03%)</title><rect x="993.4" y="515.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="996.4" y="526.0"></text>
</g>
<g>
<title>tcp_mtu_probe (1 samples, 0.03%)</title><rect x="993.8" y="595.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="996.8" y="606.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (1 samples, 0.03%)</title><rect x="994.2" y="595.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="997.2" y="606.0"></text>
</g>
<g>
<title>__usecs_to_jiffies (1 samples, 0.03%)</title><rect x="994.2" y="579.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="997.2" y="590.0"></text>
</g>
<g>
<title>tcp_write_xmit (1 samples, 0.03%)</title><rect x="994.5" y="627.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="997.5" y="638.0"></text>
</g>
<g>
<title>tcp_rate_check_app_limited (1 samples, 0.03%)</title><rect x="994.9" y="643.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="997.9" y="654.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (2 samples, 0.06%)</title><rect x="995.3" y="659.0" width="0.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="998.3" y="670.0"></text>
</g>
<g>
<title>security_socket_sendmsg (3 samples, 0.10%)</title><rect x="996.0" y="691.0" width="1.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="999.0" y="702.0"></text>
</g>
<g>
<title>apparmor_socket_sendmsg (3 samples, 0.10%)</title><rect x="996.0" y="675.0" width="1.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="999.0" y="686.0"></text>
</g>
<g>
<title>aa_sk_perm (3 samples, 0.10%)</title><rect x="996.0" y="659.0" width="1.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="999.0" y="670.0"></text>
</g>
<g>
<title>sockfd_lookup_light (3 samples, 0.10%)</title><rect x="997.2" y="707.0" width="1.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1000.2" y="718.0"></text>
</g>
<g>
<title>__fdget (2 samples, 0.06%)</title><rect x="997.2" y="691.0" width="0.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1000.2" y="702.0"></text>
</g>
<g>
<title>__fget_light (2 samples, 0.06%)</title><rect x="997.2" y="675.0" width="0.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1000.2" y="686.0"></text>
</g>
<g>
<title>__fget (2 samples, 0.06%)</title><rect x="997.2" y="659.0" width="0.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1000.2" y="670.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.03%)</title><rect x="997.9" y="691.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1000.9" y="702.0"></text>
</g>
<g>
<title>fput (1 samples, 0.03%)</title><rect x="998.3" y="723.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1001.3" y="734.0"></text>
</g>
<g>
<title>import_single_range (1 samples, 0.03%)</title><rect x="998.7" y="723.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1001.7" y="734.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (1 samples, 0.03%)</title><rect x="999.1" y="867.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1002.1" y="878.0"></text>
</g>
<g>
<title>one/nio/http/Request.isHttp11 (1 samples, 0.03%)</title><rect x="999.4" y="867.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1002.4" y="878.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (1 samples, 0.03%)</title><rect x="999.4" y="851.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1002.4" y="862.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.upsert (25 samples, 0.80%)</title><rect x="999.8" y="883.0" width="9.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1002.8" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock (1 samples, 0.03%)</title><rect x="1000.2" y="867.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1003.2" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireShared (1 samples, 0.03%)</title><rect x="1000.2" y="851.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1003.2" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryAcquireShared (1 samples, 0.03%)</title><rect x="1000.2" y="835.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1003.2" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.compareAndSetState (1 samples, 0.03%)</title><rect x="1000.2" y="819.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1003.2" y="830.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LII_Z (1 samples, 0.03%)</title><rect x="1000.2" y="803.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1003.2" y="814.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleInts$FieldInstanceReadWrite.compareAndSet (1 samples, 0.03%)</title><rect x="1000.2" y="787.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1003.2" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.unlock (3 samples, 0.10%)</title><rect x="1000.6" y="867.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1003.6" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.releaseShared (3 samples, 0.10%)</title><rect x="1000.6" y="851.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1003.6" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryReleaseShared (3 samples, 0.10%)</title><rect x="1000.6" y="835.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1003.6" y="846.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.remove (3 samples, 0.10%)</title><rect x="1000.6" y="819.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1003.6" y="830.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="1001.3" y="803.0" width="0.4" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="1004.3" y="814.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.03%)</title><rect x="1001.3" y="787.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1004.3" y="798.0"></text>
</g>
<g>
<title>ru/mail/polis/MemTable.upsert (20 samples, 0.64%)</title><rect x="1001.7" y="867.0" width="7.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1004.7" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.put (20 samples, 0.64%)</title><rect x="1001.7" y="851.0" width="7.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1004.7" y="862.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.03%)</title><rect x="1002.1" y="835.0" width="0.4" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="1005.1" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (18 samples, 0.58%)</title><rect x="1002.5" y="835.0" width="6.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1005.5" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.addCount (1 samples, 0.03%)</title><rect x="1004.0" y="819.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1007.0" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (13 samples, 0.42%)</title><rect x="1004.4" y="819.0" width="4.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1007.4" y="830.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (13 samples, 0.42%)</title><rect x="1004.4" y="803.0" width="4.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1007.4" y="814.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (12 samples, 0.38%)</title><rect x="1004.7" y="787.0" width="4.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1007.7" y="798.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (12 samples, 0.38%)</title><rect x="1004.7" y="771.0" width="4.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1007.7" y="782.0"></text>
</g>
<g>
<title>[worker_6 tid=4347] (239 samples, 7.66%)</title><rect x="1009.3" y="979.0" width="90.3" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="1012.3" y="990.0">[worker_6 ..</text>
</g>
<g>
<title>java/lang/Thread.run (239 samples, 7.66%)</title><rect x="1009.3" y="963.0" width="90.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1012.3" y="974.0">java/lang/..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (239 samples, 7.66%)</title><rect x="1009.3" y="947.0" width="90.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1012.3" y="958.0">java/util/..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (239 samples, 7.66%)</title><rect x="1009.3" y="931.0" width="90.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1012.3" y="942.0">java/util/..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.unlock (1 samples, 0.03%)</title><rect x="1009.3" y="915.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1012.3" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (1 samples, 0.03%)</title><rect x="1009.3" y="899.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1012.3" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (1 samples, 0.03%)</title><rect x="1009.3" y="883.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1012.3" y="894.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivlev/ThreadController.lambda$put$3 (1 samples, 0.03%)</title><rect x="1009.3" y="867.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1012.3" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (93 samples, 2.98%)</title><rect x="1009.7" y="915.0" width="35.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1012.7" y="926.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (93 samples, 2.98%)</title><rect x="1009.7" y="899.0" width="35.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1012.7" y="910.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (69 samples, 2.21%)</title><rect x="1009.7" y="883.0" width="26.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1012.7" y="894.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (1 samples, 0.03%)</title><rect x="1010.0" y="867.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1013.0" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (5 samples, 0.16%)</title><rect x="1010.4" y="867.0" width="1.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1013.4" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (1 samples, 0.03%)</title><rect x="1011.9" y="851.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1014.9" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (1 samples, 0.03%)</title><rect x="1011.9" y="835.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1014.9" y="846.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (1 samples, 0.03%)</title><rect x="1011.9" y="819.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1014.9" y="830.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="1011.9" y="803.0" width="0.4" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="1014.9" y="814.0"></text>
</g>
<g>
<title>__pthread_cond_wait (1 samples, 0.03%)</title><rect x="1011.9" y="787.0" width="0.4" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1014.9" y="798.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.03%)</title><rect x="1011.9" y="771.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1014.9" y="782.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.03%)</title><rect x="1011.9" y="755.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1014.9" y="766.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.03%)</title><rect x="1011.9" y="739.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1014.9" y="750.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.03%)</title><rect x="1011.9" y="723.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1014.9" y="734.0"></text>
</g>
<g>
<title>futex_wait (1 samples, 0.03%)</title><rect x="1011.9" y="707.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1014.9" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.fullyRelease (4 samples, 0.13%)</title><rect x="1012.3" y="867.0" width="1.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1015.3" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (4 samples, 0.13%)</title><rect x="1012.3" y="851.0" width="1.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1015.3" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (3 samples, 0.10%)</title><rect x="1012.3" y="835.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1015.3" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (3 samples, 0.10%)</title><rect x="1012.3" y="819.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1015.3" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.tryRelease (1 samples, 0.03%)</title><rect x="1012.3" y="803.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1015.3" y="814.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (2 samples, 0.06%)</title><rect x="1012.7" y="803.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1015.7" y="814.0"></text>
</g>
<g>
<title>__pthread_cond_signal (2 samples, 0.06%)</title><rect x="1012.7" y="787.0" width="0.7" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="1015.7" y="798.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.03%)</title><rect x="1013.1" y="771.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1016.1" y="782.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.03%)</title><rect x="1013.1" y="755.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1016.1" y="766.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.03%)</title><rect x="1013.1" y="739.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1016.1" y="750.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.03%)</title><rect x="1013.1" y="723.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1016.1" y="734.0"></text>
</g>
<g>
<title>futex_wake (1 samples, 0.03%)</title><rect x="1013.1" y="707.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1016.1" y="718.0"></text>
</g>
<g>
<title>wake_up_q (1 samples, 0.03%)</title><rect x="1013.1" y="691.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1016.1" y="702.0"></text>
</g>
<g>
<title>try_to_wake_up (1 samples, 0.03%)</title><rect x="1013.1" y="675.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1016.1" y="686.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.03%)</title><rect x="1013.1" y="659.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1016.1" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.tryRelease (1 samples, 0.03%)</title><rect x="1013.4" y="835.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1016.4" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (58 samples, 1.86%)</title><rect x="1013.8" y="867.0" width="21.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1016.8" y="878.0">j..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (58 samples, 1.86%)</title><rect x="1013.8" y="851.0" width="21.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1016.8" y="862.0">j..</text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/ld-2.31.so (1 samples, 0.03%)</title><rect x="1014.2" y="835.0" width="0.4" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="1017.2" y="846.0"></text>
</g>
<g>
<title>Unsafe_Park (27 samples, 0.87%)</title><rect x="1014.6" y="835.0" width="10.2" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="1017.6" y="846.0"></text>
</g>
<g>
<title>JavaThreadParkedState::JavaThreadParkedState(JavaThread*, bool) (1 samples, 0.03%)</title><rect x="1016.8" y="819.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1019.8" y="830.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (5 samples, 0.16%)</title><rect x="1017.2" y="819.0" width="1.9" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1020.2" y="830.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (1 samples, 0.03%)</title><rect x="1018.3" y="803.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1021.3" y="814.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.03%)</title><rect x="1018.7" y="803.0" width="0.4" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="1021.7" y="814.0"></text>
</g>
<g>
<title>Thread::is_interrupted(Thread*, bool) (1 samples, 0.03%)</title><rect x="1019.1" y="819.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1022.1" y="830.0"></text>
</g>
<g>
<title>__pthread_cond_wait (1 samples, 0.03%)</title><rect x="1019.5" y="819.0" width="0.4" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="1022.5" y="830.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock (13 samples, 0.42%)</title><rect x="1019.9" y="819.0" width="4.9" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="1022.9" y="830.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.03%)</title><rect x="1024.4" y="803.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1027.4" y="814.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.03%)</title><rect x="1024.4" y="787.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1027.4" y="798.0"></text>
</g>
<g>
<title>[unknown] (29 samples, 0.93%)</title><rect x="1024.8" y="835.0" width="10.9" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="1027.8" y="846.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/ld-2.31.so (1 samples, 0.03%)</title><rect x="1024.8" y="819.0" width="0.4" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="1027.8" y="830.0"></text>
</g>
<g>
<title>__pthread_cleanup_push (1 samples, 0.03%)</title><rect x="1025.2" y="819.0" width="0.3" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="1028.2" y="830.0"></text>
</g>
<g>
<title>__pthread_cond_wait (26 samples, 0.83%)</title><rect x="1025.5" y="819.0" width="9.9" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="1028.5" y="830.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (17 samples, 0.54%)</title><rect x="1028.9" y="803.0" width="6.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1031.9" y="814.0"></text>
</g>
<g>
<title>do_syscall_64 (17 samples, 0.54%)</title><rect x="1028.9" y="787.0" width="6.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1031.9" y="798.0"></text>
</g>
<g>
<title>__x64_sys_futex (15 samples, 0.48%)</title><rect x="1029.7" y="771.0" width="5.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1032.7" y="782.0"></text>
</g>
<g>
<title>do_futex (15 samples, 0.48%)</title><rect x="1029.7" y="755.0" width="5.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1032.7" y="766.0"></text>
</g>
<g>
<title>futex_wait (14 samples, 0.45%)</title><rect x="1030.1" y="739.0" width="5.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1033.1" y="750.0"></text>
</g>
<g>
<title>futex_wait_queue_me (12 samples, 0.38%)</title><rect x="1030.8" y="723.0" width="4.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1033.8" y="734.0"></text>
</g>
<g>
<title>schedule (12 samples, 0.38%)</title><rect x="1030.8" y="707.0" width="4.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1033.8" y="718.0"></text>
</g>
<g>
<title>__schedule (12 samples, 0.38%)</title><rect x="1030.8" y="691.0" width="4.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1033.8" y="702.0"></text>
</g>
<g>
<title>finish_task_switch (11 samples, 0.35%)</title><rect x="1031.2" y="675.0" width="4.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1034.2" y="686.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (1 samples, 0.03%)</title><rect x="1035.4" y="819.0" width="0.3" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="1038.4" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (1 samples, 0.03%)</title><rect x="1035.7" y="883.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1038.7" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (3 samples, 0.10%)</title><rect x="1036.1" y="883.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1039.1" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (3 samples, 0.10%)</title><rect x="1036.1" y="867.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1039.1" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (3 samples, 0.10%)</title><rect x="1036.1" y="851.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1039.1" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (1 samples, 0.03%)</title><rect x="1036.9" y="835.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1039.9" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (1 samples, 0.03%)</title><rect x="1036.9" y="819.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1039.9" y="830.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (1 samples, 0.03%)</title><rect x="1036.9" y="803.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1039.9" y="814.0"></text>
</g>
<g>
<title>Unsafe_Park (1 samples, 0.03%)</title><rect x="1036.9" y="787.0" width="0.4" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="1039.9" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (20 samples, 0.64%)</title><rect x="1037.3" y="883.0" width="7.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1040.3" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (20 samples, 0.64%)</title><rect x="1037.3" y="867.0" width="7.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1040.3" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (20 samples, 0.64%)</title><rect x="1037.3" y="851.0" width="7.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1040.3" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (20 samples, 0.64%)</title><rect x="1037.3" y="835.0" width="7.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1040.3" y="846.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (19 samples, 0.61%)</title><rect x="1037.6" y="819.0" width="7.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1040.6" y="830.0"></text>
</g>
<g>
<title>Unsafe_Unpark (6 samples, 0.19%)</title><rect x="1037.6" y="803.0" width="2.3" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="1040.6" y="814.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.03%)</title><rect x="1037.6" y="787.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1040.6" y="798.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (1 samples, 0.03%)</title><rect x="1038.0" y="787.0" width="0.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1041.0" y="798.0"></text>
</g>
<g>
<title>ThreadsListHandle::~ThreadsListHandle() (1 samples, 0.03%)</title><rect x="1038.4" y="787.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1041.4" y="798.0"></text>
</g>
<g>
<title>oopDesc::address_field(int) const (1 samples, 0.03%)</title><rect x="1038.8" y="787.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1041.8" y="798.0"></text>
</g>
<g>
<title>pthread_mutex_lock (2 samples, 0.06%)</title><rect x="1039.1" y="787.0" width="0.8" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="1042.1" y="798.0"></text>
</g>
<g>
<title>__pthread_cond_signal (13 samples, 0.42%)</title><rect x="1039.9" y="803.0" width="4.9" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="1042.9" y="814.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (10 samples, 0.32%)</title><rect x="1041.0" y="787.0" width="3.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1044.0" y="798.0"></text>
</g>
<g>
<title>do_syscall_64 (10 samples, 0.32%)</title><rect x="1041.0" y="771.0" width="3.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1044.0" y="782.0"></text>
</g>
<g>
<title>__x64_sys_futex (10 samples, 0.32%)</title><rect x="1041.0" y="755.0" width="3.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1044.0" y="766.0"></text>
</g>
<g>
<title>do_futex (10 samples, 0.32%)</title><rect x="1041.0" y="739.0" width="3.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1044.0" y="750.0"></text>
</g>
<g>
<title>futex_wake (10 samples, 0.32%)</title><rect x="1041.0" y="723.0" width="3.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1044.0" y="734.0"></text>
</g>
<g>
<title>wake_q_add_safe (1 samples, 0.03%)</title><rect x="1041.0" y="707.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1044.0" y="718.0"></text>
</g>
<g>
<title>wake_up_q (9 samples, 0.29%)</title><rect x="1041.4" y="707.0" width="3.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1044.4" y="718.0"></text>
</g>
<g>
<title>try_to_wake_up (9 samples, 0.29%)</title><rect x="1041.4" y="691.0" width="3.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1044.4" y="702.0"></text>
</g>
<g>
<title>__lock_text_start (9 samples, 0.29%)</title><rect x="1041.4" y="675.0" width="3.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1044.4" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivlev/ThreadController$$Lambda$65/822960827.run (145 samples, 4.65%)</title><rect x="1044.8" y="915.0" width="54.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1047.8" y="926.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/service/ivlev/ThreadController.lambda$put$3 (142 samples, 4.55%)</title><rect x="1046.0" y="899.0" width="53.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1049.0" y="910.0">ru/ma..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (115 samples, 3.68%)</title><rect x="1046.0" y="883.0" width="43.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1049.0" y="894.0">one/..</text>
</g>
<g>
<title>java/util/LinkedList.pollFirst (1 samples, 0.03%)</title><rect x="1046.3" y="867.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1049.3" y="878.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.03%)</title><rect x="1046.7" y="867.0" width="0.4" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="1049.7" y="878.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (111 samples, 3.56%)</title><rect x="1047.1" y="867.0" width="42.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1050.1" y="878.0">one..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (3 samples, 0.10%)</title><rect x="1047.1" y="851.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1050.1" y="862.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (2 samples, 0.06%)</title><rect x="1047.5" y="835.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1050.5" y="846.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (2 samples, 0.06%)</title><rect x="1047.5" y="819.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1050.5" y="830.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (2 samples, 0.06%)</title><rect x="1047.5" y="803.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1050.5" y="814.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (2 samples, 0.06%)</title><rect x="1047.5" y="787.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1050.5" y="798.0"></text>
</g>
<g>
<title>java/lang/String.charAt (2 samples, 0.06%)</title><rect x="1047.5" y="771.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1050.5" y="782.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (108 samples, 3.46%)</title><rect x="1048.2" y="851.0" width="40.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1051.2" y="862.0">one..</text>
</g>
<g>
<title>one/nio/net/Session.write (108 samples, 3.46%)</title><rect x="1048.2" y="835.0" width="40.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1051.2" y="846.0">one..</text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="1048.6" y="819.0" width="0.4" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="1051.6" y="830.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.03%)</title><rect x="1048.6" y="803.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1051.6" y="814.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (1 samples, 0.03%)</title><rect x="1049.0" y="819.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1052.0" y="830.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (105 samples, 3.36%)</title><rect x="1049.4" y="819.0" width="39.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1052.4" y="830.0">one..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (105 samples, 3.36%)</title><rect x="1049.4" y="803.0" width="39.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1052.4" y="814.0">one..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (2 samples, 0.06%)</title><rect x="1049.7" y="787.0" width="0.8" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="1052.7" y="798.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (1 samples, 0.03%)</title><rect x="1050.1" y="771.0" width="0.4" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="1053.1" y="782.0"></text>
</g>
<g>
<title>__send (102 samples, 3.27%)</title><rect x="1050.5" y="787.0" width="38.6" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="1053.5" y="798.0">__s..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (99 samples, 3.17%)</title><rect x="1051.6" y="771.0" width="37.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1054.6" y="782.0">ent..</text>
</g>
<g>
<title>__x64_sys_sendto (1 samples, 0.03%)</title><rect x="1051.6" y="755.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1054.6" y="766.0"></text>
</g>
<g>
<title>do_syscall_64 (98 samples, 3.14%)</title><rect x="1052.0" y="755.0" width="37.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1055.0" y="766.0">do_..</text>
</g>
<g>
<title>__x64_sys_sendto (96 samples, 3.08%)</title><rect x="1052.8" y="739.0" width="36.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1055.8" y="750.0">__x..</text>
</g>
<g>
<title>__sys_sendto (95 samples, 3.04%)</title><rect x="1052.8" y="723.0" width="35.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1055.8" y="734.0">__s..</text>
</g>
<g>
<title>sock_sendmsg (92 samples, 2.95%)</title><rect x="1052.8" y="707.0" width="34.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1055.8" y="718.0">so..</text>
</g>
<g>
<title>apparmor_socket_sendmsg (1 samples, 0.03%)</title><rect x="1052.8" y="691.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1055.8" y="702.0"></text>
</g>
<g>
<title>inet6_sendmsg (91 samples, 2.92%)</title><rect x="1053.1" y="691.0" width="34.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1056.1" y="702.0">in..</text>
</g>
<g>
<title>tcp_sendmsg (91 samples, 2.92%)</title><rect x="1053.1" y="675.0" width="34.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1056.1" y="686.0">tc..</text>
</g>
<g>
<title>tcp_sendmsg_locked (91 samples, 2.92%)</title><rect x="1053.1" y="659.0" width="34.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1056.1" y="670.0">tc..</text>
</g>
<g>
<title>__check_object_size (2 samples, 0.06%)</title><rect x="1053.1" y="643.0" width="0.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1056.1" y="654.0"></text>
</g>
<g>
<title>__virt_addr_valid (2 samples, 0.06%)</title><rect x="1053.1" y="627.0" width="0.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1056.1" y="638.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (6 samples, 0.19%)</title><rect x="1053.9" y="643.0" width="2.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1056.9" y="654.0"></text>
</g>
<g>
<title>__alloc_skb (6 samples, 0.19%)</title><rect x="1053.9" y="627.0" width="2.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1056.9" y="638.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.0 (3 samples, 0.10%)</title><rect x="1053.9" y="611.0" width="1.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1056.9" y="622.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (3 samples, 0.10%)</title><rect x="1053.9" y="595.0" width="1.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1056.9" y="606.0"></text>
</g>
<g>
<title>__slab_alloc (1 samples, 0.03%)</title><rect x="1054.3" y="579.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1057.3" y="590.0"></text>
</g>
<g>
<title>kmalloc_slab (1 samples, 0.03%)</title><rect x="1054.6" y="579.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1057.6" y="590.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (2 samples, 0.06%)</title><rect x="1055.0" y="611.0" width="0.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1058.0" y="622.0"></text>
</g>
<g>
<title>ksize (1 samples, 0.03%)</title><rect x="1055.8" y="611.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1058.8" y="622.0"></text>
</g>
<g>
<title>__ksize (1 samples, 0.03%)</title><rect x="1055.8" y="595.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1058.8" y="606.0"></text>
</g>
<g>
<title>skb_entail (1 samples, 0.03%)</title><rect x="1056.2" y="643.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1059.2" y="654.0"></text>
</g>
<g>
<title>tcp_push (79 samples, 2.53%)</title><rect x="1056.5" y="643.0" width="29.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1059.5" y="654.0">tc..</text>
</g>
<g>
<title>__tcp_push_pending_frames (79 samples, 2.53%)</title><rect x="1056.5" y="627.0" width="29.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1059.5" y="638.0">__..</text>
</g>
<g>
<title>tcp_write_xmit (79 samples, 2.53%)</title><rect x="1056.5" y="611.0" width="29.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1059.5" y="622.0">tc..</text>
</g>
<g>
<title>__tcp_transmit_skb (74 samples, 2.37%)</title><rect x="1056.5" y="595.0" width="28.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1059.5" y="606.0">_..</text>
</g>
<g>
<title>ip_queue_xmit (71 samples, 2.27%)</title><rect x="1057.3" y="579.0" width="26.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1060.3" y="590.0">i..</text>
</g>
<g>
<title>__ip_queue_xmit (70 samples, 2.24%)</title><rect x="1057.3" y="563.0" width="26.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1060.3" y="574.0">_..</text>
</g>
<g>
<title>ip_local_out (67 samples, 2.15%)</title><rect x="1058.4" y="547.0" width="25.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1061.4" y="558.0">i..</text>
</g>
<g>
<title>__ip_local_out (1 samples, 0.03%)</title><rect x="1058.4" y="531.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1061.4" y="542.0"></text>
</g>
<g>
<title>ip_send_check (1 samples, 0.03%)</title><rect x="1058.4" y="515.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1061.4" y="526.0"></text>
</g>
<g>
<title>ip_output (66 samples, 2.11%)</title><rect x="1058.8" y="531.0" width="25.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1061.8" y="542.0">i..</text>
</g>
<g>
<title>ip_finish_output (66 samples, 2.11%)</title><rect x="1058.8" y="515.0" width="25.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1061.8" y="526.0">i..</text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (1 samples, 0.03%)</title><rect x="1058.8" y="499.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1061.8" y="510.0"></text>
</g>
<g>
<title>__ip_finish_output (65 samples, 2.08%)</title><rect x="1059.2" y="499.0" width="24.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1062.2" y="510.0">_..</text>
</g>
<g>
<title>ip_finish_output2 (65 samples, 2.08%)</title><rect x="1059.2" y="483.0" width="24.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1062.2" y="494.0">i..</text>
</g>
<g>
<title>__dev_queue_xmit (1 samples, 0.03%)</title><rect x="1059.6" y="467.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1062.6" y="478.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (58 samples, 1.86%)</title><rect x="1059.9" y="467.0" width="22.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1062.9" y="478.0">_..</text>
</g>
<g>
<title>do_softirq.part.0 (58 samples, 1.86%)</title><rect x="1059.9" y="451.0" width="22.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1062.9" y="462.0">d..</text>
</g>
<g>
<title>do_softirq_own_stack (57 samples, 1.83%)</title><rect x="1060.3" y="435.0" width="21.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1063.3" y="446.0">d..</text>
</g>
<g>
<title>__softirqentry_text_start (57 samples, 1.83%)</title><rect x="1060.3" y="419.0" width="21.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1063.3" y="430.0">_..</text>
</g>
<g>
<title>net_rx_action (55 samples, 1.76%)</title><rect x="1060.3" y="403.0" width="20.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1063.3" y="414.0"></text>
</g>
<g>
<title>process_backlog (55 samples, 1.76%)</title><rect x="1060.3" y="387.0" width="20.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1063.3" y="398.0"></text>
</g>
<g>
<title>__netif_receive_skb (54 samples, 1.73%)</title><rect x="1060.7" y="371.0" width="20.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1063.7" y="382.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (54 samples, 1.73%)</title><rect x="1060.7" y="355.0" width="20.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1063.7" y="366.0"></text>
</g>
<g>
<title>__netif_receive_skb_core (1 samples, 0.03%)</title><rect x="1061.1" y="339.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1064.1" y="350.0"></text>
</g>
<g>
<title>ip_rcv (52 samples, 1.67%)</title><rect x="1061.5" y="339.0" width="19.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1064.5" y="350.0"></text>
</g>
<g>
<title>ip_rcv_core.isra.0 (1 samples, 0.03%)</title><rect x="1061.5" y="323.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1064.5" y="334.0"></text>
</g>
<g>
<title>ip_rcv_finish (51 samples, 1.63%)</title><rect x="1061.8" y="323.0" width="19.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1064.8" y="334.0"></text>
</g>
<g>
<title>ip_local_deliver (51 samples, 1.63%)</title><rect x="1061.8" y="307.0" width="19.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1064.8" y="318.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (50 samples, 1.60%)</title><rect x="1062.2" y="291.0" width="18.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1065.2" y="302.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (49 samples, 1.57%)</title><rect x="1062.2" y="275.0" width="18.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1065.2" y="286.0"></text>
</g>
<g>
<title>sock_put (1 samples, 0.03%)</title><rect x="1062.2" y="259.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1065.2" y="270.0"></text>
</g>
<g>
<title>tcp_v4_rcv (48 samples, 1.54%)</title><rect x="1062.6" y="259.0" width="18.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1065.6" y="270.0"></text>
</g>
<g>
<title>__inet_lookup_established (1 samples, 0.03%)</title><rect x="1062.6" y="243.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1065.6" y="254.0"></text>
</g>
<g>
<title>inet_ehashfn (1 samples, 0.03%)</title><rect x="1062.6" y="227.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1065.6" y="238.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (47 samples, 1.51%)</title><rect x="1063.0" y="243.0" width="17.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1066.0" y="254.0"></text>
</g>
<g>
<title>tcp_check_space (1 samples, 0.03%)</title><rect x="1063.0" y="227.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1066.0" y="238.0"></text>
</g>
<g>
<title>tcp_rcv_established (46 samples, 1.47%)</title><rect x="1063.3" y="227.0" width="17.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1066.3" y="238.0"></text>
</g>
<g>
<title>__tcp_ack_snd_check (1 samples, 0.03%)</title><rect x="1063.7" y="211.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1066.7" y="222.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (1 samples, 0.03%)</title><rect x="1063.7" y="195.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1066.7" y="206.0"></text>
</g>
<g>
<title>sk_reset_timer (1 samples, 0.03%)</title><rect x="1063.7" y="179.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1066.7" y="190.0"></text>
</g>
<g>
<title>mod_timer (1 samples, 0.03%)</title><rect x="1063.7" y="163.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1066.7" y="174.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.03%)</title><rect x="1063.7" y="147.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1066.7" y="158.0"></text>
</g>
<g>
<title>sock_def_readable (1 samples, 0.03%)</title><rect x="1064.1" y="211.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1067.1" y="222.0"></text>
</g>
<g>
<title>tcp_ack (9 samples, 0.29%)</title><rect x="1064.5" y="211.0" width="3.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1067.5" y="222.0"></text>
</g>
<g>
<title>bictcp_acked (2 samples, 0.06%)</title><rect x="1065.6" y="195.0" width="0.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1068.6" y="206.0"></text>
</g>
<g>
<title>rb_next (1 samples, 0.03%)</title><rect x="1066.4" y="195.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1069.4" y="206.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (3 samples, 0.10%)</title><rect x="1066.7" y="195.0" width="1.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1069.7" y="206.0"></text>
</g>
<g>
<title>__usecs_to_jiffies (1 samples, 0.03%)</title><rect x="1066.7" y="179.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1069.7" y="190.0"></text>
</g>
<g>
<title>tcp_ack_update_rtt.isra.0 (2 samples, 0.06%)</title><rect x="1067.1" y="179.0" width="0.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1070.1" y="190.0"></text>
</g>
<g>
<title>tcp_data_ready (32 samples, 1.03%)</title><rect x="1067.9" y="211.0" width="12.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1070.9" y="222.0"></text>
</g>
<g>
<title>sock_def_readable (32 samples, 1.03%)</title><rect x="1067.9" y="195.0" width="12.1" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1070.9" y="206.0"></text>
</g>
<g>
<title>__wake_up_sync_key (32 samples, 1.03%)</title><rect x="1067.9" y="179.0" width="12.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1070.9" y="190.0"></text>
</g>
<g>
<title>__wake_up_common_lock (32 samples, 1.03%)</title><rect x="1067.9" y="163.0" width="12.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1070.9" y="174.0"></text>
</g>
<g>
<title>__lock_text_start (32 samples, 1.03%)</title><rect x="1067.9" y="147.0" width="12.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1070.9" y="158.0"></text>
</g>
<g>
<title>tcp_queue_rcv (2 samples, 0.06%)</title><rect x="1080.0" y="211.0" width="0.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1083.0" y="222.0"></text>
</g>
<g>
<title>raw_local_deliver (1 samples, 0.03%)</title><rect x="1080.7" y="275.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1083.7" y="286.0"></text>
</g>
<g>
<title>process_backlog (2 samples, 0.06%)</title><rect x="1081.1" y="403.0" width="0.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1084.1" y="414.0"></text>
</g>
<g>
<title>dev_queue_xmit (5 samples, 0.16%)</title><rect x="1081.9" y="467.0" width="1.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1084.9" y="478.0"></text>
</g>
<g>
<title>__dev_queue_xmit (5 samples, 0.16%)</title><rect x="1081.9" y="451.0" width="1.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1084.9" y="462.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (5 samples, 0.16%)</title><rect x="1081.9" y="435.0" width="1.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1084.9" y="446.0"></text>
</g>
<g>
<title>loopback_xmit (5 samples, 0.16%)</title><rect x="1081.9" y="419.0" width="1.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1084.9" y="430.0"></text>
</g>
<g>
<title>eth_type_trans (1 samples, 0.03%)</title><rect x="1082.2" y="403.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1085.2" y="414.0"></text>
</g>
<g>
<title>netif_rx (1 samples, 0.03%)</title><rect x="1082.6" y="403.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1085.6" y="414.0"></text>
</g>
<g>
<title>netif_rx_internal (1 samples, 0.03%)</title><rect x="1082.6" y="387.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1085.6" y="398.0"></text>
</g>
<g>
<title>enqueue_to_backlog (1 samples, 0.03%)</title><rect x="1082.6" y="371.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1085.6" y="382.0"></text>
</g>
<g>
<title>skb_clone_tx_timestamp (1 samples, 0.03%)</title><rect x="1083.0" y="403.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1086.0" y="414.0"></text>
</g>
<g>
<title>tcp_wfree (1 samples, 0.03%)</title><rect x="1083.4" y="403.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1086.4" y="414.0"></text>
</g>
<g>
<title>__sk_dst_check (1 samples, 0.03%)</title><rect x="1083.8" y="563.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1086.8" y="574.0"></text>
</g>
<g>
<title>tcp_v4_send_check (1 samples, 0.03%)</title><rect x="1084.1" y="579.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1087.1" y="590.0"></text>
</g>
<g>
<title>__tcp_v4_send_check (1 samples, 0.03%)</title><rect x="1084.1" y="563.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1087.1" y="574.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (1 samples, 0.03%)</title><rect x="1084.5" y="595.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1087.5" y="606.0"></text>
</g>
<g>
<title>bictcp_cwnd_event (1 samples, 0.03%)</title><rect x="1084.9" y="595.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1087.9" y="606.0"></text>
</g>
<g>
<title>read_tsc (1 samples, 0.03%)</title><rect x="1085.3" y="595.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1088.3" y="606.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (2 samples, 0.06%)</title><rect x="1085.6" y="595.0" width="0.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1088.6" y="606.0"></text>
</g>
<g>
<title>tcp_rearm_rto (1 samples, 0.03%)</title><rect x="1086.0" y="579.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1089.0" y="590.0"></text>
</g>
<g>
<title>tcp_send_mss (3 samples, 0.10%)</title><rect x="1086.4" y="643.0" width="1.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1089.4" y="654.0"></text>
</g>
<g>
<title>ipv4_mtu (1 samples, 0.03%)</title><rect x="1086.4" y="627.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1089.4" y="638.0"></text>
</g>
<g>
<title>tcp_current_mss (1 samples, 0.03%)</title><rect x="1086.8" y="627.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1089.8" y="638.0"></text>
</g>
<g>
<title>tcp_established_options (1 samples, 0.03%)</title><rect x="1087.2" y="627.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1090.2" y="638.0"></text>
</g>
<g>
<title>sockfd_lookup_light (3 samples, 0.10%)</title><rect x="1087.5" y="707.0" width="1.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1090.5" y="718.0"></text>
</g>
<g>
<title>__fdget (2 samples, 0.06%)</title><rect x="1087.5" y="691.0" width="0.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1090.5" y="702.0"></text>
</g>
<g>
<title>__fget_light (2 samples, 0.06%)</title><rect x="1087.5" y="675.0" width="0.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1090.5" y="686.0"></text>
</g>
<g>
<title>__fget (1 samples, 0.03%)</title><rect x="1087.9" y="659.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1090.9" y="670.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.03%)</title><rect x="1088.3" y="691.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1091.3" y="702.0"></text>
</g>
<g>
<title>import_single_range (1 samples, 0.03%)</title><rect x="1088.7" y="723.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1091.7" y="734.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (1 samples, 0.03%)</title><rect x="1089.1" y="867.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1092.1" y="878.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.03%)</title><rect x="1089.1" y="851.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1092.1" y="862.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.03%)</title><rect x="1089.1" y="835.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1092.1" y="846.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.upsert (25 samples, 0.80%)</title><rect x="1089.4" y="883.0" width="9.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1092.4" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock (1 samples, 0.03%)</title><rect x="1089.4" y="867.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1092.4" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireShared (1 samples, 0.03%)</title><rect x="1089.4" y="851.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1092.4" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryAcquireShared (1 samples, 0.03%)</title><rect x="1089.4" y="835.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1092.4" y="846.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (1 samples, 0.03%)</title><rect x="1089.4" y="819.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1092.4" y="830.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (1 samples, 0.03%)</title><rect x="1089.4" y="803.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1092.4" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.unlock (2 samples, 0.06%)</title><rect x="1089.8" y="867.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1092.8" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.releaseShared (2 samples, 0.06%)</title><rect x="1089.8" y="851.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1092.8" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryReleaseShared (2 samples, 0.06%)</title><rect x="1089.8" y="835.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1092.8" y="846.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.remove (1 samples, 0.03%)</title><rect x="1089.8" y="819.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1092.8" y="830.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.03%)</title><rect x="1089.8" y="803.0" width="0.4" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="1092.8" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.compareAndSetState (1 samples, 0.03%)</title><rect x="1090.2" y="819.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1093.2" y="830.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LII_Z (1 samples, 0.03%)</title><rect x="1090.2" y="803.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1093.2" y="814.0"></text>
</g>
<g>
<title>ru/mail/polis/MemTable.upsert (22 samples, 0.70%)</title><rect x="1090.6" y="867.0" width="8.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1093.6" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.put (22 samples, 0.70%)</title><rect x="1090.6" y="851.0" width="8.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1093.6" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (17 samples, 0.54%)</title><rect x="1091.3" y="835.0" width="6.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1094.3" y="846.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (1 samples, 0.03%)</title><rect x="1092.1" y="819.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1095.1" y="830.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (1 samples, 0.03%)</title><rect x="1092.1" y="803.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1095.1" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.addIndices (1 samples, 0.03%)</title><rect x="1092.5" y="819.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1095.5" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (1 samples, 0.03%)</title><rect x="1092.5" y="803.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1095.5" y="814.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (1 samples, 0.03%)</title><rect x="1092.5" y="787.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1095.5" y="798.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (1 samples, 0.03%)</title><rect x="1092.5" y="771.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1095.5" y="782.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (1 samples, 0.03%)</title><rect x="1092.5" y="755.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1095.5" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (13 samples, 0.42%)</title><rect x="1092.8" y="819.0" width="4.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1095.8" y="830.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (13 samples, 0.42%)</title><rect x="1092.8" y="803.0" width="4.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1095.8" y="814.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (13 samples, 0.42%)</title><rect x="1092.8" y="787.0" width="4.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1095.8" y="798.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (11 samples, 0.35%)</title><rect x="1092.8" y="771.0" width="4.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1095.8" y="782.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (2 samples, 0.06%)</title><rect x="1097.0" y="771.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1100.0" y="782.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (2 samples, 0.06%)</title><rect x="1097.7" y="835.0" width="0.8" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="1100.7" y="846.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.03%)</title><rect x="1098.5" y="835.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1101.5" y="846.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.03%)</title><rect x="1098.5" y="819.0" width="0.4" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="1101.5" y="830.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivlev/ThreadController.toByteBuffer (2 samples, 0.06%)</title><rect x="1098.9" y="883.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1101.9" y="894.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (2 samples, 0.06%)</title><rect x="1098.9" y="867.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1101.9" y="878.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (2 samples, 0.06%)</title><rect x="1098.9" y="851.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1101.9" y="862.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (2 samples, 0.06%)</title><rect x="1098.9" y="835.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1101.9" y="846.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (2 samples, 0.06%)</title><rect x="1098.9" y="819.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1101.9" y="830.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (2 samples, 0.06%)</title><rect x="1098.9" y="803.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1101.9" y="814.0"></text>
</g>
<g>
<title>[worker_7 tid=4345] (239 samples, 7.66%)</title><rect x="1099.6" y="979.0" width="90.4" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="1102.6" y="990.0">[worker_7 ..</text>
</g>
<g>
<title>java/lang/Thread.run (239 samples, 7.66%)</title><rect x="1099.6" y="963.0" width="90.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1102.6" y="974.0">java/lang/..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (239 samples, 7.66%)</title><rect x="1099.6" y="947.0" width="90.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1102.6" y="958.0">java/util/..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (239 samples, 7.66%)</title><rect x="1099.6" y="931.0" width="90.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1102.6" y="942.0">java/util/..</text>
</g>
<g>
<title>java/lang/Thread.interrupted (2 samples, 0.06%)</title><rect x="1100.0" y="915.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1103.0" y="926.0"></text>
</g>
<g>
<title>java/lang/Thread.isInterrupted (2 samples, 0.06%)</title><rect x="1100.0" y="899.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1103.0" y="910.0"></text>
</g>
<g>
<title>JVM_IsInterrupted (2 samples, 0.06%)</title><rect x="1100.0" y="883.0" width="0.8" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="1103.0" y="894.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.217] (2 samples, 0.06%)</title><rect x="1100.0" y="867.0" width="0.8" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1103.0" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.unlock (2 samples, 0.06%)</title><rect x="1100.8" y="915.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1103.8" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (2 samples, 0.06%)</title><rect x="1100.8" y="899.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1103.8" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (2 samples, 0.06%)</title><rect x="1100.8" y="883.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1103.8" y="894.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivlev/ThreadController.lambda$put$3 (1 samples, 0.03%)</title><rect x="1101.2" y="867.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1104.2" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (85 samples, 2.72%)</title><rect x="1101.5" y="915.0" width="32.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1104.5" y="926.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (84 samples, 2.69%)</title><rect x="1101.9" y="899.0" width="31.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1104.9" y="910.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (64 samples, 2.05%)</title><rect x="1101.9" y="883.0" width="24.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1104.9" y="894.0">j..</text>
</g>
<g>
<title>java/lang/Thread.interrupted (1 samples, 0.03%)</title><rect x="1103.0" y="867.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1106.0" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (6 samples, 0.19%)</title><rect x="1103.4" y="867.0" width="2.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1106.4" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (1 samples, 0.03%)</title><rect x="1105.3" y="851.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1108.3" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (1 samples, 0.03%)</title><rect x="1105.3" y="835.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1108.3" y="846.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (1 samples, 0.03%)</title><rect x="1105.3" y="819.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1108.3" y="830.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="1105.3" y="803.0" width="0.4" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="1108.3" y="814.0"></text>
</g>
<g>
<title>__pthread_cond_wait (1 samples, 0.03%)</title><rect x="1105.3" y="787.0" width="0.4" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1108.3" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.fullyRelease (5 samples, 0.16%)</title><rect x="1105.7" y="867.0" width="1.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1108.7" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (5 samples, 0.16%)</title><rect x="1105.7" y="851.0" width="1.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1108.7" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (3 samples, 0.10%)</title><rect x="1106.1" y="835.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1109.1" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (3 samples, 0.10%)</title><rect x="1106.1" y="819.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1109.1" y="830.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (3 samples, 0.10%)</title><rect x="1106.1" y="803.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1109.1" y="814.0"></text>
</g>
<g>
<title>__pthread_cond_signal (3 samples, 0.10%)</title><rect x="1106.1" y="787.0" width="1.1" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="1109.1" y="798.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.06%)</title><rect x="1106.4" y="771.0" width="0.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1109.4" y="782.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.06%)</title><rect x="1106.4" y="755.0" width="0.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1109.4" y="766.0"></text>
</g>
<g>
<title>__x64_sys_futex (2 samples, 0.06%)</title><rect x="1106.4" y="739.0" width="0.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1109.4" y="750.0"></text>
</g>
<g>
<title>do_futex (2 samples, 0.06%)</title><rect x="1106.4" y="723.0" width="0.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1109.4" y="734.0"></text>
</g>
<g>
<title>futex_wake (2 samples, 0.06%)</title><rect x="1106.4" y="707.0" width="0.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1109.4" y="718.0"></text>
</g>
<g>
<title>wake_up_q (2 samples, 0.06%)</title><rect x="1106.4" y="691.0" width="0.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1109.4" y="702.0"></text>
</g>
<g>
<title>try_to_wake_up (2 samples, 0.06%)</title><rect x="1106.4" y="675.0" width="0.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1109.4" y="686.0"></text>
</g>
<g>
<title>__lock_text_start (2 samples, 0.06%)</title><rect x="1106.4" y="659.0" width="0.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1109.4" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.tryRelease (1 samples, 0.03%)</title><rect x="1107.2" y="835.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1110.2" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (49 samples, 1.57%)</title><rect x="1107.6" y="867.0" width="18.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1110.6" y="878.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (49 samples, 1.57%)</title><rect x="1107.6" y="851.0" width="18.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1110.6" y="862.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.03%)</title><rect x="1108.7" y="835.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1111.7" y="846.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.235] (1 samples, 0.03%)</title><rect x="1109.1" y="835.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1112.1" y="846.0"></text>
</g>
<g>
<title>Unsafe_Park (16 samples, 0.51%)</title><rect x="1109.5" y="835.0" width="6.0" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="1112.5" y="846.0"></text>
</g>
<g>
<title>JavaThreadParkedState::JavaThreadParkedState(JavaThread*, bool) (1 samples, 0.03%)</title><rect x="1110.6" y="819.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1113.6" y="830.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (2 samples, 0.06%)</title><rect x="1111.0" y="819.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1114.0" y="830.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.03%)</title><rect x="1111.4" y="803.0" width="0.3" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="1114.4" y="814.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.03%)</title><rect x="1111.7" y="819.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1114.7" y="830.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock (7 samples, 0.22%)</title><rect x="1112.1" y="819.0" width="2.7" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="1115.1" y="830.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.06%)</title><rect x="1114.0" y="803.0" width="0.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1117.0" y="814.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.06%)</title><rect x="1114.0" y="787.0" width="0.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1117.0" y="798.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.03%)</title><rect x="1114.4" y="771.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1117.4" y="782.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.03%)</title><rect x="1114.4" y="755.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1117.4" y="766.0"></text>
</g>
<g>
<title>futex_wake (1 samples, 0.03%)</title><rect x="1114.4" y="739.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1117.4" y="750.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.03%)</title><rect x="1114.8" y="819.0" width="0.3" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="1117.8" y="830.0"></text>
</g>
<g>
<title>os::is_interrupted(Thread*, bool) (1 samples, 0.03%)</title><rect x="1115.1" y="819.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1118.1" y="830.0"></text>
</g>
<g>
<title>[unknown] (27 samples, 0.87%)</title><rect x="1115.5" y="835.0" width="10.2" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="1118.5" y="846.0"></text>
</g>
<g>
<title>__pthread_cleanup_push (2 samples, 0.06%)</title><rect x="1115.5" y="819.0" width="0.8" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="1118.5" y="830.0"></text>
</g>
<g>
<title>__pthread_cond_wait (24 samples, 0.77%)</title><rect x="1116.3" y="819.0" width="9.0" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="1119.3" y="830.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (18 samples, 0.58%)</title><rect x="1118.5" y="803.0" width="6.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1121.5" y="814.0"></text>
</g>
<g>
<title>do_syscall_64 (18 samples, 0.58%)</title><rect x="1118.5" y="787.0" width="6.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1121.5" y="798.0"></text>
</g>
<g>
<title>__x64_sys_futex (15 samples, 0.48%)</title><rect x="1119.7" y="771.0" width="5.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1122.7" y="782.0"></text>
</g>
<g>
<title>do_futex (13 samples, 0.42%)</title><rect x="1120.4" y="755.0" width="4.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1123.4" y="766.0"></text>
</g>
<g>
<title>futex_wait (12 samples, 0.38%)</title><rect x="1120.4" y="739.0" width="4.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1123.4" y="750.0"></text>
</g>
<g>
<title>futex_wait_queue_me (9 samples, 0.29%)</title><rect x="1120.8" y="723.0" width="3.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1123.8" y="734.0"></text>
</g>
<g>
<title>schedule (5 samples, 0.16%)</title><rect x="1122.3" y="707.0" width="1.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1125.3" y="718.0"></text>
</g>
<g>
<title>__schedule (5 samples, 0.16%)</title><rect x="1122.3" y="691.0" width="1.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1125.3" y="702.0"></text>
</g>
<g>
<title>finish_task_switch (4 samples, 0.13%)</title><rect x="1122.7" y="675.0" width="1.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1125.7" y="686.0"></text>
</g>
<g>
<title>futex_wait_setup (2 samples, 0.06%)</title><rect x="1124.2" y="723.0" width="0.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1127.2" y="734.0"></text>
</g>
<g>
<title>get_futex_key (1 samples, 0.03%)</title><rect x="1124.2" y="707.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1127.2" y="718.0"></text>
</g>
<g>
<title>get_futex_key_refs.isra.0 (1 samples, 0.03%)</title><rect x="1124.2" y="691.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1127.2" y="702.0"></text>
</g>
<g>
<title>get_futex_value_locked (1 samples, 0.03%)</title><rect x="1124.6" y="707.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1127.6" y="718.0"></text>
</g>
<g>
<title>futex_wait_setup (1 samples, 0.03%)</title><rect x="1125.0" y="739.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1128.0" y="750.0"></text>
</g>
<g>
<title>__pthread_mutex_cond_lock (1 samples, 0.03%)</title><rect x="1125.3" y="819.0" width="0.4" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="1128.3" y="830.0"></text>
</g>
<g>
<title>java_lang_Thread::set_thread_status(oopDesc*, java_lang_Thread::ThreadStatus) (1 samples, 0.03%)</title><rect x="1125.7" y="835.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1128.7" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (1 samples, 0.03%)</title><rect x="1126.1" y="883.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1129.1" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (1 samples, 0.03%)</title><rect x="1126.5" y="883.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1129.5" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (1 samples, 0.03%)</title><rect x="1126.5" y="867.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1129.5" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (1 samples, 0.03%)</title><rect x="1126.5" y="851.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1129.5" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (18 samples, 0.58%)</title><rect x="1126.9" y="883.0" width="6.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1129.9" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (18 samples, 0.58%)</title><rect x="1126.9" y="867.0" width="6.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1129.9" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (18 samples, 0.58%)</title><rect x="1126.9" y="851.0" width="6.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1129.9" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (18 samples, 0.58%)</title><rect x="1126.9" y="835.0" width="6.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1129.9" y="846.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (18 samples, 0.58%)</title><rect x="1126.9" y="819.0" width="6.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1129.9" y="830.0"></text>
</g>
<g>
<title>Unsafe_Unpark (4 samples, 0.13%)</title><rect x="1126.9" y="803.0" width="1.5" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="1129.9" y="814.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.03%)</title><rect x="1126.9" y="787.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1129.9" y="798.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (1 samples, 0.03%)</title><rect x="1127.2" y="787.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1130.2" y="798.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (1 samples, 0.03%)</title><rect x="1127.6" y="787.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1130.6" y="798.0"></text>
</g>
<g>
<title>oopDesc::address_field(int) const (1 samples, 0.03%)</title><rect x="1128.0" y="787.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1131.0" y="798.0"></text>
</g>
<g>
<title>__pthread_cond_signal (14 samples, 0.45%)</title><rect x="1128.4" y="803.0" width="5.3" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="1131.4" y="814.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (12 samples, 0.38%)</title><rect x="1129.1" y="787.0" width="4.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1132.1" y="798.0"></text>
</g>
<g>
<title>do_syscall_64 (12 samples, 0.38%)</title><rect x="1129.1" y="771.0" width="4.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1132.1" y="782.0"></text>
</g>
<g>
<title>__x64_sys_futex (12 samples, 0.38%)</title><rect x="1129.1" y="755.0" width="4.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1132.1" y="766.0"></text>
</g>
<g>
<title>do_futex (12 samples, 0.38%)</title><rect x="1129.1" y="739.0" width="4.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1132.1" y="750.0"></text>
</g>
<g>
<title>futex_wake (12 samples, 0.38%)</title><rect x="1129.1" y="723.0" width="4.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1132.1" y="734.0"></text>
</g>
<g>
<title>wake_up_q (10 samples, 0.32%)</title><rect x="1129.9" y="707.0" width="3.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1132.9" y="718.0"></text>
</g>
<g>
<title>try_to_wake_up (10 samples, 0.32%)</title><rect x="1129.9" y="691.0" width="3.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1132.9" y="702.0"></text>
</g>
<g>
<title>__lock_text_start (10 samples, 0.32%)</title><rect x="1129.9" y="675.0" width="3.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1132.9" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivlev/ThreadController$$Lambda$65/822960827.run (149 samples, 4.77%)</title><rect x="1133.7" y="915.0" width="56.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1136.7" y="926.0">ru/mai..</text>
</g>
<g>
<title>ru/mail/polis/service/ivlev/ThreadController.lambda$put$3 (149 samples, 4.77%)</title><rect x="1133.7" y="899.0" width="56.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1136.7" y="910.0">ru/mai..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.03%)</title><rect x="1133.7" y="883.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1136.7" y="894.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.03%)</title><rect x="1133.7" y="867.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1136.7" y="878.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.03%)</title><rect x="1133.7" y="851.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1136.7" y="862.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (130 samples, 4.17%)</title><rect x="1134.0" y="883.0" width="49.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1137.0" y="894.0">one/n..</text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.03%)</title><rect x="1134.8" y="867.0" width="0.4" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="1137.8" y="878.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (125 samples, 4.01%)</title><rect x="1135.2" y="867.0" width="47.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1138.2" y="878.0">one/..</text>
</g>
<g>
<title>one/nio/http/Request.getHeader (1 samples, 0.03%)</title><rect x="1135.2" y="851.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1138.2" y="862.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (1 samples, 0.03%)</title><rect x="1135.6" y="851.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1138.6" y="862.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (123 samples, 3.94%)</title><rect x="1135.9" y="851.0" width="46.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1138.9" y="862.0">one/..</text>
</g>
<g>
<title>one/nio/net/Session.write (123 samples, 3.94%)</title><rect x="1135.9" y="835.0" width="46.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1138.9" y="846.0">one/..</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (122 samples, 3.91%)</title><rect x="1136.3" y="819.0" width="46.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1139.3" y="830.0">one/..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (122 samples, 3.91%)</title><rect x="1136.3" y="803.0" width="46.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1139.3" y="814.0">one/..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (7 samples, 0.22%)</title><rect x="1137.1" y="787.0" width="2.6" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="1140.1" y="798.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (1 samples, 0.03%)</title><rect x="1137.8" y="771.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1140.8" y="782.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (4 samples, 0.13%)</title><rect x="1138.2" y="771.0" width="1.5" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="1141.2" y="782.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (1 samples, 0.03%)</title><rect x="1138.2" y="755.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1141.2" y="766.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.03%)</title><rect x="1138.6" y="755.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1141.6" y="766.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (2 samples, 0.06%)</title><rect x="1139.0" y="755.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1142.0" y="766.0"></text>
</g>
<g>
<title>__send (112 samples, 3.59%)</title><rect x="1139.7" y="787.0" width="42.4" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="1142.7" y="798.0">__send</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (106 samples, 3.40%)</title><rect x="1142.0" y="771.0" width="40.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1145.0" y="782.0">ent..</text>
</g>
<g>
<title>__x64_sys_sendto (1 samples, 0.03%)</title><rect x="1142.0" y="755.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1145.0" y="766.0"></text>
</g>
<g>
<title>do_syscall_64 (105 samples, 3.36%)</title><rect x="1142.4" y="755.0" width="39.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1145.4" y="766.0">do_..</text>
</g>
<g>
<title>__x64_sys_sendto (104 samples, 3.33%)</title><rect x="1142.7" y="739.0" width="39.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1145.7" y="750.0">__x..</text>
</g>
<g>
<title>__sys_sendto (104 samples, 3.33%)</title><rect x="1142.7" y="723.0" width="39.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1145.7" y="734.0">__s..</text>
</g>
<g>
<title>sock_sendmsg (101 samples, 3.24%)</title><rect x="1142.7" y="707.0" width="38.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1145.7" y="718.0">soc..</text>
</g>
<g>
<title>apparmor_socket_sendmsg (1 samples, 0.03%)</title><rect x="1142.7" y="691.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1145.7" y="702.0"></text>
</g>
<g>
<title>inet6_sendmsg (99 samples, 3.17%)</title><rect x="1143.1" y="691.0" width="37.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1146.1" y="702.0">ine..</text>
</g>
<g>
<title>tcp_sendmsg (99 samples, 3.17%)</title><rect x="1143.1" y="675.0" width="37.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1146.1" y="686.0">tcp..</text>
</g>
<g>
<title>_raw_spin_lock_bh (1 samples, 0.03%)</title><rect x="1143.1" y="659.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1146.1" y="670.0"></text>
</g>
<g>
<title>lock_sock_nested (1 samples, 0.03%)</title><rect x="1143.5" y="659.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1146.5" y="670.0"></text>
</g>
<g>
<title>tcp_rate_check_app_limited (1 samples, 0.03%)</title><rect x="1143.9" y="659.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1146.9" y="670.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (96 samples, 3.08%)</title><rect x="1144.3" y="659.0" width="36.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1147.3" y="670.0">tcp..</text>
</g>
<g>
<title>__check_object_size (1 samples, 0.03%)</title><rect x="1144.6" y="643.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1147.6" y="654.0"></text>
</g>
<g>
<title>__virt_addr_valid (1 samples, 0.03%)</title><rect x="1144.6" y="627.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1147.6" y="638.0"></text>
</g>
<g>
<title>__virt_addr_valid (1 samples, 0.03%)</title><rect x="1145.0" y="643.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1148.0" y="654.0"></text>
</g>
<g>
<title>_copy_from_iter_full (1 samples, 0.03%)</title><rect x="1145.4" y="643.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1148.4" y="654.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (1 samples, 0.03%)</title><rect x="1145.4" y="627.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1148.4" y="638.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (6 samples, 0.19%)</title><rect x="1145.8" y="643.0" width="2.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1148.8" y="654.0"></text>
</g>
<g>
<title>__alloc_skb (5 samples, 0.16%)</title><rect x="1146.1" y="627.0" width="1.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1149.1" y="638.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.0 (2 samples, 0.06%)</title><rect x="1146.5" y="611.0" width="0.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1149.5" y="622.0"></text>
</g>
<g>
<title>memset_erms (2 samples, 0.06%)</title><rect x="1146.5" y="595.0" width="0.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1149.5" y="606.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (1 samples, 0.03%)</title><rect x="1147.3" y="611.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1150.3" y="622.0"></text>
</g>
<g>
<title>ksize (1 samples, 0.03%)</title><rect x="1147.7" y="611.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1150.7" y="622.0"></text>
</g>
<g>
<title>__ksize (1 samples, 0.03%)</title><rect x="1147.7" y="595.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1150.7" y="606.0"></text>
</g>
<g>
<title>skb_entail (1 samples, 0.03%)</title><rect x="1148.0" y="643.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1151.0" y="654.0"></text>
</g>
<g>
<title>tcp_push (83 samples, 2.66%)</title><rect x="1148.4" y="643.0" width="31.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1151.4" y="654.0">tc..</text>
</g>
<g>
<title>__tcp_push_pending_frames (83 samples, 2.66%)</title><rect x="1148.4" y="627.0" width="31.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1151.4" y="638.0">__..</text>
</g>
<g>
<title>tcp_mtu_probe (1 samples, 0.03%)</title><rect x="1148.4" y="611.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1151.4" y="622.0"></text>
</g>
<g>
<title>tcp_write_xmit (82 samples, 2.63%)</title><rect x="1148.8" y="611.0" width="31.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1151.8" y="622.0">tc..</text>
</g>
<g>
<title>__tcp_transmit_skb (78 samples, 2.50%)</title><rect x="1148.8" y="595.0" width="29.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1151.8" y="606.0">__..</text>
</g>
<g>
<title>ip_queue_xmit (73 samples, 2.34%)</title><rect x="1149.5" y="579.0" width="27.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1152.5" y="590.0">i..</text>
</g>
<g>
<title>__ip_queue_xmit (72 samples, 2.31%)</title><rect x="1149.5" y="563.0" width="27.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1152.5" y="574.0">_..</text>
</g>
<g>
<title>ip_local_out (71 samples, 2.27%)</title><rect x="1149.5" y="547.0" width="26.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1152.5" y="558.0">i..</text>
</g>
<g>
<title>ip_finish_output (1 samples, 0.03%)</title><rect x="1149.5" y="531.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1152.5" y="542.0"></text>
</g>
<g>
<title>ip_output (70 samples, 2.24%)</title><rect x="1149.9" y="531.0" width="26.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1152.9" y="542.0">i..</text>
</g>
<g>
<title>ip_finish_output (70 samples, 2.24%)</title><rect x="1149.9" y="515.0" width="26.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1152.9" y="526.0">i..</text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (1 samples, 0.03%)</title><rect x="1149.9" y="499.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1152.9" y="510.0"></text>
</g>
<g>
<title>__ip_finish_output (69 samples, 2.21%)</title><rect x="1150.3" y="499.0" width="26.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1153.3" y="510.0">_..</text>
</g>
<g>
<title>ip_finish_output2 (69 samples, 2.21%)</title><rect x="1150.3" y="483.0" width="26.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1153.3" y="494.0">i..</text>
</g>
<g>
<title>__local_bh_enable_ip (64 samples, 2.05%)</title><rect x="1151.1" y="467.0" width="24.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1154.1" y="478.0">_..</text>
</g>
<g>
<title>do_softirq.part.0 (63 samples, 2.02%)</title><rect x="1151.4" y="451.0" width="23.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1154.4" y="462.0">d..</text>
</g>
<g>
<title>do_softirq_own_stack (62 samples, 1.99%)</title><rect x="1151.8" y="435.0" width="23.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1154.8" y="446.0">d..</text>
</g>
<g>
<title>__softirqentry_text_start (62 samples, 1.99%)</title><rect x="1151.8" y="419.0" width="23.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1154.8" y="430.0">_..</text>
</g>
<g>
<title>net_rx_action (59 samples, 1.89%)</title><rect x="1152.9" y="403.0" width="22.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1155.9" y="414.0">n..</text>
</g>
<g>
<title>process_backlog (59 samples, 1.89%)</title><rect x="1152.9" y="387.0" width="22.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1155.9" y="398.0">p..</text>
</g>
<g>
<title>__netif_receive_skb (59 samples, 1.89%)</title><rect x="1152.9" y="371.0" width="22.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1155.9" y="382.0">_..</text>
</g>
<g>
<title>__netif_receive_skb_one_core (59 samples, 1.89%)</title><rect x="1152.9" y="355.0" width="22.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1155.9" y="366.0">_..</text>
</g>
<g>
<title>ip_rcv (58 samples, 1.86%)</title><rect x="1153.3" y="339.0" width="22.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1156.3" y="350.0">i..</text>
</g>
<g>
<title>ip_local_deliver (1 samples, 0.03%)</title><rect x="1153.3" y="323.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1156.3" y="334.0"></text>
</g>
<g>
<title>ip_rcv_core.isra.0 (1 samples, 0.03%)</title><rect x="1153.7" y="323.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1156.7" y="334.0"></text>
</g>
<g>
<title>ip_rcv_finish (56 samples, 1.79%)</title><rect x="1154.1" y="323.0" width="21.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1157.1" y="334.0">i..</text>
</g>
<g>
<title>ip_local_deliver (54 samples, 1.73%)</title><rect x="1154.1" y="307.0" width="20.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1157.1" y="318.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (53 samples, 1.70%)</title><rect x="1154.5" y="291.0" width="20.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1157.5" y="302.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (53 samples, 1.70%)</title><rect x="1154.5" y="275.0" width="20.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1157.5" y="286.0"></text>
</g>
<g>
<title>__inet_lookup_established (1 samples, 0.03%)</title><rect x="1154.5" y="259.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1157.5" y="270.0"></text>
</g>
<g>
<title>tcp_v4_rcv (52 samples, 1.67%)</title><rect x="1154.8" y="259.0" width="19.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1157.8" y="270.0"></text>
</g>
<g>
<title>__inet_lookup_established (2 samples, 0.06%)</title><rect x="1154.8" y="243.0" width="0.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1157.8" y="254.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (2 samples, 0.06%)</title><rect x="1155.6" y="243.0" width="0.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1158.6" y="254.0"></text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (2 samples, 0.06%)</title><rect x="1155.6" y="227.0" width="0.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1158.6" y="238.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (48 samples, 1.54%)</title><rect x="1156.4" y="243.0" width="18.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1159.4" y="254.0"></text>
</g>
<g>
<title>tcp_check_space (1 samples, 0.03%)</title><rect x="1156.4" y="227.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1159.4" y="238.0"></text>
</g>
<g>
<title>tcp_queue_rcv (1 samples, 0.03%)</title><rect x="1156.7" y="227.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1159.7" y="238.0"></text>
</g>
<g>
<title>tcp_rcv_established (46 samples, 1.47%)</title><rect x="1157.1" y="227.0" width="17.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1160.1" y="238.0"></text>
</g>
<g>
<title>__tcp_ack_snd_check (5 samples, 0.16%)</title><rect x="1157.9" y="211.0" width="1.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1160.9" y="222.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (5 samples, 0.16%)</title><rect x="1157.9" y="195.0" width="1.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1160.9" y="206.0"></text>
</g>
<g>
<title>mod_timer (1 samples, 0.03%)</title><rect x="1158.2" y="179.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1161.2" y="190.0"></text>
</g>
<g>
<title>sk_reset_timer (3 samples, 0.10%)</title><rect x="1158.6" y="179.0" width="1.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1161.6" y="190.0"></text>
</g>
<g>
<title>mod_timer (2 samples, 0.06%)</title><rect x="1159.0" y="163.0" width="0.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1162.0" y="174.0"></text>
</g>
<g>
<title>__lock_text_start (2 samples, 0.06%)</title><rect x="1159.0" y="147.0" width="0.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1162.0" y="158.0"></text>
</g>
<g>
<title>tcp_ack (8 samples, 0.26%)</title><rect x="1159.8" y="211.0" width="3.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1162.8" y="222.0"></text>
</g>
<g>
<title>bictcp_acked (1 samples, 0.03%)</title><rect x="1159.8" y="195.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1162.8" y="206.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (7 samples, 0.22%)</title><rect x="1160.1" y="195.0" width="2.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1163.1" y="206.0"></text>
</g>
<g>
<title>__kfree_skb (3 samples, 0.10%)</title><rect x="1161.3" y="179.0" width="1.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1164.3" y="190.0"></text>
</g>
<g>
<title>kfree_skbmem (1 samples, 0.03%)</title><rect x="1161.3" y="163.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1164.3" y="174.0"></text>
</g>
<g>
<title>kmem_cache_free (1 samples, 0.03%)</title><rect x="1161.3" y="147.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1164.3" y="158.0"></text>
</g>
<g>
<title>__slab_free (1 samples, 0.03%)</title><rect x="1161.3" y="131.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1164.3" y="142.0"></text>
</g>
<g>
<title>kmem_cache_free (1 samples, 0.03%)</title><rect x="1161.6" y="163.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1164.6" y="174.0"></text>
</g>
<g>
<title>skb_release_all (1 samples, 0.03%)</title><rect x="1162.0" y="163.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1165.0" y="174.0"></text>
</g>
<g>
<title>skb_release_data (1 samples, 0.03%)</title><rect x="1162.0" y="147.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1165.0" y="158.0"></text>
</g>
<g>
<title>tcp_ack_update_rtt.isra.0 (1 samples, 0.03%)</title><rect x="1162.4" y="179.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1165.4" y="190.0"></text>
</g>
<g>
<title>tcp_data_ready (27 samples, 0.87%)</title><rect x="1162.8" y="211.0" width="10.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1165.8" y="222.0"></text>
</g>
<g>
<title>sock_def_readable (27 samples, 0.87%)</title><rect x="1162.8" y="195.0" width="10.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1165.8" y="206.0"></text>
</g>
<g>
<title>__wake_up_sync_key (27 samples, 0.87%)</title><rect x="1162.8" y="179.0" width="10.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1165.8" y="190.0"></text>
</g>
<g>
<title>__wake_up_common_lock (27 samples, 0.87%)</title><rect x="1162.8" y="163.0" width="10.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1165.8" y="174.0"></text>
</g>
<g>
<title>__lock_text_start (27 samples, 0.87%)</title><rect x="1162.8" y="147.0" width="10.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1165.8" y="158.0"></text>
</g>
<g>
<title>tcp_event_data_recv (2 samples, 0.06%)</title><rect x="1173.0" y="211.0" width="0.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1176.0" y="222.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (1 samples, 0.03%)</title><rect x="1173.7" y="211.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1176.7" y="222.0"></text>
</g>
<g>
<title>read_tsc (1 samples, 0.03%)</title><rect x="1173.7" y="195.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1176.7" y="206.0"></text>
</g>
<g>
<title>tcp_queue_rcv (1 samples, 0.03%)</title><rect x="1174.1" y="211.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1177.1" y="222.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (1 samples, 0.03%)</title><rect x="1174.5" y="307.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1177.5" y="318.0"></text>
</g>
<g>
<title>ip_rcv_finish_core.isra.0 (1 samples, 0.03%)</title><rect x="1174.9" y="307.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1177.9" y="318.0"></text>
</g>
<g>
<title>dev_queue_xmit (3 samples, 0.10%)</title><rect x="1175.3" y="467.0" width="1.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1178.3" y="478.0"></text>
</g>
<g>
<title>__dev_queue_xmit (3 samples, 0.10%)</title><rect x="1175.3" y="451.0" width="1.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1178.3" y="462.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (1 samples, 0.03%)</title><rect x="1175.6" y="435.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1178.6" y="446.0"></text>
</g>
<g>
<title>eth_type_trans (1 samples, 0.03%)</title><rect x="1175.6" y="419.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1178.6" y="430.0"></text>
</g>
<g>
<title>validate_xmit_skb (1 samples, 0.03%)</title><rect x="1176.0" y="435.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1179.0" y="446.0"></text>
</g>
<g>
<title>ip_output (1 samples, 0.03%)</title><rect x="1176.4" y="547.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1179.4" y="558.0"></text>
</g>
<g>
<title>ip_copy_addrs (1 samples, 0.03%)</title><rect x="1176.8" y="563.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1179.8" y="574.0"></text>
</g>
<g>
<title>skb_clone (1 samples, 0.03%)</title><rect x="1177.1" y="579.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1180.1" y="590.0"></text>
</g>
<g>
<title>__skb_clone (1 samples, 0.03%)</title><rect x="1177.1" y="563.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1180.1" y="574.0"></text>
</g>
<g>
<title>__copy_skb_header (1 samples, 0.03%)</title><rect x="1177.1" y="547.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1180.1" y="558.0"></text>
</g>
<g>
<title>tcp_established_options (1 samples, 0.03%)</title><rect x="1177.5" y="579.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1180.5" y="590.0"></text>
</g>
<g>
<title>tcp_update_skb_after_send (1 samples, 0.03%)</title><rect x="1177.9" y="579.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1180.9" y="590.0"></text>
</g>
<g>
<title>ktime_get (1 samples, 0.03%)</title><rect x="1178.3" y="595.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1181.3" y="606.0"></text>
</g>
<g>
<title>read_tsc (1 samples, 0.03%)</title><rect x="1178.7" y="595.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1181.7" y="606.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (1 samples, 0.03%)</title><rect x="1179.0" y="595.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1182.0" y="606.0"></text>
</g>
<g>
<title>tcp_rearm_rto (1 samples, 0.03%)</title><rect x="1179.0" y="579.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1182.0" y="590.0"></text>
</g>
<g>
<title>sk_reset_timer (1 samples, 0.03%)</title><rect x="1179.0" y="563.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1182.0" y="574.0"></text>
</g>
<g>
<title>mod_timer (1 samples, 0.03%)</title><rect x="1179.0" y="547.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1182.0" y="558.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.03%)</title><rect x="1179.0" y="531.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1182.0" y="542.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (1 samples, 0.03%)</title><rect x="1179.4" y="595.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1182.4" y="606.0"></text>
</g>
<g>
<title>__usecs_to_jiffies (1 samples, 0.03%)</title><rect x="1179.4" y="579.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1182.4" y="590.0"></text>
</g>
<g>
<title>tcp_rate_check_app_limited (1 samples, 0.03%)</title><rect x="1179.8" y="643.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1182.8" y="654.0"></text>
</g>
<g>
<title>tcp_send_mss (1 samples, 0.03%)</title><rect x="1180.2" y="643.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1183.2" y="654.0"></text>
</g>
<g>
<title>ipv4_mtu (1 samples, 0.03%)</title><rect x="1180.2" y="627.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1183.2" y="638.0"></text>
</g>
<g>
<title>security_socket_sendmsg (1 samples, 0.03%)</title><rect x="1180.5" y="691.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1183.5" y="702.0"></text>
</g>
<g>
<title>apparmor_socket_sendmsg (1 samples, 0.03%)</title><rect x="1180.5" y="675.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1183.5" y="686.0"></text>
</g>
<g>
<title>aa_sk_perm (1 samples, 0.03%)</title><rect x="1180.5" y="659.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1183.5" y="670.0"></text>
</g>
<g>
<title>sockfd_lookup_light (3 samples, 0.10%)</title><rect x="1180.9" y="707.0" width="1.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1183.9" y="718.0"></text>
</g>
<g>
<title>__fdget (2 samples, 0.06%)</title><rect x="1180.9" y="691.0" width="0.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1183.9" y="702.0"></text>
</g>
<g>
<title>__fget_light (2 samples, 0.06%)</title><rect x="1180.9" y="675.0" width="0.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1183.9" y="686.0"></text>
</g>
<g>
<title>__fget (2 samples, 0.06%)</title><rect x="1180.9" y="659.0" width="0.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1183.9" y="670.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.03%)</title><rect x="1181.7" y="691.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1184.7" y="702.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (1 samples, 0.03%)</title><rect x="1182.1" y="787.0" width="0.3" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="1185.1" y="798.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (2 samples, 0.06%)</title><rect x="1182.4" y="867.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1185.4" y="878.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.upsert (18 samples, 0.58%)</title><rect x="1183.2" y="883.0" width="6.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1186.2" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock (1 samples, 0.03%)</title><rect x="1183.2" y="867.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1186.2" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireShared (1 samples, 0.03%)</title><rect x="1183.2" y="851.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1186.2" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryAcquireShared (1 samples, 0.03%)</title><rect x="1183.2" y="835.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1186.2" y="846.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (1 samples, 0.03%)</title><rect x="1183.2" y="819.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1186.2" y="830.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (1 samples, 0.03%)</title><rect x="1183.2" y="803.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1186.2" y="814.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.set (1 samples, 0.03%)</title><rect x="1183.2" y="787.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1186.2" y="798.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap$Entry.&lt;init&gt; (1 samples, 0.03%)</title><rect x="1183.2" y="771.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1186.2" y="782.0"></text>
</g>
<g>
<title>java/lang/ref/WeakReference.&lt;init&gt; (1 samples, 0.03%)</title><rect x="1183.2" y="755.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1186.2" y="766.0"></text>
</g>
<g>
<title>java/lang/ref/Reference.&lt;init&gt; (1 samples, 0.03%)</title><rect x="1183.2" y="739.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1186.2" y="750.0"></text>
</g>
<g>
<title>java/lang/ref/Reference.&lt;init&gt; (1 samples, 0.03%)</title><rect x="1183.2" y="723.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1186.2" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.unlock (2 samples, 0.06%)</title><rect x="1183.6" y="867.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1186.6" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.releaseShared (2 samples, 0.06%)</title><rect x="1183.6" y="851.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1186.6" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryReleaseShared (2 samples, 0.06%)</title><rect x="1183.6" y="835.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1186.6" y="846.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.remove (2 samples, 0.06%)</title><rect x="1183.6" y="819.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1186.6" y="830.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="1184.0" y="803.0" width="0.3" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="1187.0" y="814.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.03%)</title><rect x="1184.0" y="787.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1187.0" y="798.0"></text>
</g>
<g>
<title>ru/mail/polis/MemTable.upsert (15 samples, 0.48%)</title><rect x="1184.3" y="867.0" width="5.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1187.3" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.put (15 samples, 0.48%)</title><rect x="1184.3" y="851.0" width="5.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1187.3" y="862.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.03%)</title><rect x="1185.1" y="835.0" width="0.4" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="1188.1" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (11 samples, 0.35%)</title><rect x="1185.5" y="835.0" width="4.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1188.5" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (9 samples, 0.29%)</title><rect x="1186.2" y="819.0" width="3.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1189.2" y="830.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (9 samples, 0.29%)</title><rect x="1186.2" y="803.0" width="3.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1189.2" y="814.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (9 samples, 0.29%)</title><rect x="1186.2" y="787.0" width="3.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1189.2" y="798.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (8 samples, 0.26%)</title><rect x="1186.2" y="771.0" width="3.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1189.2" y="782.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (1 samples, 0.03%)</title><rect x="1189.2" y="771.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1192.2" y="782.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (1 samples, 0.03%)</title><rect x="1189.6" y="835.0" width="0.4" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="1192.6" y="846.0"></text>
</g>
</g>
</svg>
