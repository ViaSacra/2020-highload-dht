<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="1014" onload="init(evt)" viewBox="0 0 1200 1014" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="997"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="997"> </text>
<g id="frames">
<g>
<title>all (2,443 samples, 100.00%)</title><rect x="10.0" y="963.0" width="1180.0" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="13.0" y="974.0">all</text>
</g>
<g>
<title>[C1 CompilerThre tid=4842] (1 samples, 0.04%)</title><rect x="10.0" y="947.0" width="0.5" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="13.0" y="958.0"></text>
</g>
<g>
<title>start_thread (1 samples, 0.04%)</title><rect x="10.0" y="931.0" width="0.5" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="13.0" y="942.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (1 samples, 0.04%)</title><rect x="10.0" y="915.0" width="0.5" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="13.0" y="926.0"></text>
</g>
<g>
<title>Thread::call_run() (1 samples, 0.04%)</title><rect x="10.0" y="899.0" width="0.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="13.0" y="910.0"></text>
</g>
<g>
<title>JavaThread::run() (1 samples, 0.04%)</title><rect x="10.0" y="883.0" width="0.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="13.0" y="894.0"></text>
</g>
<g>
<title>CompileBroker::compiler_thread_loop() (1 samples, 0.04%)</title><rect x="10.0" y="867.0" width="0.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="13.0" y="878.0"></text>
</g>
<g>
<title>CompileBroker::invoke_compiler_on_method(CompileTask*) (1 samples, 0.04%)</title><rect x="10.0" y="851.0" width="0.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="13.0" y="862.0"></text>
</g>
<g>
<title>Compiler::compile_method(ciEnv*, ciMethod*, int, DirectiveSet*) (1 samples, 0.04%)</title><rect x="10.0" y="835.0" width="0.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="13.0" y="846.0"></text>
</g>
<g>
<title>Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*, DirectiveSet*) (1 samples, 0.04%)</title><rect x="10.0" y="819.0" width="0.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="13.0" y="830.0"></text>
</g>
<g>
<title>Compilation::compile_method() (1 samples, 0.04%)</title><rect x="10.0" y="803.0" width="0.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="13.0" y="814.0"></text>
</g>
<g>
<title>Compilation::compile_java_method() (1 samples, 0.04%)</title><rect x="10.0" y="787.0" width="0.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="13.0" y="798.0"></text>
</g>
<g>
<title>Compilation::emit_lir() (1 samples, 0.04%)</title><rect x="10.0" y="771.0" width="0.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="13.0" y="782.0"></text>
</g>
<g>
<title>BlockList::iterate_forward(BlockClosure*) (1 samples, 0.04%)</title><rect x="10.0" y="755.0" width="0.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="13.0" y="766.0"></text>
</g>
<g>
<title>non-virtual thunk to LIRGenerator::block_do(BlockBegin*) (1 samples, 0.04%)</title><rect x="10.0" y="739.0" width="0.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="13.0" y="750.0"></text>
</g>
<g>
<title>LIRGenerator::do_MonitorEnter(MonitorEnter*) (1 samples, 0.04%)</title><rect x="10.0" y="723.0" width="0.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="13.0" y="734.0"></text>
</g>
<g>
<title>[C2 CompilerThre tid=4841] (27 samples, 1.11%)</title><rect x="10.5" y="947.0" width="13.0" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="13.5" y="958.0"></text>
</g>
<g>
<title>start_thread (27 samples, 1.11%)</title><rect x="10.5" y="931.0" width="13.0" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="13.5" y="942.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (27 samples, 1.11%)</title><rect x="10.5" y="915.0" width="13.0" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="13.5" y="926.0"></text>
</g>
<g>
<title>Thread::call_run() (27 samples, 1.11%)</title><rect x="10.5" y="899.0" width="13.0" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="13.5" y="910.0"></text>
</g>
<g>
<title>JavaThread::run() (27 samples, 1.11%)</title><rect x="10.5" y="883.0" width="13.0" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="13.5" y="894.0"></text>
</g>
<g>
<title>CompileBroker::compiler_thread_loop() (27 samples, 1.11%)</title><rect x="10.5" y="867.0" width="13.0" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="13.5" y="878.0"></text>
</g>
<g>
<title>CompileBroker::invoke_compiler_on_method(CompileTask*) (27 samples, 1.11%)</title><rect x="10.5" y="851.0" width="13.0" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="13.5" y="862.0"></text>
</g>
<g>
<title>C2Compiler::compile_method(ciEnv*, ciMethod*, int, DirectiveSet*) (27 samples, 1.11%)</title><rect x="10.5" y="835.0" width="13.0" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="13.5" y="846.0"></text>
</g>
<g>
<title>Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool, DirectiveSet*) (27 samples, 1.11%)</title><rect x="10.5" y="819.0" width="13.0" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="13.5" y="830.0"></text>
</g>
<g>
<title>Compile::Code_Gen() (13 samples, 0.53%)</title><rect x="10.5" y="803.0" width="6.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="13.5" y="814.0"></text>
</g>
<g>
<title>Matcher::match() (1 samples, 0.04%)</title><rect x="10.5" y="787.0" width="0.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="13.5" y="798.0"></text>
</g>
<g>
<title>Matcher::xform(Node*, int) (1 samples, 0.04%)</title><rect x="10.5" y="771.0" width="0.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="13.5" y="782.0"></text>
</g>
<g>
<title>Matcher::match_tree(Node const*) (1 samples, 0.04%)</title><rect x="10.5" y="755.0" width="0.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="13.5" y="766.0"></text>
</g>
<g>
<title>Matcher::ReduceInst(State*, int, Node*&amp;) (1 samples, 0.04%)</title><rect x="10.5" y="739.0" width="0.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="13.5" y="750.0"></text>
</g>
<g>
<title>Matcher::ReduceInst_Interior(State*, int, Node*&amp;, MachNode*, unsigned int) (1 samples, 0.04%)</title><rect x="10.5" y="723.0" width="0.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="13.5" y="734.0"></text>
</g>
<g>
<title>Matcher::ReduceInst(State*, int, Node*&amp;) (1 samples, 0.04%)</title><rect x="10.5" y="707.0" width="0.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="13.5" y="718.0"></text>
</g>
<g>
<title>State::MachNodeGenerator(int) (1 samples, 0.04%)</title><rect x="10.5" y="691.0" width="0.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="13.5" y="702.0"></text>
</g>
<g>
<title>PhaseCFG::do_global_code_motion() (1 samples, 0.04%)</title><rect x="11.0" y="787.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="14.0" y="798.0"></text>
</g>
<g>
<title>PhaseCFG::global_code_motion() (1 samples, 0.04%)</title><rect x="11.0" y="771.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="14.0" y="782.0"></text>
</g>
<g>
<title>PhaseCFG::schedule_local(Block*, GrowableArray&lt;int&gt;&amp;, VectorSet&amp;, long*) (1 samples, 0.04%)</title><rect x="11.0" y="755.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="14.0" y="766.0"></text>
</g>
<g>
<title>PhaseChaitin::Register_Allocate() (11 samples, 0.45%)</title><rect x="11.4" y="787.0" width="5.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="14.4" y="798.0"></text>
</g>
<g>
<title>PhaseChaitin::Select() (1 samples, 0.04%)</title><rect x="11.4" y="771.0" width="0.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="14.4" y="782.0"></text>
</g>
<g>
<title>PhaseChaitin::Simplify() (1 samples, 0.04%)</title><rect x="11.9" y="771.0" width="0.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="14.9" y="782.0"></text>
</g>
<g>
<title>PhaseIFG::remove_node(unsigned int) (1 samples, 0.04%)</title><rect x="11.9" y="755.0" width="0.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="14.9" y="766.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (1 samples, 0.04%)</title><rect x="11.9" y="739.0" width="0.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="14.9" y="750.0"></text>
</g>
<g>
<title>PhaseChaitin::build_ifg_physical(ResourceArea*) (3 samples, 0.12%)</title><rect x="12.4" y="771.0" width="1.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="15.4" y="782.0"></text>
</g>
<g>
<title>PhaseChaitin::add_input_to_liveout(Block*, Node*, IndexSet*, double, PhaseChaitin::Pressure&amp;, PhaseChaitin::Pressure&amp;) (1 samples, 0.04%)</title><rect x="12.4" y="755.0" width="0.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="15.4" y="766.0"></text>
</g>
<g>
<title>PhaseChaitin::interfere_with_live(unsigned int, IndexSet*) (1 samples, 0.04%)</title><rect x="12.9" y="755.0" width="0.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="15.9" y="766.0"></text>
</g>
<g>
<title>PhaseChaitin::remove_bound_register_from_interfering_live_ranges(LRG&amp;, IndexSet*, unsigned int&amp;) (1 samples, 0.04%)</title><rect x="13.4" y="755.0" width="0.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="16.4" y="766.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (1 samples, 0.04%)</title><rect x="13.4" y="739.0" width="0.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="16.4" y="750.0"></text>
</g>
<g>
<title>PhaseChaitin::gather_lrg_masks(bool) (3 samples, 0.12%)</title><rect x="13.9" y="771.0" width="1.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="16.9" y="782.0"></text>
</g>
<g>
<title>MachNode::in_RegMask(unsigned int) const (1 samples, 0.04%)</title><rect x="14.8" y="755.0" width="0.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="17.8" y="766.0"></text>
</g>
<g>
<title>PhaseLive::compute(unsigned int) (1 samples, 0.04%)</title><rect x="15.3" y="771.0" width="0.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="18.3" y="782.0"></text>
</g>
<g>
<title>checkCastPPNode::oper_input_base() const (1 samples, 0.04%)</title><rect x="15.8" y="771.0" width="0.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="18.8" y="782.0"></text>
</g>
<g>
<title>find_lowest_bit(unsigned int) (1 samples, 0.04%)</title><rect x="16.3" y="771.0" width="0.5" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="19.3" y="782.0"></text>
</g>
<g>
<title>Compile::Optimize() (9 samples, 0.37%)</title><rect x="16.8" y="803.0" width="4.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="19.8" y="814.0"></text>
</g>
<g>
<title>Compile::optimize_loops(int&amp;, PhaseIterGVN&amp;, LoopOptsMode) [clone .part.341] (3 samples, 0.12%)</title><rect x="16.8" y="787.0" width="1.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="19.8" y="798.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_and_optimize(LoopOptsMode) (3 samples, 0.12%)</title><rect x="16.8" y="771.0" width="1.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="19.8" y="782.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_early(VectorSet&amp;, Node_List&amp;, Node_Stack&amp;) (1 samples, 0.04%)</title><rect x="16.8" y="755.0" width="0.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="19.8" y="766.0"></text>
</g>
<g>
<title>PhaseIdealLoop::get_early_ctrl(Node*) (1 samples, 0.04%)</title><rect x="16.8" y="739.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="19.8" y="750.0"></text>
</g>
<g>
<title>PhaseIdealLoop::dom_depth(Node*) const [clone .isra.123] (1 samples, 0.04%)</title><rect x="16.8" y="723.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="19.8" y="734.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_late(VectorSet&amp;, Node_List&amp;, Node_Stack&amp;) (1 samples, 0.04%)</title><rect x="17.2" y="755.0" width="0.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="20.2" y="766.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_late_post(Node*) (1 samples, 0.04%)</title><rect x="17.2" y="739.0" width="0.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="20.2" y="750.0"></text>
</g>
<g>
<title>AllocateArrayNode::Opcode() const (1 samples, 0.04%)</title><rect x="17.2" y="723.0" width="0.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="20.2" y="734.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_tree() (1 samples, 0.04%)</title><rect x="17.7" y="755.0" width="0.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="20.7" y="766.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_and_optimize(LoopOptsMode) (2 samples, 0.08%)</title><rect x="18.2" y="787.0" width="1.0" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="21.2" y="798.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_early(VectorSet&amp;, Node_List&amp;, Node_Stack&amp;) (1 samples, 0.04%)</title><rect x="18.2" y="771.0" width="0.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="21.2" y="782.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_late(VectorSet&amp;, Node_List&amp;, Node_Stack&amp;) (1 samples, 0.04%)</title><rect x="18.7" y="771.0" width="0.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="21.7" y="782.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_late_post(Node*) (1 samples, 0.04%)</title><rect x="18.7" y="755.0" width="0.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="21.7" y="766.0"></text>
</g>
<g>
<title>PhaseIdealLoop::get_late_ctrl(Node*, Node*) (1 samples, 0.04%)</title><rect x="18.7" y="739.0" width="0.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="21.7" y="750.0"></text>
</g>
<g>
<title>PhaseIdealLoop::dom_lca_for_get_late_ctrl_internal(Node*, Node*, Node*) (1 samples, 0.04%)</title><rect x="18.7" y="723.0" width="0.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="21.7" y="734.0"></text>
</g>
<g>
<title>PhaseIterGVN::PhaseIterGVN(PhaseGVN*) (1 samples, 0.04%)</title><rect x="19.2" y="787.0" width="0.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="22.2" y="798.0"></text>
</g>
<g>
<title>PhaseIterGVN::optimize() (3 samples, 0.12%)</title><rect x="19.7" y="787.0" width="1.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="22.7" y="798.0"></text>
</g>
<g>
<title>PhaseIterGVN::transform_old(Node*) (3 samples, 0.12%)</title><rect x="19.7" y="771.0" width="1.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="22.7" y="782.0"></text>
</g>
<g>
<title>IfNode::Ideal(PhaseGVN*, bool) (1 samples, 0.04%)</title><rect x="19.7" y="755.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="22.7" y="766.0"></text>
</g>
<g>
<title>StoreNode::Ideal(PhaseGVN*, bool) (2 samples, 0.08%)</title><rect x="20.1" y="755.0" width="1.0" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="23.1" y="766.0"></text>
</g>
<g>
<title>InitializeNode::can_capture_store(StoreNode*, PhaseTransform*, bool) [clone .part.157] (2 samples, 0.08%)</title><rect x="20.1" y="739.0" width="1.0" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="23.1" y="750.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (2 samples, 0.08%)</title><rect x="20.1" y="723.0" width="1.0" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="23.1" y="734.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (2 samples, 0.08%)</title><rect x="20.1" y="707.0" width="1.0" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="23.1" y="718.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (2 samples, 0.08%)</title><rect x="20.1" y="691.0" width="1.0" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="23.1" y="702.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.04%)</title><rect x="20.1" y="675.0" width="0.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="23.1" y="686.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.04%)</title><rect x="20.1" y="659.0" width="0.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="23.1" y="670.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.04%)</title><rect x="20.1" y="643.0" width="0.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="23.1" y="654.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.04%)</title><rect x="20.1" y="627.0" width="0.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="23.1" y="638.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.04%)</title><rect x="20.1" y="611.0" width="0.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="23.1" y="622.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.04%)</title><rect x="20.1" y="595.0" width="0.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="23.1" y="606.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.04%)</title><rect x="20.1" y="579.0" width="0.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="23.1" y="590.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.04%)</title><rect x="20.1" y="563.0" width="0.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="23.1" y="574.0"></text>
</g>
<g>
<title>MemNode::all_controls_dominate(Node*, Node*) [clone .part.149] (1 samples, 0.04%)</title><rect x="20.1" y="547.0" width="0.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="23.1" y="558.0"></text>
</g>
<g>
<title>Node::dominates(Node*, Node_List&amp;) (1 samples, 0.04%)</title><rect x="20.1" y="531.0" width="0.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="23.1" y="542.0"></text>
</g>
<g>
<title>MemNode::all_controls_dominate(Node*, Node*) [clone .part.149] (1 samples, 0.04%)</title><rect x="20.6" y="675.0" width="0.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="23.6" y="686.0"></text>
</g>
<g>
<title>Node::dominates(Node*, Node_List&amp;) (1 samples, 0.04%)</title><rect x="20.6" y="659.0" width="0.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="23.6" y="670.0"></text>
</g>
<g>
<title>CompileWrapper::CompileWrapper(Compile*) (1 samples, 0.04%)</title><rect x="21.1" y="803.0" width="0.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="24.1" y="814.0"></text>
</g>
<g>
<title>Type::Initialize(Compile*) (1 samples, 0.04%)</title><rect x="21.1" y="787.0" width="0.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="24.1" y="798.0"></text>
</g>
<g>
<title>DictI::reset(Dict const*) (1 samples, 0.04%)</title><rect x="21.1" y="771.0" width="0.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="24.1" y="782.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (3 samples, 0.12%)</title><rect x="21.6" y="803.0" width="1.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="24.6" y="814.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (3 samples, 0.12%)</title><rect x="21.6" y="787.0" width="1.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="24.6" y="798.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (3 samples, 0.12%)</title><rect x="21.6" y="771.0" width="1.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="24.6" y="782.0"></text>
</g>
<g>
<title>Parse::do_one_block() (3 samples, 0.12%)</title><rect x="21.6" y="755.0" width="1.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="24.6" y="766.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (3 samples, 0.12%)</title><rect x="21.6" y="739.0" width="1.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="24.6" y="750.0"></text>
</g>
<g>
<title>Parse::do_call() (3 samples, 0.12%)</title><rect x="21.6" y="723.0" width="1.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="24.6" y="734.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (3 samples, 0.12%)</title><rect x="21.6" y="707.0" width="1.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="24.6" y="718.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (3 samples, 0.12%)</title><rect x="21.6" y="691.0" width="1.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="24.6" y="702.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (3 samples, 0.12%)</title><rect x="21.6" y="675.0" width="1.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="24.6" y="686.0"></text>
</g>
<g>
<title>Parse::do_one_block() (3 samples, 0.12%)</title><rect x="21.6" y="659.0" width="1.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="24.6" y="670.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (3 samples, 0.12%)</title><rect x="21.6" y="643.0" width="1.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="24.6" y="654.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.08%)</title><rect x="21.6" y="627.0" width="1.0" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="24.6" y="638.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.04%)</title><rect x="21.6" y="611.0" width="0.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="24.6" y="622.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.04%)</title><rect x="21.6" y="595.0" width="0.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="24.6" y="606.0"></text>
</g>
<g>
<title>GraphKit::set_map_clone(SafePointNode*) (1 samples, 0.04%)</title><rect x="21.6" y="579.0" width="0.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="24.6" y="590.0"></text>
</g>
<g>
<title>GraphKit::clone_map() (1 samples, 0.04%)</title><rect x="21.6" y="563.0" width="0.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="24.6" y="574.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (1 samples, 0.04%)</title><rect x="22.1" y="611.0" width="0.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="25.1" y="622.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.04%)</title><rect x="22.1" y="595.0" width="0.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="25.1" y="606.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.04%)</title><rect x="22.1" y="579.0" width="0.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="25.1" y="590.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.04%)</title><rect x="22.1" y="563.0" width="0.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="25.1" y="574.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.04%)</title><rect x="22.1" y="547.0" width="0.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="25.1" y="558.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.04%)</title><rect x="22.1" y="531.0" width="0.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="25.1" y="542.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.04%)</title><rect x="22.1" y="515.0" width="0.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="25.1" y="526.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.04%)</title><rect x="22.1" y="499.0" width="0.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="25.1" y="510.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.04%)</title><rect x="22.1" y="483.0" width="0.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="25.1" y="494.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.04%)</title><rect x="22.1" y="467.0" width="0.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="25.1" y="478.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.04%)</title><rect x="22.1" y="451.0" width="0.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="25.1" y="462.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.04%)</title><rect x="22.1" y="435.0" width="0.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="25.1" y="446.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.04%)</title><rect x="22.1" y="419.0" width="0.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="25.1" y="430.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.04%)</title><rect x="22.1" y="403.0" width="0.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="25.1" y="414.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.04%)</title><rect x="22.1" y="387.0" width="0.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="25.1" y="398.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.04%)</title><rect x="22.1" y="371.0" width="0.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="25.1" y="382.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.04%)</title><rect x="22.1" y="355.0" width="0.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="25.1" y="366.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.04%)</title><rect x="22.1" y="339.0" width="0.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="25.1" y="350.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.04%)</title><rect x="22.1" y="323.0" width="0.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="25.1" y="334.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.04%)</title><rect x="22.1" y="307.0" width="0.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="25.1" y="318.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.04%)</title><rect x="22.1" y="291.0" width="0.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="25.1" y="302.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.04%)</title><rect x="22.1" y="275.0" width="0.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="25.1" y="286.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.04%)</title><rect x="22.1" y="259.0" width="0.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="25.1" y="270.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.04%)</title><rect x="22.1" y="243.0" width="0.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="25.1" y="254.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.04%)</title><rect x="22.1" y="227.0" width="0.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="25.1" y="238.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.04%)</title><rect x="22.1" y="211.0" width="0.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="25.1" y="222.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.04%)</title><rect x="22.1" y="195.0" width="0.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="25.1" y="206.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.04%)</title><rect x="22.1" y="179.0" width="0.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="25.1" y="190.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.04%)</title><rect x="22.1" y="163.0" width="0.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="25.1" y="174.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.04%)</title><rect x="22.1" y="147.0" width="0.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="25.1" y="158.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.04%)</title><rect x="22.1" y="131.0" width="0.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="25.1" y="142.0"></text>
</g>
<g>
<title>ciMethod::find_monomorphic_target(ciInstanceKlass*, ciInstanceKlass*, ciInstanceKlass*, bool) (1 samples, 0.04%)</title><rect x="22.1" y="115.0" width="0.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="25.1" y="126.0"></text>
</g>
<g>
<title>Dependencies::find_unique_concrete_method(Klass*, Method*) (1 samples, 0.04%)</title><rect x="22.1" y="99.0" width="0.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="25.1" y="110.0"></text>
</g>
<g>
<title>ClassHierarchyWalker::find_witness_anywhere(Klass*, bool, bool) (1 samples, 0.04%)</title><rect x="22.1" y="83.0" width="0.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="25.1" y="94.0"></text>
</g>
<g>
<title>ClassHierarchyWalker::is_witness(Klass*) (1 samples, 0.04%)</title><rect x="22.1" y="67.0" width="0.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="25.1" y="78.0"></text>
</g>
<g>
<title>InstanceKlass::find_instance_method(Symbol const*, Symbol const*, Klass::PrivateLookupMode) const (1 samples, 0.04%)</title><rect x="22.1" y="51.0" width="0.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="25.1" y="62.0"></text>
</g>
<g>
<title>InstanceKlass::find_method_index(Array&lt;Method*&gt; const*, Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::StaticLookupMode, Klass::PrivateLookupMode) (1 samples, 0.04%)</title><rect x="22.1" y="35.0" width="0.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="25.1" y="46.0"></text>
</g>
<g>
<title>Parse::do_field_access(bool, bool) (1 samples, 0.04%)</title><rect x="22.6" y="627.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="25.6" y="638.0"></text>
</g>
<g>
<title>Parse::do_get_xxx(Node*, ciField*, bool) (1 samples, 0.04%)</title><rect x="22.6" y="611.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="25.6" y="622.0"></text>
</g>
<g>
<title>PhaseGVN::transform_no_reclaim(Node*) (1 samples, 0.04%)</title><rect x="22.6" y="595.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="25.6" y="606.0"></text>
</g>
<g>
<title>TypeInstPtr::add_offset(long) const (1 samples, 0.04%)</title><rect x="22.6" y="579.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="25.6" y="590.0"></text>
</g>
<g>
<title>TypeInstPtr::make(TypePtr::PTR, ciKlass*, bool, ciObject*, int, int, TypePtr const*, int) (1 samples, 0.04%)</title><rect x="22.6" y="563.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="25.6" y="574.0"></text>
</g>
<g>
<title>TypeOopPtr::TypeOopPtr(Type::TYPES, TypePtr::PTR, ciKlass*, bool, ciObject*, int, int, TypePtr const*, int) (1 samples, 0.04%)</title><rect x="22.6" y="547.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="25.6" y="558.0"></text>
</g>
<g>
<title>ciInstanceKlass::get_field_by_offset(int, bool) (1 samples, 0.04%)</title><rect x="22.6" y="531.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="25.6" y="542.0"></text>
</g>
<g>
<title>ciInstanceKlass::compute_nonstatic_fields() (1 samples, 0.04%)</title><rect x="22.6" y="515.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="25.6" y="526.0"></text>
</g>
<g>
<title>ciInstanceKlass::compute_nonstatic_fields_impl(GrowableArray&lt;ciField*&gt;*) (1 samples, 0.04%)</title><rect x="22.6" y="499.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="25.6" y="510.0"></text>
</g>
<g>
<title>ciField::ciField(fieldDescriptor*) (1 samples, 0.04%)</title><rect x="22.6" y="483.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="25.6" y="494.0"></text>
</g>
<g>
<title>ciObjectFactory::get_symbol(Symbol*) (1 samples, 0.04%)</title><rect x="22.6" y="467.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="25.6" y="478.0"></text>
</g>
<g>
<title>vmSymbols::find_sid(Symbol const*) (1 samples, 0.04%)</title><rect x="22.6" y="451.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="25.6" y="462.0"></text>
</g>
<g>
<title>PhaseRemoveUseless::PhaseRemoveUseless(PhaseGVN*, Unique_Node_List*, Phase::PhaseNumber) (1 samples, 0.04%)</title><rect x="23.0" y="803.0" width="0.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="26.0" y="814.0"></text>
</g>
<g>
<title>Compile::identify_useful_nodes(Unique_Node_List&amp;) (1 samples, 0.04%)</title><rect x="23.0" y="787.0" width="0.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="26.0" y="798.0"></text>
</g>
<g>
<title>[GC Thread#0 tid=4832] (5 samples, 0.20%)</title><rect x="23.5" y="947.0" width="2.4" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="26.5" y="958.0"></text>
</g>
<g>
<title>start_thread (5 samples, 0.20%)</title><rect x="23.5" y="931.0" width="2.4" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="26.5" y="942.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (5 samples, 0.20%)</title><rect x="23.5" y="915.0" width="2.4" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="26.5" y="926.0"></text>
</g>
<g>
<title>Thread::call_run() (5 samples, 0.20%)</title><rect x="23.5" y="899.0" width="2.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="26.5" y="910.0"></text>
</g>
<g>
<title>GangWorker::loop() (5 samples, 0.20%)</title><rect x="23.5" y="883.0" width="2.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="26.5" y="894.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (5 samples, 0.20%)</title><rect x="23.5" y="867.0" width="2.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="26.5" y="878.0"></text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (5 samples, 0.20%)</title><rect x="23.5" y="851.0" width="2.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="26.5" y="862.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue() (5 samples, 0.20%)</title><rect x="23.5" y="835.0" width="2.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="26.5" y="846.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (5 samples, 0.20%)</title><rect x="23.5" y="819.0" width="2.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="26.5" y="830.0"></text>
</g>
<g>
<title>page_fault (1 samples, 0.04%)</title><rect x="24.5" y="803.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="27.5" y="814.0"></text>
</g>
<g>
<title>do_page_fault (1 samples, 0.04%)</title><rect x="24.5" y="787.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="27.5" y="798.0"></text>
</g>
<g>
<title>__do_page_fault (1 samples, 0.04%)</title><rect x="24.5" y="771.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="27.5" y="782.0"></text>
</g>
<g>
<title>do_user_addr_fault (1 samples, 0.04%)</title><rect x="24.5" y="755.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="27.5" y="766.0"></text>
</g>
<g>
<title>handle_mm_fault (1 samples, 0.04%)</title><rect x="24.5" y="739.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="27.5" y="750.0"></text>
</g>
<g>
<title>__handle_mm_fault (1 samples, 0.04%)</title><rect x="24.5" y="723.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="27.5" y="734.0"></text>
</g>
<g>
<title>do_anonymous_page (1 samples, 0.04%)</title><rect x="24.5" y="707.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="27.5" y="718.0"></text>
</g>
<g>
<title>_raw_spin_lock (1 samples, 0.04%)</title><rect x="24.5" y="691.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="27.5" y="702.0"></text>
</g>
<g>
<title>native_queued_spin_lock_slowpath (1 samples, 0.04%)</title><rect x="24.5" y="675.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="27.5" y="686.0"></text>
</g>
<g>
<title>void OopOopIterateBackwardsDispatch&lt;G1ScanEvacuatedObjClosure&gt;::Table::oop_oop_iterate_backwards&lt;InstanceKlass, unsigned int&gt;(G1ScanEvacuatedObjClosure*, oopDesc*, Klass*) (2 samples, 0.08%)</title><rect x="25.0" y="803.0" width="0.9" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="28.0" y="814.0"></text>
</g>
<g>
<title>[GC Thread#1 tid=4866] (5 samples, 0.20%)</title><rect x="25.9" y="947.0" width="2.5" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="28.9" y="958.0"></text>
</g>
<g>
<title>start_thread (5 samples, 0.20%)</title><rect x="25.9" y="931.0" width="2.5" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="28.9" y="942.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (5 samples, 0.20%)</title><rect x="25.9" y="915.0" width="2.5" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="28.9" y="926.0"></text>
</g>
<g>
<title>Thread::call_run() (5 samples, 0.20%)</title><rect x="25.9" y="899.0" width="2.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="28.9" y="910.0"></text>
</g>
<g>
<title>GangWorker::loop() (5 samples, 0.20%)</title><rect x="25.9" y="883.0" width="2.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="28.9" y="894.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (5 samples, 0.20%)</title><rect x="25.9" y="867.0" width="2.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="28.9" y="878.0"></text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (5 samples, 0.20%)</title><rect x="25.9" y="851.0" width="2.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="28.9" y="862.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue() (5 samples, 0.20%)</title><rect x="25.9" y="835.0" width="2.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="28.9" y="846.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (2 samples, 0.08%)</title><rect x="27.4" y="819.0" width="1.0" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="30.4" y="830.0"></text>
</g>
<g>
<title>[GC Thread#2 tid=4867] (6 samples, 0.25%)</title><rect x="28.4" y="947.0" width="2.9" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="31.4" y="958.0"></text>
</g>
<g>
<title>start_thread (6 samples, 0.25%)</title><rect x="28.4" y="931.0" width="2.9" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="31.4" y="942.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (6 samples, 0.25%)</title><rect x="28.4" y="915.0" width="2.9" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="31.4" y="926.0"></text>
</g>
<g>
<title>Thread::call_run() (6 samples, 0.25%)</title><rect x="28.4" y="899.0" width="2.9" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="31.4" y="910.0"></text>
</g>
<g>
<title>GangWorker::loop() (6 samples, 0.25%)</title><rect x="28.4" y="883.0" width="2.9" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="31.4" y="894.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (6 samples, 0.25%)</title><rect x="28.4" y="867.0" width="2.9" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="31.4" y="878.0"></text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (6 samples, 0.25%)</title><rect x="28.4" y="851.0" width="2.9" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="31.4" y="862.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue() (6 samples, 0.25%)</title><rect x="28.4" y="835.0" width="2.9" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="31.4" y="846.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (4 samples, 0.16%)</title><rect x="29.3" y="819.0" width="2.0" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="32.3" y="830.0"></text>
</g>
<g>
<title>void OopOopIterateBackwardsDispatch&lt;G1ScanEvacuatedObjClosure&gt;::Table::oop_oop_iterate_backwards&lt;InstanceKlass, unsigned int&gt;(G1ScanEvacuatedObjClosure*, oopDesc*, Klass*) (1 samples, 0.04%)</title><rect x="30.8" y="803.0" width="0.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="33.8" y="814.0"></text>
</g>
<g>
<title>[GC Thread#3 tid=4868] (5 samples, 0.20%)</title><rect x="31.3" y="947.0" width="2.4" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="34.3" y="958.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="31.3" y="931.0" width="0.4" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="34.3" y="942.0"></text>
</g>
<g>
<title>do_futex_wait.constprop.0 (1 samples, 0.04%)</title><rect x="31.3" y="915.0" width="0.4" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="34.3" y="926.0"></text>
</g>
<g>
<title>start_thread (4 samples, 0.16%)</title><rect x="31.7" y="931.0" width="2.0" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="34.7" y="942.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (4 samples, 0.16%)</title><rect x="31.7" y="915.0" width="2.0" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="34.7" y="926.0"></text>
</g>
<g>
<title>Thread::call_run() (4 samples, 0.16%)</title><rect x="31.7" y="899.0" width="2.0" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="34.7" y="910.0"></text>
</g>
<g>
<title>GangWorker::loop() (4 samples, 0.16%)</title><rect x="31.7" y="883.0" width="2.0" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="34.7" y="894.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (4 samples, 0.16%)</title><rect x="31.7" y="867.0" width="2.0" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="34.7" y="878.0"></text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (3 samples, 0.12%)</title><rect x="31.7" y="851.0" width="1.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="34.7" y="862.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue() (3 samples, 0.12%)</title><rect x="31.7" y="835.0" width="1.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="34.7" y="846.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (3 samples, 0.12%)</title><rect x="31.7" y="819.0" width="1.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="34.7" y="830.0"></text>
</g>
<g>
<title>void OopOopIterateBackwardsDispatch&lt;G1ScanEvacuatedObjClosure&gt;::Table::oop_oop_iterate_backwards&lt;InstanceKlass, unsigned int&gt;(G1ScanEvacuatedObjClosure*, oopDesc*, Klass*) (1 samples, 0.04%)</title><rect x="32.7" y="803.0" width="0.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="35.7" y="814.0"></text>
</g>
<g>
<title>G1RootProcessor::evacuate_roots(G1ParScanThreadState*, unsigned int) (1 samples, 0.04%)</title><rect x="33.2" y="851.0" width="0.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="36.2" y="862.0"></text>
</g>
<g>
<title>StringTable::possibly_parallel_oops_do(OopStorage::ParState&lt;false, false&gt;*, OopClosure*) (1 samples, 0.04%)</title><rect x="33.2" y="835.0" width="0.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="36.2" y="846.0"></text>
</g>
<g>
<title>[GC Thread#4 tid=4869] (6 samples, 0.25%)</title><rect x="33.7" y="947.0" width="2.9" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="36.7" y="958.0"></text>
</g>
<g>
<title>start_thread (6 samples, 0.25%)</title><rect x="33.7" y="931.0" width="2.9" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="36.7" y="942.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (6 samples, 0.25%)</title><rect x="33.7" y="915.0" width="2.9" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="36.7" y="926.0"></text>
</g>
<g>
<title>Thread::call_run() (6 samples, 0.25%)</title><rect x="33.7" y="899.0" width="2.9" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="36.7" y="910.0"></text>
</g>
<g>
<title>GangWorker::loop() (6 samples, 0.25%)</title><rect x="33.7" y="883.0" width="2.9" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="36.7" y="894.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (6 samples, 0.25%)</title><rect x="33.7" y="867.0" width="2.9" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="36.7" y="878.0"></text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (6 samples, 0.25%)</title><rect x="33.7" y="851.0" width="2.9" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="36.7" y="862.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue() (6 samples, 0.25%)</title><rect x="33.7" y="835.0" width="2.9" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="36.7" y="846.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (6 samples, 0.25%)</title><rect x="33.7" y="819.0" width="2.9" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="36.7" y="830.0"></text>
</g>
<g>
<title>void OopOopIterateBackwardsDispatch&lt;G1ScanEvacuatedObjClosure&gt;::Table::oop_oop_iterate_backwards&lt;InstanceKlass, unsigned int&gt;(G1ScanEvacuatedObjClosure*, oopDesc*, Klass*) (2 samples, 0.08%)</title><rect x="35.6" y="803.0" width="1.0" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="38.6" y="814.0"></text>
</g>
<g>
<title>[GC Thread#5 tid=4870] (4 samples, 0.16%)</title><rect x="36.6" y="947.0" width="1.9" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="39.6" y="958.0"></text>
</g>
<g>
<title>start_thread (4 samples, 0.16%)</title><rect x="36.6" y="931.0" width="1.9" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="39.6" y="942.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (4 samples, 0.16%)</title><rect x="36.6" y="915.0" width="1.9" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="39.6" y="926.0"></text>
</g>
<g>
<title>Thread::call_run() (4 samples, 0.16%)</title><rect x="36.6" y="899.0" width="1.9" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="39.6" y="910.0"></text>
</g>
<g>
<title>GangWorker::loop() (4 samples, 0.16%)</title><rect x="36.6" y="883.0" width="1.9" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="39.6" y="894.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (4 samples, 0.16%)</title><rect x="36.6" y="867.0" width="1.9" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="39.6" y="878.0"></text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (4 samples, 0.16%)</title><rect x="36.6" y="851.0" width="1.9" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="39.6" y="862.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue() (4 samples, 0.16%)</title><rect x="36.6" y="835.0" width="1.9" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="39.6" y="846.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (3 samples, 0.12%)</title><rect x="37.0" y="819.0" width="1.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="40.0" y="830.0"></text>
</g>
<g>
<title>void OopOopIterateBackwardsDispatch&lt;G1ScanEvacuatedObjClosure&gt;::Table::oop_oop_iterate_backwards&lt;InstanceKlass, unsigned int&gt;(G1ScanEvacuatedObjClosure*, oopDesc*, Klass*) (1 samples, 0.04%)</title><rect x="38.0" y="803.0" width="0.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="41.0" y="814.0"></text>
</g>
<g>
<title>[GC Thread#6 tid=4871] (6 samples, 0.25%)</title><rect x="38.5" y="947.0" width="2.9" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="41.5" y="958.0"></text>
</g>
<g>
<title>start_thread (6 samples, 0.25%)</title><rect x="38.5" y="931.0" width="2.9" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="41.5" y="942.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (6 samples, 0.25%)</title><rect x="38.5" y="915.0" width="2.9" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="41.5" y="926.0"></text>
</g>
<g>
<title>Thread::call_run() (6 samples, 0.25%)</title><rect x="38.5" y="899.0" width="2.9" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="41.5" y="910.0"></text>
</g>
<g>
<title>GangWorker::loop() (6 samples, 0.25%)</title><rect x="38.5" y="883.0" width="2.9" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="41.5" y="894.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (6 samples, 0.25%)</title><rect x="38.5" y="867.0" width="2.9" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="41.5" y="878.0"></text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (6 samples, 0.25%)</title><rect x="38.5" y="851.0" width="2.9" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="41.5" y="862.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue() (6 samples, 0.25%)</title><rect x="38.5" y="835.0" width="2.9" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="41.5" y="846.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (5 samples, 0.20%)</title><rect x="39.0" y="819.0" width="2.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="42.0" y="830.0"></text>
</g>
<g>
<title>void OopOopIterateBackwardsDispatch&lt;G1ScanEvacuatedObjClosure&gt;::Table::oop_oop_iterate_backwards&lt;InstanceKlass, unsigned int&gt;(G1ScanEvacuatedObjClosure*, oopDesc*, Klass*) (3 samples, 0.12%)</title><rect x="39.9" y="803.0" width="1.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="42.9" y="814.0"></text>
</g>
<g>
<title>[GC Thread#7 tid=4872] (6 samples, 0.25%)</title><rect x="41.4" y="947.0" width="2.9" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="44.4" y="958.0"></text>
</g>
<g>
<title>start_thread (6 samples, 0.25%)</title><rect x="41.4" y="931.0" width="2.9" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="44.4" y="942.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (6 samples, 0.25%)</title><rect x="41.4" y="915.0" width="2.9" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="44.4" y="926.0"></text>
</g>
<g>
<title>Thread::call_run() (6 samples, 0.25%)</title><rect x="41.4" y="899.0" width="2.9" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="44.4" y="910.0"></text>
</g>
<g>
<title>GangWorker::loop() (6 samples, 0.25%)</title><rect x="41.4" y="883.0" width="2.9" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="44.4" y="894.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (6 samples, 0.25%)</title><rect x="41.4" y="867.0" width="2.9" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="44.4" y="878.0"></text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (6 samples, 0.25%)</title><rect x="41.4" y="851.0" width="2.9" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="44.4" y="862.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue() (6 samples, 0.25%)</title><rect x="41.4" y="835.0" width="2.9" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="44.4" y="846.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (3 samples, 0.12%)</title><rect x="42.8" y="819.0" width="1.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="45.8" y="830.0"></text>
</g>
<g>
<title>[NIO Selector #0 tid=4849] (299 samples, 12.24%)</title><rect x="44.3" y="947.0" width="144.4" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="47.3" y="958.0">[NIO Selector #0 t..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (299 samples, 12.24%)</title><rect x="44.3" y="931.0" width="144.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="47.3" y="942.0">one/nio/server/Sel..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (58 samples, 2.37%)</title><rect x="45.3" y="915.0" width="28.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="48.3" y="926.0">on..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (50 samples, 2.05%)</title><rect x="49.1" y="899.0" width="24.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="52.1" y="910.0">o..</text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (4 samples, 0.16%)</title><rect x="51.5" y="883.0" width="2.0" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="54.5" y="894.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSelector_epollWait (1 samples, 0.04%)</title><rect x="53.5" y="883.0" width="0.5" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="56.5" y="894.0"></text>
</g>
<g>
<title>clock_gettime (7 samples, 0.29%)</title><rect x="54.0" y="883.0" width="3.3" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="57.0" y="894.0"></text>
</g>
<g>
<title>clock_gettime (1 samples, 0.04%)</title><rect x="56.9" y="867.0" width="0.4" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="59.9" y="878.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.04%)</title><rect x="56.9" y="851.0" width="0.4" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="59.9" y="862.0"></text>
</g>
<g>
<title>epoll_wait (33 samples, 1.35%)</title><rect x="57.3" y="883.0" width="16.0" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="60.3" y="894.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (30 samples, 1.23%)</title><rect x="58.8" y="867.0" width="14.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="61.8" y="878.0"></text>
</g>
<g>
<title>do_syscall_64 (30 samples, 1.23%)</title><rect x="58.8" y="851.0" width="14.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="61.8" y="862.0"></text>
</g>
<g>
<title>__x64_sys_epoll_wait (30 samples, 1.23%)</title><rect x="58.8" y="835.0" width="14.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="61.8" y="846.0"></text>
</g>
<g>
<title>do_epoll_wait (30 samples, 1.23%)</title><rect x="58.8" y="819.0" width="14.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="61.8" y="830.0"></text>
</g>
<g>
<title>ep_poll (28 samples, 1.15%)</title><rect x="58.8" y="803.0" width="13.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="61.8" y="814.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.0 (15 samples, 0.61%)</title><rect x="58.8" y="787.0" width="7.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="61.8" y="798.0"></text>
</g>
<g>
<title>ep_send_events_proc (14 samples, 0.57%)</title><rect x="59.3" y="771.0" width="6.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="62.3" y="782.0"></text>
</g>
<g>
<title>ep_item_poll.isra.0 (11 samples, 0.45%)</title><rect x="60.7" y="755.0" width="5.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="63.7" y="766.0"></text>
</g>
<g>
<title>sock_poll (10 samples, 0.41%)</title><rect x="61.2" y="739.0" width="4.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="64.2" y="750.0"></text>
</g>
<g>
<title>tcp_poll (3 samples, 0.12%)</title><rect x="63.6" y="723.0" width="1.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="66.6" y="734.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (2 samples, 0.08%)</title><rect x="65.1" y="723.0" width="0.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="68.1" y="734.0"></text>
</g>
<g>
<title>mutex_unlock (2 samples, 0.08%)</title><rect x="66.0" y="787.0" width="1.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="69.0" y="798.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (11 samples, 0.45%)</title><rect x="67.0" y="787.0" width="5.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="70.0" y="798.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (11 samples, 0.45%)</title><rect x="67.0" y="771.0" width="5.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="70.0" y="782.0"></text>
</g>
<g>
<title>schedule (10 samples, 0.41%)</title><rect x="67.5" y="755.0" width="4.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="70.5" y="766.0"></text>
</g>
<g>
<title>__schedule (10 samples, 0.41%)</title><rect x="67.5" y="739.0" width="4.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="70.5" y="750.0"></text>
</g>
<g>
<title>finish_task_switch (9 samples, 0.37%)</title><rect x="68.0" y="723.0" width="4.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="71.0" y="734.0"></text>
</g>
<g>
<title>fput_many (1 samples, 0.04%)</title><rect x="72.3" y="803.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="75.3" y="814.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (1 samples, 0.04%)</title><rect x="72.8" y="803.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="75.8" y="814.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (239 samples, 9.78%)</title><rect x="73.3" y="915.0" width="115.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="76.3" y="926.0">one/nio/net/Se..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (239 samples, 9.78%)</title><rect x="73.3" y="899.0" width="115.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="76.3" y="910.0">one/nio/http/H..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (177 samples, 7.25%)</title><rect x="73.3" y="883.0" width="85.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="76.3" y="894.0">one/nio/ht..</text>
</g>
<g>
<title>RequestHandler0_entity.handleRequest (2 samples, 0.08%)</title><rect x="75.7" y="867.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="78.7" y="878.0"></text>
</g>
<g>
<title>jbyte_arraycopy (1 samples, 0.04%)</title><rect x="76.7" y="867.0" width="0.4" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="79.7" y="878.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (1 samples, 0.04%)</title><rect x="77.1" y="867.0" width="0.5" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="80.1" y="878.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (156 samples, 6.39%)</title><rect x="77.6" y="867.0" width="75.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="80.6" y="878.0">one/nio/..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (156 samples, 6.39%)</title><rect x="77.6" y="851.0" width="75.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="80.6" y="862.0">one/nio/..</text>
</g>
<g>
<title>RequestHandler0_entity.handleRequest (153 samples, 6.26%)</title><rect x="78.6" y="835.0" width="73.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="81.6" y="846.0">RequestH..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (127 samples, 5.20%)</title><rect x="78.6" y="819.0" width="61.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="81.6" y="830.0">one/ni..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (123 samples, 5.03%)</title><rect x="79.1" y="803.0" width="59.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="82.1" y="814.0">one/ni..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (6 samples, 0.25%)</title><rect x="79.1" y="787.0" width="2.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="82.1" y="798.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (4 samples, 0.16%)</title><rect x="80.0" y="771.0" width="2.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="83.0" y="782.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (4 samples, 0.16%)</title><rect x="80.0" y="755.0" width="2.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="83.0" y="766.0"></text>
</g>
<g>
<title>java/lang/String.charAt (4 samples, 0.16%)</title><rect x="80.0" y="739.0" width="2.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="83.0" y="750.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.04%)</title><rect x="81.5" y="723.0" width="0.5" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="84.5" y="734.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (117 samples, 4.79%)</title><rect x="82.0" y="787.0" width="56.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="85.0" y="798.0">one/ni..</text>
</g>
<g>
<title>one/nio/net/Session.write (117 samples, 4.79%)</title><rect x="82.0" y="771.0" width="56.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="85.0" y="782.0">one/ni..</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (116 samples, 4.75%)</title><rect x="82.5" y="755.0" width="56.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="85.5" y="766.0">one/ni..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (116 samples, 4.75%)</title><rect x="82.5" y="739.0" width="56.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="85.5" y="750.0">one/ni..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (2 samples, 0.08%)</title><rect x="82.5" y="723.0" width="0.9" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="85.5" y="734.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (1 samples, 0.04%)</title><rect x="82.9" y="707.0" width="0.5" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="85.9" y="718.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (1 samples, 0.04%)</title><rect x="83.4" y="723.0" width="0.5" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="86.4" y="734.0"></text>
</g>
<g>
<title>__send (113 samples, 4.63%)</title><rect x="83.9" y="723.0" width="54.6" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="86.9" y="734.0">__send</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (109 samples, 4.46%)</title><rect x="85.8" y="707.0" width="52.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="88.8" y="718.0">entry..</text>
</g>
<g>
<title>do_syscall_64 (109 samples, 4.46%)</title><rect x="85.8" y="691.0" width="52.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="88.8" y="702.0">do_sy..</text>
</g>
<g>
<title>__x64_sys_sendto (108 samples, 4.42%)</title><rect x="86.3" y="675.0" width="52.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="89.3" y="686.0">__x64..</text>
</g>
<g>
<title>__sys_sendto (107 samples, 4.38%)</title><rect x="86.3" y="659.0" width="51.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="89.3" y="670.0">__sys..</text>
</g>
<g>
<title>sock_sendmsg (103 samples, 4.22%)</title><rect x="86.8" y="643.0" width="49.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="89.8" y="654.0">sock_..</text>
</g>
<g>
<title>apparmor_socket_sendmsg (1 samples, 0.04%)</title><rect x="87.3" y="627.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="90.3" y="638.0"></text>
</g>
<g>
<title>inet6_sendmsg (98 samples, 4.01%)</title><rect x="87.8" y="627.0" width="47.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="90.8" y="638.0">inet..</text>
</g>
<g>
<title>tcp_sendmsg (97 samples, 3.97%)</title><rect x="87.8" y="611.0" width="46.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="90.8" y="622.0">tcp_..</text>
</g>
<g>
<title>sk_stream_alloc_skb (1 samples, 0.04%)</title><rect x="87.8" y="595.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="90.8" y="606.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (95 samples, 3.89%)</title><rect x="88.2" y="595.0" width="45.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="91.2" y="606.0">tcp_..</text>
</g>
<g>
<title>sk_page_frag_refill (1 samples, 0.04%)</title><rect x="89.2" y="579.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="92.2" y="590.0"></text>
</g>
<g>
<title>skb_page_frag_refill (1 samples, 0.04%)</title><rect x="89.2" y="563.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="92.2" y="574.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (12 samples, 0.49%)</title><rect x="89.7" y="579.0" width="5.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="92.7" y="590.0"></text>
</g>
<g>
<title>__alloc_skb (11 samples, 0.45%)</title><rect x="89.7" y="563.0" width="5.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="92.7" y="574.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (1 samples, 0.04%)</title><rect x="89.7" y="547.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="92.7" y="558.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.0 (2 samples, 0.08%)</title><rect x="90.2" y="547.0" width="0.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="93.2" y="558.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (2 samples, 0.08%)</title><rect x="90.2" y="531.0" width="0.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="93.2" y="542.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (5 samples, 0.20%)</title><rect x="91.1" y="547.0" width="2.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="94.1" y="558.0"></text>
</g>
<g>
<title>ksize (2 samples, 0.08%)</title><rect x="93.6" y="547.0" width="0.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="96.6" y="558.0"></text>
</g>
<g>
<title>__ksize (2 samples, 0.08%)</title><rect x="93.6" y="531.0" width="0.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="96.6" y="542.0"></text>
</g>
<g>
<title>memset_erms (1 samples, 0.04%)</title><rect x="94.5" y="547.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="97.5" y="558.0"></text>
</g>
<g>
<title>ksize (1 samples, 0.04%)</title><rect x="95.0" y="563.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="98.0" y="574.0"></text>
</g>
<g>
<title>skb_entail (2 samples, 0.08%)</title><rect x="95.5" y="579.0" width="1.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="98.5" y="590.0"></text>
</g>
<g>
<title>tcp_current_mss (1 samples, 0.04%)</title><rect x="96.5" y="579.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="99.5" y="590.0"></text>
</g>
<g>
<title>tcp_push (76 samples, 3.11%)</title><rect x="96.9" y="579.0" width="36.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="99.9" y="590.0">tcp..</text>
</g>
<g>
<title>__tcp_push_pending_frames (75 samples, 3.07%)</title><rect x="96.9" y="563.0" width="36.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="99.9" y="574.0">__t..</text>
</g>
<g>
<title>__tcp_transmit_skb (1 samples, 0.04%)</title><rect x="96.9" y="547.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="99.9" y="558.0"></text>
</g>
<g>
<title>ktime_get (1 samples, 0.04%)</title><rect x="97.4" y="547.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="100.4" y="558.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (1 samples, 0.04%)</title><rect x="97.9" y="547.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="100.9" y="558.0"></text>
</g>
<g>
<title>tcp_write_xmit (72 samples, 2.95%)</title><rect x="98.4" y="547.0" width="34.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="101.4" y="558.0">tc..</text>
</g>
<g>
<title>__tcp_transmit_skb (67 samples, 2.74%)</title><rect x="99.4" y="531.0" width="32.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="102.4" y="542.0">__..</text>
</g>
<g>
<title>__tcp_v4_send_check (1 samples, 0.04%)</title><rect x="100.8" y="515.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="103.8" y="526.0"></text>
</g>
<g>
<title>ip_queue_xmit (60 samples, 2.46%)</title><rect x="101.3" y="515.0" width="29.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="104.3" y="526.0">ip..</text>
</g>
<g>
<title>__ip_queue_xmit (60 samples, 2.46%)</title><rect x="101.3" y="499.0" width="29.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="104.3" y="510.0">__..</text>
</g>
<g>
<title>__sk_dst_check (1 samples, 0.04%)</title><rect x="101.8" y="483.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="104.8" y="494.0"></text>
</g>
<g>
<title>ip_local_out (56 samples, 2.29%)</title><rect x="102.3" y="483.0" width="27.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="105.3" y="494.0">i..</text>
</g>
<g>
<title>__ip_local_out (2 samples, 0.08%)</title><rect x="102.3" y="467.0" width="0.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="105.3" y="478.0"></text>
</g>
<g>
<title>ip_send_check (2 samples, 0.08%)</title><rect x="102.3" y="451.0" width="0.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="105.3" y="462.0"></text>
</g>
<g>
<title>ip_output (54 samples, 2.21%)</title><rect x="103.2" y="467.0" width="26.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="106.2" y="478.0">i..</text>
</g>
<g>
<title>ip_finish_output (54 samples, 2.21%)</title><rect x="103.2" y="451.0" width="26.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="106.2" y="462.0">i..</text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (2 samples, 0.08%)</title><rect x="103.2" y="435.0" width="1.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="106.2" y="446.0"></text>
</g>
<g>
<title>__ip_finish_output (52 samples, 2.13%)</title><rect x="104.2" y="435.0" width="25.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="107.2" y="446.0">_..</text>
</g>
<g>
<title>ip_finish_output2 (50 samples, 2.05%)</title><rect x="105.2" y="419.0" width="24.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="108.2" y="430.0">i..</text>
</g>
<g>
<title>__local_bh_enable_ip (41 samples, 1.68%)</title><rect x="106.6" y="403.0" width="19.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="109.6" y="414.0"></text>
</g>
<g>
<title>do_softirq.part.0 (40 samples, 1.64%)</title><rect x="107.1" y="387.0" width="19.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="110.1" y="398.0"></text>
</g>
<g>
<title>do_softirq_own_stack (40 samples, 1.64%)</title><rect x="107.1" y="371.0" width="19.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="110.1" y="382.0"></text>
</g>
<g>
<title>__softirqentry_text_start (39 samples, 1.60%)</title><rect x="107.1" y="355.0" width="18.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="110.1" y="366.0"></text>
</g>
<g>
<title>net_rx_action (39 samples, 1.60%)</title><rect x="107.1" y="339.0" width="18.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="110.1" y="350.0"></text>
</g>
<g>
<title>process_backlog (39 samples, 1.60%)</title><rect x="107.1" y="323.0" width="18.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="110.1" y="334.0"></text>
</g>
<g>
<title>__netif_receive_skb (36 samples, 1.47%)</title><rect x="108.5" y="307.0" width="17.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="111.5" y="318.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (36 samples, 1.47%)</title><rect x="108.5" y="291.0" width="17.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="111.5" y="302.0"></text>
</g>
<g>
<title>__netif_receive_skb_core (1 samples, 0.04%)</title><rect x="109.0" y="275.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="112.0" y="286.0"></text>
</g>
<g>
<title>ip_rcv (32 samples, 1.31%)</title><rect x="109.5" y="275.0" width="15.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="112.5" y="286.0"></text>
</g>
<g>
<title>ip_rcv_core.isra.0 (1 samples, 0.04%)</title><rect x="109.5" y="259.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="112.5" y="270.0"></text>
</g>
<g>
<title>ip_rcv_finish (31 samples, 1.27%)</title><rect x="110.0" y="259.0" width="15.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="113.0" y="270.0"></text>
</g>
<g>
<title>ip_local_deliver (31 samples, 1.27%)</title><rect x="110.0" y="243.0" width="15.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="113.0" y="254.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (31 samples, 1.27%)</title><rect x="110.0" y="227.0" width="15.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="113.0" y="238.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (30 samples, 1.23%)</title><rect x="110.0" y="211.0" width="14.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="113.0" y="222.0"></text>
</g>
<g>
<title>sock_put (1 samples, 0.04%)</title><rect x="110.5" y="195.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="113.5" y="206.0"></text>
</g>
<g>
<title>tcp_v4_rcv (28 samples, 1.15%)</title><rect x="110.9" y="195.0" width="13.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="113.9" y="206.0"></text>
</g>
<g>
<title>inet_ehashfn (1 samples, 0.04%)</title><rect x="111.9" y="179.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="114.9" y="190.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (25 samples, 1.02%)</title><rect x="112.4" y="179.0" width="12.1" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="115.4" y="190.0"></text>
</g>
<g>
<title>ktime_get_seconds (1 samples, 0.04%)</title><rect x="112.4" y="163.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="115.4" y="174.0"></text>
</g>
<g>
<title>tcp_check_space (2 samples, 0.08%)</title><rect x="112.9" y="163.0" width="0.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="115.9" y="174.0"></text>
</g>
<g>
<title>tcp_rcv_established (22 samples, 0.90%)</title><rect x="113.8" y="163.0" width="10.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="116.8" y="174.0"></text>
</g>
<g>
<title>tcp_ack (12 samples, 0.49%)</title><rect x="113.8" y="147.0" width="5.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="116.8" y="158.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (1 samples, 0.04%)</title><rect x="114.3" y="131.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="117.3" y="142.0"></text>
</g>
<g>
<title>bictcp_acked (2 samples, 0.08%)</title><rect x="114.8" y="131.0" width="1.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="117.8" y="142.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (7 samples, 0.29%)</title><rect x="115.8" y="131.0" width="3.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="118.8" y="142.0"></text>
</g>
<g>
<title>__kfree_skb (4 samples, 0.16%)</title><rect x="116.7" y="115.0" width="2.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="119.7" y="126.0"></text>
</g>
<g>
<title>kfree_skbmem (2 samples, 0.08%)</title><rect x="116.7" y="99.0" width="1.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="119.7" y="110.0"></text>
</g>
<g>
<title>kmem_cache_free (2 samples, 0.08%)</title><rect x="116.7" y="83.0" width="1.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="119.7" y="94.0"></text>
</g>
<g>
<title>skb_release_all (2 samples, 0.08%)</title><rect x="117.7" y="99.0" width="1.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="120.7" y="110.0"></text>
</g>
<g>
<title>skb_release_data (2 samples, 0.08%)</title><rect x="117.7" y="83.0" width="1.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="120.7" y="94.0"></text>
</g>
<g>
<title>skb_free_head (1 samples, 0.04%)</title><rect x="118.2" y="67.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="121.2" y="78.0"></text>
</g>
<g>
<title>kfree (1 samples, 0.04%)</title><rect x="118.2" y="51.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="121.2" y="62.0"></text>
</g>
<g>
<title>tcp_rate_skb_delivered (1 samples, 0.04%)</title><rect x="118.7" y="115.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="121.7" y="126.0"></text>
</g>
<g>
<title>tcp_update_pacing_rate (1 samples, 0.04%)</title><rect x="119.2" y="131.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="122.2" y="142.0"></text>
</g>
<g>
<title>tcp_data_ready (8 samples, 0.33%)</title><rect x="119.6" y="147.0" width="3.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="122.6" y="158.0"></text>
</g>
<g>
<title>sock_def_readable (8 samples, 0.33%)</title><rect x="119.6" y="131.0" width="3.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="122.6" y="142.0"></text>
</g>
<g>
<title>__wake_up_sync_key (7 samples, 0.29%)</title><rect x="120.1" y="115.0" width="3.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="123.1" y="126.0"></text>
</g>
<g>
<title>__wake_up_common_lock (7 samples, 0.29%)</title><rect x="120.1" y="99.0" width="3.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="123.1" y="110.0"></text>
</g>
<g>
<title>__lock_text_start (7 samples, 0.29%)</title><rect x="120.1" y="83.0" width="3.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="123.1" y="94.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (1 samples, 0.04%)</title><rect x="123.5" y="147.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="126.5" y="158.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (1 samples, 0.04%)</title><rect x="123.5" y="131.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="126.5" y="142.0"></text>
</g>
<g>
<title>tcp_queue_rcv (1 samples, 0.04%)</title><rect x="124.0" y="147.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="127.0" y="158.0"></text>
</g>
<g>
<title>raw_local_deliver (1 samples, 0.04%)</title><rect x="124.5" y="211.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="127.5" y="222.0"></text>
</g>
<g>
<title>ip_rcv_core.isra.0 (1 samples, 0.04%)</title><rect x="125.0" y="275.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="128.0" y="286.0"></text>
</g>
<g>
<title>ip_rcv_finish (1 samples, 0.04%)</title><rect x="125.4" y="275.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="128.4" y="286.0"></text>
</g>
<g>
<title>net_rx_action (1 samples, 0.04%)</title><rect x="125.9" y="355.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="128.9" y="366.0"></text>
</g>
<g>
<title>dev_queue_xmit (6 samples, 0.25%)</title><rect x="126.4" y="403.0" width="2.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="129.4" y="414.0"></text>
</g>
<g>
<title>__dev_queue_xmit (6 samples, 0.25%)</title><rect x="126.4" y="387.0" width="2.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="129.4" y="398.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (4 samples, 0.16%)</title><rect x="126.9" y="371.0" width="1.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="129.9" y="382.0"></text>
</g>
<g>
<title>eth_type_trans (1 samples, 0.04%)</title><rect x="126.9" y="355.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="129.9" y="366.0"></text>
</g>
<g>
<title>loopback_xmit (2 samples, 0.08%)</title><rect x="127.4" y="355.0" width="0.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="130.4" y="366.0"></text>
</g>
<g>
<title>netif_rx (2 samples, 0.08%)</title><rect x="127.4" y="339.0" width="0.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="130.4" y="350.0"></text>
</g>
<g>
<title>netif_rx_internal (2 samples, 0.08%)</title><rect x="127.4" y="323.0" width="0.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="130.4" y="334.0"></text>
</g>
<g>
<title>enqueue_to_backlog (1 samples, 0.04%)</title><rect x="127.9" y="307.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="130.9" y="318.0"></text>
</g>
<g>
<title>skb_clone_tx_timestamp (1 samples, 0.04%)</title><rect x="128.3" y="355.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="131.3" y="366.0"></text>
</g>
<g>
<title>validate_xmit_skb (1 samples, 0.04%)</title><rect x="128.8" y="371.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="131.8" y="382.0"></text>
</g>
<g>
<title>validate_xmit_xfrm (1 samples, 0.04%)</title><rect x="128.8" y="355.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="131.8" y="366.0"></text>
</g>
<g>
<title>ipv4_dst_check (2 samples, 0.08%)</title><rect x="129.3" y="483.0" width="1.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="132.3" y="494.0"></text>
</g>
<g>
<title>skb_clone (2 samples, 0.08%)</title><rect x="130.3" y="515.0" width="0.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="133.3" y="526.0"></text>
</g>
<g>
<title>__copy_skb_header (1 samples, 0.04%)</title><rect x="130.3" y="499.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="133.3" y="510.0"></text>
</g>
<g>
<title>__skb_clone (1 samples, 0.04%)</title><rect x="130.8" y="499.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="133.8" y="510.0"></text>
</g>
<g>
<title>__copy_skb_header (1 samples, 0.04%)</title><rect x="130.8" y="483.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="133.8" y="494.0"></text>
</g>
<g>
<title>tcp_established_options (1 samples, 0.04%)</title><rect x="131.2" y="515.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="134.2" y="526.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (2 samples, 0.08%)</title><rect x="131.7" y="531.0" width="1.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="134.7" y="542.0"></text>
</g>
<g>
<title>sk_reset_timer (1 samples, 0.04%)</title><rect x="131.7" y="515.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="134.7" y="526.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.04%)</title><rect x="131.7" y="499.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="134.7" y="510.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.04%)</title><rect x="131.7" y="483.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="134.7" y="494.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.04%)</title><rect x="131.7" y="467.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="134.7" y="478.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.04%)</title><rect x="131.7" y="451.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="134.7" y="462.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.04%)</title><rect x="131.7" y="435.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="134.7" y="446.0"></text>
</g>
<g>
<title>rebalance_domains (1 samples, 0.04%)</title><rect x="131.7" y="419.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="134.7" y="430.0"></text>
</g>
<g>
<title>tcp_rearm_rto (1 samples, 0.04%)</title><rect x="132.2" y="515.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="135.2" y="526.0"></text>
</g>
<g>
<title>sk_reset_timer (1 samples, 0.04%)</title><rect x="132.2" y="499.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="135.2" y="510.0"></text>
</g>
<g>
<title>mod_timer (1 samples, 0.04%)</title><rect x="132.2" y="483.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="135.2" y="494.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.04%)</title><rect x="132.2" y="467.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="135.2" y="478.0"></text>
</g>
<g>
<title>tcp_small_queue_check.isra.0 (1 samples, 0.04%)</title><rect x="132.7" y="531.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="135.7" y="542.0"></text>
</g>
<g>
<title>tcp_write_xmit (1 samples, 0.04%)</title><rect x="133.2" y="563.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="136.2" y="574.0"></text>
</g>
<g>
<title>tcp_send_mss (1 samples, 0.04%)</title><rect x="133.7" y="579.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="136.7" y="590.0"></text>
</g>
<g>
<title>ipv4_mtu (1 samples, 0.04%)</title><rect x="133.7" y="563.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="136.7" y="574.0"></text>
</g>
<g>
<title>tcp_tx_timestamp (1 samples, 0.04%)</title><rect x="134.1" y="595.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="137.1" y="606.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (1 samples, 0.04%)</title><rect x="134.6" y="611.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="137.6" y="622.0"></text>
</g>
<g>
<title>security_socket_sendmsg (3 samples, 0.12%)</title><rect x="135.1" y="627.0" width="1.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="138.1" y="638.0"></text>
</g>
<g>
<title>apparmor_socket_sendmsg (2 samples, 0.08%)</title><rect x="135.6" y="611.0" width="0.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="138.6" y="622.0"></text>
</g>
<g>
<title>aa_sk_perm (2 samples, 0.08%)</title><rect x="135.6" y="595.0" width="0.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="138.6" y="606.0"></text>
</g>
<g>
<title>sockfd_lookup_light (3 samples, 0.12%)</title><rect x="136.5" y="643.0" width="1.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="139.5" y="654.0"></text>
</g>
<g>
<title>__fdget (2 samples, 0.08%)</title><rect x="136.5" y="627.0" width="1.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="139.5" y="638.0"></text>
</g>
<g>
<title>__fget_light (2 samples, 0.08%)</title><rect x="136.5" y="611.0" width="1.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="139.5" y="622.0"></text>
</g>
<g>
<title>__fget (1 samples, 0.04%)</title><rect x="137.0" y="595.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="140.0" y="606.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.04%)</title><rect x="137.5" y="627.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="140.5" y="638.0"></text>
</g>
<g>
<title>fput (1 samples, 0.04%)</title><rect x="138.0" y="659.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="141.0" y="670.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (3 samples, 0.12%)</title><rect x="138.5" y="803.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="141.5" y="814.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.04%)</title><rect x="139.4" y="787.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="142.4" y="798.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.04%)</title><rect x="139.4" y="771.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="142.4" y="782.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (1 samples, 0.04%)</title><rect x="139.9" y="819.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="142.9" y="830.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (1 samples, 0.04%)</title><rect x="139.9" y="803.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="142.9" y="814.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.04%)</title><rect x="139.9" y="787.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="142.9" y="798.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.04%)</title><rect x="139.9" y="771.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="142.9" y="782.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (1 samples, 0.04%)</title><rect x="139.9" y="755.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="142.9" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivlev/ServiceController.entity (25 samples, 1.02%)</title><rect x="140.4" y="819.0" width="12.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="143.4" y="830.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.04%)</title><rect x="140.4" y="803.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="143.4" y="814.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.04%)</title><rect x="140.4" y="787.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="143.4" y="798.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivlev/ServiceController.getResponse (1 samples, 0.04%)</title><rect x="140.4" y="771.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="143.4" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivlev/ServiceController.getResponse (24 samples, 0.98%)</title><rect x="140.9" y="803.0" width="11.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="143.9" y="814.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivlev/ServiceController.methodPut (24 samples, 0.98%)</title><rect x="140.9" y="787.0" width="11.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="143.9" y="798.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.04%)</title><rect x="140.9" y="771.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="143.9" y="782.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.04%)</title><rect x="140.9" y="755.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="143.9" y="766.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.04%)</title><rect x="140.9" y="739.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="143.9" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.upsert (23 samples, 0.94%)</title><rect x="141.4" y="771.0" width="11.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="144.4" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock (3 samples, 0.12%)</title><rect x="141.4" y="755.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="144.4" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireShared (3 samples, 0.12%)</title><rect x="141.4" y="739.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="144.4" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryAcquireShared (3 samples, 0.12%)</title><rect x="141.4" y="723.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="144.4" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.fullTryAcquireShared (2 samples, 0.08%)</title><rect x="141.9" y="707.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="144.9" y="718.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.set (1 samples, 0.04%)</title><rect x="141.9" y="691.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="144.9" y="702.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.set (1 samples, 0.04%)</title><rect x="141.9" y="675.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="144.9" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$NonfairSync.readerShouldBlock (1 samples, 0.04%)</title><rect x="142.3" y="691.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="145.3" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/MemTable.upsert (20 samples, 0.82%)</title><rect x="142.8" y="755.0" width="9.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="145.8" y="766.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (3 samples, 0.12%)</title><rect x="142.8" y="739.0" width="1.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="145.8" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (2 samples, 0.08%)</title><rect x="143.3" y="723.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="146.3" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.put (17 samples, 0.70%)</title><rect x="144.3" y="739.0" width="8.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="147.3" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (14 samples, 0.57%)</title><rect x="145.2" y="723.0" width="6.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="148.2" y="734.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (1 samples, 0.04%)</title><rect x="145.2" y="707.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="148.2" y="718.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (1 samples, 0.04%)</title><rect x="145.2" y="691.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="148.2" y="702.0"></text>
</g>
<g>
<title>java/util/Objects.requireNonNull (1 samples, 0.04%)</title><rect x="145.2" y="675.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="148.2" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Index.&lt;init&gt; (6 samples, 0.25%)</title><rect x="145.7" y="707.0" width="2.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="148.7" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Node.&lt;init&gt; (1 samples, 0.04%)</title><rect x="148.6" y="707.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="151.6" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (6 samples, 0.25%)</title><rect x="149.1" y="707.0" width="2.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="152.1" y="718.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (6 samples, 0.25%)</title><rect x="149.1" y="691.0" width="2.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="152.1" y="702.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (5 samples, 0.20%)</title><rect x="149.6" y="675.0" width="2.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="152.6" y="686.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (5 samples, 0.20%)</title><rect x="149.6" y="659.0" width="2.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="152.6" y="670.0"></text>
</g>
<g>
<title>vectorizedMismatch (1 samples, 0.04%)</title><rect x="151.5" y="643.0" width="0.5" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="154.5" y="654.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.04%)</title><rect x="152.0" y="723.0" width="0.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="155.0" y="734.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (1 samples, 0.04%)</title><rect x="152.5" y="835.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="155.5" y="846.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (1 samples, 0.04%)</title><rect x="152.5" y="819.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="155.5" y="830.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (6 samples, 0.25%)</title><rect x="153.0" y="867.0" width="2.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="156.0" y="878.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (3 samples, 0.12%)</title><rect x="153.0" y="851.0" width="1.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="156.0" y="862.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2 samples, 0.08%)</title><rect x="153.5" y="835.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="156.5" y="846.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.startsWith (3 samples, 0.12%)</title><rect x="154.4" y="851.0" width="1.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="157.4" y="862.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (6 samples, 0.25%)</title><rect x="155.9" y="867.0" width="2.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="158.9" y="878.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (4 samples, 0.16%)</title><rect x="156.8" y="851.0" width="2.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="159.8" y="862.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.04%)</title><rect x="158.3" y="835.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="161.3" y="846.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.04%)</title><rect x="158.3" y="819.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="161.3" y="830.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.04%)</title><rect x="158.3" y="803.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="161.3" y="814.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.04%)</title><rect x="158.3" y="787.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="161.3" y="798.0"></text>
</g>
<g>
<title>run_timer_softirq (1 samples, 0.04%)</title><rect x="158.3" y="771.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="161.3" y="782.0"></text>
</g>
<g>
<title>__run_timers.part.0 (1 samples, 0.04%)</title><rect x="158.3" y="755.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="161.3" y="766.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (62 samples, 2.54%)</title><rect x="158.8" y="883.0" width="29.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="161.8" y="894.0">on..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (61 samples, 2.50%)</title><rect x="159.3" y="867.0" width="29.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="162.3" y="878.0">on..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (9 samples, 0.37%)</title><rect x="160.2" y="851.0" width="4.4" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="163.2" y="862.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.04%)</title><rect x="160.7" y="835.0" width="0.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="163.7" y="846.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (2 samples, 0.08%)</title><rect x="161.2" y="835.0" width="0.9" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="164.2" y="846.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (1 samples, 0.04%)</title><rect x="162.1" y="835.0" width="0.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="165.1" y="846.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (2 samples, 0.08%)</title><rect x="162.6" y="835.0" width="1.0" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="165.6" y="846.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (1 samples, 0.04%)</title><rect x="162.6" y="819.0" width="0.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="165.6" y="830.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (1 samples, 0.04%)</title><rect x="163.1" y="819.0" width="0.5" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="166.1" y="830.0"></text>
</g>
<g>
<title>void AccessInternal::arraycopy_conjoint&lt;signed char&gt;(signed char*, signed char*, unsigned long) (2 samples, 0.08%)</title><rect x="163.6" y="835.0" width="1.0" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="166.6" y="846.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (1 samples, 0.04%)</title><rect x="164.6" y="851.0" width="0.4" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="167.6" y="862.0"></text>
</g>
<g>
<title>recv (49 samples, 2.01%)</title><rect x="165.0" y="851.0" width="23.7" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="168.0" y="862.0">r..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (38 samples, 1.56%)</title><rect x="169.9" y="835.0" width="18.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="172.9" y="846.0"></text>
</g>
<g>
<title>__x64_sys_recvfrom (1 samples, 0.04%)</title><rect x="169.9" y="819.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="172.9" y="830.0"></text>
</g>
<g>
<title>do_syscall_64 (37 samples, 1.51%)</title><rect x="170.4" y="819.0" width="17.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="173.4" y="830.0"></text>
</g>
<g>
<title>__sys_recvfrom (2 samples, 0.08%)</title><rect x="172.8" y="803.0" width="0.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="175.8" y="814.0"></text>
</g>
<g>
<title>__x64_sys_recvfrom (30 samples, 1.23%)</title><rect x="173.7" y="803.0" width="14.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="176.7" y="814.0"></text>
</g>
<g>
<title>__sys_recvfrom (30 samples, 1.23%)</title><rect x="173.7" y="787.0" width="14.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="176.7" y="798.0"></text>
</g>
<g>
<title>sock_recvmsg (25 samples, 1.02%)</title><rect x="174.7" y="771.0" width="12.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="177.7" y="782.0"></text>
</g>
<g>
<title>apparmor_socket_recvmsg (1 samples, 0.04%)</title><rect x="174.7" y="755.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="177.7" y="766.0"></text>
</g>
<g>
<title>inet6_recvmsg (18 samples, 0.74%)</title><rect x="175.2" y="755.0" width="8.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="178.2" y="766.0"></text>
</g>
<g>
<title>release_sock (1 samples, 0.04%)</title><rect x="175.2" y="739.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="178.2" y="750.0"></text>
</g>
<g>
<title>tcp_recvmsg (17 samples, 0.70%)</title><rect x="175.7" y="739.0" width="8.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="178.7" y="750.0"></text>
</g>
<g>
<title>__kfree_skb (2 samples, 0.08%)</title><rect x="177.6" y="723.0" width="1.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="180.6" y="734.0"></text>
</g>
<g>
<title>skb_release_all (2 samples, 0.08%)</title><rect x="177.6" y="707.0" width="1.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="180.6" y="718.0"></text>
</g>
<g>
<title>skb_release_head_state (1 samples, 0.04%)</title><rect x="177.6" y="691.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="180.6" y="702.0"></text>
</g>
<g>
<title>dst_release (1 samples, 0.04%)</title><rect x="177.6" y="675.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="180.6" y="686.0"></text>
</g>
<g>
<title>sock_rfree (1 samples, 0.04%)</title><rect x="178.1" y="691.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="181.1" y="702.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (9 samples, 0.37%)</title><rect x="178.6" y="723.0" width="4.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="181.6" y="734.0"></text>
</g>
<g>
<title>__skb_datagram_iter (9 samples, 0.37%)</title><rect x="178.6" y="707.0" width="4.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="181.6" y="718.0"></text>
</g>
<g>
<title>simple_copy_to_iter (5 samples, 0.20%)</title><rect x="180.5" y="691.0" width="2.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="183.5" y="702.0"></text>
</g>
<g>
<title>__check_object_size (3 samples, 0.12%)</title><rect x="180.5" y="675.0" width="1.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="183.5" y="686.0"></text>
</g>
<g>
<title>__virt_addr_valid (1 samples, 0.04%)</title><rect x="181.5" y="659.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="184.5" y="670.0"></text>
</g>
<g>
<title>_copy_to_iter (2 samples, 0.08%)</title><rect x="182.0" y="675.0" width="0.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="185.0" y="686.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (2 samples, 0.08%)</title><rect x="182.0" y="659.0" width="0.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="185.0" y="670.0"></text>
</g>
<g>
<title>skb_release_all (1 samples, 0.04%)</title><rect x="182.9" y="723.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="185.9" y="734.0"></text>
</g>
<g>
<title>tcp_rcv_space_adjust (1 samples, 0.04%)</title><rect x="183.4" y="723.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="186.4" y="734.0"></text>
</g>
<g>
<title>ktime_get (1 samples, 0.04%)</title><rect x="183.4" y="707.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="186.4" y="718.0"></text>
</g>
<g>
<title>security_socket_recvmsg (6 samples, 0.25%)</title><rect x="183.9" y="755.0" width="2.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="186.9" y="766.0"></text>
</g>
<g>
<title>apparmor_socket_recvmsg (4 samples, 0.16%)</title><rect x="184.9" y="739.0" width="1.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="187.9" y="750.0"></text>
</g>
<g>
<title>aa_sk_perm (4 samples, 0.16%)</title><rect x="184.9" y="723.0" width="1.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="187.9" y="734.0"></text>
</g>
<g>
<title>sockfd_lookup_light (3 samples, 0.12%)</title><rect x="186.8" y="771.0" width="1.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="189.8" y="782.0"></text>
</g>
<g>
<title>__fdget (1 samples, 0.04%)</title><rect x="186.8" y="755.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="189.8" y="766.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.04%)</title><rect x="186.8" y="739.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="189.8" y="750.0"></text>
</g>
<g>
<title>__fget (1 samples, 0.04%)</title><rect x="186.8" y="723.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="189.8" y="734.0"></text>
</g>
<g>
<title>__fget_light (2 samples, 0.08%)</title><rect x="187.3" y="755.0" width="0.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="190.3" y="766.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.04%)</title><rect x="188.2" y="835.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="191.2" y="846.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.04%)</title><rect x="188.2" y="819.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="191.2" y="830.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.04%)</title><rect x="188.2" y="803.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="191.2" y="814.0"></text>
</g>
<g>
<title>[NIO Selector #1 tid=4850] (155 samples, 6.34%)</title><rect x="188.7" y="947.0" width="74.9" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="191.7" y="958.0">[NIO Sel..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (155 samples, 6.34%)</title><rect x="188.7" y="931.0" width="74.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="191.7" y="942.0">one/nio/..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (27 samples, 1.11%)</title><rect x="189.2" y="915.0" width="13.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="192.2" y="926.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (27 samples, 1.11%)</title><rect x="189.2" y="899.0" width="13.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="192.2" y="910.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (1 samples, 0.04%)</title><rect x="189.2" y="883.0" width="0.5" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="192.2" y="894.0"></text>
</g>
<g>
<title>clock_gettime (6 samples, 0.25%)</title><rect x="189.7" y="883.0" width="2.9" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="192.7" y="894.0"></text>
</g>
<g>
<title>epoll_wait (19 samples, 0.78%)</title><rect x="192.6" y="883.0" width="9.2" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="195.6" y="894.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (16 samples, 0.65%)</title><rect x="194.0" y="867.0" width="7.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="197.0" y="878.0"></text>
</g>
<g>
<title>__x64_sys_epoll_wait (1 samples, 0.04%)</title><rect x="194.0" y="851.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="197.0" y="862.0"></text>
</g>
<g>
<title>do_syscall_64 (15 samples, 0.61%)</title><rect x="194.5" y="851.0" width="7.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="197.5" y="862.0"></text>
</g>
<g>
<title>__x64_sys_epoll_wait (14 samples, 0.57%)</title><rect x="195.0" y="835.0" width="6.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="198.0" y="846.0"></text>
</g>
<g>
<title>do_epoll_wait (14 samples, 0.57%)</title><rect x="195.0" y="819.0" width="6.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="198.0" y="830.0"></text>
</g>
<g>
<title>__fdget (1 samples, 0.04%)</title><rect x="195.0" y="803.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="198.0" y="814.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.04%)</title><rect x="195.0" y="787.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="198.0" y="798.0"></text>
</g>
<g>
<title>__fget (1 samples, 0.04%)</title><rect x="195.0" y="771.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="198.0" y="782.0"></text>
</g>
<g>
<title>ep_poll (10 samples, 0.41%)</title><rect x="195.5" y="803.0" width="4.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="198.5" y="814.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.0 (6 samples, 0.25%)</title><rect x="195.5" y="787.0" width="2.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="198.5" y="798.0"></text>
</g>
<g>
<title>ep_send_events_proc (5 samples, 0.20%)</title><rect x="196.0" y="771.0" width="2.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="199.0" y="782.0"></text>
</g>
<g>
<title>ep_item_poll.isra.0 (2 samples, 0.08%)</title><rect x="196.9" y="755.0" width="1.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="199.9" y="766.0"></text>
</g>
<g>
<title>sock_poll (1 samples, 0.04%)</title><rect x="197.4" y="739.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="200.4" y="750.0"></text>
</g>
<g>
<title>sock_poll (1 samples, 0.04%)</title><rect x="197.9" y="755.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="200.9" y="766.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (4 samples, 0.16%)</title><rect x="198.4" y="787.0" width="1.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="201.4" y="798.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (4 samples, 0.16%)</title><rect x="198.4" y="771.0" width="1.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="201.4" y="782.0"></text>
</g>
<g>
<title>schedule (4 samples, 0.16%)</title><rect x="198.4" y="755.0" width="1.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="201.4" y="766.0"></text>
</g>
<g>
<title>__schedule (4 samples, 0.16%)</title><rect x="198.4" y="739.0" width="1.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="201.4" y="750.0"></text>
</g>
<g>
<title>finish_task_switch (3 samples, 0.12%)</title><rect x="198.9" y="723.0" width="1.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="201.9" y="734.0"></text>
</g>
<g>
<title>fput_many (2 samples, 0.08%)</title><rect x="200.3" y="803.0" width="1.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="203.3" y="814.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (1 samples, 0.04%)</title><rect x="201.3" y="803.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="204.3" y="814.0"></text>
</g>
<g>
<title>epoll_wait@plt (1 samples, 0.04%)</title><rect x="201.8" y="883.0" width="0.4" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="204.8" y="894.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (127 samples, 5.20%)</title><rect x="202.2" y="915.0" width="61.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="205.2" y="926.0">one/ni..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (124 samples, 5.08%)</title><rect x="203.2" y="899.0" width="59.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="206.2" y="910.0">one/ni..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (100 samples, 4.09%)</title><rect x="203.2" y="883.0" width="48.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="206.2" y="894.0">one/..</text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (2 samples, 0.08%)</title><rect x="203.7" y="867.0" width="1.0" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="206.7" y="878.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.04%)</title><rect x="204.2" y="851.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="207.2" y="862.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.04%)</title><rect x="204.2" y="835.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="207.2" y="846.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.04%)</title><rect x="204.2" y="819.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="207.2" y="830.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.04%)</title><rect x="204.2" y="803.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="207.2" y="814.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.04%)</title><rect x="204.2" y="787.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="207.2" y="798.0"></text>
</g>
<g>
<title>update_blocked_averages (1 samples, 0.04%)</title><rect x="204.2" y="771.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="207.2" y="782.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.04%)</title><rect x="204.2" y="755.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="207.2" y="766.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (89 samples, 3.64%)</title><rect x="204.7" y="867.0" width="42.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="207.7" y="878.0">one/..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (89 samples, 3.64%)</title><rect x="204.7" y="851.0" width="42.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="207.7" y="862.0">one/..</text>
</g>
<g>
<title>RequestHandler0_entity.handleRequest (84 samples, 3.44%)</title><rect x="205.1" y="835.0" width="40.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="208.1" y="846.0">Req..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (64 samples, 2.62%)</title><rect x="205.1" y="819.0" width="30.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="208.1" y="830.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (62 samples, 2.54%)</title><rect x="205.1" y="803.0" width="30.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="208.1" y="814.0">on..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (1 samples, 0.04%)</title><rect x="205.1" y="787.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="208.1" y="798.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (61 samples, 2.50%)</title><rect x="205.6" y="787.0" width="29.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="208.6" y="798.0">on..</text>
</g>
<g>
<title>one/nio/net/Session.write (61 samples, 2.50%)</title><rect x="205.6" y="771.0" width="29.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="208.6" y="782.0">on..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (1 samples, 0.04%)</title><rect x="205.6" y="755.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="208.6" y="766.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (60 samples, 2.46%)</title><rect x="206.1" y="755.0" width="29.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="209.1" y="766.0">on..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (60 samples, 2.46%)</title><rect x="206.1" y="739.0" width="29.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="209.1" y="750.0">on..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (1 samples, 0.04%)</title><rect x="206.6" y="723.0" width="0.5" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="209.6" y="734.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (1 samples, 0.04%)</title><rect x="206.6" y="707.0" width="0.5" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="209.6" y="718.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (1 samples, 0.04%)</title><rect x="207.1" y="723.0" width="0.5" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="210.1" y="734.0"></text>
</g>
<g>
<title>__send (57 samples, 2.33%)</title><rect x="207.6" y="723.0" width="27.5" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="210.6" y="734.0">_..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (55 samples, 2.25%)</title><rect x="208.5" y="707.0" width="26.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="211.5" y="718.0">e..</text>
</g>
<g>
<title>__x64_sys_sendto (1 samples, 0.04%)</title><rect x="208.5" y="691.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="211.5" y="702.0"></text>
</g>
<g>
<title>do_syscall_64 (54 samples, 2.21%)</title><rect x="209.0" y="691.0" width="26.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="212.0" y="702.0">d..</text>
</g>
<g>
<title>__x64_sys_sendto (53 samples, 2.17%)</title><rect x="209.5" y="675.0" width="25.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="212.5" y="686.0">_..</text>
</g>
<g>
<title>__sys_sendto (53 samples, 2.17%)</title><rect x="209.5" y="659.0" width="25.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="212.5" y="670.0">_..</text>
</g>
<g>
<title>sock_sendmsg (53 samples, 2.17%)</title><rect x="209.5" y="643.0" width="25.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="212.5" y="654.0">s..</text>
</g>
<g>
<title>inet6_sendmsg (52 samples, 2.13%)</title><rect x="209.5" y="627.0" width="25.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="212.5" y="638.0">i..</text>
</g>
<g>
<title>tcp_sendmsg (52 samples, 2.13%)</title><rect x="209.5" y="611.0" width="25.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="212.5" y="622.0">t..</text>
</g>
<g>
<title>_raw_spin_unlock_bh (1 samples, 0.04%)</title><rect x="209.5" y="595.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="212.5" y="606.0"></text>
</g>
<g>
<title>sock_zerocopy_put (1 samples, 0.04%)</title><rect x="210.0" y="595.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="213.0" y="606.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (50 samples, 2.05%)</title><rect x="210.5" y="595.0" width="24.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="213.5" y="606.0">t..</text>
</g>
<g>
<title>sk_stream_alloc_skb (5 samples, 0.20%)</title><rect x="211.4" y="579.0" width="2.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="214.4" y="590.0"></text>
</g>
<g>
<title>__alloc_skb (5 samples, 0.20%)</title><rect x="211.4" y="563.0" width="2.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="214.4" y="574.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.0 (2 samples, 0.08%)</title><rect x="211.4" y="547.0" width="1.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="214.4" y="558.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (2 samples, 0.08%)</title><rect x="211.4" y="531.0" width="1.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="214.4" y="542.0"></text>
</g>
<g>
<title>kmalloc_slab (1 samples, 0.04%)</title><rect x="211.9" y="515.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="214.9" y="526.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (2 samples, 0.08%)</title><rect x="212.4" y="547.0" width="0.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="215.4" y="558.0"></text>
</g>
<g>
<title>ksize (1 samples, 0.04%)</title><rect x="213.3" y="547.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="216.3" y="558.0"></text>
</g>
<g>
<title>__ksize (1 samples, 0.04%)</title><rect x="213.3" y="531.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="216.3" y="542.0"></text>
</g>
<g>
<title>tcp_push (43 samples, 1.76%)</title><rect x="213.8" y="579.0" width="20.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="216.8" y="590.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (43 samples, 1.76%)</title><rect x="213.8" y="563.0" width="20.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="216.8" y="574.0"></text>
</g>
<g>
<title>tcp_write_xmit (43 samples, 1.76%)</title><rect x="213.8" y="547.0" width="20.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="216.8" y="558.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (39 samples, 1.60%)</title><rect x="213.8" y="531.0" width="18.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="216.8" y="542.0"></text>
</g>
<g>
<title>ip_queue_xmit (38 samples, 1.56%)</title><rect x="214.3" y="515.0" width="18.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="217.3" y="526.0"></text>
</g>
<g>
<title>__ip_queue_xmit (38 samples, 1.56%)</title><rect x="214.3" y="499.0" width="18.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="217.3" y="510.0"></text>
</g>
<g>
<title>ip_local_out (38 samples, 1.56%)</title><rect x="214.3" y="483.0" width="18.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="217.3" y="494.0"></text>
</g>
<g>
<title>__ip_local_out (1 samples, 0.04%)</title><rect x="214.3" y="467.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="217.3" y="478.0"></text>
</g>
<g>
<title>ip_send_check (1 samples, 0.04%)</title><rect x="214.3" y="451.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="217.3" y="462.0"></text>
</g>
<g>
<title>ip_output (37 samples, 1.51%)</title><rect x="214.8" y="467.0" width="17.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="217.8" y="478.0"></text>
</g>
<g>
<title>ip_finish_output (37 samples, 1.51%)</title><rect x="214.8" y="451.0" width="17.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="217.8" y="462.0"></text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (1 samples, 0.04%)</title><rect x="214.8" y="435.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="217.8" y="446.0"></text>
</g>
<g>
<title>__ip_finish_output (36 samples, 1.47%)</title><rect x="215.3" y="435.0" width="17.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="218.3" y="446.0"></text>
</g>
<g>
<title>ip_finish_output2 (36 samples, 1.47%)</title><rect x="215.3" y="419.0" width="17.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="218.3" y="430.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (26 samples, 1.06%)</title><rect x="217.2" y="403.0" width="12.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="220.2" y="414.0"></text>
</g>
<g>
<title>do_softirq.part.0 (26 samples, 1.06%)</title><rect x="217.2" y="387.0" width="12.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="220.2" y="398.0"></text>
</g>
<g>
<title>do_softirq_own_stack (26 samples, 1.06%)</title><rect x="217.2" y="371.0" width="12.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="220.2" y="382.0"></text>
</g>
<g>
<title>__softirqentry_text_start (26 samples, 1.06%)</title><rect x="217.2" y="355.0" width="12.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="220.2" y="366.0"></text>
</g>
<g>
<title>__usecs_to_jiffies (1 samples, 0.04%)</title><rect x="218.2" y="339.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="221.2" y="350.0"></text>
</g>
<g>
<title>net_rx_action (23 samples, 0.94%)</title><rect x="218.7" y="339.0" width="11.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="221.7" y="350.0"></text>
</g>
<g>
<title>process_backlog (23 samples, 0.94%)</title><rect x="218.7" y="323.0" width="11.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="221.7" y="334.0"></text>
</g>
<g>
<title>__netif_receive_skb (23 samples, 0.94%)</title><rect x="218.7" y="307.0" width="11.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="221.7" y="318.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (23 samples, 0.94%)</title><rect x="218.7" y="291.0" width="11.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="221.7" y="302.0"></text>
</g>
<g>
<title>__netif_receive_skb_core (2 samples, 0.08%)</title><rect x="218.7" y="275.0" width="0.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="221.7" y="286.0"></text>
</g>
<g>
<title>ip_rcv (21 samples, 0.86%)</title><rect x="219.6" y="275.0" width="10.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="222.6" y="286.0"></text>
</g>
<g>
<title>ip_rcv_finish (21 samples, 0.86%)</title><rect x="219.6" y="259.0" width="10.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="222.6" y="270.0"></text>
</g>
<g>
<title>ip_local_deliver (21 samples, 0.86%)</title><rect x="219.6" y="243.0" width="10.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="222.6" y="254.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (20 samples, 0.82%)</title><rect x="220.1" y="227.0" width="9.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="223.1" y="238.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (20 samples, 0.82%)</title><rect x="220.1" y="211.0" width="9.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="223.1" y="222.0"></text>
</g>
<g>
<title>tcp_v4_rcv (20 samples, 0.82%)</title><rect x="220.1" y="195.0" width="9.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="223.1" y="206.0"></text>
</g>
<g>
<title>__inet_lookup_established (1 samples, 0.04%)</title><rect x="221.6" y="179.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="224.6" y="190.0"></text>
</g>
<g>
<title>inet_ehashfn (1 samples, 0.04%)</title><rect x="222.0" y="179.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="225.0" y="190.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (15 samples, 0.61%)</title><rect x="222.5" y="179.0" width="7.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="225.5" y="190.0"></text>
</g>
<g>
<title>ktime_get_seconds (2 samples, 0.08%)</title><rect x="222.5" y="163.0" width="1.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="225.5" y="174.0"></text>
</g>
<g>
<title>tcp_rcv_established (13 samples, 0.53%)</title><rect x="223.5" y="163.0" width="6.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="226.5" y="174.0"></text>
</g>
<g>
<title>tcp_ack (9 samples, 0.37%)</title><rect x="223.5" y="147.0" width="4.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="226.5" y="158.0"></text>
</g>
<g>
<title>bictcp_acked (1 samples, 0.04%)</title><rect x="224.5" y="131.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="227.5" y="142.0"></text>
</g>
<g>
<title>bictcp_cong_avoid (1 samples, 0.04%)</title><rect x="224.9" y="131.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="227.9" y="142.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (4 samples, 0.16%)</title><rect x="225.4" y="131.0" width="2.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="228.4" y="142.0"></text>
</g>
<g>
<title>__kfree_skb (2 samples, 0.08%)</title><rect x="225.9" y="115.0" width="1.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="228.9" y="126.0"></text>
</g>
<g>
<title>kfree_skbmem (1 samples, 0.04%)</title><rect x="225.9" y="99.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="228.9" y="110.0"></text>
</g>
<g>
<title>kmem_cache_free (1 samples, 0.04%)</title><rect x="225.9" y="83.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="228.9" y="94.0"></text>
</g>
<g>
<title>skb_release_all (1 samples, 0.04%)</title><rect x="226.4" y="99.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="229.4" y="110.0"></text>
</g>
<g>
<title>skb_release_data (1 samples, 0.04%)</title><rect x="226.4" y="83.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="229.4" y="94.0"></text>
</g>
<g>
<title>skb_free_head (1 samples, 0.04%)</title><rect x="226.4" y="67.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="229.4" y="78.0"></text>
</g>
<g>
<title>kfree (1 samples, 0.04%)</title><rect x="226.4" y="51.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="229.4" y="62.0"></text>
</g>
<g>
<title>__slab_free (1 samples, 0.04%)</title><rect x="226.4" y="35.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="229.4" y="46.0"></text>
</g>
<g>
<title>tcp_ack_update_rtt.isra.0 (1 samples, 0.04%)</title><rect x="226.9" y="115.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="229.9" y="126.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (1 samples, 0.04%)</title><rect x="227.4" y="131.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="230.4" y="142.0"></text>
</g>
<g>
<title>tcp_data_ready (4 samples, 0.16%)</title><rect x="227.8" y="147.0" width="2.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="230.8" y="158.0"></text>
</g>
<g>
<title>sock_def_readable (4 samples, 0.16%)</title><rect x="227.8" y="131.0" width="2.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="230.8" y="142.0"></text>
</g>
<g>
<title>__wake_up_sync_key (4 samples, 0.16%)</title><rect x="227.8" y="115.0" width="2.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="230.8" y="126.0"></text>
</g>
<g>
<title>__wake_up_common_lock (4 samples, 0.16%)</title><rect x="227.8" y="99.0" width="2.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="230.8" y="110.0"></text>
</g>
<g>
<title>__lock_text_start (4 samples, 0.16%)</title><rect x="227.8" y="83.0" width="2.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="230.8" y="94.0"></text>
</g>
<g>
<title>dev_queue_xmit (6 samples, 0.25%)</title><rect x="229.8" y="403.0" width="2.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="232.8" y="414.0"></text>
</g>
<g>
<title>__dev_queue_xmit (6 samples, 0.25%)</title><rect x="229.8" y="387.0" width="2.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="232.8" y="398.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (4 samples, 0.16%)</title><rect x="230.7" y="371.0" width="2.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="233.7" y="382.0"></text>
</g>
<g>
<title>loopback_xmit (4 samples, 0.16%)</title><rect x="230.7" y="355.0" width="2.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="233.7" y="366.0"></text>
</g>
<g>
<title>eth_type_trans (1 samples, 0.04%)</title><rect x="230.7" y="339.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="233.7" y="350.0"></text>
</g>
<g>
<title>netif_rx (2 samples, 0.08%)</title><rect x="231.2" y="339.0" width="1.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="234.2" y="350.0"></text>
</g>
<g>
<title>netif_rx_internal (2 samples, 0.08%)</title><rect x="231.2" y="323.0" width="1.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="234.2" y="334.0"></text>
</g>
<g>
<title>enqueue_to_backlog (2 samples, 0.08%)</title><rect x="231.2" y="307.0" width="1.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="234.2" y="318.0"></text>
</g>
<g>
<title>netif_rx_internal (1 samples, 0.04%)</title><rect x="232.2" y="339.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="235.2" y="350.0"></text>
</g>
<g>
<title>jiffies_to_usecs (1 samples, 0.04%)</title><rect x="232.7" y="531.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="235.7" y="542.0"></text>
</g>
<g>
<title>read_tsc (1 samples, 0.04%)</title><rect x="233.2" y="531.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="236.2" y="542.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (1 samples, 0.04%)</title><rect x="233.6" y="531.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="236.6" y="542.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (1 samples, 0.04%)</title><rect x="234.1" y="531.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="237.1" y="542.0"></text>
</g>
<g>
<title>sk_reset_timer (1 samples, 0.04%)</title><rect x="234.1" y="515.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="237.1" y="526.0"></text>
</g>
<g>
<title>mod_timer (1 samples, 0.04%)</title><rect x="234.1" y="499.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="237.1" y="510.0"></text>
</g>
<g>
<title>security_socket_sendmsg (1 samples, 0.04%)</title><rect x="234.6" y="627.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="237.6" y="638.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (2 samples, 0.08%)</title><rect x="235.1" y="803.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="238.1" y="814.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (2 samples, 0.08%)</title><rect x="236.0" y="819.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="239.0" y="830.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (2 samples, 0.08%)</title><rect x="236.0" y="803.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="239.0" y="814.0"></text>
</g>
<g>
<title>jbyte_arraycopy (1 samples, 0.04%)</title><rect x="236.0" y="787.0" width="0.5" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="239.0" y="798.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.04%)</title><rect x="236.5" y="787.0" width="0.5" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="239.5" y="798.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivlev/ServiceController.entity (18 samples, 0.74%)</title><rect x="237.0" y="819.0" width="8.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="240.0" y="830.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivlev/ServiceController.getResponse (18 samples, 0.74%)</title><rect x="237.0" y="803.0" width="8.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="240.0" y="814.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivlev/ServiceController.methodPut (18 samples, 0.74%)</title><rect x="237.0" y="787.0" width="8.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="240.0" y="798.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.upsert (18 samples, 0.74%)</title><rect x="237.0" y="771.0" width="8.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="240.0" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock (4 samples, 0.16%)</title><rect x="237.0" y="755.0" width="1.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="240.0" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireShared (4 samples, 0.16%)</title><rect x="237.0" y="739.0" width="1.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="240.0" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryAcquireShared (2 samples, 0.08%)</title><rect x="238.0" y="723.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="241.0" y="734.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.set (1 samples, 0.04%)</title><rect x="238.5" y="707.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="241.5" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/MemTable.upsert (14 samples, 0.57%)</title><rect x="238.9" y="755.0" width="6.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="241.9" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.put (14 samples, 0.57%)</title><rect x="238.9" y="739.0" width="6.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="241.9" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (13 samples, 0.53%)</title><rect x="238.9" y="723.0" width="6.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="241.9" y="734.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (1 samples, 0.04%)</title><rect x="238.9" y="707.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="241.9" y="718.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (1 samples, 0.04%)</title><rect x="238.9" y="691.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="241.9" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Index.&lt;init&gt; (5 samples, 0.20%)</title><rect x="239.4" y="707.0" width="2.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="242.4" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Node.&lt;init&gt; (2 samples, 0.08%)</title><rect x="241.8" y="707.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="244.8" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (5 samples, 0.20%)</title><rect x="242.8" y="707.0" width="2.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="245.8" y="718.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (5 samples, 0.20%)</title><rect x="242.8" y="691.0" width="2.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="245.8" y="702.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (5 samples, 0.20%)</title><rect x="242.8" y="675.0" width="2.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="245.8" y="686.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (5 samples, 0.20%)</title><rect x="242.8" y="659.0" width="2.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="245.8" y="670.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (1 samples, 0.04%)</title><rect x="244.3" y="643.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="247.3" y="654.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (1 samples, 0.04%)</title><rect x="244.3" y="627.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="247.3" y="638.0"></text>
</g>
<g>
<title>vectorizedMismatch (1 samples, 0.04%)</title><rect x="244.7" y="643.0" width="0.5" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="247.7" y="654.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.04%)</title><rect x="245.2" y="723.0" width="0.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="248.2" y="734.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.04%)</title><rect x="245.2" y="707.0" width="0.5" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="248.2" y="718.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.04%)</title><rect x="245.2" y="691.0" width="0.5" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="248.2" y="702.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.04%)</title><rect x="245.7" y="835.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="248.7" y="846.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (1 samples, 0.04%)</title><rect x="246.2" y="835.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="249.2" y="846.0"></text>
</g>
<g>
<title>java/util/HashMap.get (1 samples, 0.04%)</title><rect x="246.2" y="819.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="249.2" y="830.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (1 samples, 0.04%)</title><rect x="246.2" y="803.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="249.2" y="814.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (1 samples, 0.04%)</title><rect x="246.2" y="787.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="249.2" y="798.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (1 samples, 0.04%)</title><rect x="246.2" y="771.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="249.2" y="782.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (2 samples, 0.08%)</title><rect x="246.7" y="835.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="249.7" y="846.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.04%)</title><rect x="246.7" y="819.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="249.7" y="830.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.04%)</title><rect x="246.7" y="803.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="249.7" y="814.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (1 samples, 0.04%)</title><rect x="247.2" y="819.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="250.2" y="830.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (4 samples, 0.16%)</title><rect x="247.6" y="867.0" width="2.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="250.6" y="878.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (2 samples, 0.08%)</title><rect x="247.6" y="851.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="250.6" y="862.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (1 samples, 0.04%)</title><rect x="247.6" y="835.0" width="0.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="250.6" y="846.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_objArray(int, int, Thread*) (1 samples, 0.04%)</title><rect x="247.6" y="819.0" width="0.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="250.6" y="830.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.04%)</title><rect x="247.6" y="803.0" width="0.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="250.6" y="814.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.04%)</title><rect x="247.6" y="787.0" width="0.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="250.6" y="798.0"></text>
</g>
<g>
<title>ObjArrayAllocator::initialize(HeapWord*) const (1 samples, 0.04%)</title><rect x="247.6" y="771.0" width="0.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="250.6" y="782.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.04%)</title><rect x="248.1" y="835.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="251.1" y="846.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.04%)</title><rect x="248.1" y="819.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="251.1" y="830.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (1 samples, 0.04%)</title><rect x="248.1" y="803.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="251.1" y="814.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.04%)</title><rect x="248.6" y="851.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="251.6" y="862.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.04%)</title><rect x="248.6" y="835.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="251.6" y="846.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.startsWith (1 samples, 0.04%)</title><rect x="249.1" y="851.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="252.1" y="862.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (1 samples, 0.04%)</title><rect x="249.6" y="867.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="252.6" y="878.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (3 samples, 0.12%)</title><rect x="250.1" y="867.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="253.1" y="878.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (24 samples, 0.98%)</title><rect x="251.5" y="883.0" width="11.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="254.5" y="894.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (23 samples, 0.94%)</title><rect x="252.0" y="867.0" width="11.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="255.0" y="878.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (6 samples, 0.25%)</title><rect x="253.0" y="851.0" width="2.9" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="256.0" y="862.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (1 samples, 0.04%)</title><rect x="253.9" y="835.0" width="0.5" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="256.9" y="846.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (1 samples, 0.04%)</title><rect x="254.4" y="835.0" width="0.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="257.4" y="846.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (2 samples, 0.08%)</title><rect x="254.9" y="835.0" width="1.0" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="257.9" y="846.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (2 samples, 0.08%)</title><rect x="254.9" y="819.0" width="1.0" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="257.9" y="830.0"></text>
</g>
<g>
<title>ResourceMark::reset_to_mark() (1 samples, 0.04%)</title><rect x="255.4" y="803.0" width="0.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="258.4" y="814.0"></text>
</g>
<g>
<title>recv (15 samples, 0.61%)</title><rect x="255.9" y="851.0" width="7.2" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="258.9" y="862.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (13 samples, 0.53%)</title><rect x="256.8" y="835.0" width="6.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="259.8" y="846.0"></text>
</g>
<g>
<title>do_syscall_64 (13 samples, 0.53%)</title><rect x="256.8" y="819.0" width="6.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="259.8" y="830.0"></text>
</g>
<g>
<title>__x64_sys_recvfrom (11 samples, 0.45%)</title><rect x="257.8" y="803.0" width="5.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="260.8" y="814.0"></text>
</g>
<g>
<title>__sys_recvfrom (11 samples, 0.45%)</title><rect x="257.8" y="787.0" width="5.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="260.8" y="798.0"></text>
</g>
<g>
<title>sock_recvmsg (6 samples, 0.25%)</title><rect x="258.3" y="771.0" width="2.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="261.3" y="782.0"></text>
</g>
<g>
<title>inet6_recvmsg (6 samples, 0.25%)</title><rect x="258.3" y="755.0" width="2.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="261.3" y="766.0"></text>
</g>
<g>
<title>tcp_recvmsg (6 samples, 0.25%)</title><rect x="258.3" y="739.0" width="2.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="261.3" y="750.0"></text>
</g>
<g>
<title>__kfree_skb (1 samples, 0.04%)</title><rect x="258.8" y="723.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="261.8" y="734.0"></text>
</g>
<g>
<title>skb_release_head_state (1 samples, 0.04%)</title><rect x="258.8" y="707.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="261.8" y="718.0"></text>
</g>
<g>
<title>tcp_cleanup_rbuf (2 samples, 0.08%)</title><rect x="259.2" y="723.0" width="1.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="262.2" y="734.0"></text>
</g>
<g>
<title>tcp_rcv_space_adjust (1 samples, 0.04%)</title><rect x="260.2" y="723.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="263.2" y="734.0"></text>
</g>
<g>
<title>tcp_release_cb (1 samples, 0.04%)</title><rect x="260.7" y="723.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="263.7" y="734.0"></text>
</g>
<g>
<title>sockfd_lookup_light (4 samples, 0.16%)</title><rect x="261.2" y="771.0" width="1.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="264.2" y="782.0"></text>
</g>
<g>
<title>__fdget (1 samples, 0.04%)</title><rect x="261.2" y="755.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="264.2" y="766.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.04%)</title><rect x="261.2" y="739.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="264.2" y="750.0"></text>
</g>
<g>
<title>__fget (1 samples, 0.04%)</title><rect x="261.2" y="723.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="264.2" y="734.0"></text>
</g>
<g>
<title>__fget_light (3 samples, 0.12%)</title><rect x="261.6" y="755.0" width="1.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="264.6" y="766.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (1 samples, 0.04%)</title><rect x="263.1" y="899.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="266.1" y="910.0"></text>
</g>
<g>
<title>[NIO Selector #2 tid=4851] (424 samples, 17.36%)</title><rect x="263.6" y="947.0" width="204.8" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="266.6" y="958.0">[NIO Selector #2 tid=4851]</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (424 samples, 17.36%)</title><rect x="263.6" y="931.0" width="204.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="266.6" y="942.0">one/nio/server/SelectorThre..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (77 samples, 3.15%)</title><rect x="264.1" y="915.0" width="37.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="267.1" y="926.0">one..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (64 samples, 2.62%)</title><rect x="270.3" y="899.0" width="31.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="273.3" y="910.0">on..</text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (1 samples, 0.04%)</title><rect x="274.2" y="883.0" width="0.5" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="277.2" y="894.0"></text>
</g>
<g>
<title>clock_gettime (13 samples, 0.53%)</title><rect x="274.7" y="883.0" width="6.3" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="277.7" y="894.0"></text>
</g>
<g>
<title>clock_gettime (4 samples, 0.16%)</title><rect x="279.0" y="867.0" width="2.0" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="282.0" y="878.0"></text>
</g>
<g>
<title>[vdso] (4 samples, 0.16%)</title><rect x="279.0" y="851.0" width="2.0" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="282.0" y="862.0"></text>
</g>
<g>
<title>epoll_wait (42 samples, 1.72%)</title><rect x="281.0" y="883.0" width="20.3" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="284.0" y="894.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (31 samples, 1.27%)</title><rect x="286.3" y="867.0" width="15.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="289.3" y="878.0"></text>
</g>
<g>
<title>__x64_sys_epoll_wait (1 samples, 0.04%)</title><rect x="286.3" y="851.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="289.3" y="862.0"></text>
</g>
<g>
<title>do_syscall_64 (30 samples, 1.23%)</title><rect x="286.8" y="851.0" width="14.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="289.8" y="862.0"></text>
</g>
<g>
<title>__x64_sys_epoll_wait (28 samples, 1.15%)</title><rect x="287.7" y="835.0" width="13.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="290.7" y="846.0"></text>
</g>
<g>
<title>do_epoll_wait (28 samples, 1.15%)</title><rect x="287.7" y="819.0" width="13.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="290.7" y="830.0"></text>
</g>
<g>
<title>__fdget (1 samples, 0.04%)</title><rect x="287.7" y="803.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="290.7" y="814.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.04%)</title><rect x="287.7" y="787.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="290.7" y="798.0"></text>
</g>
<g>
<title>__fget (1 samples, 0.04%)</title><rect x="287.7" y="771.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="290.7" y="782.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.04%)</title><rect x="288.2" y="803.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="291.2" y="814.0"></text>
</g>
<g>
<title>ep_poll (24 samples, 0.98%)</title><rect x="288.7" y="803.0" width="11.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="291.7" y="814.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.0 (10 samples, 0.41%)</title><rect x="289.7" y="787.0" width="4.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="292.7" y="798.0"></text>
</g>
<g>
<title>ep_send_events_proc (8 samples, 0.33%)</title><rect x="290.1" y="771.0" width="3.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="293.1" y="782.0"></text>
</g>
<g>
<title>ep_item_poll.isra.0 (7 samples, 0.29%)</title><rect x="290.6" y="755.0" width="3.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="293.6" y="766.0"></text>
</g>
<g>
<title>sock_poll (6 samples, 0.25%)</title><rect x="291.1" y="739.0" width="2.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="294.1" y="750.0"></text>
</g>
<g>
<title>tcp_poll (2 samples, 0.08%)</title><rect x="292.1" y="723.0" width="0.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="295.1" y="734.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (2 samples, 0.08%)</title><rect x="293.0" y="723.0" width="1.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="296.0" y="734.0"></text>
</g>
<g>
<title>mutex_lock (1 samples, 0.04%)</title><rect x="294.0" y="771.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="297.0" y="782.0"></text>
</g>
<g>
<title>rcu_all_qs (1 samples, 0.04%)</title><rect x="294.0" y="755.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="297.0" y="766.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (12 samples, 0.49%)</title><rect x="294.5" y="787.0" width="5.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="297.5" y="798.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (12 samples, 0.49%)</title><rect x="294.5" y="771.0" width="5.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="297.5" y="782.0"></text>
</g>
<g>
<title>schedule (12 samples, 0.49%)</title><rect x="294.5" y="755.0" width="5.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="297.5" y="766.0"></text>
</g>
<g>
<title>__schedule (12 samples, 0.49%)</title><rect x="294.5" y="739.0" width="5.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="297.5" y="750.0"></text>
</g>
<g>
<title>finish_task_switch (12 samples, 0.49%)</title><rect x="294.5" y="723.0" width="5.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="297.5" y="734.0"></text>
</g>
<g>
<title>fput_many (2 samples, 0.08%)</title><rect x="300.3" y="803.0" width="1.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="303.3" y="814.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (346 samples, 14.16%)</title><rect x="301.3" y="915.0" width="167.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="304.3" y="926.0">one/nio/net/Session.p..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (346 samples, 14.16%)</title><rect x="301.3" y="899.0" width="167.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="304.3" y="910.0">one/nio/http/HttpSess..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (269 samples, 11.01%)</title><rect x="301.7" y="883.0" width="130.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="304.7" y="894.0">one/nio/http/Htt..</text>
</g>
<g>
<title>jlong_disjoint_arraycopy (2 samples, 0.08%)</title><rect x="302.7" y="867.0" width="1.0" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="305.7" y="878.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (238 samples, 9.74%)</title><rect x="303.7" y="867.0" width="114.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="306.7" y="878.0">one/nio/http/H..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (238 samples, 9.74%)</title><rect x="303.7" y="851.0" width="114.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="306.7" y="862.0">one/nio/http/H..</text>
</g>
<g>
<title>RequestHandler0_entity.handleRequest (234 samples, 9.58%)</title><rect x="304.6" y="835.0" width="113.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="307.6" y="846.0">RequestHandler..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (184 samples, 7.53%)</title><rect x="304.6" y="819.0" width="88.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="307.6" y="830.0">one/nio/ht..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (180 samples, 7.37%)</title><rect x="304.6" y="803.0" width="87.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="307.6" y="814.0">one/nio/ht..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (6 samples, 0.25%)</title><rect x="305.1" y="787.0" width="2.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="308.1" y="798.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (5 samples, 0.20%)</title><rect x="305.6" y="771.0" width="2.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="308.6" y="782.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (5 samples, 0.20%)</title><rect x="305.6" y="755.0" width="2.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="308.6" y="766.0"></text>
</g>
<g>
<title>java/lang/String.charAt (5 samples, 0.20%)</title><rect x="305.6" y="739.0" width="2.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="308.6" y="750.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (173 samples, 7.08%)</title><rect x="308.0" y="787.0" width="83.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="311.0" y="798.0">one/nio/n..</text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.04%)</title><rect x="308.0" y="771.0" width="0.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="311.0" y="782.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (1 samples, 0.04%)</title><rect x="308.0" y="755.0" width="0.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="311.0" y="766.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (1 samples, 0.04%)</title><rect x="308.0" y="739.0" width="0.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="311.0" y="750.0"></text>
</g>
<g>
<title>AllocTracer::send_allocation_in_new_tlab(Klass*, HeapWord*, unsigned long, unsigned long, Thread*) (1 samples, 0.04%)</title><rect x="308.0" y="723.0" width="0.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="311.0" y="734.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (172 samples, 7.04%)</title><rect x="308.5" y="771.0" width="83.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="311.5" y="782.0">one/nio/n..</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (172 samples, 7.04%)</title><rect x="308.5" y="755.0" width="83.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="311.5" y="766.0">one/nio/n..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (172 samples, 7.04%)</title><rect x="308.5" y="739.0" width="83.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="311.5" y="750.0">one/nio/n..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (3 samples, 0.12%)</title><rect x="309.0" y="723.0" width="1.4" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="312.0" y="734.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (3 samples, 0.12%)</title><rect x="309.0" y="707.0" width="1.4" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="312.0" y="718.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (2 samples, 0.08%)</title><rect x="309.5" y="691.0" width="0.9" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="312.5" y="702.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (2 samples, 0.08%)</title><rect x="310.4" y="723.0" width="1.0" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="313.4" y="734.0"></text>
</g>
<g>
<title>__send (165 samples, 6.75%)</title><rect x="311.4" y="723.0" width="79.7" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="314.4" y="734.0">__send</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (160 samples, 6.55%)</title><rect x="313.8" y="707.0" width="77.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="316.8" y="718.0">entry_SYS..</text>
</g>
<g>
<title>do_syscall_64 (160 samples, 6.55%)</title><rect x="313.8" y="691.0" width="77.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="316.8" y="702.0">do_syscal..</text>
</g>
<g>
<title>__sys_sendto (1 samples, 0.04%)</title><rect x="314.8" y="675.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="317.8" y="686.0"></text>
</g>
<g>
<title>__x64_sys_sendto (157 samples, 6.43%)</title><rect x="315.3" y="675.0" width="75.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="318.3" y="686.0">__x64_sy..</text>
</g>
<g>
<title>__sys_sendto (156 samples, 6.39%)</title><rect x="315.3" y="659.0" width="75.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="318.3" y="670.0">__sys_se..</text>
</g>
<g>
<title>inet6_sendmsg (1 samples, 0.04%)</title><rect x="315.3" y="643.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="318.3" y="654.0"></text>
</g>
<g>
<title>sock_sendmsg (154 samples, 6.30%)</title><rect x="315.7" y="643.0" width="74.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="318.7" y="654.0">sock_sen..</text>
</g>
<g>
<title>inet6_sendmsg (154 samples, 6.30%)</title><rect x="315.7" y="627.0" width="74.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="318.7" y="638.0">inet6_se..</text>
</g>
<g>
<title>release_sock (1 samples, 0.04%)</title><rect x="316.2" y="611.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="319.2" y="622.0"></text>
</g>
<g>
<title>tcp_sendmsg (151 samples, 6.18%)</title><rect x="316.7" y="611.0" width="72.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="319.7" y="622.0">tcp_send..</text>
</g>
<g>
<title>release_sock (2 samples, 0.08%)</title><rect x="316.7" y="595.0" width="1.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="319.7" y="606.0"></text>
</g>
<g>
<title>sk_page_frag_refill (2 samples, 0.08%)</title><rect x="317.7" y="595.0" width="0.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="320.7" y="606.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (146 samples, 5.98%)</title><rect x="318.6" y="595.0" width="70.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="321.6" y="606.0">tcp_send..</text>
</g>
<g>
<title>__check_object_size (2 samples, 0.08%)</title><rect x="321.1" y="579.0" width="0.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="324.1" y="590.0"></text>
</g>
<g>
<title>__virt_addr_valid (1 samples, 0.04%)</title><rect x="321.5" y="563.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="324.5" y="574.0"></text>
</g>
<g>
<title>_copy_from_iter_full (1 samples, 0.04%)</title><rect x="322.0" y="579.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="325.0" y="590.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (1 samples, 0.04%)</title><rect x="322.0" y="563.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="325.0" y="574.0"></text>
</g>
<g>
<title>check_stack_object (2 samples, 0.08%)</title><rect x="322.5" y="579.0" width="1.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="325.5" y="590.0"></text>
</g>
<g>
<title>sk_page_frag_refill (3 samples, 0.12%)</title><rect x="323.5" y="579.0" width="1.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="326.5" y="590.0"></text>
</g>
<g>
<title>skb_page_frag_refill (3 samples, 0.12%)</title><rect x="323.5" y="563.0" width="1.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="326.5" y="574.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (9 samples, 0.37%)</title><rect x="324.9" y="579.0" width="4.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="327.9" y="590.0"></text>
</g>
<g>
<title>__alloc_skb (8 samples, 0.33%)</title><rect x="325.4" y="563.0" width="3.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="328.4" y="574.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.0 (2 samples, 0.08%)</title><rect x="325.4" y="547.0" width="1.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="328.4" y="558.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (2 samples, 0.08%)</title><rect x="325.4" y="531.0" width="1.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="328.4" y="542.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (3 samples, 0.12%)</title><rect x="326.4" y="547.0" width="1.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="329.4" y="558.0"></text>
</g>
<g>
<title>ksize (3 samples, 0.12%)</title><rect x="327.8" y="547.0" width="1.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="330.8" y="558.0"></text>
</g>
<g>
<title>__ksize (3 samples, 0.12%)</title><rect x="327.8" y="531.0" width="1.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="330.8" y="542.0"></text>
</g>
<g>
<title>tcp_push (121 samples, 4.95%)</title><rect x="329.3" y="579.0" width="58.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="332.3" y="590.0">tcp_push</text>
</g>
<g>
<title>__tcp_push_pending_frames (120 samples, 4.91%)</title><rect x="329.3" y="563.0" width="57.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="332.3" y="574.0">__tcp_..</text>
</g>
<g>
<title>tcp_write_xmit (120 samples, 4.91%)</title><rect x="329.3" y="547.0" width="57.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="332.3" y="558.0">tcp_wr..</text>
</g>
<g>
<title>__tcp_transmit_skb (112 samples, 4.58%)</title><rect x="330.7" y="531.0" width="54.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="333.7" y="542.0">__tcp..</text>
</g>
<g>
<title>__skb_clone (1 samples, 0.04%)</title><rect x="331.2" y="515.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="334.2" y="526.0"></text>
</g>
<g>
<title>ip_queue_xmit (109 samples, 4.46%)</title><rect x="331.7" y="515.0" width="52.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="334.7" y="526.0">ip_qu..</text>
</g>
<g>
<title>__ip_queue_xmit (109 samples, 4.46%)</title><rect x="331.7" y="499.0" width="52.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="334.7" y="510.0">__ip_..</text>
</g>
<g>
<title>__ip_local_out (1 samples, 0.04%)</title><rect x="331.7" y="483.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="334.7" y="494.0"></text>
</g>
<g>
<title>ip_local_out (107 samples, 4.38%)</title><rect x="332.2" y="483.0" width="51.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="335.2" y="494.0">ip_lo..</text>
</g>
<g>
<title>ip_output (107 samples, 4.38%)</title><rect x="332.2" y="467.0" width="51.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="335.2" y="478.0">ip_ou..</text>
</g>
<g>
<title>__ip_finish_output (1 samples, 0.04%)</title><rect x="332.2" y="451.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="335.2" y="462.0"></text>
</g>
<g>
<title>ip_finish_output (106 samples, 4.34%)</title><rect x="332.7" y="451.0" width="51.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="335.7" y="462.0">ip_fi..</text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (2 samples, 0.08%)</title><rect x="332.7" y="435.0" width="0.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="335.7" y="446.0"></text>
</g>
<g>
<title>__ip_finish_output (104 samples, 4.26%)</title><rect x="333.6" y="435.0" width="50.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="336.6" y="446.0">__ip_..</text>
</g>
<g>
<title>__local_bh_enable_ip (1 samples, 0.04%)</title><rect x="334.6" y="419.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="337.6" y="430.0"></text>
</g>
<g>
<title>ip_finish_output2 (101 samples, 4.13%)</title><rect x="335.1" y="419.0" width="48.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="338.1" y="430.0">ip_f..</text>
</g>
<g>
<title>__local_bh_enable_ip (87 samples, 3.56%)</title><rect x="337.5" y="403.0" width="42.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="340.5" y="414.0">__lo..</text>
</g>
<g>
<title>do_softirq.part.0 (87 samples, 3.56%)</title><rect x="337.5" y="387.0" width="42.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="340.5" y="398.0">do_s..</text>
</g>
<g>
<title>do_softirq_own_stack (87 samples, 3.56%)</title><rect x="337.5" y="371.0" width="42.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="340.5" y="382.0">do_s..</text>
</g>
<g>
<title>__softirqentry_text_start (86 samples, 3.52%)</title><rect x="337.5" y="355.0" width="41.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="340.5" y="366.0">__s..</text>
</g>
<g>
<title>__kfree_skb_flush (1 samples, 0.04%)</title><rect x="338.9" y="339.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="341.9" y="350.0"></text>
</g>
<g>
<title>__usecs_to_jiffies (1 samples, 0.04%)</title><rect x="339.4" y="339.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="342.4" y="350.0"></text>
</g>
<g>
<title>net_rx_action (80 samples, 3.27%)</title><rect x="339.9" y="339.0" width="38.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="342.9" y="350.0">net..</text>
</g>
<g>
<title>__usecs_to_jiffies (1 samples, 0.04%)</title><rect x="340.4" y="323.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="343.4" y="334.0"></text>
</g>
<g>
<title>process_backlog (78 samples, 3.19%)</title><rect x="340.9" y="323.0" width="37.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="343.9" y="334.0">pro..</text>
</g>
<g>
<title>__netif_receive_skb (78 samples, 3.19%)</title><rect x="340.9" y="307.0" width="37.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="343.9" y="318.0">__n..</text>
</g>
<g>
<title>__netif_receive_skb_one_core (77 samples, 3.15%)</title><rect x="340.9" y="291.0" width="37.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="343.9" y="302.0">__n..</text>
</g>
<g>
<title>__netif_receive_skb_core (6 samples, 0.25%)</title><rect x="341.3" y="275.0" width="2.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="344.3" y="286.0"></text>
</g>
<g>
<title>ip_rcv (68 samples, 2.78%)</title><rect x="344.2" y="275.0" width="32.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="347.2" y="286.0">ip..</text>
</g>
<g>
<title>ip_rcv_finish (67 samples, 2.74%)</title><rect x="344.2" y="259.0" width="32.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="347.2" y="270.0">ip..</text>
</g>
<g>
<title>ip_local_deliver (65 samples, 2.66%)</title><rect x="344.2" y="243.0" width="31.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="347.2" y="254.0">ip..</text>
</g>
<g>
<title>ip_local_deliver_finish (64 samples, 2.62%)</title><rect x="344.2" y="227.0" width="31.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="347.2" y="238.0">ip..</text>
</g>
<g>
<title>ip_protocol_deliver_rcu (63 samples, 2.58%)</title><rect x="344.2" y="211.0" width="30.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="347.2" y="222.0">ip..</text>
</g>
<g>
<title>tcp_v4_rcv (63 samples, 2.58%)</title><rect x="344.2" y="195.0" width="30.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="347.2" y="206.0">tc..</text>
</g>
<g>
<title>__inet_lookup_established (4 samples, 0.16%)</title><rect x="346.2" y="179.0" width="1.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="349.2" y="190.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (5 samples, 0.20%)</title><rect x="348.1" y="179.0" width="2.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="351.1" y="190.0"></text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (2 samples, 0.08%)</title><rect x="348.1" y="163.0" width="1.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="351.1" y="174.0"></text>
</g>
<g>
<title>apparmor_socket_sock_rcv_skb (2 samples, 0.08%)</title><rect x="349.1" y="163.0" width="0.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="352.1" y="174.0"></text>
</g>
<g>
<title>security_sock_rcv_skb (1 samples, 0.04%)</title><rect x="350.0" y="163.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="353.0" y="174.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (50 samples, 2.05%)</title><rect x="350.5" y="179.0" width="24.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="353.5" y="190.0">t..</text>
</g>
<g>
<title>tcp_data_ready (1 samples, 0.04%)</title><rect x="350.5" y="163.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="353.5" y="174.0"></text>
</g>
<g>
<title>tcp_rcv_established (49 samples, 2.01%)</title><rect x="351.0" y="163.0" width="23.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="354.0" y="174.0">t..</text>
</g>
<g>
<title>__tcp_ack_snd_check (2 samples, 0.08%)</title><rect x="352.5" y="147.0" width="0.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="355.5" y="158.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (2 samples, 0.08%)</title><rect x="352.5" y="131.0" width="0.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="355.5" y="142.0"></text>
</g>
<g>
<title>mod_timer (1 samples, 0.04%)</title><rect x="352.5" y="115.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="355.5" y="126.0"></text>
</g>
<g>
<title>sk_reset_timer (1 samples, 0.04%)</title><rect x="352.9" y="115.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="355.9" y="126.0"></text>
</g>
<g>
<title>sock_def_readable (2 samples, 0.08%)</title><rect x="353.4" y="147.0" width="1.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="356.4" y="158.0"></text>
</g>
<g>
<title>tcp_ack (19 samples, 0.78%)</title><rect x="354.4" y="147.0" width="9.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="357.4" y="158.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (12 samples, 0.49%)</title><rect x="355.8" y="131.0" width="5.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="358.8" y="142.0"></text>
</g>
<g>
<title>__kfree_skb (9 samples, 0.37%)</title><rect x="356.8" y="115.0" width="4.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="359.8" y="126.0"></text>
</g>
<g>
<title>kfree_skbmem (3 samples, 0.12%)</title><rect x="356.8" y="99.0" width="1.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="359.8" y="110.0"></text>
</g>
<g>
<title>kmem_cache_free (3 samples, 0.12%)</title><rect x="356.8" y="83.0" width="1.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="359.8" y="94.0"></text>
</g>
<g>
<title>__slab_free (1 samples, 0.04%)</title><rect x="357.8" y="67.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="360.8" y="78.0"></text>
</g>
<g>
<title>skb_release_all (6 samples, 0.25%)</title><rect x="358.3" y="99.0" width="2.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="361.3" y="110.0"></text>
</g>
<g>
<title>skb_release_data (6 samples, 0.25%)</title><rect x="358.3" y="83.0" width="2.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="361.3" y="94.0"></text>
</g>
<g>
<title>skb_free_head (3 samples, 0.12%)</title><rect x="359.7" y="67.0" width="1.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="362.7" y="78.0"></text>
</g>
<g>
<title>kfree (2 samples, 0.08%)</title><rect x="360.2" y="51.0" width="1.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="363.2" y="62.0"></text>
</g>
<g>
<title>__slab_free (1 samples, 0.04%)</title><rect x="360.7" y="35.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="363.7" y="46.0"></text>
</g>
<g>
<title>jiffies_to_usecs (1 samples, 0.04%)</title><rect x="361.2" y="115.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="364.2" y="126.0"></text>
</g>
<g>
<title>tcp_rack_update_reo_wnd (1 samples, 0.04%)</title><rect x="361.6" y="131.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="364.6" y="142.0"></text>
</g>
<g>
<title>tcp_rate_gen (1 samples, 0.04%)</title><rect x="362.1" y="131.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="365.1" y="142.0"></text>
</g>
<g>
<title>tcp_rate_skb_delivered (1 samples, 0.04%)</title><rect x="362.6" y="131.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="365.6" y="142.0"></text>
</g>
<g>
<title>tcp_update_pacing_rate (1 samples, 0.04%)</title><rect x="363.1" y="131.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="366.1" y="142.0"></text>
</g>
<g>
<title>tcp_data_ready (20 samples, 0.82%)</title><rect x="363.6" y="147.0" width="9.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="366.6" y="158.0"></text>
</g>
<g>
<title>sock_def_readable (20 samples, 0.82%)</title><rect x="363.6" y="131.0" width="9.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="366.6" y="142.0"></text>
</g>
<g>
<title>__wake_up_common_lock (1 samples, 0.04%)</title><rect x="363.6" y="115.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="366.6" y="126.0"></text>
</g>
<g>
<title>__wake_up_sync_key (19 samples, 0.78%)</title><rect x="364.0" y="115.0" width="9.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="367.0" y="126.0"></text>
</g>
<g>
<title>__wake_up_common_lock (19 samples, 0.78%)</title><rect x="364.0" y="99.0" width="9.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="367.0" y="110.0"></text>
</g>
<g>
<title>__lock_text_start (19 samples, 0.78%)</title><rect x="364.0" y="83.0" width="9.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="367.0" y="94.0"></text>
</g>
<g>
<title>tcp_event_data_recv (2 samples, 0.08%)</title><rect x="373.2" y="147.0" width="1.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="376.2" y="158.0"></text>
</g>
<g>
<title>tcp_rearm_rto (1 samples, 0.04%)</title><rect x="374.2" y="147.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="377.2" y="158.0"></text>
</g>
<g>
<title>raw_local_deliver (1 samples, 0.04%)</title><rect x="374.7" y="211.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="377.7" y="222.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (1 samples, 0.04%)</title><rect x="375.2" y="227.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="378.2" y="238.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (1 samples, 0.04%)</title><rect x="375.6" y="243.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="378.6" y="254.0"></text>
</g>
<g>
<title>ip_rcv_finish_core.isra.0 (1 samples, 0.04%)</title><rect x="376.1" y="243.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="379.1" y="254.0"></text>
</g>
<g>
<title>ip_rcv_finish_core.isra.0 (1 samples, 0.04%)</title><rect x="376.6" y="259.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="379.6" y="270.0"></text>
</g>
<g>
<title>ip_rcv_finish (2 samples, 0.08%)</title><rect x="377.1" y="275.0" width="1.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="380.1" y="286.0"></text>
</g>
<g>
<title>ip_rcv (1 samples, 0.04%)</title><rect x="378.1" y="291.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="381.1" y="302.0"></text>
</g>
<g>
<title>process_backlog (1 samples, 0.04%)</title><rect x="378.5" y="339.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="381.5" y="350.0"></text>
</g>
<g>
<title>net_rx_action (1 samples, 0.04%)</title><rect x="379.0" y="355.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="382.0" y="366.0"></text>
</g>
<g>
<title>dev_queue_xmit (9 samples, 0.37%)</title><rect x="379.5" y="403.0" width="4.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="382.5" y="414.0"></text>
</g>
<g>
<title>__dev_queue_xmit (9 samples, 0.37%)</title><rect x="379.5" y="387.0" width="4.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="382.5" y="398.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (5 samples, 0.20%)</title><rect x="381.0" y="371.0" width="2.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="384.0" y="382.0"></text>
</g>
<g>
<title>loopback_xmit (2 samples, 0.08%)</title><rect x="381.4" y="355.0" width="1.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="384.4" y="366.0"></text>
</g>
<g>
<title>netif_rx (2 samples, 0.08%)</title><rect x="381.4" y="339.0" width="1.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="384.4" y="350.0"></text>
</g>
<g>
<title>netif_rx_internal (2 samples, 0.08%)</title><rect x="381.4" y="323.0" width="1.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="384.4" y="334.0"></text>
</g>
<g>
<title>enqueue_to_backlog (2 samples, 0.08%)</title><rect x="381.4" y="307.0" width="1.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="384.4" y="318.0"></text>
</g>
<g>
<title>netif_rx (1 samples, 0.04%)</title><rect x="382.4" y="355.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="385.4" y="366.0"></text>
</g>
<g>
<title>tcp_wfree (1 samples, 0.04%)</title><rect x="382.9" y="355.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="385.9" y="366.0"></text>
</g>
<g>
<title>validate_xmit_xfrm (1 samples, 0.04%)</title><rect x="383.4" y="371.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="386.4" y="382.0"></text>
</g>
<g>
<title>ipv4_dst_check (1 samples, 0.04%)</title><rect x="383.9" y="483.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="386.9" y="494.0"></text>
</g>
<g>
<title>skb_clone (1 samples, 0.04%)</title><rect x="384.3" y="515.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="387.3" y="526.0"></text>
</g>
<g>
<title>__skb_clone (1 samples, 0.04%)</title><rect x="384.3" y="499.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="387.3" y="510.0"></text>
</g>
<g>
<title>__copy_skb_header (1 samples, 0.04%)</title><rect x="384.3" y="483.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="387.3" y="494.0"></text>
</g>
<g>
<title>skb_push (1 samples, 0.04%)</title><rect x="384.8" y="531.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="387.8" y="542.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (1 samples, 0.04%)</title><rect x="385.3" y="531.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="388.3" y="542.0"></text>
</g>
<g>
<title>tcp_rearm_rto (1 samples, 0.04%)</title><rect x="385.3" y="515.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="388.3" y="526.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (3 samples, 0.12%)</title><rect x="385.8" y="531.0" width="1.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="388.8" y="542.0"></text>
</g>
<g>
<title>tcp_write_xmit (1 samples, 0.04%)</title><rect x="387.2" y="563.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="390.2" y="574.0"></text>
</g>
<g>
<title>tcp_rate_check_app_limited (1 samples, 0.04%)</title><rect x="387.7" y="579.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="390.7" y="590.0"></text>
</g>
<g>
<title>tcp_send_mss (2 samples, 0.08%)</title><rect x="388.2" y="579.0" width="1.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="391.2" y="590.0"></text>
</g>
<g>
<title>tcp_current_mss (2 samples, 0.08%)</title><rect x="388.2" y="563.0" width="1.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="391.2" y="574.0"></text>
</g>
<g>
<title>ipv4_mtu (2 samples, 0.08%)</title><rect x="388.2" y="547.0" width="1.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="391.2" y="558.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (1 samples, 0.04%)</title><rect x="389.2" y="595.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="392.2" y="606.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (1 samples, 0.04%)</title><rect x="389.6" y="611.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="392.6" y="622.0"></text>
</g>
<g>
<title>sockfd_lookup_light (1 samples, 0.04%)</title><rect x="390.1" y="643.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="393.1" y="654.0"></text>
</g>
<g>
<title>__fdget (1 samples, 0.04%)</title><rect x="390.1" y="627.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="393.1" y="638.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.04%)</title><rect x="390.1" y="611.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="393.1" y="622.0"></text>
</g>
<g>
<title>__fget (1 samples, 0.04%)</title><rect x="390.1" y="595.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="393.1" y="606.0"></text>
</g>
<g>
<title>fput (1 samples, 0.04%)</title><rect x="390.6" y="659.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="393.6" y="670.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (1 samples, 0.04%)</title><rect x="391.1" y="723.0" width="0.5" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="394.1" y="734.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (4 samples, 0.16%)</title><rect x="391.6" y="803.0" width="1.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="394.6" y="814.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (2 samples, 0.08%)</title><rect x="392.5" y="787.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="395.5" y="798.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (2 samples, 0.08%)</title><rect x="392.5" y="771.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="395.5" y="782.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (6 samples, 0.25%)</title><rect x="393.5" y="819.0" width="2.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="396.5" y="830.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (6 samples, 0.25%)</title><rect x="393.5" y="803.0" width="2.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="396.5" y="814.0"></text>
</g>
<g>
<title>java/lang/String.substring (3 samples, 0.12%)</title><rect x="394.5" y="787.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="397.5" y="798.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (3 samples, 0.12%)</title><rect x="394.5" y="771.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="397.5" y="782.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (1 samples, 0.04%)</title><rect x="395.4" y="755.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="398.4" y="766.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.04%)</title><rect x="395.9" y="787.0" width="0.5" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="398.9" y="798.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivlev/ServiceController.entity (44 samples, 1.80%)</title><rect x="396.4" y="819.0" width="21.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="399.4" y="830.0">r..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (2 samples, 0.08%)</title><rect x="396.4" y="803.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="399.4" y="814.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (2 samples, 0.08%)</title><rect x="396.4" y="787.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="399.4" y="798.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.04%)</title><rect x="396.9" y="771.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="399.9" y="782.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.04%)</title><rect x="396.9" y="755.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="399.9" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivlev/ServiceController.getResponse (42 samples, 1.72%)</title><rect x="397.4" y="803.0" width="20.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="400.4" y="814.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivlev/ServiceController.methodPut (42 samples, 1.72%)</title><rect x="397.4" y="787.0" width="20.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="400.4" y="798.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.04%)</title><rect x="397.4" y="771.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="400.4" y="782.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.04%)</title><rect x="397.4" y="755.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="400.4" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.upsert (41 samples, 1.68%)</title><rect x="397.9" y="771.0" width="19.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="400.9" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock (7 samples, 0.29%)</title><rect x="398.3" y="755.0" width="3.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="401.3" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireShared (7 samples, 0.29%)</title><rect x="398.3" y="739.0" width="3.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="401.3" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryAcquireShared (6 samples, 0.25%)</title><rect x="398.8" y="723.0" width="2.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="401.8" y="734.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.set (4 samples, 0.16%)</title><rect x="398.8" y="707.0" width="2.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="401.8" y="718.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.set (4 samples, 0.16%)</title><rect x="398.8" y="691.0" width="2.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="401.8" y="702.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap$Entry.&lt;init&gt; (3 samples, 0.12%)</title><rect x="399.3" y="675.0" width="1.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="402.3" y="686.0"></text>
</g>
<g>
<title>java/lang/ref/WeakReference.&lt;init&gt; (3 samples, 0.12%)</title><rect x="399.3" y="659.0" width="1.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="402.3" y="670.0"></text>
</g>
<g>
<title>java/lang/ref/Reference.&lt;init&gt; (3 samples, 0.12%)</title><rect x="399.3" y="643.0" width="1.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="402.3" y="654.0"></text>
</g>
<g>
<title>java/lang/ref/Reference.&lt;init&gt; (3 samples, 0.12%)</title><rect x="399.3" y="627.0" width="1.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="402.3" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryReleaseShared (2 samples, 0.08%)</title><rect x="399.3" y="611.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="402.3" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/MemTable.upsert (1 samples, 0.04%)</title><rect x="400.3" y="611.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="403.3" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$NonfairSync.readerShouldBlock (1 samples, 0.04%)</title><rect x="400.8" y="707.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="403.8" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.apparentlyFirstQueuedIsExclusive (1 samples, 0.04%)</title><rect x="400.8" y="691.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="403.8" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.fullTryAcquireShared (1 samples, 0.04%)</title><rect x="401.2" y="707.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="404.2" y="718.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.set (1 samples, 0.04%)</title><rect x="401.2" y="691.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="404.2" y="702.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.set (1 samples, 0.04%)</title><rect x="401.2" y="675.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="404.2" y="686.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap$Entry.&lt;init&gt; (1 samples, 0.04%)</title><rect x="401.2" y="659.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="404.2" y="670.0"></text>
</g>
<g>
<title>java/lang/ref/WeakReference.&lt;init&gt; (1 samples, 0.04%)</title><rect x="401.2" y="643.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="404.2" y="654.0"></text>
</g>
<g>
<title>java/lang/ref/Reference.&lt;init&gt; (1 samples, 0.04%)</title><rect x="401.2" y="627.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="404.2" y="638.0"></text>
</g>
<g>
<title>java/lang/ref/Reference.&lt;init&gt; (1 samples, 0.04%)</title><rect x="401.2" y="611.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="404.2" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.unlock (1 samples, 0.04%)</title><rect x="401.7" y="755.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="404.7" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.releaseShared (1 samples, 0.04%)</title><rect x="401.7" y="739.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="404.7" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryReleaseShared (1 samples, 0.04%)</title><rect x="401.7" y="723.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="404.7" y="734.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.remove (1 samples, 0.04%)</title><rect x="401.7" y="707.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="404.7" y="718.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.remove (1 samples, 0.04%)</title><rect x="401.7" y="691.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="404.7" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/MemTable.upsert (32 samples, 1.31%)</title><rect x="402.2" y="755.0" width="15.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="405.2" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.put (32 samples, 1.31%)</title><rect x="402.2" y="739.0" width="15.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="405.2" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (32 samples, 1.31%)</title><rect x="402.2" y="723.0" width="15.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="405.2" y="734.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (3 samples, 0.12%)</title><rect x="402.2" y="707.0" width="1.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="405.2" y="718.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (3 samples, 0.12%)</title><rect x="402.2" y="691.0" width="1.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="405.2" y="702.0"></text>
</g>
<g>
<title>java/util/Objects.requireNonNull (3 samples, 0.12%)</title><rect x="402.2" y="675.0" width="1.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="405.2" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Index.&lt;init&gt; (18 samples, 0.74%)</title><rect x="403.7" y="707.0" width="8.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="406.7" y="718.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (6 samples, 0.25%)</title><rect x="409.5" y="691.0" width="2.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="412.5" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Node.&lt;init&gt; (3 samples, 0.12%)</title><rect x="412.3" y="707.0" width="1.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="415.3" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (8 samples, 0.33%)</title><rect x="413.8" y="707.0" width="3.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="416.8" y="718.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (8 samples, 0.33%)</title><rect x="413.8" y="691.0" width="3.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="416.8" y="702.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (8 samples, 0.33%)</title><rect x="413.8" y="675.0" width="3.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="416.8" y="686.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (8 samples, 0.33%)</title><rect x="413.8" y="659.0" width="3.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="416.8" y="670.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (2 samples, 0.08%)</title><rect x="416.2" y="643.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="419.2" y="654.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (2 samples, 0.08%)</title><rect x="416.2" y="627.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="419.2" y="638.0"></text>
</g>
<g>
<title>vectorizedMismatch (1 samples, 0.04%)</title><rect x="417.2" y="643.0" width="0.5" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="420.2" y="654.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (2 samples, 0.08%)</title><rect x="417.7" y="835.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="420.7" y="846.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.04%)</title><rect x="417.7" y="819.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="420.7" y="830.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.04%)</title><rect x="417.7" y="803.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="420.7" y="814.0"></text>
</g>
<g>
<title>jbyte_arraycopy (1 samples, 0.04%)</title><rect x="417.7" y="787.0" width="0.4" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="420.7" y="798.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (1 samples, 0.04%)</title><rect x="418.1" y="819.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="421.1" y="830.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (9 samples, 0.37%)</title><rect x="418.6" y="867.0" width="4.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="421.6" y="878.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (5 samples, 0.20%)</title><rect x="418.6" y="851.0" width="2.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="421.6" y="862.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (5 samples, 0.20%)</title><rect x="418.6" y="835.0" width="2.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="421.6" y="846.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (5 samples, 0.20%)</title><rect x="418.6" y="819.0" width="2.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="421.6" y="830.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (5 samples, 0.20%)</title><rect x="418.6" y="803.0" width="2.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="421.6" y="814.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (3 samples, 0.12%)</title><rect x="419.6" y="787.0" width="1.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="422.6" y="798.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.startsWith (4 samples, 0.16%)</title><rect x="421.0" y="851.0" width="2.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="424.0" y="862.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (4 samples, 0.16%)</title><rect x="423.0" y="867.0" width="1.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="426.0" y="878.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (4 samples, 0.16%)</title><rect x="423.0" y="851.0" width="1.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="426.0" y="862.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (4 samples, 0.16%)</title><rect x="423.0" y="835.0" width="1.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="426.0" y="846.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (14 samples, 0.57%)</title><rect x="424.9" y="867.0" width="6.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="427.9" y="878.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (7 samples, 0.29%)</title><rect x="428.3" y="851.0" width="3.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="431.3" y="862.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (76 samples, 3.11%)</title><rect x="431.7" y="883.0" width="36.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="434.7" y="894.0">one..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (73 samples, 2.99%)</title><rect x="433.1" y="867.0" width="35.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="436.1" y="878.0">one..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (6 samples, 0.25%)</title><rect x="434.1" y="851.0" width="2.9" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="437.1" y="862.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (1 samples, 0.04%)</title><rect x="434.6" y="835.0" width="0.5" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="437.6" y="846.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (2 samples, 0.08%)</title><rect x="435.1" y="835.0" width="0.9" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="438.1" y="846.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (2 samples, 0.08%)</title><rect x="436.0" y="835.0" width="1.0" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="439.0" y="846.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (2 samples, 0.08%)</title><rect x="436.0" y="819.0" width="1.0" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="439.0" y="830.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (4 samples, 0.16%)</title><rect x="437.0" y="851.0" width="1.9" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="440.0" y="862.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (3 samples, 0.12%)</title><rect x="438.9" y="851.0" width="1.5" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="441.9" y="862.0"></text>
</g>
<g>
<title>recv (58 samples, 2.37%)</title><rect x="440.4" y="851.0" width="28.0" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="443.4" y="862.0">recv</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (48 samples, 1.96%)</title><rect x="445.2" y="835.0" width="23.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="448.2" y="846.0">e..</text>
</g>
<g>
<title>__x64_sys_recvfrom (1 samples, 0.04%)</title><rect x="445.2" y="819.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="448.2" y="830.0"></text>
</g>
<g>
<title>do_syscall_64 (47 samples, 1.92%)</title><rect x="445.7" y="819.0" width="22.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="448.7" y="830.0">d..</text>
</g>
<g>
<title>__x64_sys_recvfrom (39 samples, 1.60%)</title><rect x="449.5" y="803.0" width="18.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="452.5" y="814.0"></text>
</g>
<g>
<title>__sys_recvfrom (37 samples, 1.51%)</title><rect x="449.5" y="787.0" width="17.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="452.5" y="798.0"></text>
</g>
<g>
<title>fput_many (1 samples, 0.04%)</title><rect x="450.0" y="771.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="453.0" y="782.0"></text>
</g>
<g>
<title>sock_recvmsg (30 samples, 1.23%)</title><rect x="450.5" y="771.0" width="14.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="453.5" y="782.0"></text>
</g>
<g>
<title>apparmor_socket_recvmsg (1 samples, 0.04%)</title><rect x="450.5" y="755.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="453.5" y="766.0"></text>
</g>
<g>
<title>inet6_recvmsg (27 samples, 1.11%)</title><rect x="451.0" y="755.0" width="13.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="454.0" y="766.0"></text>
</g>
<g>
<title>tcp_recvmsg (27 samples, 1.11%)</title><rect x="451.0" y="739.0" width="13.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="454.0" y="750.0"></text>
</g>
<g>
<title>__kfree_skb (13 samples, 0.53%)</title><rect x="452.4" y="723.0" width="6.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="455.4" y="734.0"></text>
</g>
<g>
<title>skb_release_all (13 samples, 0.53%)</title><rect x="452.4" y="707.0" width="6.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="455.4" y="718.0"></text>
</g>
<g>
<title>dst_release (2 samples, 0.08%)</title><rect x="452.4" y="691.0" width="1.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="455.4" y="702.0"></text>
</g>
<g>
<title>skb_release_data (1 samples, 0.04%)</title><rect x="453.4" y="691.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="456.4" y="702.0"></text>
</g>
<g>
<title>skb_release_head_state (8 samples, 0.33%)</title><rect x="453.9" y="691.0" width="3.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="456.9" y="702.0"></text>
</g>
<g>
<title>dst_release (7 samples, 0.29%)</title><rect x="454.4" y="675.0" width="3.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="457.4" y="686.0"></text>
</g>
<g>
<title>sock_rfree (2 samples, 0.08%)</title><rect x="457.8" y="691.0" width="0.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="460.8" y="702.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (1 samples, 0.04%)</title><rect x="458.7" y="723.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="461.7" y="734.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (1 samples, 0.04%)</title><rect x="459.2" y="723.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="462.2" y="734.0"></text>
</g>
<g>
<title>kfree_skbmem (1 samples, 0.04%)</title><rect x="459.7" y="723.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="462.7" y="734.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (4 samples, 0.16%)</title><rect x="460.2" y="723.0" width="1.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="463.2" y="734.0"></text>
</g>
<g>
<title>__skb_datagram_iter (4 samples, 0.16%)</title><rect x="460.2" y="707.0" width="1.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="463.2" y="718.0"></text>
</g>
<g>
<title>simple_copy_to_iter (4 samples, 0.16%)</title><rect x="460.2" y="691.0" width="1.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="463.2" y="702.0"></text>
</g>
<g>
<title>__check_object_size (2 samples, 0.08%)</title><rect x="460.7" y="675.0" width="0.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="463.7" y="686.0"></text>
</g>
<g>
<title>__virt_addr_valid (2 samples, 0.08%)</title><rect x="460.7" y="659.0" width="0.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="463.7" y="670.0"></text>
</g>
<g>
<title>_copy_to_iter (1 samples, 0.04%)</title><rect x="461.6" y="675.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="464.6" y="686.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (1 samples, 0.04%)</title><rect x="461.6" y="659.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="464.6" y="670.0"></text>
</g>
<g>
<title>skb_release_all (1 samples, 0.04%)</title><rect x="462.1" y="723.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="465.1" y="734.0"></text>
</g>
<g>
<title>tcp_rcv_space_adjust (2 samples, 0.08%)</title><rect x="462.6" y="723.0" width="0.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="465.6" y="734.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (2 samples, 0.08%)</title><rect x="462.6" y="707.0" width="0.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="465.6" y="718.0"></text>
</g>
<g>
<title>ktime_get (1 samples, 0.04%)</title><rect x="462.6" y="691.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="465.6" y="702.0"></text>
</g>
<g>
<title>read_tsc (1 samples, 0.04%)</title><rect x="463.1" y="691.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="466.1" y="702.0"></text>
</g>
<g>
<title>tcp_release_cb (1 samples, 0.04%)</title><rect x="463.5" y="723.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="466.5" y="734.0"></text>
</g>
<g>
<title>security_socket_recvmsg (2 samples, 0.08%)</title><rect x="464.0" y="755.0" width="1.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="467.0" y="766.0"></text>
</g>
<g>
<title>apparmor_socket_recvmsg (2 samples, 0.08%)</title><rect x="464.0" y="739.0" width="1.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="467.0" y="750.0"></text>
</g>
<g>
<title>aa_sk_perm (2 samples, 0.08%)</title><rect x="464.0" y="723.0" width="1.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="467.0" y="734.0"></text>
</g>
<g>
<title>sockfd_lookup_light (5 samples, 0.20%)</title><rect x="465.0" y="771.0" width="2.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="468.0" y="782.0"></text>
</g>
<g>
<title>__fdget (3 samples, 0.12%)</title><rect x="465.0" y="755.0" width="1.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="468.0" y="766.0"></text>
</g>
<g>
<title>__fget_light (3 samples, 0.12%)</title><rect x="465.0" y="739.0" width="1.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="468.0" y="750.0"></text>
</g>
<g>
<title>__fget (3 samples, 0.12%)</title><rect x="465.0" y="723.0" width="1.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="468.0" y="734.0"></text>
</g>
<g>
<title>__fget_light (2 samples, 0.08%)</title><rect x="466.4" y="755.0" width="1.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="469.4" y="766.0"></text>
</g>
<g>
<title>import_single_range (2 samples, 0.08%)</title><rect x="467.4" y="787.0" width="1.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="470.4" y="798.0"></text>
</g>
<g>
<title>[NIO Selector #3 tid=4852] (157 samples, 6.43%)</title><rect x="468.4" y="947.0" width="75.8" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="471.4" y="958.0">[NIO Sel..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (157 samples, 6.43%)</title><rect x="468.4" y="931.0" width="75.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="471.4" y="942.0">one/nio/..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (28 samples, 1.15%)</title><rect x="468.9" y="915.0" width="13.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="471.9" y="926.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (28 samples, 1.15%)</title><rect x="468.9" y="899.0" width="13.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="471.9" y="910.0"></text>
</g>
<g>
<title>clock_gettime (8 samples, 0.33%)</title><rect x="469.3" y="883.0" width="3.9" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="472.3" y="894.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.04%)</title><rect x="472.2" y="867.0" width="0.5" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="475.2" y="878.0"></text>
</g>
<g>
<title>clock_gettime (1 samples, 0.04%)</title><rect x="472.7" y="867.0" width="0.5" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="475.7" y="878.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.04%)</title><rect x="472.7" y="851.0" width="0.5" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="475.7" y="862.0"></text>
</g>
<g>
<title>epoll_wait (19 samples, 0.78%)</title><rect x="473.2" y="883.0" width="9.2" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="476.2" y="894.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (16 samples, 0.65%)</title><rect x="474.7" y="867.0" width="7.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="477.7" y="878.0"></text>
</g>
<g>
<title>do_syscall_64 (16 samples, 0.65%)</title><rect x="474.7" y="851.0" width="7.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="477.7" y="862.0"></text>
</g>
<g>
<title>__x64_sys_epoll_wait (12 samples, 0.49%)</title><rect x="476.6" y="835.0" width="5.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="479.6" y="846.0"></text>
</g>
<g>
<title>do_epoll_wait (12 samples, 0.49%)</title><rect x="476.6" y="819.0" width="5.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="479.6" y="830.0"></text>
</g>
<g>
<title>__fdget (1 samples, 0.04%)</title><rect x="476.6" y="803.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="479.6" y="814.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.04%)</title><rect x="476.6" y="787.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="479.6" y="798.0"></text>
</g>
<g>
<title>__fget (1 samples, 0.04%)</title><rect x="476.6" y="771.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="479.6" y="782.0"></text>
</g>
<g>
<title>ep_poll (9 samples, 0.37%)</title><rect x="477.1" y="803.0" width="4.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="480.1" y="814.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.0 (2 samples, 0.08%)</title><rect x="477.6" y="787.0" width="0.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="480.6" y="798.0"></text>
</g>
<g>
<title>ep_send_events_proc (2 samples, 0.08%)</title><rect x="477.6" y="771.0" width="0.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="480.6" y="782.0"></text>
</g>
<g>
<title>ep_item_poll.isra.0 (2 samples, 0.08%)</title><rect x="477.6" y="755.0" width="0.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="480.6" y="766.0"></text>
</g>
<g>
<title>sock_poll (2 samples, 0.08%)</title><rect x="477.6" y="739.0" width="0.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="480.6" y="750.0"></text>
</g>
<g>
<title>tcp_poll (1 samples, 0.04%)</title><rect x="478.0" y="723.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="481.0" y="734.0"></text>
</g>
<g>
<title>ep_send_events_proc (1 samples, 0.04%)</title><rect x="478.5" y="787.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="481.5" y="798.0"></text>
</g>
<g>
<title>mutex_unlock (1 samples, 0.04%)</title><rect x="479.0" y="787.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="482.0" y="798.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (3 samples, 0.12%)</title><rect x="479.5" y="787.0" width="1.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="482.5" y="798.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (3 samples, 0.12%)</title><rect x="479.5" y="771.0" width="1.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="482.5" y="782.0"></text>
</g>
<g>
<title>__schedule (1 samples, 0.04%)</title><rect x="479.5" y="755.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="482.5" y="766.0"></text>
</g>
<g>
<title>schedule (2 samples, 0.08%)</title><rect x="480.0" y="755.0" width="0.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="483.0" y="766.0"></text>
</g>
<g>
<title>__schedule (2 samples, 0.08%)</title><rect x="480.0" y="739.0" width="0.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="483.0" y="750.0"></text>
</g>
<g>
<title>finish_task_switch (2 samples, 0.08%)</title><rect x="480.0" y="723.0" width="0.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="483.0" y="734.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (1 samples, 0.04%)</title><rect x="480.9" y="787.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="483.9" y="798.0"></text>
</g>
<g>
<title>fput_many (2 samples, 0.08%)</title><rect x="481.4" y="803.0" width="1.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="484.4" y="814.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (127 samples, 5.20%)</title><rect x="482.4" y="915.0" width="61.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="485.4" y="926.0">one/ni..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (122 samples, 4.99%)</title><rect x="484.8" y="899.0" width="58.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="487.8" y="910.0">one/ni..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (99 samples, 4.05%)</title><rect x="484.8" y="883.0" width="47.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="487.8" y="894.0">one/..</text>
</g>
<g>
<title>jlong_disjoint_arraycopy (1 samples, 0.04%)</title><rect x="484.8" y="867.0" width="0.5" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="487.8" y="878.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (97 samples, 3.97%)</title><rect x="485.3" y="867.0" width="46.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="488.3" y="878.0">one/..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (97 samples, 3.97%)</title><rect x="485.3" y="851.0" width="46.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="488.3" y="862.0">one/..</text>
</g>
<g>
<title>RequestHandler0_entity.handleRequest (95 samples, 3.89%)</title><rect x="485.3" y="835.0" width="45.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="488.3" y="846.0">Requ..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (69 samples, 2.82%)</title><rect x="485.3" y="819.0" width="33.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="488.3" y="830.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (67 samples, 2.74%)</title><rect x="485.8" y="803.0" width="32.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="488.8" y="814.0">on..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (3 samples, 0.12%)</title><rect x="485.8" y="787.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="488.8" y="798.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (1 samples, 0.04%)</title><rect x="486.7" y="771.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="489.7" y="782.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (1 samples, 0.04%)</title><rect x="486.7" y="755.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="489.7" y="766.0"></text>
</g>
<g>
<title>java/lang/String.charAt (1 samples, 0.04%)</title><rect x="486.7" y="739.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="489.7" y="750.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.04%)</title><rect x="486.7" y="723.0" width="0.5" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="489.7" y="734.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (64 samples, 2.62%)</title><rect x="487.2" y="787.0" width="30.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="490.2" y="798.0">on..</text>
</g>
<g>
<title>one/nio/net/Session.write (64 samples, 2.62%)</title><rect x="487.2" y="771.0" width="30.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="490.2" y="782.0">on..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (1 samples, 0.04%)</title><rect x="487.7" y="755.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="490.7" y="766.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (62 samples, 2.54%)</title><rect x="488.2" y="755.0" width="29.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="491.2" y="766.0">on..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (62 samples, 2.54%)</title><rect x="488.2" y="739.0" width="29.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="491.2" y="750.0">on..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (1 samples, 0.04%)</title><rect x="488.2" y="723.0" width="0.5" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="491.2" y="734.0"></text>
</g>
<g>
<title>__send (60 samples, 2.46%)</title><rect x="488.7" y="723.0" width="28.9" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="491.7" y="734.0">__..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (58 samples, 2.37%)</title><rect x="489.6" y="707.0" width="28.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="492.6" y="718.0">en..</text>
</g>
<g>
<title>do_syscall_64 (58 samples, 2.37%)</title><rect x="489.6" y="691.0" width="28.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="492.6" y="702.0">do..</text>
</g>
<g>
<title>__x64_sys_sendto (58 samples, 2.37%)</title><rect x="489.6" y="675.0" width="28.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="492.6" y="686.0">__..</text>
</g>
<g>
<title>__sys_sendto (58 samples, 2.37%)</title><rect x="489.6" y="659.0" width="28.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="492.6" y="670.0">__..</text>
</g>
<g>
<title>sock_sendmsg (57 samples, 2.33%)</title><rect x="489.6" y="643.0" width="27.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="492.6" y="654.0">s..</text>
</g>
<g>
<title>apparmor_socket_sendmsg (1 samples, 0.04%)</title><rect x="489.6" y="627.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="492.6" y="638.0"></text>
</g>
<g>
<title>inet6_sendmsg (56 samples, 2.29%)</title><rect x="490.1" y="627.0" width="27.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="493.1" y="638.0">i..</text>
</g>
<g>
<title>tcp_sendmsg (56 samples, 2.29%)</title><rect x="490.1" y="611.0" width="27.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="493.1" y="622.0">t..</text>
</g>
<g>
<title>tcp_sendmsg_locked (56 samples, 2.29%)</title><rect x="490.1" y="595.0" width="27.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="493.1" y="606.0">t..</text>
</g>
<g>
<title>_copy_from_iter_full (2 samples, 0.08%)</title><rect x="491.1" y="579.0" width="0.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="494.1" y="590.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (1 samples, 0.04%)</title><rect x="491.1" y="563.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="494.1" y="574.0"></text>
</g>
<g>
<title>iov_iter_advance (1 samples, 0.04%)</title><rect x="491.6" y="563.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="494.6" y="574.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (2 samples, 0.08%)</title><rect x="492.0" y="579.0" width="1.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="495.0" y="590.0"></text>
</g>
<g>
<title>__alloc_skb (2 samples, 0.08%)</title><rect x="492.0" y="563.0" width="1.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="495.0" y="574.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.0 (1 samples, 0.04%)</title><rect x="492.0" y="547.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="495.0" y="558.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (1 samples, 0.04%)</title><rect x="492.0" y="531.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="495.0" y="542.0"></text>
</g>
<g>
<title>ksize (1 samples, 0.04%)</title><rect x="492.5" y="547.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="495.5" y="558.0"></text>
</g>
<g>
<title>__ksize (1 samples, 0.04%)</title><rect x="492.5" y="531.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="495.5" y="542.0"></text>
</g>
<g>
<title>tcp_push (47 samples, 1.92%)</title><rect x="493.0" y="579.0" width="22.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="496.0" y="590.0">t..</text>
</g>
<g>
<title>__tcp_push_pending_frames (46 samples, 1.88%)</title><rect x="493.0" y="563.0" width="22.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="496.0" y="574.0">_..</text>
</g>
<g>
<title>tcp_small_queue_check.isra.0 (1 samples, 0.04%)</title><rect x="493.0" y="547.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="496.0" y="558.0"></text>
</g>
<g>
<title>tcp_write_xmit (45 samples, 1.84%)</title><rect x="493.5" y="547.0" width="21.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="496.5" y="558.0">t..</text>
</g>
<g>
<title>__tcp_transmit_skb (41 samples, 1.68%)</title><rect x="494.0" y="531.0" width="19.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="497.0" y="542.0"></text>
</g>
<g>
<title>ip_queue_xmit (40 samples, 1.64%)</title><rect x="494.0" y="515.0" width="19.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="497.0" y="526.0"></text>
</g>
<g>
<title>__ip_queue_xmit (40 samples, 1.64%)</title><rect x="494.0" y="499.0" width="19.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="497.0" y="510.0"></text>
</g>
<g>
<title>__sk_dst_check (1 samples, 0.04%)</title><rect x="494.0" y="483.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="497.0" y="494.0"></text>
</g>
<g>
<title>ip_local_out (39 samples, 1.60%)</title><rect x="494.5" y="483.0" width="18.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="497.5" y="494.0"></text>
</g>
<g>
<title>__ip_local_out (1 samples, 0.04%)</title><rect x="494.5" y="467.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="497.5" y="478.0"></text>
</g>
<g>
<title>ip_send_check (1 samples, 0.04%)</title><rect x="494.5" y="451.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="497.5" y="462.0"></text>
</g>
<g>
<title>ip_output (38 samples, 1.56%)</title><rect x="494.9" y="467.0" width="18.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="497.9" y="478.0"></text>
</g>
<g>
<title>ip_finish_output (38 samples, 1.56%)</title><rect x="494.9" y="451.0" width="18.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="497.9" y="462.0"></text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (1 samples, 0.04%)</title><rect x="495.4" y="435.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="498.4" y="446.0"></text>
</g>
<g>
<title>__ip_finish_output (36 samples, 1.47%)</title><rect x="495.9" y="435.0" width="17.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="498.9" y="446.0"></text>
</g>
<g>
<title>ip_finish_output2 (36 samples, 1.47%)</title><rect x="495.9" y="419.0" width="17.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="498.9" y="430.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (31 samples, 1.27%)</title><rect x="495.9" y="403.0" width="15.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="498.9" y="414.0"></text>
</g>
<g>
<title>do_softirq.part.0 (31 samples, 1.27%)</title><rect x="495.9" y="387.0" width="15.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="498.9" y="398.0"></text>
</g>
<g>
<title>do_softirq_own_stack (31 samples, 1.27%)</title><rect x="495.9" y="371.0" width="15.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="498.9" y="382.0"></text>
</g>
<g>
<title>__softirqentry_text_start (31 samples, 1.27%)</title><rect x="495.9" y="355.0" width="15.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="498.9" y="366.0"></text>
</g>
<g>
<title>net_rx_action (30 samples, 1.23%)</title><rect x="495.9" y="339.0" width="14.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="498.9" y="350.0"></text>
</g>
<g>
<title>process_backlog (30 samples, 1.23%)</title><rect x="495.9" y="323.0" width="14.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="498.9" y="334.0"></text>
</g>
<g>
<title>__netif_receive_skb (29 samples, 1.19%)</title><rect x="496.4" y="307.0" width="14.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="499.4" y="318.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (29 samples, 1.19%)</title><rect x="496.4" y="291.0" width="14.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="499.4" y="302.0"></text>
</g>
<g>
<title>ip_rcv (29 samples, 1.19%)</title><rect x="496.4" y="275.0" width="14.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="499.4" y="286.0"></text>
</g>
<g>
<title>ip_rcv_finish (29 samples, 1.19%)</title><rect x="496.4" y="259.0" width="14.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="499.4" y="270.0"></text>
</g>
<g>
<title>ip_local_deliver (28 samples, 1.15%)</title><rect x="496.4" y="243.0" width="13.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="499.4" y="254.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (28 samples, 1.15%)</title><rect x="496.4" y="227.0" width="13.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="499.4" y="238.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (28 samples, 1.15%)</title><rect x="496.4" y="211.0" width="13.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="499.4" y="222.0"></text>
</g>
<g>
<title>raw_local_deliver (1 samples, 0.04%)</title><rect x="496.4" y="195.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="499.4" y="206.0"></text>
</g>
<g>
<title>tcp_v4_rcv (27 samples, 1.11%)</title><rect x="496.9" y="195.0" width="13.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="499.9" y="206.0"></text>
</g>
<g>
<title>__inet_lookup_established (2 samples, 0.08%)</title><rect x="497.8" y="179.0" width="1.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="500.8" y="190.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (1 samples, 0.04%)</title><rect x="498.8" y="179.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="501.8" y="190.0"></text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (1 samples, 0.04%)</title><rect x="498.8" y="163.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="501.8" y="174.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (22 samples, 0.90%)</title><rect x="499.3" y="179.0" width="10.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="502.3" y="190.0"></text>
</g>
<g>
<title>tcp_data_ready (1 samples, 0.04%)</title><rect x="499.3" y="163.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="502.3" y="174.0"></text>
</g>
<g>
<title>tcp_rcv_established (21 samples, 0.86%)</title><rect x="499.8" y="163.0" width="10.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="502.8" y="174.0"></text>
</g>
<g>
<title>__tcp_ack_snd_check (1 samples, 0.04%)</title><rect x="499.8" y="147.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="502.8" y="158.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (1 samples, 0.04%)</title><rect x="499.8" y="131.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="502.8" y="142.0"></text>
</g>
<g>
<title>sk_reset_timer (1 samples, 0.04%)</title><rect x="499.8" y="115.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="502.8" y="126.0"></text>
</g>
<g>
<title>mod_timer (1 samples, 0.04%)</title><rect x="499.8" y="99.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="502.8" y="110.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.04%)</title><rect x="499.8" y="83.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="502.8" y="94.0"></text>
</g>
<g>
<title>tcp_ack (8 samples, 0.33%)</title><rect x="500.3" y="147.0" width="3.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="503.3" y="158.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (4 samples, 0.16%)</title><rect x="502.2" y="131.0" width="1.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="505.2" y="142.0"></text>
</g>
<g>
<title>__kfree_skb (2 samples, 0.08%)</title><rect x="502.7" y="115.0" width="0.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="505.7" y="126.0"></text>
</g>
<g>
<title>skb_release_all (1 samples, 0.04%)</title><rect x="502.7" y="99.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="505.7" y="110.0"></text>
</g>
<g>
<title>skb_release_data (1 samples, 0.04%)</title><rect x="502.7" y="83.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="505.7" y="94.0"></text>
</g>
<g>
<title>skb_free_head (1 samples, 0.04%)</title><rect x="502.7" y="67.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="505.7" y="78.0"></text>
</g>
<g>
<title>kfree (1 samples, 0.04%)</title><rect x="502.7" y="51.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="505.7" y="62.0"></text>
</g>
<g>
<title>__slab_free (1 samples, 0.04%)</title><rect x="502.7" y="35.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="505.7" y="46.0"></text>
</g>
<g>
<title>skb_release_head_state (1 samples, 0.04%)</title><rect x="503.2" y="99.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="506.2" y="110.0"></text>
</g>
<g>
<title>tcp_ack_update_rtt.isra.0 (1 samples, 0.04%)</title><rect x="503.6" y="115.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="506.6" y="126.0"></text>
</g>
<g>
<title>tcp_data_ready (12 samples, 0.49%)</title><rect x="504.1" y="147.0" width="5.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="507.1" y="158.0"></text>
</g>
<g>
<title>sock_def_readable (12 samples, 0.49%)</title><rect x="504.1" y="131.0" width="5.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="507.1" y="142.0"></text>
</g>
<g>
<title>__wake_up_sync_key (12 samples, 0.49%)</title><rect x="504.1" y="115.0" width="5.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="507.1" y="126.0"></text>
</g>
<g>
<title>__wake_up_common_lock (12 samples, 0.49%)</title><rect x="504.1" y="99.0" width="5.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="507.1" y="110.0"></text>
</g>
<g>
<title>__lock_text_start (12 samples, 0.49%)</title><rect x="504.1" y="83.0" width="5.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="507.1" y="94.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (1 samples, 0.04%)</title><rect x="509.9" y="243.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="512.9" y="254.0"></text>
</g>
<g>
<title>process_backlog (1 samples, 0.04%)</title><rect x="510.4" y="339.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="513.4" y="350.0"></text>
</g>
<g>
<title>dev_queue_xmit (5 samples, 0.20%)</title><rect x="510.9" y="403.0" width="2.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="513.9" y="414.0"></text>
</g>
<g>
<title>__dev_queue_xmit (5 samples, 0.20%)</title><rect x="510.9" y="387.0" width="2.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="513.9" y="398.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (3 samples, 0.12%)</title><rect x="511.4" y="371.0" width="1.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="514.4" y="382.0"></text>
</g>
<g>
<title>loopback_xmit (1 samples, 0.04%)</title><rect x="511.9" y="355.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="514.9" y="366.0"></text>
</g>
<g>
<title>netif_rx_internal (1 samples, 0.04%)</title><rect x="511.9" y="339.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="514.9" y="350.0"></text>
</g>
<g>
<title>skb_clone_tx_timestamp (1 samples, 0.04%)</title><rect x="512.3" y="355.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="515.3" y="366.0"></text>
</g>
<g>
<title>validate_xmit_skb (1 samples, 0.04%)</title><rect x="512.8" y="371.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="515.8" y="382.0"></text>
</g>
<g>
<title>netif_skb_features (1 samples, 0.04%)</title><rect x="512.8" y="355.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="515.8" y="366.0"></text>
</g>
<g>
<title>skb_clone (1 samples, 0.04%)</title><rect x="513.3" y="515.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="516.3" y="526.0"></text>
</g>
<g>
<title>__skb_clone (1 samples, 0.04%)</title><rect x="513.3" y="499.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="516.3" y="510.0"></text>
</g>
<g>
<title>read_tsc (1 samples, 0.04%)</title><rect x="513.8" y="531.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="516.8" y="542.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (1 samples, 0.04%)</title><rect x="514.3" y="531.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="517.3" y="542.0"></text>
</g>
<g>
<title>sk_reset_timer (1 samples, 0.04%)</title><rect x="514.3" y="515.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="517.3" y="526.0"></text>
</g>
<g>
<title>tcp_update_skb_after_send (1 samples, 0.04%)</title><rect x="514.7" y="531.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="517.7" y="542.0"></text>
</g>
<g>
<title>tcp_write_xmit (1 samples, 0.04%)</title><rect x="515.2" y="563.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="518.2" y="574.0"></text>
</g>
<g>
<title>tcp_send_mss (3 samples, 0.12%)</title><rect x="515.7" y="579.0" width="1.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="518.7" y="590.0"></text>
</g>
<g>
<title>ipv4_mtu (1 samples, 0.04%)</title><rect x="515.7" y="563.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="518.7" y="574.0"></text>
</g>
<g>
<title>tcp_current_mss (2 samples, 0.08%)</title><rect x="516.2" y="563.0" width="1.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="519.2" y="574.0"></text>
</g>
<g>
<title>sockfd_lookup_light (1 samples, 0.04%)</title><rect x="517.2" y="643.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="520.2" y="654.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.04%)</title><rect x="517.2" y="627.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="520.2" y="638.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (1 samples, 0.04%)</title><rect x="517.6" y="723.0" width="0.5" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="520.6" y="734.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (1 samples, 0.04%)</title><rect x="518.1" y="803.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="521.1" y="814.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (2 samples, 0.08%)</title><rect x="518.6" y="819.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="521.6" y="830.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (2 samples, 0.08%)</title><rect x="518.6" y="803.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="521.6" y="814.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.04%)</title><rect x="518.6" y="787.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="521.6" y="798.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.04%)</title><rect x="518.6" y="771.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="521.6" y="782.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (1 samples, 0.04%)</title><rect x="518.6" y="755.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="521.6" y="766.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (1 samples, 0.04%)</title><rect x="519.1" y="787.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="522.1" y="798.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivlev/ServiceController.entity (24 samples, 0.98%)</title><rect x="519.6" y="819.0" width="11.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="522.6" y="830.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivlev/ServiceController.getResponse (24 samples, 0.98%)</title><rect x="519.6" y="803.0" width="11.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="522.6" y="814.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivlev/ServiceController.methodPut (24 samples, 0.98%)</title><rect x="519.6" y="787.0" width="11.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="522.6" y="798.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.upsert (24 samples, 0.98%)</title><rect x="519.6" y="771.0" width="11.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="522.6" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock (1 samples, 0.04%)</title><rect x="519.6" y="755.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="522.6" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireShared (1 samples, 0.04%)</title><rect x="519.6" y="739.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="522.6" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryAcquireShared (1 samples, 0.04%)</title><rect x="519.6" y="723.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="522.6" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.exclusiveCount (1 samples, 0.04%)</title><rect x="519.6" y="707.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="522.6" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/MemTable.upsert (23 samples, 0.94%)</title><rect x="520.1" y="755.0" width="11.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="523.1" y="766.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (1 samples, 0.04%)</title><rect x="520.1" y="739.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="523.1" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (1 samples, 0.04%)</title><rect x="520.1" y="723.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="523.1" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.put (22 samples, 0.90%)</title><rect x="520.5" y="739.0" width="10.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="523.5" y="750.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.04%)</title><rect x="520.5" y="723.0" width="0.5" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="523.5" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (21 samples, 0.86%)</title><rect x="521.0" y="723.0" width="10.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="524.0" y="734.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (1 samples, 0.04%)</title><rect x="521.0" y="707.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="524.0" y="718.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (1 samples, 0.04%)</title><rect x="521.0" y="691.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="524.0" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Index.&lt;init&gt; (12 samples, 0.49%)</title><rect x="521.5" y="707.0" width="5.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="524.5" y="718.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.04%)</title><rect x="526.3" y="691.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="529.3" y="702.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.04%)</title><rect x="526.3" y="675.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="529.3" y="686.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.04%)</title><rect x="526.3" y="659.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="529.3" y="670.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.04%)</title><rect x="526.3" y="643.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="529.3" y="654.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.04%)</title><rect x="526.3" y="627.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="529.3" y="638.0"></text>
</g>
<g>
<title>update_blocked_averages (1 samples, 0.04%)</title><rect x="526.3" y="611.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="529.3" y="622.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.04%)</title><rect x="526.3" y="595.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="529.3" y="606.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (1 samples, 0.04%)</title><rect x="526.8" y="691.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="529.8" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.addIndices (2 samples, 0.08%)</title><rect x="527.3" y="707.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="530.3" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (2 samples, 0.08%)</title><rect x="527.3" y="691.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="530.3" y="702.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (2 samples, 0.08%)</title><rect x="527.3" y="675.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="530.3" y="686.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (2 samples, 0.08%)</title><rect x="527.3" y="659.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="530.3" y="670.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (2 samples, 0.08%)</title><rect x="527.3" y="643.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="530.3" y="654.0"></text>
</g>
<g>
<title>vectorizedMismatch (1 samples, 0.04%)</title><rect x="527.8" y="627.0" width="0.5" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="530.8" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (6 samples, 0.25%)</title><rect x="528.3" y="707.0" width="2.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="531.3" y="718.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (6 samples, 0.25%)</title><rect x="528.3" y="691.0" width="2.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="531.3" y="702.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (6 samples, 0.25%)</title><rect x="528.3" y="675.0" width="2.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="531.3" y="686.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (6 samples, 0.25%)</title><rect x="528.3" y="659.0" width="2.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="531.3" y="670.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (1 samples, 0.04%)</title><rect x="529.2" y="643.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="532.2" y="654.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (1 samples, 0.04%)</title><rect x="529.2" y="627.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="532.2" y="638.0"></text>
</g>
<g>
<title>vectorizedMismatch (3 samples, 0.12%)</title><rect x="529.7" y="643.0" width="1.5" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="532.7" y="654.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (2 samples, 0.08%)</title><rect x="531.2" y="835.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="534.2" y="846.0"></text>
</g>
<g>
<title>java/lang/String.substring (2 samples, 0.08%)</title><rect x="531.2" y="819.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="534.2" y="830.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (2 samples, 0.08%)</title><rect x="531.2" y="803.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="534.2" y="814.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.04%)</title><rect x="531.7" y="787.0" width="0.4" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="534.7" y="798.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (1 samples, 0.04%)</title><rect x="532.1" y="867.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="535.1" y="878.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.startsWith (1 samples, 0.04%)</title><rect x="532.1" y="851.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="535.1" y="862.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (23 samples, 0.94%)</title><rect x="532.6" y="883.0" width="11.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="535.6" y="894.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (23 samples, 0.94%)</title><rect x="532.6" y="867.0" width="11.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="535.6" y="878.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (10 samples, 0.41%)</title><rect x="532.6" y="851.0" width="4.8" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="535.6" y="862.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (1 samples, 0.04%)</title><rect x="533.1" y="835.0" width="0.5" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="536.1" y="846.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.04%)</title><rect x="533.6" y="835.0" width="0.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="536.6" y="846.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (1 samples, 0.04%)</title><rect x="534.1" y="835.0" width="0.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="537.1" y="846.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (5 samples, 0.20%)</title><rect x="534.6" y="835.0" width="2.4" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="537.6" y="846.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.04%)</title><rect x="535.0" y="819.0" width="0.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="538.0" y="830.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (1 samples, 0.04%)</title><rect x="535.5" y="819.0" width="0.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="538.5" y="830.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (2 samples, 0.08%)</title><rect x="536.0" y="819.0" width="1.0" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="539.0" y="830.0"></text>
</g>
<g>
<title>ResourceMark::reset_to_mark() (2 samples, 0.08%)</title><rect x="536.0" y="803.0" width="1.0" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="539.0" y="814.0"></text>
</g>
<g>
<title>void AccessInternal::arraycopy_conjoint&lt;signed char&gt;(signed char*, signed char*, unsigned long) (1 samples, 0.04%)</title><rect x="537.0" y="835.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="540.0" y="846.0"></text>
</g>
<g>
<title>recv (12 samples, 0.49%)</title><rect x="537.4" y="851.0" width="5.8" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="540.4" y="862.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (7 samples, 0.29%)</title><rect x="539.9" y="835.0" width="3.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="542.9" y="846.0"></text>
</g>
<g>
<title>do_syscall_64 (7 samples, 0.29%)</title><rect x="539.9" y="819.0" width="3.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="542.9" y="830.0"></text>
</g>
<g>
<title>__x64_sys_recvfrom (7 samples, 0.29%)</title><rect x="539.9" y="803.0" width="3.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="542.9" y="814.0"></text>
</g>
<g>
<title>__sys_recvfrom (7 samples, 0.29%)</title><rect x="539.9" y="787.0" width="3.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="542.9" y="798.0"></text>
</g>
<g>
<title>sock_recvmsg (6 samples, 0.25%)</title><rect x="539.9" y="771.0" width="2.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="542.9" y="782.0"></text>
</g>
<g>
<title>inet6_recvmsg (5 samples, 0.20%)</title><rect x="539.9" y="755.0" width="2.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="542.9" y="766.0"></text>
</g>
<g>
<title>tcp_recvmsg (5 samples, 0.20%)</title><rect x="539.9" y="739.0" width="2.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="542.9" y="750.0"></text>
</g>
<g>
<title>__kfree_skb (2 samples, 0.08%)</title><rect x="540.8" y="723.0" width="1.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="543.8" y="734.0"></text>
</g>
<g>
<title>skb_release_all (2 samples, 0.08%)</title><rect x="540.8" y="707.0" width="1.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="543.8" y="718.0"></text>
</g>
<g>
<title>skb_release_data (1 samples, 0.04%)</title><rect x="540.8" y="691.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="543.8" y="702.0"></text>
</g>
<g>
<title>skb_release_head_state (1 samples, 0.04%)</title><rect x="541.3" y="691.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="544.3" y="702.0"></text>
</g>
<g>
<title>dst_release (1 samples, 0.04%)</title><rect x="541.3" y="675.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="544.3" y="686.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (1 samples, 0.04%)</title><rect x="541.8" y="723.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="544.8" y="734.0"></text>
</g>
<g>
<title>__skb_datagram_iter (1 samples, 0.04%)</title><rect x="541.8" y="707.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="544.8" y="718.0"></text>
</g>
<g>
<title>simple_copy_to_iter (1 samples, 0.04%)</title><rect x="541.8" y="691.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="544.8" y="702.0"></text>
</g>
<g>
<title>_copy_to_iter (1 samples, 0.04%)</title><rect x="541.8" y="675.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="544.8" y="686.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (1 samples, 0.04%)</title><rect x="541.8" y="659.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="544.8" y="670.0"></text>
</g>
<g>
<title>security_socket_recvmsg (1 samples, 0.04%)</title><rect x="542.3" y="755.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="545.3" y="766.0"></text>
</g>
<g>
<title>sockfd_lookup_light (1 samples, 0.04%)</title><rect x="542.8" y="771.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="545.8" y="782.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.04%)</title><rect x="542.8" y="755.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="545.8" y="766.0"></text>
</g>
<g>
<title>recv@plt (1 samples, 0.04%)</title><rect x="543.2" y="851.0" width="0.5" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="546.2" y="862.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.04%)</title><rect x="543.7" y="915.0" width="0.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="546.7" y="926.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.04%)</title><rect x="543.7" y="899.0" width="0.5" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="546.7" y="910.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.04%)</title><rect x="543.7" y="883.0" width="0.5" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="546.7" y="894.0"></text>
</g>
<g>
<title>[NIO Selector #4 tid=4853] (377 samples, 15.43%)</title><rect x="544.2" y="947.0" width="182.1" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="547.2" y="958.0">[NIO Selector #4 tid=4853]</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (377 samples, 15.43%)</title><rect x="544.2" y="931.0" width="182.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="547.2" y="942.0">one/nio/server/SelectorT..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (1 samples, 0.04%)</title><rect x="544.7" y="915.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="547.7" y="926.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (52 samples, 2.13%)</title><rect x="545.2" y="915.0" width="25.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="548.2" y="926.0">o..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (52 samples, 2.13%)</title><rect x="545.2" y="899.0" width="25.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="548.2" y="910.0">o..</text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (1 samples, 0.04%)</title><rect x="547.1" y="883.0" width="0.5" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="550.1" y="894.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSelector_epollWait (2 samples, 0.08%)</title><rect x="547.6" y="883.0" width="1.0" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="550.6" y="894.0"></text>
</g>
<g>
<title>clock_gettime (10 samples, 0.41%)</title><rect x="548.6" y="883.0" width="4.8" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="551.6" y="894.0"></text>
</g>
<g>
<title>clock_gettime (4 samples, 0.16%)</title><rect x="551.5" y="867.0" width="1.9" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="554.5" y="878.0"></text>
</g>
<g>
<title>[vdso] (3 samples, 0.12%)</title><rect x="551.9" y="851.0" width="1.5" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="554.9" y="862.0"></text>
</g>
<g>
<title>epoll_wait (35 samples, 1.43%)</title><rect x="553.4" y="883.0" width="16.9" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="556.4" y="894.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (24 samples, 0.98%)</title><rect x="558.7" y="867.0" width="11.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="561.7" y="878.0"></text>
</g>
<g>
<title>do_syscall_64 (24 samples, 0.98%)</title><rect x="558.7" y="851.0" width="11.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="561.7" y="862.0"></text>
</g>
<g>
<title>__x64_sys_epoll_wait (22 samples, 0.90%)</title><rect x="559.7" y="835.0" width="10.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="562.7" y="846.0"></text>
</g>
<g>
<title>do_epoll_wait (22 samples, 0.90%)</title><rect x="559.7" y="819.0" width="10.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="562.7" y="830.0"></text>
</g>
<g>
<title>__fdget (1 samples, 0.04%)</title><rect x="560.2" y="803.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="563.2" y="814.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.04%)</title><rect x="560.2" y="787.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="563.2" y="798.0"></text>
</g>
<g>
<title>__fget (1 samples, 0.04%)</title><rect x="560.2" y="771.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="563.2" y="782.0"></text>
</g>
<g>
<title>ep_poll (20 samples, 0.82%)</title><rect x="560.6" y="803.0" width="9.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="563.6" y="814.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.0 (12 samples, 0.49%)</title><rect x="561.1" y="787.0" width="5.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="564.1" y="798.0"></text>
</g>
<g>
<title>ep_send_events_proc (10 samples, 0.41%)</title><rect x="561.6" y="771.0" width="4.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="564.6" y="782.0"></text>
</g>
<g>
<title>ep_item_poll.isra.0 (7 samples, 0.29%)</title><rect x="562.1" y="755.0" width="3.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="565.1" y="766.0"></text>
</g>
<g>
<title>sock_poll (3 samples, 0.12%)</title><rect x="564.0" y="739.0" width="1.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="567.0" y="750.0"></text>
</g>
<g>
<title>tcp_poll (2 samples, 0.08%)</title><rect x="564.5" y="723.0" width="1.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="567.5" y="734.0"></text>
</g>
<g>
<title>sock_poll (2 samples, 0.08%)</title><rect x="565.5" y="755.0" width="0.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="568.5" y="766.0"></text>
</g>
<g>
<title>mutex_lock (1 samples, 0.04%)</title><rect x="566.4" y="771.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="569.4" y="782.0"></text>
</g>
<g>
<title>mutex_unlock (2 samples, 0.08%)</title><rect x="566.9" y="787.0" width="1.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="569.9" y="798.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (5 samples, 0.20%)</title><rect x="567.9" y="787.0" width="2.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="570.9" y="798.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (5 samples, 0.20%)</title><rect x="567.9" y="771.0" width="2.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="570.9" y="782.0"></text>
</g>
<g>
<title>schedule (5 samples, 0.20%)</title><rect x="567.9" y="755.0" width="2.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="570.9" y="766.0"></text>
</g>
<g>
<title>__schedule (4 samples, 0.16%)</title><rect x="568.4" y="739.0" width="1.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="571.4" y="750.0"></text>
</g>
<g>
<title>finish_task_switch (4 samples, 0.16%)</title><rect x="568.4" y="723.0" width="1.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="571.4" y="734.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (323 samples, 13.22%)</title><rect x="570.3" y="915.0" width="156.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="573.3" y="926.0">one/nio/net/Session...</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (318 samples, 13.02%)</title><rect x="572.7" y="899.0" width="153.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="575.7" y="910.0">one/nio/http/HttpSe..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (247 samples, 10.11%)</title><rect x="572.7" y="883.0" width="119.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="575.7" y="894.0">one/nio/http/Ht..</text>
</g>
<g>
<title>RequestHandler0_entity.handleRequest (1 samples, 0.04%)</title><rect x="575.1" y="867.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="578.1" y="878.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (3 samples, 0.12%)</title><rect x="575.6" y="867.0" width="1.5" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="578.6" y="878.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (211 samples, 8.64%)</title><rect x="577.1" y="867.0" width="101.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="580.1" y="878.0">one/nio/http..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (211 samples, 8.64%)</title><rect x="577.1" y="851.0" width="101.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="580.1" y="862.0">one/nio/http..</text>
</g>
<g>
<title>RequestHandler0_entity.handleRequest (205 samples, 8.39%)</title><rect x="578.0" y="835.0" width="99.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="581.0" y="846.0">RequestHandl..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (156 samples, 6.39%)</title><rect x="579.0" y="819.0" width="75.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="582.0" y="830.0">one/nio/..</text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (1 samples, 0.04%)</title><rect x="579.5" y="803.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="582.5" y="814.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.04%)</title><rect x="579.5" y="787.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="582.5" y="798.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.04%)</title><rect x="579.5" y="771.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="582.5" y="782.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (149 samples, 6.10%)</title><rect x="580.0" y="803.0" width="71.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="583.0" y="814.0">one/nio/..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (5 samples, 0.20%)</title><rect x="580.0" y="787.0" width="2.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="583.0" y="798.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (5 samples, 0.20%)</title><rect x="580.0" y="771.0" width="2.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="583.0" y="782.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (5 samples, 0.20%)</title><rect x="580.0" y="755.0" width="2.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="583.0" y="766.0"></text>
</g>
<g>
<title>java/lang/String.charAt (5 samples, 0.20%)</title><rect x="580.0" y="739.0" width="2.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="583.0" y="750.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.04%)</title><rect x="581.9" y="723.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="584.9" y="734.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.04%)</title><rect x="581.9" y="707.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="584.9" y="718.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.04%)</title><rect x="581.9" y="691.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="584.9" y="702.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.04%)</title><rect x="581.9" y="675.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="584.9" y="686.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.04%)</title><rect x="581.9" y="659.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="584.9" y="670.0"></text>
</g>
<g>
<title>update_blocked_averages (1 samples, 0.04%)</title><rect x="581.9" y="643.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="584.9" y="654.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.04%)</title><rect x="581.9" y="627.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="584.9" y="638.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (144 samples, 5.89%)</title><rect x="582.4" y="787.0" width="69.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="585.4" y="798.0">one/nio..</text>
</g>
<g>
<title>one/nio/net/Session.write (144 samples, 5.89%)</title><rect x="582.4" y="771.0" width="69.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="585.4" y="782.0">one/nio..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (1 samples, 0.04%)</title><rect x="582.4" y="755.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="585.4" y="766.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (143 samples, 5.85%)</title><rect x="582.9" y="755.0" width="69.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="585.9" y="766.0">one/nio..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (143 samples, 5.85%)</title><rect x="582.9" y="739.0" width="69.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="585.9" y="750.0">one/nio..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (5 samples, 0.20%)</title><rect x="583.3" y="723.0" width="2.5" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="586.3" y="734.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (1 samples, 0.04%)</title><rect x="583.8" y="707.0" width="0.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="586.8" y="718.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (3 samples, 0.12%)</title><rect x="584.3" y="707.0" width="1.5" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="587.3" y="718.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (1 samples, 0.04%)</title><rect x="584.8" y="691.0" width="0.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="587.8" y="702.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (1 samples, 0.04%)</title><rect x="585.3" y="691.0" width="0.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="588.3" y="702.0"></text>
</g>
<g>
<title>__send (137 samples, 5.61%)</title><rect x="585.8" y="723.0" width="66.1" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="588.8" y="734.0">__send</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (128 samples, 5.24%)</title><rect x="590.1" y="707.0" width="61.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="593.1" y="718.0">entry_..</text>
</g>
<g>
<title>do_syscall_64 (128 samples, 5.24%)</title><rect x="590.1" y="691.0" width="61.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="593.1" y="702.0">do_sys..</text>
</g>
<g>
<title>__sys_sendto (1 samples, 0.04%)</title><rect x="591.1" y="675.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="594.1" y="686.0"></text>
</g>
<g>
<title>__x64_sys_sendto (125 samples, 5.12%)</title><rect x="591.5" y="675.0" width="60.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="594.5" y="686.0">__x64_..</text>
</g>
<g>
<title>__sys_sendto (125 samples, 5.12%)</title><rect x="591.5" y="659.0" width="60.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="594.5" y="670.0">__sys_..</text>
</g>
<g>
<title>fput_many (1 samples, 0.04%)</title><rect x="592.0" y="643.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="595.0" y="654.0"></text>
</g>
<g>
<title>sock_sendmsg (122 samples, 4.99%)</title><rect x="592.5" y="643.0" width="58.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="595.5" y="654.0">sock_s..</text>
</g>
<g>
<title>inet6_sendmsg (122 samples, 4.99%)</title><rect x="592.5" y="627.0" width="58.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="595.5" y="638.0">inet6_..</text>
</g>
<g>
<title>tcp_sendmsg (121 samples, 4.95%)</title><rect x="593.0" y="611.0" width="58.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="596.0" y="622.0">tcp_se..</text>
</g>
<g>
<title>sock_zerocopy_put (1 samples, 0.04%)</title><rect x="593.0" y="595.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="596.0" y="606.0"></text>
</g>
<g>
<title>tcp_push (1 samples, 0.04%)</title><rect x="593.5" y="595.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="596.5" y="606.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (118 samples, 4.83%)</title><rect x="594.0" y="595.0" width="57.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="597.0" y="606.0">tcp_se..</text>
</g>
<g>
<title>__virt_addr_valid (1 samples, 0.04%)</title><rect x="595.4" y="579.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="598.4" y="590.0"></text>
</g>
<g>
<title>_copy_from_iter_full (2 samples, 0.08%)</title><rect x="595.9" y="579.0" width="1.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="598.9" y="590.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (2 samples, 0.08%)</title><rect x="595.9" y="563.0" width="1.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="598.9" y="574.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (12 samples, 0.49%)</title><rect x="596.9" y="579.0" width="5.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="599.9" y="590.0"></text>
</g>
<g>
<title>__alloc_skb (11 samples, 0.45%)</title><rect x="597.3" y="563.0" width="5.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="600.3" y="574.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.0 (6 samples, 0.25%)</title><rect x="597.3" y="547.0" width="2.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="600.3" y="558.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (5 samples, 0.20%)</title><rect x="597.3" y="531.0" width="2.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="600.3" y="542.0"></text>
</g>
<g>
<title>kmalloc_slab (1 samples, 0.04%)</title><rect x="599.3" y="515.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="602.3" y="526.0"></text>
</g>
<g>
<title>memset_erms (1 samples, 0.04%)</title><rect x="599.8" y="531.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="602.8" y="542.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (3 samples, 0.12%)</title><rect x="600.2" y="547.0" width="1.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="603.2" y="558.0"></text>
</g>
<g>
<title>should_failslab (1 samples, 0.04%)</title><rect x="601.2" y="531.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="604.2" y="542.0"></text>
</g>
<g>
<title>memset_erms (2 samples, 0.08%)</title><rect x="601.7" y="547.0" width="1.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="604.7" y="558.0"></text>
</g>
<g>
<title>tcp_push (100 samples, 4.09%)</title><rect x="602.7" y="579.0" width="48.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="605.7" y="590.0">tcp_..</text>
</g>
<g>
<title>__tcp_push_pending_frames (100 samples, 4.09%)</title><rect x="602.7" y="563.0" width="48.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="605.7" y="574.0">__tc..</text>
</g>
<g>
<title>tcp_small_queue_check.isra.0 (1 samples, 0.04%)</title><rect x="603.1" y="547.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="606.1" y="558.0"></text>
</g>
<g>
<title>tcp_write_xmit (98 samples, 4.01%)</title><rect x="603.6" y="547.0" width="47.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="606.6" y="558.0">tcp_..</text>
</g>
<g>
<title>__tcp_transmit_skb (82 samples, 3.36%)</title><rect x="604.6" y="531.0" width="39.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="607.6" y="542.0">__t..</text>
</g>
<g>
<title>ip_queue_xmit (80 samples, 3.27%)</title><rect x="605.1" y="515.0" width="38.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="608.1" y="526.0">ip_..</text>
</g>
<g>
<title>__ip_queue_xmit (79 samples, 3.23%)</title><rect x="605.1" y="499.0" width="38.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="608.1" y="510.0">__i..</text>
</g>
<g>
<title>__ip_local_out (1 samples, 0.04%)</title><rect x="605.1" y="483.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="608.1" y="494.0"></text>
</g>
<g>
<title>__sk_dst_check (1 samples, 0.04%)</title><rect x="605.6" y="483.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="608.6" y="494.0"></text>
</g>
<g>
<title>ip_local_out (77 samples, 3.15%)</title><rect x="606.0" y="483.0" width="37.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="609.0" y="494.0">ip_..</text>
</g>
<g>
<title>ip_output (77 samples, 3.15%)</title><rect x="606.0" y="467.0" width="37.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="609.0" y="478.0">ip_..</text>
</g>
<g>
<title>ip_finish_output (77 samples, 3.15%)</title><rect x="606.0" y="451.0" width="37.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="609.0" y="462.0">ip_..</text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (1 samples, 0.04%)</title><rect x="606.5" y="435.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="609.5" y="446.0"></text>
</g>
<g>
<title>__ip_finish_output (75 samples, 3.07%)</title><rect x="607.0" y="435.0" width="36.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="610.0" y="446.0">__i..</text>
</g>
<g>
<title>ip_finish_output2 (75 samples, 3.07%)</title><rect x="607.0" y="419.0" width="36.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="610.0" y="430.0">ip_..</text>
</g>
<g>
<title>__local_bh_enable_ip (57 samples, 2.33%)</title><rect x="608.9" y="403.0" width="27.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="611.9" y="414.0">_..</text>
</g>
<g>
<title>do_softirq.part.0 (57 samples, 2.33%)</title><rect x="608.9" y="387.0" width="27.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="611.9" y="398.0">d..</text>
</g>
<g>
<title>do_softirq_own_stack (57 samples, 2.33%)</title><rect x="608.9" y="371.0" width="27.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="611.9" y="382.0">d..</text>
</g>
<g>
<title>__softirqentry_text_start (57 samples, 2.33%)</title><rect x="608.9" y="355.0" width="27.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="611.9" y="366.0">_..</text>
</g>
<g>
<title>net_rx_action (56 samples, 2.29%)</title><rect x="609.4" y="339.0" width="27.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="612.4" y="350.0">n..</text>
</g>
<g>
<title>__kfree_skb_flush (1 samples, 0.04%)</title><rect x="609.4" y="323.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="612.4" y="334.0"></text>
</g>
<g>
<title>process_backlog (55 samples, 2.25%)</title><rect x="609.9" y="323.0" width="26.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="612.9" y="334.0">p..</text>
</g>
<g>
<title>__netif_receive_skb (52 samples, 2.13%)</title><rect x="610.9" y="307.0" width="25.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="613.9" y="318.0">_..</text>
</g>
<g>
<title>__netif_receive_skb_one_core (52 samples, 2.13%)</title><rect x="610.9" y="291.0" width="25.1" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="613.9" y="302.0">_..</text>
</g>
<g>
<title>ip_rcv (52 samples, 2.13%)</title><rect x="610.9" y="275.0" width="25.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="613.9" y="286.0">i..</text>
</g>
<g>
<title>ip_rcv_finish (52 samples, 2.13%)</title><rect x="610.9" y="259.0" width="25.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="613.9" y="270.0">i..</text>
</g>
<g>
<title>ip_local_deliver (52 samples, 2.13%)</title><rect x="610.9" y="243.0" width="25.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="613.9" y="254.0">i..</text>
</g>
<g>
<title>ip_local_deliver_finish (51 samples, 2.09%)</title><rect x="611.4" y="227.0" width="24.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="614.4" y="238.0">i..</text>
</g>
<g>
<title>ip_protocol_deliver_rcu (51 samples, 2.09%)</title><rect x="611.4" y="211.0" width="24.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="614.4" y="222.0">i..</text>
</g>
<g>
<title>tcp_v4_rcv (50 samples, 2.05%)</title><rect x="611.8" y="195.0" width="24.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="614.8" y="206.0">t..</text>
</g>
<g>
<title>__inet_lookup_established (3 samples, 0.12%)</title><rect x="613.3" y="179.0" width="1.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="616.3" y="190.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (2 samples, 0.08%)</title><rect x="614.7" y="179.0" width="1.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="617.7" y="190.0"></text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (2 samples, 0.08%)</title><rect x="614.7" y="163.0" width="1.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="617.7" y="174.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (42 samples, 1.72%)</title><rect x="615.7" y="179.0" width="20.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="618.7" y="190.0"></text>
</g>
<g>
<title>ktime_get_seconds (1 samples, 0.04%)</title><rect x="615.7" y="163.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="618.7" y="174.0"></text>
</g>
<g>
<title>tcp_check_space (3 samples, 0.12%)</title><rect x="616.2" y="163.0" width="1.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="619.2" y="174.0"></text>
</g>
<g>
<title>tcp_event_data_recv (1 samples, 0.04%)</title><rect x="617.6" y="163.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="620.6" y="174.0"></text>
</g>
<g>
<title>tcp_rcv_established (37 samples, 1.51%)</title><rect x="618.1" y="163.0" width="17.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="621.1" y="174.0"></text>
</g>
<g>
<title>__tcp_ack_snd_check (4 samples, 0.16%)</title><rect x="618.6" y="147.0" width="1.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="621.6" y="158.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (4 samples, 0.16%)</title><rect x="618.6" y="131.0" width="1.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="621.6" y="142.0"></text>
</g>
<g>
<title>mod_timer (1 samples, 0.04%)</title><rect x="618.6" y="115.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="621.6" y="126.0"></text>
</g>
<g>
<title>sk_reset_timer (3 samples, 0.12%)</title><rect x="619.1" y="115.0" width="1.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="622.1" y="126.0"></text>
</g>
<g>
<title>lock_timer_base (1 samples, 0.04%)</title><rect x="619.1" y="99.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="622.1" y="110.0"></text>
</g>
<g>
<title>mod_timer (2 samples, 0.08%)</title><rect x="619.6" y="99.0" width="0.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="622.6" y="110.0"></text>
</g>
<g>
<title>__lock_text_start (2 samples, 0.08%)</title><rect x="619.6" y="83.0" width="0.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="622.6" y="94.0"></text>
</g>
<g>
<title>tcp_ack (12 samples, 0.49%)</title><rect x="620.5" y="147.0" width="5.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="623.5" y="158.0"></text>
</g>
<g>
<title>bictcp_acked (1 samples, 0.04%)</title><rect x="620.5" y="131.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="623.5" y="142.0"></text>
</g>
<g>
<title>rb_first (1 samples, 0.04%)</title><rect x="621.0" y="131.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="624.0" y="142.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (9 samples, 0.37%)</title><rect x="621.5" y="131.0" width="4.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="624.5" y="142.0"></text>
</g>
<g>
<title>__kfree_skb (7 samples, 0.29%)</title><rect x="622.0" y="115.0" width="3.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="625.0" y="126.0"></text>
</g>
<g>
<title>skb_release_all (7 samples, 0.29%)</title><rect x="622.0" y="99.0" width="3.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="625.0" y="110.0"></text>
</g>
<g>
<title>skb_release_data (7 samples, 0.29%)</title><rect x="622.0" y="83.0" width="3.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="625.0" y="94.0"></text>
</g>
<g>
<title>skb_free_head (5 samples, 0.20%)</title><rect x="622.9" y="67.0" width="2.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="625.9" y="78.0"></text>
</g>
<g>
<title>kfree (5 samples, 0.20%)</title><rect x="622.9" y="51.0" width="2.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="625.9" y="62.0"></text>
</g>
<g>
<title>__slab_free (2 samples, 0.08%)</title><rect x="624.4" y="35.0" width="1.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="627.4" y="46.0"></text>
</g>
<g>
<title>tcp_ack_update_rtt.isra.0 (1 samples, 0.04%)</title><rect x="625.4" y="115.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="628.4" y="126.0"></text>
</g>
<g>
<title>tcp_update_pacing_rate (1 samples, 0.04%)</title><rect x="625.8" y="131.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="628.8" y="142.0"></text>
</g>
<g>
<title>tcp_data_ready (17 samples, 0.70%)</title><rect x="626.3" y="147.0" width="8.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="629.3" y="158.0"></text>
</g>
<g>
<title>sock_def_readable (17 samples, 0.70%)</title><rect x="626.3" y="131.0" width="8.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="629.3" y="142.0"></text>
</g>
<g>
<title>__wake_up_sync_key (17 samples, 0.70%)</title><rect x="626.3" y="115.0" width="8.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="629.3" y="126.0"></text>
</g>
<g>
<title>__wake_up_common_lock (17 samples, 0.70%)</title><rect x="626.3" y="99.0" width="8.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="629.3" y="110.0"></text>
</g>
<g>
<title>__lock_text_start (17 samples, 0.70%)</title><rect x="626.3" y="83.0" width="8.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="629.3" y="94.0"></text>
</g>
<g>
<title>tcp_event_data_recv (1 samples, 0.04%)</title><rect x="634.5" y="147.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="637.5" y="158.0"></text>
</g>
<g>
<title>tcp_queue_rcv (1 samples, 0.04%)</title><rect x="635.0" y="147.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="638.0" y="158.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (1 samples, 0.04%)</title><rect x="635.5" y="147.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="638.5" y="158.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (1 samples, 0.04%)</title><rect x="636.0" y="307.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="639.0" y="318.0"></text>
</g>
<g>
<title>dev_queue_xmit (14 samples, 0.57%)</title><rect x="636.5" y="403.0" width="6.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="639.5" y="414.0"></text>
</g>
<g>
<title>__dev_queue_xmit (14 samples, 0.57%)</title><rect x="636.5" y="387.0" width="6.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="639.5" y="398.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (8 samples, 0.33%)</title><rect x="637.0" y="371.0" width="3.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="640.0" y="382.0"></text>
</g>
<g>
<title>loopback_xmit (4 samples, 0.16%)</title><rect x="638.4" y="355.0" width="1.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="641.4" y="366.0"></text>
</g>
<g>
<title>eth_type_trans (1 samples, 0.04%)</title><rect x="638.9" y="339.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="641.9" y="350.0"></text>
</g>
<g>
<title>netif_rx (1 samples, 0.04%)</title><rect x="639.4" y="339.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="642.4" y="350.0"></text>
</g>
<g>
<title>enqueue_to_backlog (1 samples, 0.04%)</title><rect x="639.4" y="323.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="642.4" y="334.0"></text>
</g>
<g>
<title>netif_rx_internal (1 samples, 0.04%)</title><rect x="639.8" y="339.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="642.8" y="350.0"></text>
</g>
<g>
<title>skb_clone_tx_timestamp (1 samples, 0.04%)</title><rect x="640.3" y="355.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="643.3" y="366.0"></text>
</g>
<g>
<title>loopback_xmit (2 samples, 0.08%)</title><rect x="640.8" y="371.0" width="1.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="643.8" y="382.0"></text>
</g>
<g>
<title>validate_xmit_skb (3 samples, 0.12%)</title><rect x="641.8" y="371.0" width="1.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="644.8" y="382.0"></text>
</g>
<g>
<title>validate_xmit_xfrm (1 samples, 0.04%)</title><rect x="642.7" y="355.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="645.7" y="366.0"></text>
</g>
<g>
<title>ip_copy_addrs (1 samples, 0.04%)</title><rect x="643.2" y="499.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="646.2" y="510.0"></text>
</g>
<g>
<title>skb_clone (1 samples, 0.04%)</title><rect x="643.7" y="515.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="646.7" y="526.0"></text>
</g>
<g>
<title>__skb_clone (1 samples, 0.04%)</title><rect x="643.7" y="499.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="646.7" y="510.0"></text>
</g>
<g>
<title>__copy_skb_header (1 samples, 0.04%)</title><rect x="643.7" y="483.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="646.7" y="494.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (2 samples, 0.08%)</title><rect x="644.2" y="531.0" width="1.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="647.2" y="542.0"></text>
</g>
<g>
<title>jiffies_to_usecs (1 samples, 0.04%)</title><rect x="645.2" y="531.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="648.2" y="542.0"></text>
</g>
<g>
<title>rb_first (3 samples, 0.12%)</title><rect x="645.6" y="531.0" width="1.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="648.6" y="542.0"></text>
</g>
<g>
<title>read_tsc (1 samples, 0.04%)</title><rect x="647.1" y="531.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="650.1" y="542.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (5 samples, 0.20%)</title><rect x="647.6" y="531.0" width="2.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="650.6" y="542.0"></text>
</g>
<g>
<title>tcp_rearm_rto (4 samples, 0.16%)</title><rect x="648.1" y="515.0" width="1.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="651.1" y="526.0"></text>
</g>
<g>
<title>sk_reset_timer (3 samples, 0.12%)</title><rect x="648.5" y="499.0" width="1.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="651.5" y="510.0"></text>
</g>
<g>
<title>mod_timer (3 samples, 0.12%)</title><rect x="648.5" y="483.0" width="1.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="651.5" y="494.0"></text>
</g>
<g>
<title>__lock_text_start (2 samples, 0.08%)</title><rect x="649.0" y="467.0" width="1.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="652.0" y="478.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (2 samples, 0.08%)</title><rect x="650.0" y="531.0" width="1.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="653.0" y="542.0"></text>
</g>
<g>
<title>mod_timer (1 samples, 0.04%)</title><rect x="650.5" y="515.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="653.5" y="526.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (1 samples, 0.04%)</title><rect x="651.0" y="595.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="654.0" y="606.0"></text>
</g>
<g>
<title>sockfd_lookup_light (1 samples, 0.04%)</title><rect x="651.4" y="643.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="654.4" y="654.0"></text>
</g>
<g>
<title>__fdget (1 samples, 0.04%)</title><rect x="651.4" y="627.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="654.4" y="638.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.04%)</title><rect x="651.4" y="611.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="654.4" y="622.0"></text>
</g>
<g>
<title>__fget (1 samples, 0.04%)</title><rect x="651.4" y="595.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="654.4" y="606.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (5 samples, 0.20%)</title><rect x="651.9" y="803.0" width="2.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="654.9" y="814.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (2 samples, 0.08%)</title><rect x="654.3" y="819.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="657.3" y="830.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (2 samples, 0.08%)</title><rect x="654.3" y="803.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="657.3" y="814.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.04%)</title><rect x="654.3" y="787.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="657.3" y="798.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (1 samples, 0.04%)</title><rect x="654.3" y="771.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="657.3" y="782.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.04%)</title><rect x="654.8" y="787.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="657.8" y="798.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.04%)</title><rect x="654.8" y="771.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="657.8" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivlev/ServiceController.entity (45 samples, 1.84%)</title><rect x="655.3" y="819.0" width="21.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="658.3" y="830.0">r..</text>
</g>
<g>
<title>java/lang/String.getBytes (1 samples, 0.04%)</title><rect x="655.3" y="803.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="658.3" y="814.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (1 samples, 0.04%)</title><rect x="655.3" y="787.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="658.3" y="798.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (1 samples, 0.04%)</title><rect x="655.3" y="771.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="658.3" y="782.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1 samples, 0.04%)</title><rect x="655.3" y="755.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="658.3" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivlev/ServiceController.getResponse (44 samples, 1.80%)</title><rect x="655.8" y="803.0" width="21.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="658.8" y="814.0">r..</text>
</g>
<g>
<title>ru/mail/polis/service/ivlev/ServiceController.methodPut (44 samples, 1.80%)</title><rect x="655.8" y="787.0" width="21.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="658.8" y="798.0">r..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (2 samples, 0.08%)</title><rect x="655.8" y="771.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="658.8" y="782.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.04%)</title><rect x="656.3" y="755.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="659.3" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.upsert (42 samples, 1.72%)</title><rect x="656.8" y="771.0" width="20.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="659.8" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock (7 samples, 0.29%)</title><rect x="657.2" y="755.0" width="3.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="660.2" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireShared (7 samples, 0.29%)</title><rect x="657.2" y="739.0" width="3.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="660.2" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryAcquireShared (7 samples, 0.29%)</title><rect x="657.2" y="723.0" width="3.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="660.2" y="734.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (1 samples, 0.04%)</title><rect x="657.2" y="707.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="660.2" y="718.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (1 samples, 0.04%)</title><rect x="657.2" y="691.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="660.2" y="702.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.set (1 samples, 0.04%)</title><rect x="657.2" y="675.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="660.2" y="686.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.set (3 samples, 0.12%)</title><rect x="657.7" y="707.0" width="1.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="660.7" y="718.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.set (2 samples, 0.08%)</title><rect x="658.2" y="691.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="661.2" y="702.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap$Entry.&lt;init&gt; (1 samples, 0.04%)</title><rect x="658.7" y="675.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="661.7" y="686.0"></text>
</g>
<g>
<title>java/lang/ref/WeakReference.&lt;init&gt; (1 samples, 0.04%)</title><rect x="658.7" y="659.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="661.7" y="670.0"></text>
</g>
<g>
<title>java/lang/ref/Reference.&lt;init&gt; (1 samples, 0.04%)</title><rect x="658.7" y="643.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="661.7" y="654.0"></text>
</g>
<g>
<title>java/lang/ref/Reference.&lt;init&gt; (1 samples, 0.04%)</title><rect x="658.7" y="627.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="661.7" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.exclusiveCount (1 samples, 0.04%)</title><rect x="659.2" y="707.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="662.2" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.fullTryAcquireShared (2 samples, 0.08%)</title><rect x="659.7" y="707.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="662.7" y="718.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.set (2 samples, 0.08%)</title><rect x="659.7" y="691.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="662.7" y="702.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.set (2 samples, 0.08%)</title><rect x="659.7" y="675.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="662.7" y="686.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap$Entry.&lt;init&gt; (1 samples, 0.04%)</title><rect x="659.7" y="659.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="662.7" y="670.0"></text>
</g>
<g>
<title>java/lang/ref/WeakReference.&lt;init&gt; (1 samples, 0.04%)</title><rect x="659.7" y="643.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="662.7" y="654.0"></text>
</g>
<g>
<title>java/lang/ref/Reference.&lt;init&gt; (1 samples, 0.04%)</title><rect x="659.7" y="627.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="662.7" y="638.0"></text>
</g>
<g>
<title>java/lang/ref/Reference.&lt;init&gt; (1 samples, 0.04%)</title><rect x="659.7" y="611.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="662.7" y="622.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.04%)</title><rect x="659.7" y="595.0" width="0.4" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="662.7" y="606.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.04%)</title><rect x="660.1" y="659.0" width="0.5" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="663.1" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/MemTable.upsert (34 samples, 1.39%)</title><rect x="660.6" y="755.0" width="16.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="663.6" y="766.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (2 samples, 0.08%)</title><rect x="660.6" y="739.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="663.6" y="750.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.04%)</title><rect x="660.6" y="723.0" width="0.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="663.6" y="734.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (1 samples, 0.04%)</title><rect x="660.6" y="707.0" width="0.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="663.6" y="718.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (1 samples, 0.04%)</title><rect x="660.6" y="691.0" width="0.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="663.6" y="702.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.04%)</title><rect x="660.6" y="675.0" width="0.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="663.6" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (1 samples, 0.04%)</title><rect x="661.1" y="723.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="664.1" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.put (32 samples, 1.31%)</title><rect x="661.6" y="739.0" width="15.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="664.6" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (32 samples, 1.31%)</title><rect x="661.6" y="723.0" width="15.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="664.6" y="734.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (4 samples, 0.16%)</title><rect x="661.6" y="707.0" width="1.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="664.6" y="718.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (4 samples, 0.16%)</title><rect x="661.6" y="691.0" width="1.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="664.6" y="702.0"></text>
</g>
<g>
<title>java/util/Objects.requireNonNull (1 samples, 0.04%)</title><rect x="663.0" y="675.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="666.0" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Index.&lt;init&gt; (15 samples, 0.61%)</title><rect x="663.5" y="707.0" width="7.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="666.5" y="718.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (4 samples, 0.16%)</title><rect x="668.8" y="691.0" width="2.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="671.8" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (13 samples, 0.53%)</title><rect x="670.8" y="707.0" width="6.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="673.8" y="718.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (13 samples, 0.53%)</title><rect x="670.8" y="691.0" width="6.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="673.8" y="702.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (13 samples, 0.53%)</title><rect x="670.8" y="675.0" width="6.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="673.8" y="686.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (13 samples, 0.53%)</title><rect x="670.8" y="659.0" width="6.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="673.8" y="670.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (4 samples, 0.16%)</title><rect x="673.2" y="643.0" width="1.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="676.2" y="654.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (4 samples, 0.16%)</title><rect x="673.2" y="627.0" width="1.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="676.2" y="638.0"></text>
</g>
<g>
<title>vectorizedMismatch (4 samples, 0.16%)</title><rect x="675.1" y="643.0" width="1.9" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="678.1" y="654.0"></text>
</g>
<g>
<title>java/lang/String.substring (2 samples, 0.08%)</title><rect x="677.0" y="835.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="680.0" y="846.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.findHandlerByHost (1 samples, 0.04%)</title><rect x="678.0" y="835.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="681.0" y="846.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (1 samples, 0.04%)</title><rect x="678.5" y="835.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="681.5" y="846.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.04%)</title><rect x="678.5" y="819.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="681.5" y="830.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.04%)</title><rect x="678.5" y="803.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="681.5" y="814.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (14 samples, 0.57%)</title><rect x="679.0" y="867.0" width="6.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="682.0" y="878.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (1 samples, 0.04%)</title><rect x="680.9" y="851.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="683.9" y="862.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.04%)</title><rect x="680.9" y="835.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="683.9" y="846.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.04%)</title><rect x="680.9" y="819.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="683.9" y="830.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (1 samples, 0.04%)</title><rect x="680.9" y="803.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="683.9" y="814.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (5 samples, 0.20%)</title><rect x="681.4" y="851.0" width="2.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="684.4" y="862.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (5 samples, 0.20%)</title><rect x="681.4" y="835.0" width="2.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="684.4" y="846.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.startsWith (4 samples, 0.16%)</title><rect x="683.8" y="851.0" width="1.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="686.8" y="862.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (13 samples, 0.53%)</title><rect x="685.7" y="867.0" width="6.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="688.7" y="878.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (6 samples, 0.25%)</title><rect x="689.1" y="851.0" width="2.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="692.1" y="862.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (71 samples, 2.91%)</title><rect x="692.0" y="883.0" width="34.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="695.0" y="894.0">on..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (70 samples, 2.87%)</title><rect x="692.5" y="867.0" width="33.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="695.5" y="878.0">on..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (7 samples, 0.29%)</title><rect x="692.5" y="851.0" width="3.4" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="695.5" y="862.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (1 samples, 0.04%)</title><rect x="693.9" y="835.0" width="0.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="696.9" y="846.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (3 samples, 0.12%)</title><rect x="694.4" y="835.0" width="1.5" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="697.4" y="846.0"></text>
</g>
<g>
<title>ResourceMark::reset_to_mark() (1 samples, 0.04%)</title><rect x="694.4" y="819.0" width="0.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="697.4" y="830.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (2 samples, 0.08%)</title><rect x="694.9" y="819.0" width="1.0" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="697.9" y="830.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (1 samples, 0.04%)</title><rect x="695.9" y="851.0" width="0.5" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="698.9" y="862.0"></text>
</g>
<g>
<title>recv (62 samples, 2.54%)</title><rect x="696.4" y="851.0" width="29.9" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="699.4" y="862.0">recv</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (47 samples, 1.92%)</title><rect x="703.6" y="835.0" width="22.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="706.6" y="846.0">e..</text>
</g>
<g>
<title>__x64_sys_recvfrom (1 samples, 0.04%)</title><rect x="703.6" y="819.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="706.6" y="830.0"></text>
</g>
<g>
<title>do_syscall_64 (46 samples, 1.88%)</title><rect x="704.1" y="819.0" width="22.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="707.1" y="830.0">d..</text>
</g>
<g>
<title>__x64_sys_recvfrom (40 samples, 1.64%)</title><rect x="707.0" y="803.0" width="19.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="710.0" y="814.0"></text>
</g>
<g>
<title>__sys_recvfrom (38 samples, 1.56%)</title><rect x="707.0" y="787.0" width="18.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="710.0" y="798.0"></text>
</g>
<g>
<title>sock_recvmsg (31 samples, 1.27%)</title><rect x="707.0" y="771.0" width="15.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="710.0" y="782.0"></text>
</g>
<g>
<title>apparmor_socket_recvmsg (3 samples, 0.12%)</title><rect x="707.0" y="755.0" width="1.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="710.0" y="766.0"></text>
</g>
<g>
<title>inet6_recvmsg (26 samples, 1.06%)</title><rect x="708.4" y="755.0" width="12.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="711.4" y="766.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (1 samples, 0.04%)</title><rect x="708.4" y="739.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="711.4" y="750.0"></text>
</g>
<g>
<title>tcp_recvmsg (25 samples, 1.02%)</title><rect x="708.9" y="739.0" width="12.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="711.9" y="750.0"></text>
</g>
<g>
<title>__kfree_skb (6 samples, 0.25%)</title><rect x="709.9" y="723.0" width="2.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="712.9" y="734.0"></text>
</g>
<g>
<title>skb_release_all (6 samples, 0.25%)</title><rect x="709.9" y="707.0" width="2.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="712.9" y="718.0"></text>
</g>
<g>
<title>dst_release (1 samples, 0.04%)</title><rect x="709.9" y="691.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="712.9" y="702.0"></text>
</g>
<g>
<title>skb_release_head_state (5 samples, 0.20%)</title><rect x="710.4" y="691.0" width="2.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="713.4" y="702.0"></text>
</g>
<g>
<title>dst_release (5 samples, 0.20%)</title><rect x="710.4" y="675.0" width="2.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="713.4" y="686.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (11 samples, 0.45%)</title><rect x="712.8" y="723.0" width="5.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="715.8" y="734.0"></text>
</g>
<g>
<title>__skb_datagram_iter (11 samples, 0.45%)</title><rect x="712.8" y="707.0" width="5.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="715.8" y="718.0"></text>
</g>
<g>
<title>simple_copy_to_iter (6 samples, 0.25%)</title><rect x="715.2" y="691.0" width="2.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="718.2" y="702.0"></text>
</g>
<g>
<title>__check_object_size (2 samples, 0.08%)</title><rect x="715.2" y="675.0" width="1.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="718.2" y="686.0"></text>
</g>
<g>
<title>__virt_addr_valid (1 samples, 0.04%)</title><rect x="715.7" y="659.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="718.7" y="670.0"></text>
</g>
<g>
<title>_copy_to_iter (2 samples, 0.08%)</title><rect x="716.2" y="675.0" width="0.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="719.2" y="686.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (2 samples, 0.08%)</title><rect x="716.2" y="659.0" width="0.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="719.2" y="670.0"></text>
</g>
<g>
<title>check_stack_object (1 samples, 0.04%)</title><rect x="717.1" y="675.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="720.1" y="686.0"></text>
</g>
<g>
<title>copyout (1 samples, 0.04%)</title><rect x="717.6" y="675.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="720.6" y="686.0"></text>
</g>
<g>
<title>tcp_cleanup_rbuf (3 samples, 0.12%)</title><rect x="718.1" y="723.0" width="1.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="721.1" y="734.0"></text>
</g>
<g>
<title>tcp_send_ack (1 samples, 0.04%)</title><rect x="719.1" y="707.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="722.1" y="718.0"></text>
</g>
<g>
<title>__tcp_send_ack.part.0 (1 samples, 0.04%)</title><rect x="719.1" y="691.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="722.1" y="702.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (1 samples, 0.04%)</title><rect x="719.1" y="675.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="722.1" y="686.0"></text>
</g>
<g>
<title>ip_queue_xmit (1 samples, 0.04%)</title><rect x="719.1" y="659.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="722.1" y="670.0"></text>
</g>
<g>
<title>__ip_queue_xmit (1 samples, 0.04%)</title><rect x="719.1" y="643.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="722.1" y="654.0"></text>
</g>
<g>
<title>ip_local_out (1 samples, 0.04%)</title><rect x="719.1" y="627.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="722.1" y="638.0"></text>
</g>
<g>
<title>ip_output (1 samples, 0.04%)</title><rect x="719.1" y="611.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="722.1" y="622.0"></text>
</g>
<g>
<title>ip_finish_output (1 samples, 0.04%)</title><rect x="719.1" y="595.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="722.1" y="606.0"></text>
</g>
<g>
<title>__ip_finish_output (1 samples, 0.04%)</title><rect x="719.1" y="579.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="722.1" y="590.0"></text>
</g>
<g>
<title>ip_finish_output2 (1 samples, 0.04%)</title><rect x="719.1" y="563.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="722.1" y="574.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (1 samples, 0.04%)</title><rect x="719.1" y="547.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="722.1" y="558.0"></text>
</g>
<g>
<title>do_softirq.part.0 (1 samples, 0.04%)</title><rect x="719.1" y="531.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="722.1" y="542.0"></text>
</g>
<g>
<title>do_softirq_own_stack (1 samples, 0.04%)</title><rect x="719.1" y="515.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="722.1" y="526.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.04%)</title><rect x="719.1" y="499.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="722.1" y="510.0"></text>
</g>
<g>
<title>net_rx_action (1 samples, 0.04%)</title><rect x="719.1" y="483.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="722.1" y="494.0"></text>
</g>
<g>
<title>process_backlog (1 samples, 0.04%)</title><rect x="719.1" y="467.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="722.1" y="478.0"></text>
</g>
<g>
<title>__netif_receive_skb (1 samples, 0.04%)</title><rect x="719.1" y="451.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="722.1" y="462.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (1 samples, 0.04%)</title><rect x="719.1" y="435.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="722.1" y="446.0"></text>
</g>
<g>
<title>ip_rcv (1 samples, 0.04%)</title><rect x="719.1" y="419.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="722.1" y="430.0"></text>
</g>
<g>
<title>ip_rcv_finish (1 samples, 0.04%)</title><rect x="719.1" y="403.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="722.1" y="414.0"></text>
</g>
<g>
<title>ip_local_deliver (1 samples, 0.04%)</title><rect x="719.1" y="387.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="722.1" y="398.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (1 samples, 0.04%)</title><rect x="719.1" y="371.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="722.1" y="382.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (1 samples, 0.04%)</title><rect x="719.1" y="355.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="722.1" y="366.0"></text>
</g>
<g>
<title>tcp_v4_rcv (1 samples, 0.04%)</title><rect x="719.1" y="339.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="722.1" y="350.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (1 samples, 0.04%)</title><rect x="719.1" y="323.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="722.1" y="334.0"></text>
</g>
<g>
<title>tcp_rcv_established (1 samples, 0.04%)</title><rect x="719.1" y="307.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="722.1" y="318.0"></text>
</g>
<g>
<title>tcp_ack (1 samples, 0.04%)</title><rect x="719.1" y="291.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="722.1" y="302.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (1 samples, 0.04%)</title><rect x="719.1" y="275.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="722.1" y="286.0"></text>
</g>
<g>
<title>__kfree_skb (1 samples, 0.04%)</title><rect x="719.1" y="259.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="722.1" y="270.0"></text>
</g>
<g>
<title>kfree_skbmem (1 samples, 0.04%)</title><rect x="719.1" y="243.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="722.1" y="254.0"></text>
</g>
<g>
<title>kmem_cache_free (1 samples, 0.04%)</title><rect x="719.1" y="227.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="722.1" y="238.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (1 samples, 0.04%)</title><rect x="719.5" y="723.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="722.5" y="734.0"></text>
</g>
<g>
<title>tcp_rcv_space_adjust (1 samples, 0.04%)</title><rect x="720.0" y="723.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="723.0" y="734.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (1 samples, 0.04%)</title><rect x="720.0" y="707.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="723.0" y="718.0"></text>
</g>
<g>
<title>read_tsc (1 samples, 0.04%)</title><rect x="720.0" y="691.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="723.0" y="702.0"></text>
</g>
<g>
<title>tcp_release_cb (1 samples, 0.04%)</title><rect x="720.5" y="723.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="723.5" y="734.0"></text>
</g>
<g>
<title>security_socket_recvmsg (2 samples, 0.08%)</title><rect x="721.0" y="755.0" width="1.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="724.0" y="766.0"></text>
</g>
<g>
<title>apparmor_socket_recvmsg (1 samples, 0.04%)</title><rect x="721.5" y="739.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="724.5" y="750.0"></text>
</g>
<g>
<title>aa_sk_perm (1 samples, 0.04%)</title><rect x="721.5" y="723.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="724.5" y="734.0"></text>
</g>
<g>
<title>sockfd_lookup_light (7 samples, 0.29%)</title><rect x="722.0" y="771.0" width="3.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="725.0" y="782.0"></text>
</g>
<g>
<title>__fdget (3 samples, 0.12%)</title><rect x="722.0" y="755.0" width="1.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="725.0" y="766.0"></text>
</g>
<g>
<title>__fget_light (3 samples, 0.12%)</title><rect x="722.0" y="739.0" width="1.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="725.0" y="750.0"></text>
</g>
<g>
<title>__fget (3 samples, 0.12%)</title><rect x="722.0" y="723.0" width="1.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="725.0" y="734.0"></text>
</g>
<g>
<title>__fget_light (4 samples, 0.16%)</title><rect x="723.4" y="755.0" width="1.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="726.4" y="766.0"></text>
</g>
<g>
<title>import_single_range (2 samples, 0.08%)</title><rect x="725.3" y="787.0" width="1.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="728.3" y="798.0"></text>
</g>
<g>
<title>[NIO Selector #5 tid=4854] (295 samples, 12.08%)</title><rect x="726.3" y="947.0" width="142.5" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="729.3" y="958.0">[NIO Selector #5 t..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (295 samples, 12.08%)</title><rect x="726.3" y="931.0" width="142.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="729.3" y="942.0">one/nio/server/Sel..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (64 samples, 2.62%)</title><rect x="726.8" y="915.0" width="30.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="729.8" y="926.0">on..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (58 samples, 2.37%)</title><rect x="729.7" y="899.0" width="28.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="732.7" y="910.0">on..</text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (2 samples, 0.08%)</title><rect x="734.0" y="883.0" width="1.0" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="737.0" y="894.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSelector_epollWait (1 samples, 0.04%)</title><rect x="735.0" y="883.0" width="0.5" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="738.0" y="894.0"></text>
</g>
<g>
<title>clock_gettime (10 samples, 0.41%)</title><rect x="735.5" y="883.0" width="4.8" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="738.5" y="894.0"></text>
</g>
<g>
<title>clock_gettime (5 samples, 0.20%)</title><rect x="737.9" y="867.0" width="2.4" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="740.9" y="878.0"></text>
</g>
<g>
<title>[vdso] (4 samples, 0.16%)</title><rect x="738.4" y="851.0" width="1.9" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="741.4" y="862.0"></text>
</g>
<g>
<title>epoll_wait (36 samples, 1.47%)</title><rect x="740.3" y="883.0" width="17.4" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="743.3" y="894.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (31 samples, 1.27%)</title><rect x="742.7" y="867.0" width="15.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="745.7" y="878.0"></text>
</g>
<g>
<title>do_syscall_64 (31 samples, 1.27%)</title><rect x="742.7" y="851.0" width="15.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="745.7" y="862.0"></text>
</g>
<g>
<title>__x64_sys_epoll_wait (31 samples, 1.27%)</title><rect x="742.7" y="835.0" width="15.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="745.7" y="846.0"></text>
</g>
<g>
<title>do_epoll_wait (30 samples, 1.23%)</title><rect x="742.7" y="819.0" width="14.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="745.7" y="830.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.04%)</title><rect x="743.2" y="803.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="746.2" y="814.0"></text>
</g>
<g>
<title>ep_poll (27 samples, 1.11%)</title><rect x="743.7" y="803.0" width="13.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="746.7" y="814.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.0 (14 samples, 0.57%)</title><rect x="744.2" y="787.0" width="6.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="747.2" y="798.0"></text>
</g>
<g>
<title>_raw_write_lock_irq (1 samples, 0.04%)</title><rect x="745.6" y="771.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="748.6" y="782.0"></text>
</g>
<g>
<title>ep_send_events_proc (9 samples, 0.37%)</title><rect x="746.1" y="771.0" width="4.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="749.1" y="782.0"></text>
</g>
<g>
<title>ep_item_poll.isra.0 (6 samples, 0.25%)</title><rect x="747.1" y="755.0" width="2.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="750.1" y="766.0"></text>
</g>
<g>
<title>sock_poll (6 samples, 0.25%)</title><rect x="747.1" y="739.0" width="2.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="750.1" y="750.0"></text>
</g>
<g>
<title>tcp_poll (3 samples, 0.12%)</title><rect x="747.6" y="723.0" width="1.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="750.6" y="734.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (2 samples, 0.08%)</title><rect x="749.0" y="723.0" width="1.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="752.0" y="734.0"></text>
</g>
<g>
<title>sock_poll (1 samples, 0.04%)</title><rect x="750.0" y="755.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="753.0" y="766.0"></text>
</g>
<g>
<title>mutex_lock (1 samples, 0.04%)</title><rect x="750.5" y="771.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="753.5" y="782.0"></text>
</g>
<g>
<title>ep_send_events_proc (1 samples, 0.04%)</title><rect x="750.9" y="787.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="753.9" y="798.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (11 samples, 0.45%)</title><rect x="751.4" y="787.0" width="5.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="754.4" y="798.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.04%)</title><rect x="751.4" y="771.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="754.4" y="782.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (10 samples, 0.41%)</title><rect x="751.9" y="771.0" width="4.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="754.9" y="782.0"></text>
</g>
<g>
<title>schedule (9 samples, 0.37%)</title><rect x="752.4" y="755.0" width="4.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="755.4" y="766.0"></text>
</g>
<g>
<title>__schedule (9 samples, 0.37%)</title><rect x="752.4" y="739.0" width="4.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="755.4" y="750.0"></text>
</g>
<g>
<title>finish_task_switch (7 samples, 0.29%)</title><rect x="753.4" y="723.0" width="3.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="756.4" y="734.0"></text>
</g>
<g>
<title>fput_many (1 samples, 0.04%)</title><rect x="756.7" y="803.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="759.7" y="814.0"></text>
</g>
<g>
<title>fput (1 samples, 0.04%)</title><rect x="757.2" y="819.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="760.2" y="830.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (230 samples, 9.41%)</title><rect x="757.7" y="915.0" width="111.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="760.7" y="926.0">one/nio/net/S..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (228 samples, 9.33%)</title><rect x="758.7" y="899.0" width="110.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="761.7" y="910.0">one/nio/http/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (172 samples, 7.04%)</title><rect x="758.7" y="883.0" width="83.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="761.7" y="894.0">one/nio/h..</text>
</g>
<g>
<title>jlong_disjoint_arraycopy (1 samples, 0.04%)</title><rect x="759.6" y="867.0" width="0.5" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="762.6" y="878.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (155 samples, 6.34%)</title><rect x="760.1" y="867.0" width="74.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="763.1" y="878.0">one/nio/..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (155 samples, 6.34%)</title><rect x="760.1" y="851.0" width="74.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="763.1" y="862.0">one/nio/..</text>
</g>
<g>
<title>RequestHandler0_entity.handleRequest (150 samples, 6.14%)</title><rect x="760.1" y="835.0" width="72.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="763.1" y="846.0">RequestH..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (116 samples, 4.75%)</title><rect x="760.1" y="819.0" width="56.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="763.1" y="830.0">one/ni..</text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (2 samples, 0.08%)</title><rect x="761.6" y="803.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="764.6" y="814.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (2 samples, 0.08%)</title><rect x="761.6" y="787.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="764.6" y="798.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (2 samples, 0.08%)</title><rect x="761.6" y="771.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="764.6" y="782.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.04%)</title><rect x="761.6" y="755.0" width="0.5" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="764.6" y="766.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.04%)</title><rect x="762.1" y="755.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="765.1" y="766.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.04%)</title><rect x="762.1" y="739.0" width="0.4" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="765.1" y="750.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.04%)</title><rect x="762.1" y="723.0" width="0.4" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="765.1" y="734.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (109 samples, 4.46%)</title><rect x="762.5" y="803.0" width="52.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="765.5" y="814.0">one/n..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (6 samples, 0.25%)</title><rect x="762.5" y="787.0" width="2.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="765.5" y="798.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (4 samples, 0.16%)</title><rect x="763.5" y="771.0" width="1.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="766.5" y="782.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (4 samples, 0.16%)</title><rect x="763.5" y="755.0" width="1.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="766.5" y="766.0"></text>
</g>
<g>
<title>java/lang/String.charAt (4 samples, 0.16%)</title><rect x="763.5" y="739.0" width="1.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="766.5" y="750.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.04%)</title><rect x="764.9" y="723.0" width="0.5" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="767.9" y="734.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (103 samples, 4.22%)</title><rect x="765.4" y="787.0" width="49.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="768.4" y="798.0">one/n..</text>
</g>
<g>
<title>one/nio/net/Session.write (103 samples, 4.22%)</title><rect x="765.4" y="771.0" width="49.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="768.4" y="782.0">one/n..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (1 samples, 0.04%)</title><rect x="765.4" y="755.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="768.4" y="766.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (102 samples, 4.18%)</title><rect x="765.9" y="755.0" width="49.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="768.9" y="766.0">one/n..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (102 samples, 4.18%)</title><rect x="765.9" y="739.0" width="49.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="768.9" y="750.0">one/n..</text>
</g>
<g>
<title>__pthread_disable_asynccancel (1 samples, 0.04%)</title><rect x="766.4" y="723.0" width="0.5" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="769.4" y="734.0"></text>
</g>
<g>
<title>__send (100 samples, 4.09%)</title><rect x="766.9" y="723.0" width="48.3" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="769.9" y="734.0">__send</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (93 samples, 3.81%)</title><rect x="770.3" y="707.0" width="44.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="773.3" y="718.0">entr..</text>
</g>
<g>
<title>do_syscall_64 (93 samples, 3.81%)</title><rect x="770.3" y="691.0" width="44.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="773.3" y="702.0">do_s..</text>
</g>
<g>
<title>__x64_sys_sendto (92 samples, 3.77%)</title><rect x="770.7" y="675.0" width="44.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="773.7" y="686.0">__x6..</text>
</g>
<g>
<title>__sys_sendto (92 samples, 3.77%)</title><rect x="770.7" y="659.0" width="44.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="773.7" y="670.0">__sy..</text>
</g>
<g>
<title>sock_sendmsg (92 samples, 3.77%)</title><rect x="770.7" y="643.0" width="44.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="773.7" y="654.0">sock..</text>
</g>
<g>
<title>inet6_sendmsg (91 samples, 3.72%)</title><rect x="770.7" y="627.0" width="44.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="773.7" y="638.0">inet..</text>
</g>
<g>
<title>tcp_sendmsg (90 samples, 3.68%)</title><rect x="771.2" y="611.0" width="43.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="774.2" y="622.0">tcp_..</text>
</g>
<g>
<title>release_sock (1 samples, 0.04%)</title><rect x="771.2" y="595.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="774.2" y="606.0"></text>
</g>
<g>
<title>_raw_spin_unlock_bh (1 samples, 0.04%)</title><rect x="771.2" y="579.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="774.2" y="590.0"></text>
</g>
<g>
<title>sk_page_frag_refill (1 samples, 0.04%)</title><rect x="771.7" y="595.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="774.7" y="606.0"></text>
</g>
<g>
<title>tcp_push (1 samples, 0.04%)</title><rect x="772.2" y="595.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="775.2" y="606.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (86 samples, 3.52%)</title><rect x="772.7" y="595.0" width="41.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="775.7" y="606.0">tcp..</text>
</g>
<g>
<title>_copy_from_iter_full (2 samples, 0.08%)</title><rect x="773.2" y="579.0" width="0.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="776.2" y="590.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (2 samples, 0.08%)</title><rect x="773.2" y="563.0" width="0.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="776.2" y="574.0"></text>
</g>
<g>
<title>copyin (1 samples, 0.04%)</title><rect x="774.1" y="579.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="777.1" y="590.0"></text>
</g>
<g>
<title>sk_page_frag_refill (1 samples, 0.04%)</title><rect x="774.6" y="579.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="777.6" y="590.0"></text>
</g>
<g>
<title>skb_page_frag_refill (1 samples, 0.04%)</title><rect x="774.6" y="563.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="777.6" y="574.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (6 samples, 0.25%)</title><rect x="775.1" y="579.0" width="2.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="778.1" y="590.0"></text>
</g>
<g>
<title>__alloc_skb (6 samples, 0.25%)</title><rect x="775.1" y="563.0" width="2.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="778.1" y="574.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.0 (2 samples, 0.08%)</title><rect x="775.1" y="547.0" width="1.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="778.1" y="558.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (2 samples, 0.08%)</title><rect x="775.1" y="531.0" width="1.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="778.1" y="542.0"></text>
</g>
<g>
<title>kmalloc_slab (1 samples, 0.04%)</title><rect x="775.6" y="515.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="778.6" y="526.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (3 samples, 0.12%)</title><rect x="776.1" y="547.0" width="1.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="779.1" y="558.0"></text>
</g>
<g>
<title>ksize (1 samples, 0.04%)</title><rect x="777.5" y="547.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="780.5" y="558.0"></text>
</g>
<g>
<title>__ksize (1 samples, 0.04%)</title><rect x="777.5" y="531.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="780.5" y="542.0"></text>
</g>
<g>
<title>tcp_push (72 samples, 2.95%)</title><rect x="778.0" y="579.0" width="34.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="781.0" y="590.0">tc..</text>
</g>
<g>
<title>__tcp_push_pending_frames (72 samples, 2.95%)</title><rect x="778.0" y="563.0" width="34.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="781.0" y="574.0">__..</text>
</g>
<g>
<title>__tcp_transmit_skb (1 samples, 0.04%)</title><rect x="778.0" y="547.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="781.0" y="558.0"></text>
</g>
<g>
<title>ktime_get (2 samples, 0.08%)</title><rect x="778.5" y="547.0" width="0.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="781.5" y="558.0"></text>
</g>
<g>
<title>tcp_write_xmit (69 samples, 2.82%)</title><rect x="779.4" y="547.0" width="33.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="782.4" y="558.0">tc..</text>
</g>
<g>
<title>__tcp_transmit_skb (65 samples, 2.66%)</title><rect x="780.4" y="531.0" width="31.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="783.4" y="542.0">__..</text>
</g>
<g>
<title>__tcp_v4_send_check (1 samples, 0.04%)</title><rect x="780.9" y="515.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="783.9" y="526.0"></text>
</g>
<g>
<title>bictcp_cwnd_event (1 samples, 0.04%)</title><rect x="781.4" y="515.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="784.4" y="526.0"></text>
</g>
<g>
<title>ip_queue_xmit (61 samples, 2.50%)</title><rect x="781.9" y="515.0" width="29.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="784.9" y="526.0">ip..</text>
</g>
<g>
<title>__ip_queue_xmit (61 samples, 2.50%)</title><rect x="781.9" y="499.0" width="29.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="784.9" y="510.0">__..</text>
</g>
<g>
<title>ip_local_out (61 samples, 2.50%)</title><rect x="781.9" y="483.0" width="29.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="784.9" y="494.0">ip..</text>
</g>
<g>
<title>ip_output (61 samples, 2.50%)</title><rect x="781.9" y="467.0" width="29.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="784.9" y="478.0">ip..</text>
</g>
<g>
<title>ip_finish_output (61 samples, 2.50%)</title><rect x="781.9" y="451.0" width="29.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="784.9" y="462.0">ip..</text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (1 samples, 0.04%)</title><rect x="782.8" y="435.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="785.8" y="446.0"></text>
</g>
<g>
<title>__ip_finish_output (57 samples, 2.33%)</title><rect x="783.3" y="435.0" width="27.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="786.3" y="446.0">_..</text>
</g>
<g>
<title>ip_finish_output2 (57 samples, 2.33%)</title><rect x="783.3" y="419.0" width="27.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="786.3" y="430.0">i..</text>
</g>
<g>
<title>__local_bh_enable_ip (51 samples, 2.09%)</title><rect x="784.8" y="403.0" width="24.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="787.8" y="414.0">_..</text>
</g>
<g>
<title>do_softirq.part.0 (51 samples, 2.09%)</title><rect x="784.8" y="387.0" width="24.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="787.8" y="398.0">d..</text>
</g>
<g>
<title>do_softirq_own_stack (51 samples, 2.09%)</title><rect x="784.8" y="371.0" width="24.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="787.8" y="382.0">d..</text>
</g>
<g>
<title>__softirqentry_text_start (51 samples, 2.09%)</title><rect x="784.8" y="355.0" width="24.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="787.8" y="366.0">_..</text>
</g>
<g>
<title>net_rx_action (48 samples, 1.96%)</title><rect x="786.2" y="339.0" width="23.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="789.2" y="350.0">n..</text>
</g>
<g>
<title>process_backlog (47 samples, 1.92%)</title><rect x="786.7" y="323.0" width="22.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="789.7" y="334.0">p..</text>
</g>
<g>
<title>__netif_receive_skb (47 samples, 1.92%)</title><rect x="786.7" y="307.0" width="22.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="789.7" y="318.0">_..</text>
</g>
<g>
<title>__netif_receive_skb_one_core (47 samples, 1.92%)</title><rect x="786.7" y="291.0" width="22.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="789.7" y="302.0">_..</text>
</g>
<g>
<title>__netif_receive_skb_core (2 samples, 0.08%)</title><rect x="787.7" y="275.0" width="0.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="790.7" y="286.0"></text>
</g>
<g>
<title>ip_rcv (43 samples, 1.76%)</title><rect x="788.6" y="275.0" width="20.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="791.6" y="286.0"></text>
</g>
<g>
<title>ip_rcv_finish (43 samples, 1.76%)</title><rect x="788.6" y="259.0" width="20.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="791.6" y="270.0"></text>
</g>
<g>
<title>ip_local_deliver (42 samples, 1.72%)</title><rect x="788.6" y="243.0" width="20.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="791.6" y="254.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (41 samples, 1.68%)</title><rect x="789.1" y="227.0" width="19.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="792.1" y="238.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (41 samples, 1.68%)</title><rect x="789.1" y="211.0" width="19.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="792.1" y="222.0"></text>
</g>
<g>
<title>sock_put (2 samples, 0.08%)</title><rect x="789.1" y="195.0" width="1.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="792.1" y="206.0"></text>
</g>
<g>
<title>tcp_v4_rcv (39 samples, 1.60%)</title><rect x="790.1" y="195.0" width="18.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="793.1" y="206.0"></text>
</g>
<g>
<title>__inet_lookup_established (3 samples, 0.12%)</title><rect x="791.0" y="179.0" width="1.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="794.0" y="190.0"></text>
</g>
<g>
<title>ipv4_dst_check (1 samples, 0.04%)</title><rect x="792.5" y="179.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="795.5" y="190.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (1 samples, 0.04%)</title><rect x="793.0" y="179.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="796.0" y="190.0"></text>
</g>
<g>
<title>apparmor_socket_sock_rcv_skb (1 samples, 0.04%)</title><rect x="793.0" y="163.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="796.0" y="174.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (31 samples, 1.27%)</title><rect x="793.4" y="179.0" width="15.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="796.4" y="190.0"></text>
</g>
<g>
<title>tcp_check_space (3 samples, 0.12%)</title><rect x="793.4" y="163.0" width="1.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="796.4" y="174.0"></text>
</g>
<g>
<title>tcp_data_ready (1 samples, 0.04%)</title><rect x="794.9" y="163.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="797.9" y="174.0"></text>
</g>
<g>
<title>tcp_rcv_established (27 samples, 1.11%)</title><rect x="795.4" y="163.0" width="13.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="798.4" y="174.0"></text>
</g>
<g>
<title>__tcp_ack_snd_check (1 samples, 0.04%)</title><rect x="796.3" y="147.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="799.3" y="158.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (1 samples, 0.04%)</title><rect x="796.3" y="131.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="799.3" y="142.0"></text>
</g>
<g>
<title>sk_reset_timer (1 samples, 0.04%)</title><rect x="796.3" y="115.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="799.3" y="126.0"></text>
</g>
<g>
<title>mod_timer (1 samples, 0.04%)</title><rect x="796.3" y="99.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="799.3" y="110.0"></text>
</g>
<g>
<title>tcp_ack (5 samples, 0.20%)</title><rect x="796.8" y="147.0" width="2.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="799.8" y="158.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (3 samples, 0.12%)</title><rect x="797.3" y="131.0" width="1.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="800.3" y="142.0"></text>
</g>
<g>
<title>__kfree_skb (2 samples, 0.08%)</title><rect x="797.8" y="115.0" width="1.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="800.8" y="126.0"></text>
</g>
<g>
<title>skb_release_all (2 samples, 0.08%)</title><rect x="797.8" y="99.0" width="1.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="800.8" y="110.0"></text>
</g>
<g>
<title>skb_release_data (2 samples, 0.08%)</title><rect x="797.8" y="83.0" width="1.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="800.8" y="94.0"></text>
</g>
<g>
<title>skb_free_head (1 samples, 0.04%)</title><rect x="798.3" y="67.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="801.3" y="78.0"></text>
</g>
<g>
<title>kfree (1 samples, 0.04%)</title><rect x="798.3" y="51.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="801.3" y="62.0"></text>
</g>
<g>
<title>__slab_free (1 samples, 0.04%)</title><rect x="798.3" y="35.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="801.3" y="46.0"></text>
</g>
<g>
<title>tcp_rate_gen (1 samples, 0.04%)</title><rect x="798.8" y="131.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="801.8" y="142.0"></text>
</g>
<g>
<title>tcp_data_ready (13 samples, 0.53%)</title><rect x="799.2" y="147.0" width="6.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="802.2" y="158.0"></text>
</g>
<g>
<title>sock_def_readable (13 samples, 0.53%)</title><rect x="799.2" y="131.0" width="6.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="802.2" y="142.0"></text>
</g>
<g>
<title>__wake_up_sync_key (13 samples, 0.53%)</title><rect x="799.2" y="115.0" width="6.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="802.2" y="126.0"></text>
</g>
<g>
<title>__wake_up_common_lock (13 samples, 0.53%)</title><rect x="799.2" y="99.0" width="6.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="802.2" y="110.0"></text>
</g>
<g>
<title>__lock_text_start (13 samples, 0.53%)</title><rect x="799.2" y="83.0" width="6.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="802.2" y="94.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (1 samples, 0.04%)</title><rect x="805.5" y="147.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="808.5" y="158.0"></text>
</g>
<g>
<title>tcp_queue_rcv (3 samples, 0.12%)</title><rect x="806.0" y="147.0" width="1.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="809.0" y="158.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (1 samples, 0.04%)</title><rect x="807.5" y="147.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="810.5" y="158.0"></text>
</g>
<g>
<title>tcp_update_pacing_rate (1 samples, 0.04%)</title><rect x="807.9" y="147.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="810.9" y="158.0"></text>
</g>
<g>
<title>tcp_v4_inbound_md5_hash (1 samples, 0.04%)</title><rect x="808.4" y="179.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="811.4" y="190.0"></text>
</g>
<g>
<title>ip_rcv_finish_core.isra.0 (1 samples, 0.04%)</title><rect x="808.9" y="243.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="811.9" y="254.0"></text>
</g>
<g>
<title>dev_queue_xmit (3 samples, 0.12%)</title><rect x="809.4" y="403.0" width="1.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="812.4" y="414.0"></text>
</g>
<g>
<title>__dev_queue_xmit (3 samples, 0.12%)</title><rect x="809.4" y="387.0" width="1.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="812.4" y="398.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (1 samples, 0.04%)</title><rect x="809.4" y="371.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="812.4" y="382.0"></text>
</g>
<g>
<title>loopback_xmit (1 samples, 0.04%)</title><rect x="809.4" y="355.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="812.4" y="366.0"></text>
</g>
<g>
<title>netif_rx (1 samples, 0.04%)</title><rect x="809.4" y="339.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="812.4" y="350.0"></text>
</g>
<g>
<title>netif_rx_internal (1 samples, 0.04%)</title><rect x="809.4" y="323.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="812.4" y="334.0"></text>
</g>
<g>
<title>enqueue_to_backlog (1 samples, 0.04%)</title><rect x="809.4" y="307.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="812.4" y="318.0"></text>
</g>
<g>
<title>validate_xmit_skb (2 samples, 0.08%)</title><rect x="809.9" y="371.0" width="0.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="812.9" y="382.0"></text>
</g>
<g>
<title>ipv4_mtu (1 samples, 0.04%)</title><rect x="810.8" y="435.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="813.8" y="446.0"></text>
</g>
<g>
<title>skb_clone (1 samples, 0.04%)</title><rect x="811.3" y="515.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="814.3" y="526.0"></text>
</g>
<g>
<title>__copy_skb_header (1 samples, 0.04%)</title><rect x="811.3" y="499.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="814.3" y="510.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (1 samples, 0.04%)</title><rect x="811.8" y="531.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="814.8" y="542.0"></text>
</g>
<g>
<title>rb_first (1 samples, 0.04%)</title><rect x="811.8" y="515.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="814.8" y="526.0"></text>
</g>
<g>
<title>tcp_update_skb_after_send (1 samples, 0.04%)</title><rect x="812.3" y="531.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="815.3" y="542.0"></text>
</g>
<g>
<title>tcp_send_mss (3 samples, 0.12%)</title><rect x="812.8" y="579.0" width="1.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="815.8" y="590.0"></text>
</g>
<g>
<title>tcp_current_mss (3 samples, 0.12%)</title><rect x="812.8" y="563.0" width="1.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="815.8" y="574.0"></text>
</g>
<g>
<title>ipv4_mtu (2 samples, 0.08%)</title><rect x="812.8" y="547.0" width="0.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="815.8" y="558.0"></text>
</g>
<g>
<title>tcp_established_options (1 samples, 0.04%)</title><rect x="813.7" y="547.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="816.7" y="558.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (1 samples, 0.04%)</title><rect x="814.2" y="595.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="817.2" y="606.0"></text>
</g>
<g>
<title>security_socket_sendmsg (1 samples, 0.04%)</title><rect x="814.7" y="627.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="817.7" y="638.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (2 samples, 0.08%)</title><rect x="815.2" y="803.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="818.2" y="814.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.04%)</title><rect x="815.7" y="787.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="818.7" y="798.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.04%)</title><rect x="815.7" y="771.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="818.7" y="782.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (3 samples, 0.12%)</title><rect x="816.1" y="819.0" width="1.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="819.1" y="830.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (3 samples, 0.12%)</title><rect x="816.1" y="803.0" width="1.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="819.1" y="814.0"></text>
</g>
<g>
<title>java/lang/String.substring (2 samples, 0.08%)</title><rect x="816.1" y="787.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="819.1" y="798.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (2 samples, 0.08%)</title><rect x="816.1" y="771.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="819.1" y="782.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.04%)</title><rect x="817.1" y="787.0" width="0.5" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="820.1" y="798.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivlev/ServiceController.entity (31 samples, 1.27%)</title><rect x="817.6" y="819.0" width="15.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="820.6" y="830.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivlev/ServiceController.getResponse (30 samples, 1.23%)</title><rect x="818.1" y="803.0" width="14.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="821.1" y="814.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivlev/ServiceController.methodPut (30 samples, 1.23%)</title><rect x="818.1" y="787.0" width="14.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="821.1" y="798.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.04%)</title><rect x="818.1" y="771.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="821.1" y="782.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.04%)</title><rect x="818.1" y="755.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="821.1" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.upsert (29 samples, 1.19%)</title><rect x="818.6" y="771.0" width="14.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="821.6" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.unlock (1 samples, 0.04%)</title><rect x="818.6" y="755.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="821.6" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.releaseShared (1 samples, 0.04%)</title><rect x="818.6" y="739.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="821.6" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryReleaseShared (1 samples, 0.04%)</title><rect x="818.6" y="723.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="821.6" y="734.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.remove (1 samples, 0.04%)</title><rect x="818.6" y="707.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="821.6" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/MemTable.upsert (28 samples, 1.15%)</title><rect x="819.0" y="755.0" width="13.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="822.0" y="766.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (1 samples, 0.04%)</title><rect x="819.0" y="739.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="822.0" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (1 samples, 0.04%)</title><rect x="819.0" y="723.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="822.0" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.put (27 samples, 1.11%)</title><rect x="819.5" y="739.0" width="13.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="822.5" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (27 samples, 1.11%)</title><rect x="819.5" y="723.0" width="13.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="822.5" y="734.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (1 samples, 0.04%)</title><rect x="819.5" y="707.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="822.5" y="718.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (1 samples, 0.04%)</title><rect x="819.5" y="691.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="822.5" y="702.0"></text>
</g>
<g>
<title>java/util/Objects.requireNonNull (1 samples, 0.04%)</title><rect x="819.5" y="675.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="822.5" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Index.&lt;init&gt; (14 samples, 0.57%)</title><rect x="820.0" y="707.0" width="6.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="823.0" y="718.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (2 samples, 0.08%)</title><rect x="825.8" y="691.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="828.8" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Node.&lt;init&gt; (1 samples, 0.04%)</title><rect x="826.8" y="707.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="829.8" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (11 samples, 0.45%)</title><rect x="827.3" y="707.0" width="5.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="830.3" y="718.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (11 samples, 0.45%)</title><rect x="827.3" y="691.0" width="5.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="830.3" y="702.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (11 samples, 0.45%)</title><rect x="827.3" y="675.0" width="5.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="830.3" y="686.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (11 samples, 0.45%)</title><rect x="827.3" y="659.0" width="5.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="830.3" y="670.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (3 samples, 0.12%)</title><rect x="830.2" y="643.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="833.2" y="654.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (3 samples, 0.12%)</title><rect x="830.2" y="627.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="833.2" y="638.0"></text>
</g>
<g>
<title>vectorizedMismatch (2 samples, 0.08%)</title><rect x="831.6" y="643.0" width="1.0" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="834.6" y="654.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.findHandlerByHost (1 samples, 0.04%)</title><rect x="832.6" y="835.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="835.6" y="846.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (3 samples, 0.12%)</title><rect x="833.1" y="835.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="836.1" y="846.0"></text>
</g>
<g>
<title>java/util/HashMap.get (3 samples, 0.12%)</title><rect x="833.1" y="819.0" width="1.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="836.1" y="830.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (1 samples, 0.04%)</title><rect x="833.1" y="803.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="836.1" y="814.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (2 samples, 0.08%)</title><rect x="833.5" y="803.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="836.5" y="814.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (2 samples, 0.08%)</title><rect x="833.5" y="787.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="836.5" y="798.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (2 samples, 0.08%)</title><rect x="833.5" y="771.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="836.5" y="782.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (1 samples, 0.04%)</title><rect x="834.5" y="835.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="837.5" y="846.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (1 samples, 0.04%)</title><rect x="834.5" y="819.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="837.5" y="830.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (5 samples, 0.20%)</title><rect x="835.0" y="867.0" width="2.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="838.0" y="878.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (4 samples, 0.16%)</title><rect x="835.0" y="851.0" width="1.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="838.0" y="862.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2 samples, 0.08%)</title><rect x="836.0" y="835.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="839.0" y="846.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.startsWith (1 samples, 0.04%)</title><rect x="836.9" y="851.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="839.9" y="862.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (2 samples, 0.08%)</title><rect x="837.4" y="867.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="840.4" y="878.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.04%)</title><rect x="837.9" y="851.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="840.9" y="862.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.04%)</title><rect x="837.9" y="835.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="840.9" y="846.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (7 samples, 0.29%)</title><rect x="838.4" y="867.0" width="3.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="841.4" y="878.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2 samples, 0.08%)</title><rect x="840.8" y="851.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="843.8" y="862.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (56 samples, 2.29%)</title><rect x="841.7" y="883.0" width="27.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="844.7" y="894.0">o..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (55 samples, 2.25%)</title><rect x="842.2" y="867.0" width="26.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="845.2" y="878.0">o..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (8 samples, 0.33%)</title><rect x="843.2" y="851.0" width="3.9" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="846.2" y="862.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (1 samples, 0.04%)</title><rect x="844.2" y="835.0" width="0.4" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="847.2" y="846.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.04%)</title><rect x="844.6" y="835.0" width="0.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="847.6" y="846.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (1 samples, 0.04%)</title><rect x="845.1" y="835.0" width="0.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="848.1" y="846.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (3 samples, 0.12%)</title><rect x="845.6" y="835.0" width="1.5" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="848.6" y="846.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (2 samples, 0.08%)</title><rect x="846.1" y="819.0" width="1.0" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="849.1" y="830.0"></text>
</g>
<g>
<title>ResourceMark::reset_to_mark() (1 samples, 0.04%)</title><rect x="846.6" y="803.0" width="0.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="849.6" y="814.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (1 samples, 0.04%)</title><rect x="847.1" y="851.0" width="0.4" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="850.1" y="862.0"></text>
</g>
<g>
<title>recv (44 samples, 1.80%)</title><rect x="847.5" y="851.0" width="21.3" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="850.5" y="862.0">r..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (37 samples, 1.51%)</title><rect x="850.9" y="835.0" width="17.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="853.9" y="846.0"></text>
</g>
<g>
<title>do_syscall_64 (37 samples, 1.51%)</title><rect x="850.9" y="819.0" width="17.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="853.9" y="830.0"></text>
</g>
<g>
<title>__x64_sys_recvfrom (29 samples, 1.19%)</title><rect x="854.8" y="803.0" width="14.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="857.8" y="814.0"></text>
</g>
<g>
<title>__sys_recvfrom (26 samples, 1.06%)</title><rect x="854.8" y="787.0" width="12.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="857.8" y="798.0"></text>
</g>
<g>
<title>sock_recvmsg (23 samples, 0.94%)</title><rect x="854.8" y="771.0" width="11.1" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="857.8" y="782.0"></text>
</g>
<g>
<title>inet6_recvmsg (20 samples, 0.82%)</title><rect x="854.8" y="755.0" width="9.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="857.8" y="766.0"></text>
</g>
<g>
<title>tcp_recvmsg (20 samples, 0.82%)</title><rect x="854.8" y="739.0" width="9.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="857.8" y="750.0"></text>
</g>
<g>
<title>__kfree_skb (5 samples, 0.20%)</title><rect x="857.2" y="723.0" width="2.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="860.2" y="734.0"></text>
</g>
<g>
<title>skb_release_all (5 samples, 0.20%)</title><rect x="857.2" y="707.0" width="2.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="860.2" y="718.0"></text>
</g>
<g>
<title>skb_release_data (2 samples, 0.08%)</title><rect x="857.2" y="691.0" width="1.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="860.2" y="702.0"></text>
</g>
<g>
<title>skb_release_head_state (3 samples, 0.12%)</title><rect x="858.2" y="691.0" width="1.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="861.2" y="702.0"></text>
</g>
<g>
<title>dst_release (3 samples, 0.12%)</title><rect x="858.2" y="675.0" width="1.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="861.2" y="686.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (2 samples, 0.08%)</title><rect x="859.6" y="723.0" width="1.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="862.6" y="734.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (7 samples, 0.29%)</title><rect x="860.6" y="723.0" width="3.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="863.6" y="734.0"></text>
</g>
<g>
<title>__skb_datagram_iter (7 samples, 0.29%)</title><rect x="860.6" y="707.0" width="3.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="863.6" y="718.0"></text>
</g>
<g>
<title>simple_copy_to_iter (6 samples, 0.25%)</title><rect x="861.1" y="691.0" width="2.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="864.1" y="702.0"></text>
</g>
<g>
<title>__check_object_size (3 samples, 0.12%)</title><rect x="861.1" y="675.0" width="1.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="864.1" y="686.0"></text>
</g>
<g>
<title>__virt_addr_valid (1 samples, 0.04%)</title><rect x="862.0" y="659.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="865.0" y="670.0"></text>
</g>
<g>
<title>_copy_to_iter (3 samples, 0.12%)</title><rect x="862.5" y="675.0" width="1.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="865.5" y="686.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (3 samples, 0.12%)</title><rect x="862.5" y="659.0" width="1.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="865.5" y="670.0"></text>
</g>
<g>
<title>tcp_rcv_space_adjust (1 samples, 0.04%)</title><rect x="864.0" y="723.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="867.0" y="734.0"></text>
</g>
<g>
<title>ktime_get (1 samples, 0.04%)</title><rect x="864.0" y="707.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="867.0" y="718.0"></text>
</g>
<g>
<title>security_socket_recvmsg (3 samples, 0.12%)</title><rect x="864.4" y="755.0" width="1.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="867.4" y="766.0"></text>
</g>
<g>
<title>apparmor_socket_recvmsg (3 samples, 0.12%)</title><rect x="864.4" y="739.0" width="1.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="867.4" y="750.0"></text>
</g>
<g>
<title>aa_sk_perm (3 samples, 0.12%)</title><rect x="864.4" y="723.0" width="1.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="867.4" y="734.0"></text>
</g>
<g>
<title>sockfd_lookup_light (3 samples, 0.12%)</title><rect x="865.9" y="771.0" width="1.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="868.9" y="782.0"></text>
</g>
<g>
<title>__fdget (1 samples, 0.04%)</title><rect x="865.9" y="755.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="868.9" y="766.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.04%)</title><rect x="865.9" y="739.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="868.9" y="750.0"></text>
</g>
<g>
<title>__fget (1 samples, 0.04%)</title><rect x="865.9" y="723.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="868.9" y="734.0"></text>
</g>
<g>
<title>__fget_light (2 samples, 0.08%)</title><rect x="866.4" y="755.0" width="0.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="869.4" y="766.0"></text>
</g>
<g>
<title>import_single_range (3 samples, 0.12%)</title><rect x="867.3" y="787.0" width="1.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="870.3" y="798.0"></text>
</g>
<g>
<title>[NIO Selector #6 tid=4855] (298 samples, 12.20%)</title><rect x="868.8" y="947.0" width="143.9" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="871.8" y="958.0">[NIO Selector #6 t..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (298 samples, 12.20%)</title><rect x="868.8" y="931.0" width="143.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="871.8" y="942.0">one/nio/server/Sel..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (56 samples, 2.29%)</title><rect x="868.8" y="915.0" width="27.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="871.8" y="926.0">o..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (56 samples, 2.29%)</title><rect x="868.8" y="899.0" width="27.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="871.8" y="910.0">o..</text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (3 samples, 0.12%)</title><rect x="872.2" y="883.0" width="1.4" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="875.2" y="894.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSelector_epollWait (2 samples, 0.08%)</title><rect x="873.6" y="883.0" width="1.0" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="876.6" y="894.0"></text>
</g>
<g>
<title>clock_gettime (5 samples, 0.20%)</title><rect x="874.6" y="883.0" width="2.4" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="877.6" y="894.0"></text>
</g>
<g>
<title>clock_gettime (2 samples, 0.08%)</title><rect x="876.0" y="867.0" width="1.0" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="879.0" y="878.0"></text>
</g>
<g>
<title>[vdso] (2 samples, 0.08%)</title><rect x="876.0" y="851.0" width="1.0" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="879.0" y="862.0"></text>
</g>
<g>
<title>epoll_wait (39 samples, 1.60%)</title><rect x="877.0" y="883.0" width="18.8" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="880.0" y="894.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (30 samples, 1.23%)</title><rect x="881.4" y="867.0" width="14.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="884.4" y="878.0"></text>
</g>
<g>
<title>do_syscall_64 (30 samples, 1.23%)</title><rect x="881.4" y="851.0" width="14.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="884.4" y="862.0"></text>
</g>
<g>
<title>__x64_sys_epoll_wait (29 samples, 1.19%)</title><rect x="881.8" y="835.0" width="14.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="884.8" y="846.0"></text>
</g>
<g>
<title>do_epoll_wait (29 samples, 1.19%)</title><rect x="881.8" y="819.0" width="14.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="884.8" y="830.0"></text>
</g>
<g>
<title>__fdget (2 samples, 0.08%)</title><rect x="881.8" y="803.0" width="1.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="884.8" y="814.0"></text>
</g>
<g>
<title>__fget_light (2 samples, 0.08%)</title><rect x="881.8" y="787.0" width="1.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="884.8" y="798.0"></text>
</g>
<g>
<title>__fget (2 samples, 0.08%)</title><rect x="881.8" y="771.0" width="1.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="884.8" y="782.0"></text>
</g>
<g>
<title>ep_poll (26 samples, 1.06%)</title><rect x="882.8" y="803.0" width="12.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="885.8" y="814.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.0 (13 samples, 0.53%)</title><rect x="885.2" y="787.0" width="6.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="888.2" y="798.0"></text>
</g>
<g>
<title>ep_send_events_proc (8 samples, 0.33%)</title><rect x="885.7" y="771.0" width="3.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="888.7" y="782.0"></text>
</g>
<g>
<title>ep_item_poll.isra.0 (4 samples, 0.16%)</title><rect x="887.6" y="755.0" width="2.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="890.6" y="766.0"></text>
</g>
<g>
<title>sock_poll (4 samples, 0.16%)</title><rect x="887.6" y="739.0" width="2.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="890.6" y="750.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (3 samples, 0.12%)</title><rect x="888.1" y="723.0" width="1.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="891.1" y="734.0"></text>
</g>
<g>
<title>mutex_lock (4 samples, 0.16%)</title><rect x="889.6" y="771.0" width="1.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="892.6" y="782.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (7 samples, 0.29%)</title><rect x="891.5" y="787.0" width="3.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="894.5" y="798.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (7 samples, 0.29%)</title><rect x="891.5" y="771.0" width="3.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="894.5" y="782.0"></text>
</g>
<g>
<title>schedule (7 samples, 0.29%)</title><rect x="891.5" y="755.0" width="3.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="894.5" y="766.0"></text>
</g>
<g>
<title>__schedule (7 samples, 0.29%)</title><rect x="891.5" y="739.0" width="3.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="894.5" y="750.0"></text>
</g>
<g>
<title>finish_task_switch (4 samples, 0.16%)</title><rect x="892.9" y="723.0" width="2.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="895.9" y="734.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (1 samples, 0.04%)</title><rect x="894.9" y="787.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="897.9" y="798.0"></text>
</g>
<g>
<title>fput_many (1 samples, 0.04%)</title><rect x="895.4" y="803.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="898.4" y="814.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (241 samples, 9.86%)</title><rect x="895.8" y="915.0" width="116.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="898.8" y="926.0">one/nio/net/Se..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (231 samples, 9.46%)</title><rect x="900.2" y="899.0" width="111.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="903.2" y="910.0">one/nio/http/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (181 samples, 7.41%)</title><rect x="900.7" y="883.0" width="87.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="903.7" y="894.0">one/nio/ht..</text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.04%)</title><rect x="902.6" y="867.0" width="0.5" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="905.6" y="878.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (162 samples, 6.63%)</title><rect x="903.1" y="867.0" width="78.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="906.1" y="878.0">one/nio/h..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (162 samples, 6.63%)</title><rect x="903.1" y="851.0" width="78.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="906.1" y="862.0">one/nio/h..</text>
</g>
<g>
<title>RequestHandler0_entity.handleRequest (159 samples, 6.51%)</title><rect x="903.6" y="835.0" width="76.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="906.6" y="846.0">RequestH..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (117 samples, 4.79%)</title><rect x="904.1" y="819.0" width="56.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="907.1" y="830.0">one/ni..</text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (2 samples, 0.08%)</title><rect x="904.1" y="803.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="907.1" y="814.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (2 samples, 0.08%)</title><rect x="904.1" y="787.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="907.1" y="798.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (2 samples, 0.08%)</title><rect x="904.1" y="771.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="907.1" y="782.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.04%)</title><rect x="904.5" y="755.0" width="0.5" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="907.5" y="766.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (113 samples, 4.63%)</title><rect x="905.0" y="803.0" width="54.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="908.0" y="814.0">one/n..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (3 samples, 0.12%)</title><rect x="905.0" y="787.0" width="1.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="908.0" y="798.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (2 samples, 0.08%)</title><rect x="905.5" y="771.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="908.5" y="782.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (2 samples, 0.08%)</title><rect x="905.5" y="755.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="908.5" y="766.0"></text>
</g>
<g>
<title>java/lang/String.charAt (2 samples, 0.08%)</title><rect x="905.5" y="739.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="908.5" y="750.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.04%)</title><rect x="906.0" y="723.0" width="0.5" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="909.0" y="734.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (110 samples, 4.50%)</title><rect x="906.5" y="787.0" width="53.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="909.5" y="798.0">one/n..</text>
</g>
<g>
<title>one/nio/net/Session.write (110 samples, 4.50%)</title><rect x="906.5" y="771.0" width="53.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="909.5" y="782.0">one/n..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (1 samples, 0.04%)</title><rect x="906.5" y="755.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="909.5" y="766.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (109 samples, 4.46%)</title><rect x="907.0" y="755.0" width="52.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="910.0" y="766.0">one/n..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (109 samples, 4.46%)</title><rect x="907.0" y="739.0" width="52.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="910.0" y="750.0">one/n..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (1 samples, 0.04%)</title><rect x="907.4" y="723.0" width="0.5" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="910.4" y="734.0"></text>
</g>
<g>
<title>void AccessInternal::arraycopy_conjoint&lt;signed char&gt;(signed char*, signed char*, unsigned long) (1 samples, 0.04%)</title><rect x="907.4" y="707.0" width="0.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="910.4" y="718.0"></text>
</g>
<g>
<title>__send (106 samples, 4.34%)</title><rect x="907.9" y="723.0" width="51.2" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="910.9" y="734.0">__send</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (103 samples, 4.22%)</title><rect x="909.4" y="707.0" width="49.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="912.4" y="718.0">entry..</text>
</g>
<g>
<title>do_syscall_64 (103 samples, 4.22%)</title><rect x="909.4" y="691.0" width="49.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="912.4" y="702.0">do_sy..</text>
</g>
<g>
<title>__x64_sys_sendto (102 samples, 4.18%)</title><rect x="909.9" y="675.0" width="49.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="912.9" y="686.0">__x64..</text>
</g>
<g>
<title>__sys_sendto (102 samples, 4.18%)</title><rect x="909.9" y="659.0" width="49.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="912.9" y="670.0">__sys..</text>
</g>
<g>
<title>sock_sendmsg (102 samples, 4.18%)</title><rect x="909.9" y="643.0" width="49.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="912.9" y="654.0">sock_..</text>
</g>
<g>
<title>inet6_sendmsg (100 samples, 4.09%)</title><rect x="909.9" y="627.0" width="48.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="912.9" y="638.0">inet..</text>
</g>
<g>
<title>tcp_sendmsg (99 samples, 4.05%)</title><rect x="909.9" y="611.0" width="47.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="912.9" y="622.0">tcp_..</text>
</g>
<g>
<title>tcp_push (1 samples, 0.04%)</title><rect x="909.9" y="595.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="912.9" y="606.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (96 samples, 3.93%)</title><rect x="910.3" y="595.0" width="46.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="913.3" y="606.0">tcp_..</text>
</g>
<g>
<title>__check_object_size (3 samples, 0.12%)</title><rect x="911.8" y="579.0" width="1.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="914.8" y="590.0"></text>
</g>
<g>
<title>__virt_addr_valid (3 samples, 0.12%)</title><rect x="911.8" y="563.0" width="1.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="914.8" y="574.0"></text>
</g>
<g>
<title>sk_page_frag_refill (2 samples, 0.08%)</title><rect x="913.2" y="579.0" width="1.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="916.2" y="590.0"></text>
</g>
<g>
<title>skb_page_frag_refill (2 samples, 0.08%)</title><rect x="913.2" y="563.0" width="1.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="916.2" y="574.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (5 samples, 0.20%)</title><rect x="914.2" y="579.0" width="2.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="917.2" y="590.0"></text>
</g>
<g>
<title>__alloc_skb (5 samples, 0.20%)</title><rect x="914.2" y="563.0" width="2.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="917.2" y="574.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.0 (2 samples, 0.08%)</title><rect x="914.2" y="547.0" width="1.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="917.2" y="558.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (2 samples, 0.08%)</title><rect x="914.2" y="531.0" width="1.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="917.2" y="542.0"></text>
</g>
<g>
<title>kmalloc_slab (1 samples, 0.04%)</title><rect x="914.7" y="515.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="917.7" y="526.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (1 samples, 0.04%)</title><rect x="915.2" y="547.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="918.2" y="558.0"></text>
</g>
<g>
<title>ksize (2 samples, 0.08%)</title><rect x="915.6" y="547.0" width="1.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="918.6" y="558.0"></text>
</g>
<g>
<title>__ksize (2 samples, 0.08%)</title><rect x="915.6" y="531.0" width="1.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="918.6" y="542.0"></text>
</g>
<g>
<title>skb_entail (2 samples, 0.08%)</title><rect x="916.6" y="579.0" width="1.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="919.6" y="590.0"></text>
</g>
<g>
<title>tcp_push (79 samples, 3.23%)</title><rect x="917.6" y="579.0" width="38.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="920.6" y="590.0">tcp..</text>
</g>
<g>
<title>__tcp_push_pending_frames (77 samples, 3.15%)</title><rect x="917.6" y="563.0" width="37.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="920.6" y="574.0">__t..</text>
</g>
<g>
<title>tcp_write_xmit (77 samples, 3.15%)</title><rect x="917.6" y="547.0" width="37.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="920.6" y="558.0">tcp..</text>
</g>
<g>
<title>__tcp_transmit_skb (71 samples, 2.91%)</title><rect x="918.5" y="531.0" width="34.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="921.5" y="542.0">__..</text>
</g>
<g>
<title>__skb_clone (1 samples, 0.04%)</title><rect x="918.5" y="515.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="921.5" y="526.0"></text>
</g>
<g>
<title>__tcp_v4_send_check (1 samples, 0.04%)</title><rect x="919.0" y="515.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="922.0" y="526.0"></text>
</g>
<g>
<title>bictcp_cwnd_event (1 samples, 0.04%)</title><rect x="919.5" y="515.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="922.5" y="526.0"></text>
</g>
<g>
<title>ip_queue_xmit (66 samples, 2.70%)</title><rect x="920.0" y="515.0" width="31.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="923.0" y="526.0">ip..</text>
</g>
<g>
<title>__ip_queue_xmit (66 samples, 2.70%)</title><rect x="920.0" y="499.0" width="31.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="923.0" y="510.0">__..</text>
</g>
<g>
<title>ip_local_out (65 samples, 2.66%)</title><rect x="920.5" y="483.0" width="31.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="923.5" y="494.0">ip..</text>
</g>
<g>
<title>ip_output (63 samples, 2.58%)</title><rect x="921.0" y="467.0" width="30.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="924.0" y="478.0">ip..</text>
</g>
<g>
<title>ip_finish_output (62 samples, 2.54%)</title><rect x="921.4" y="451.0" width="30.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="924.4" y="462.0">ip..</text>
</g>
<g>
<title>__ip_finish_output (61 samples, 2.50%)</title><rect x="921.9" y="435.0" width="29.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="924.9" y="446.0">__..</text>
</g>
<g>
<title>ip_finish_output2 (61 samples, 2.50%)</title><rect x="921.9" y="419.0" width="29.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="924.9" y="430.0">ip..</text>
</g>
<g>
<title>__local_bh_enable_ip (50 samples, 2.05%)</title><rect x="923.9" y="403.0" width="24.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="926.9" y="414.0">_..</text>
</g>
<g>
<title>do_softirq.part.0 (50 samples, 2.05%)</title><rect x="923.9" y="387.0" width="24.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="926.9" y="398.0">d..</text>
</g>
<g>
<title>do_softirq_own_stack (49 samples, 2.01%)</title><rect x="924.3" y="371.0" width="23.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="927.3" y="382.0">d..</text>
</g>
<g>
<title>__softirqentry_text_start (49 samples, 2.01%)</title><rect x="924.3" y="355.0" width="23.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="927.3" y="366.0">_..</text>
</g>
<g>
<title>net_rx_action (48 samples, 1.96%)</title><rect x="924.8" y="339.0" width="23.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="927.8" y="350.0">n..</text>
</g>
<g>
<title>process_backlog (47 samples, 1.92%)</title><rect x="925.3" y="323.0" width="22.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="928.3" y="334.0">p..</text>
</g>
<g>
<title>__netif_receive_skb (44 samples, 1.80%)</title><rect x="926.3" y="307.0" width="21.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="929.3" y="318.0">_..</text>
</g>
<g>
<title>__netif_receive_skb_one_core (44 samples, 1.80%)</title><rect x="926.3" y="291.0" width="21.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="929.3" y="302.0">_..</text>
</g>
<g>
<title>__netif_receive_skb_core (4 samples, 0.16%)</title><rect x="926.3" y="275.0" width="1.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="929.3" y="286.0"></text>
</g>
<g>
<title>ip_rcv (40 samples, 1.64%)</title><rect x="928.2" y="275.0" width="19.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="931.2" y="286.0"></text>
</g>
<g>
<title>ip_rcv_core.isra.0 (2 samples, 0.08%)</title><rect x="928.2" y="259.0" width="1.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="931.2" y="270.0"></text>
</g>
<g>
<title>ip_rcv_finish (38 samples, 1.56%)</title><rect x="929.2" y="259.0" width="18.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="932.2" y="270.0"></text>
</g>
<g>
<title>ip_local_deliver (38 samples, 1.56%)</title><rect x="929.2" y="243.0" width="18.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="932.2" y="254.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (37 samples, 1.51%)</title><rect x="929.7" y="227.0" width="17.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="932.7" y="238.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (37 samples, 1.51%)</title><rect x="929.7" y="211.0" width="17.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="932.7" y="222.0"></text>
</g>
<g>
<title>raw_local_deliver (1 samples, 0.04%)</title><rect x="930.1" y="195.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="933.1" y="206.0"></text>
</g>
<g>
<title>tcp_v4_rcv (35 samples, 1.43%)</title><rect x="930.6" y="195.0" width="16.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="933.6" y="206.0"></text>
</g>
<g>
<title>__inet_lookup_established (2 samples, 0.08%)</title><rect x="930.6" y="179.0" width="1.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="933.6" y="190.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (2 samples, 0.08%)</title><rect x="931.6" y="179.0" width="1.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="934.6" y="190.0"></text>
</g>
<g>
<title>apparmor_socket_sock_rcv_skb (1 samples, 0.04%)</title><rect x="931.6" y="163.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="934.6" y="174.0"></text>
</g>
<g>
<title>security_sock_rcv_skb (1 samples, 0.04%)</title><rect x="932.1" y="163.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="935.1" y="174.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (31 samples, 1.27%)</title><rect x="932.6" y="179.0" width="14.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="935.6" y="190.0"></text>
</g>
<g>
<title>tcp_check_space (2 samples, 0.08%)</title><rect x="932.6" y="163.0" width="0.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="935.6" y="174.0"></text>
</g>
<g>
<title>tcp_rcv_established (29 samples, 1.19%)</title><rect x="933.5" y="163.0" width="14.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="936.5" y="174.0"></text>
</g>
<g>
<title>__tcp_ack_snd_check (2 samples, 0.08%)</title><rect x="934.0" y="147.0" width="1.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="937.0" y="158.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (2 samples, 0.08%)</title><rect x="934.0" y="131.0" width="1.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="937.0" y="142.0"></text>
</g>
<g>
<title>sk_reset_timer (2 samples, 0.08%)</title><rect x="934.0" y="115.0" width="1.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="937.0" y="126.0"></text>
</g>
<g>
<title>mod_timer (1 samples, 0.04%)</title><rect x="934.5" y="99.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="937.5" y="110.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.04%)</title><rect x="934.5" y="83.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="937.5" y="94.0"></text>
</g>
<g>
<title>tcp_ack (9 samples, 0.37%)</title><rect x="935.0" y="147.0" width="4.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="938.0" y="158.0"></text>
</g>
<g>
<title>bictcp_acked (1 samples, 0.04%)</title><rect x="935.9" y="131.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="938.9" y="142.0"></text>
</g>
<g>
<title>rb_next (1 samples, 0.04%)</title><rect x="936.4" y="131.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="939.4" y="142.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (5 samples, 0.20%)</title><rect x="936.9" y="131.0" width="2.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="939.9" y="142.0"></text>
</g>
<g>
<title>__kfree_skb (1 samples, 0.04%)</title><rect x="937.9" y="115.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="940.9" y="126.0"></text>
</g>
<g>
<title>skb_release_all (1 samples, 0.04%)</title><rect x="937.9" y="99.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="940.9" y="110.0"></text>
</g>
<g>
<title>skb_release_data (1 samples, 0.04%)</title><rect x="937.9" y="83.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="940.9" y="94.0"></text>
</g>
<g>
<title>skb_free_head (1 samples, 0.04%)</title><rect x="937.9" y="67.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="940.9" y="78.0"></text>
</g>
<g>
<title>kfree (1 samples, 0.04%)</title><rect x="937.9" y="51.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="940.9" y="62.0"></text>
</g>
<g>
<title>__slab_free (1 samples, 0.04%)</title><rect x="937.9" y="35.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="940.9" y="46.0"></text>
</g>
<g>
<title>tcp_ack_update_rtt.isra.0 (1 samples, 0.04%)</title><rect x="938.4" y="115.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="941.4" y="126.0"></text>
</g>
<g>
<title>tcp_rate_skb_delivered (1 samples, 0.04%)</title><rect x="938.8" y="115.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="941.8" y="126.0"></text>
</g>
<g>
<title>tcp_data_ready (15 samples, 0.61%)</title><rect x="939.3" y="147.0" width="7.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="942.3" y="158.0"></text>
</g>
<g>
<title>__wake_up_sync_key (1 samples, 0.04%)</title><rect x="939.3" y="131.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="942.3" y="142.0"></text>
</g>
<g>
<title>sock_def_readable (14 samples, 0.57%)</title><rect x="939.8" y="131.0" width="6.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="942.8" y="142.0"></text>
</g>
<g>
<title>__wake_up_sync_key (14 samples, 0.57%)</title><rect x="939.8" y="115.0" width="6.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="942.8" y="126.0"></text>
</g>
<g>
<title>__wake_up_common_lock (14 samples, 0.57%)</title><rect x="939.8" y="99.0" width="6.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="942.8" y="110.0"></text>
</g>
<g>
<title>__lock_text_start (13 samples, 0.53%)</title><rect x="940.3" y="83.0" width="6.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="943.3" y="94.0"></text>
</g>
<g>
<title>tcp_event_data_recv (1 samples, 0.04%)</title><rect x="946.6" y="147.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="949.6" y="158.0"></text>
</g>
<g>
<title>tcp_rate_gen (1 samples, 0.04%)</title><rect x="947.0" y="147.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="950.0" y="158.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (1 samples, 0.04%)</title><rect x="947.5" y="307.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="950.5" y="318.0"></text>
</g>
<g>
<title>dev_queue_xmit (7 samples, 0.29%)</title><rect x="948.0" y="403.0" width="3.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="951.0" y="414.0"></text>
</g>
<g>
<title>__dev_queue_xmit (7 samples, 0.29%)</title><rect x="948.0" y="387.0" width="3.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="951.0" y="398.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (3 samples, 0.12%)</title><rect x="949.0" y="371.0" width="1.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="952.0" y="382.0"></text>
</g>
<g>
<title>loopback_xmit (2 samples, 0.08%)</title><rect x="949.0" y="355.0" width="0.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="952.0" y="366.0"></text>
</g>
<g>
<title>netif_rx (1 samples, 0.04%)</title><rect x="949.0" y="339.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="952.0" y="350.0"></text>
</g>
<g>
<title>netif_rx_internal (1 samples, 0.04%)</title><rect x="949.0" y="323.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="952.0" y="334.0"></text>
</g>
<g>
<title>enqueue_to_backlog (1 samples, 0.04%)</title><rect x="949.0" y="307.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="952.0" y="318.0"></text>
</g>
<g>
<title>sk_free (1 samples, 0.04%)</title><rect x="949.5" y="339.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="952.5" y="350.0"></text>
</g>
<g>
<title>skb_clone_tx_timestamp (1 samples, 0.04%)</title><rect x="949.9" y="355.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="952.9" y="366.0"></text>
</g>
<g>
<title>validate_xmit_skb (1 samples, 0.04%)</title><rect x="950.4" y="371.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="953.4" y="382.0"></text>
</g>
<g>
<title>validate_xmit_xfrm (1 samples, 0.04%)</title><rect x="950.9" y="371.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="953.9" y="382.0"></text>
</g>
<g>
<title>ip_send_check (1 samples, 0.04%)</title><rect x="951.4" y="467.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="954.4" y="478.0"></text>
</g>
<g>
<title>tcp_established_options (2 samples, 0.08%)</title><rect x="951.9" y="515.0" width="0.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="954.9" y="526.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (3 samples, 0.12%)</title><rect x="952.8" y="531.0" width="1.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="955.8" y="542.0"></text>
</g>
<g>
<title>tcp_rearm_rto (3 samples, 0.12%)</title><rect x="952.8" y="515.0" width="1.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="955.8" y="526.0"></text>
</g>
<g>
<title>sk_reset_timer (1 samples, 0.04%)</title><rect x="953.8" y="499.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="956.8" y="510.0"></text>
</g>
<g>
<title>lock_timer_base (1 samples, 0.04%)</title><rect x="953.8" y="483.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="956.8" y="494.0"></text>
</g>
<g>
<title>tcp_small_queue_check.isra.0 (1 samples, 0.04%)</title><rect x="954.3" y="531.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="957.3" y="542.0"></text>
</g>
<g>
<title>tcp_write_xmit (2 samples, 0.08%)</title><rect x="954.8" y="563.0" width="0.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="957.8" y="574.0"></text>
</g>
<g>
<title>tcp_send_mss (2 samples, 0.08%)</title><rect x="955.7" y="579.0" width="1.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="958.7" y="590.0"></text>
</g>
<g>
<title>tcp_current_mss (2 samples, 0.08%)</title><rect x="955.7" y="563.0" width="1.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="958.7" y="574.0"></text>
</g>
<g>
<title>ipv4_mtu (1 samples, 0.04%)</title><rect x="956.2" y="547.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="959.2" y="558.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (2 samples, 0.08%)</title><rect x="956.7" y="595.0" width="1.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="959.7" y="606.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (1 samples, 0.04%)</title><rect x="957.7" y="611.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="960.7" y="622.0"></text>
</g>
<g>
<title>inet_send_prepare (1 samples, 0.04%)</title><rect x="958.2" y="627.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="961.2" y="638.0"></text>
</g>
<g>
<title>security_socket_sendmsg (1 samples, 0.04%)</title><rect x="958.6" y="627.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="961.6" y="638.0"></text>
</g>
<g>
<title>apparmor_socket_sendmsg (1 samples, 0.04%)</title><rect x="958.6" y="611.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="961.6" y="622.0"></text>
</g>
<g>
<title>aa_sk_perm (1 samples, 0.04%)</title><rect x="958.6" y="595.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="961.6" y="606.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (1 samples, 0.04%)</title><rect x="959.1" y="723.0" width="0.5" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="962.1" y="734.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (2 samples, 0.08%)</title><rect x="959.6" y="803.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="962.6" y="814.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (5 samples, 0.20%)</title><rect x="960.6" y="819.0" width="2.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="963.6" y="830.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (3 samples, 0.12%)</title><rect x="961.5" y="803.0" width="1.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="964.5" y="814.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.04%)</title><rect x="962.5" y="787.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="965.5" y="798.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (1 samples, 0.04%)</title><rect x="962.5" y="771.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="965.5" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivlev/ServiceController.entity (36 samples, 1.47%)</title><rect x="963.0" y="819.0" width="17.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="966.0" y="830.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivlev/ServiceController.getResponse (36 samples, 1.47%)</title><rect x="963.0" y="803.0" width="17.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="966.0" y="814.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivlev/ServiceController.methodPut (36 samples, 1.47%)</title><rect x="963.0" y="787.0" width="17.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="966.0" y="798.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (2 samples, 0.08%)</title><rect x="963.0" y="771.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="966.0" y="782.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (2 samples, 0.08%)</title><rect x="963.0" y="755.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="966.0" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.upsert (34 samples, 1.39%)</title><rect x="964.0" y="771.0" width="16.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="967.0" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock (6 samples, 0.25%)</title><rect x="964.0" y="755.0" width="2.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="967.0" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireShared (6 samples, 0.25%)</title><rect x="964.0" y="739.0" width="2.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="967.0" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryAcquireShared (5 samples, 0.20%)</title><rect x="964.4" y="723.0" width="2.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="967.4" y="734.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (2 samples, 0.08%)</title><rect x="964.4" y="707.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="967.4" y="718.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (2 samples, 0.08%)</title><rect x="964.4" y="691.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="967.4" y="702.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.set (2 samples, 0.08%)</title><rect x="964.4" y="675.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="967.4" y="686.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.set (1 samples, 0.04%)</title><rect x="965.4" y="707.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="968.4" y="718.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.set (1 samples, 0.04%)</title><rect x="965.4" y="691.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="968.4" y="702.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap$Entry.&lt;init&gt; (1 samples, 0.04%)</title><rect x="965.4" y="675.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="968.4" y="686.0"></text>
</g>
<g>
<title>java/lang/ref/WeakReference.&lt;init&gt; (1 samples, 0.04%)</title><rect x="965.4" y="659.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="968.4" y="670.0"></text>
</g>
<g>
<title>java/lang/ref/Reference.&lt;init&gt; (1 samples, 0.04%)</title><rect x="965.4" y="643.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="968.4" y="654.0"></text>
</g>
<g>
<title>java/lang/ref/Reference.&lt;init&gt; (1 samples, 0.04%)</title><rect x="965.4" y="627.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="968.4" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryReleaseShared (1 samples, 0.04%)</title><rect x="965.4" y="611.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="968.4" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.fullTryAcquireShared (1 samples, 0.04%)</title><rect x="965.9" y="707.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="968.9" y="718.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.set (1 samples, 0.04%)</title><rect x="965.9" y="691.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="968.9" y="702.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.set (1 samples, 0.04%)</title><rect x="965.9" y="675.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="968.9" y="686.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.04%)</title><rect x="965.9" y="659.0" width="0.5" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="968.9" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/MemTable.upsert (1 samples, 0.04%)</title><rect x="966.4" y="707.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="969.4" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/MemTable.upsert (28 samples, 1.15%)</title><rect x="966.8" y="755.0" width="13.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="969.8" y="766.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (1 samples, 0.04%)</title><rect x="966.8" y="739.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="969.8" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.put (27 samples, 1.11%)</title><rect x="967.3" y="739.0" width="13.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="970.3" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (24 samples, 0.98%)</title><rect x="968.3" y="723.0" width="11.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="971.3" y="734.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (2 samples, 0.08%)</title><rect x="968.3" y="707.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="971.3" y="718.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (2 samples, 0.08%)</title><rect x="968.3" y="691.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="971.3" y="702.0"></text>
</g>
<g>
<title>java/util/Objects.requireNonNull (1 samples, 0.04%)</title><rect x="968.8" y="675.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="971.8" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Index.&lt;init&gt; (11 samples, 0.45%)</title><rect x="969.3" y="707.0" width="5.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="972.3" y="718.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (2 samples, 0.08%)</title><rect x="973.6" y="691.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="976.6" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Node.&lt;init&gt; (1 samples, 0.04%)</title><rect x="974.6" y="707.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="977.6" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.addIndices (2 samples, 0.08%)</title><rect x="975.1" y="707.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="978.1" y="718.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (1 samples, 0.04%)</title><rect x="975.5" y="691.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="978.5" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (8 samples, 0.33%)</title><rect x="976.0" y="707.0" width="3.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="979.0" y="718.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (8 samples, 0.33%)</title><rect x="976.0" y="691.0" width="3.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="979.0" y="702.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (8 samples, 0.33%)</title><rect x="976.0" y="675.0" width="3.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="979.0" y="686.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (8 samples, 0.33%)</title><rect x="976.0" y="659.0" width="3.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="979.0" y="670.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (3 samples, 0.12%)</title><rect x="977.0" y="643.0" width="1.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="980.0" y="654.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (3 samples, 0.12%)</title><rect x="977.0" y="627.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="980.0" y="638.0"></text>
</g>
<g>
<title>vectorizedMismatch (3 samples, 0.12%)</title><rect x="978.4" y="643.0" width="1.5" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="981.4" y="654.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.04%)</title><rect x="979.9" y="723.0" width="0.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="982.9" y="734.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.04%)</title><rect x="979.9" y="707.0" width="0.5" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="982.9" y="718.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.04%)</title><rect x="979.9" y="691.0" width="0.5" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="982.9" y="702.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.findHandlerByHost (1 samples, 0.04%)</title><rect x="980.4" y="835.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="983.4" y="846.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (1 samples, 0.04%)</title><rect x="980.9" y="835.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="983.9" y="846.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (1 samples, 0.04%)</title><rect x="980.9" y="819.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="983.9" y="830.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (5 samples, 0.20%)</title><rect x="981.3" y="867.0" width="2.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="984.3" y="878.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (1 samples, 0.04%)</title><rect x="981.3" y="851.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="984.3" y="862.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.04%)</title><rect x="981.3" y="835.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="984.3" y="846.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.04%)</title><rect x="981.3" y="819.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="984.3" y="830.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (1 samples, 0.04%)</title><rect x="981.3" y="803.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="984.3" y="814.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (4 samples, 0.16%)</title><rect x="981.8" y="851.0" width="2.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="984.8" y="862.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (4 samples, 0.16%)</title><rect x="981.8" y="835.0" width="2.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="984.8" y="846.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (4 samples, 0.16%)</title><rect x="983.8" y="867.0" width="1.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="986.8" y="878.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (3 samples, 0.12%)</title><rect x="984.2" y="851.0" width="1.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="987.2" y="862.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (3 samples, 0.12%)</title><rect x="984.2" y="835.0" width="1.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="987.2" y="846.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (5 samples, 0.20%)</title><rect x="985.7" y="867.0" width="2.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="988.7" y="878.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.04%)</title><rect x="987.6" y="851.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="990.6" y="862.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (49 samples, 2.01%)</title><rect x="988.1" y="883.0" width="23.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="991.1" y="894.0">o..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (49 samples, 2.01%)</title><rect x="988.1" y="867.0" width="23.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="991.1" y="878.0">o..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (13 samples, 0.53%)</title><rect x="988.6" y="851.0" width="6.3" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="991.6" y="862.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (3 samples, 0.12%)</title><rect x="989.5" y="835.0" width="1.5" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="992.5" y="846.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (3 samples, 0.12%)</title><rect x="991.0" y="835.0" width="1.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="994.0" y="846.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (5 samples, 0.20%)</title><rect x="992.4" y="835.0" width="2.5" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="995.4" y="846.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (2 samples, 0.08%)</title><rect x="992.4" y="819.0" width="1.0" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="995.4" y="830.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (3 samples, 0.12%)</title><rect x="993.4" y="819.0" width="1.5" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="996.4" y="830.0"></text>
</g>
<g>
<title>ResourceMark::reset_to_mark() (3 samples, 0.12%)</title><rect x="993.4" y="803.0" width="1.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="996.4" y="814.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (3 samples, 0.12%)</title><rect x="994.9" y="851.0" width="1.4" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="997.9" y="862.0"></text>
</g>
<g>
<title>recv (32 samples, 1.31%)</title><rect x="996.3" y="851.0" width="15.5" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="999.3" y="862.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (27 samples, 1.11%)</title><rect x="998.7" y="835.0" width="13.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1001.7" y="846.0"></text>
</g>
<g>
<title>__x64_sys_recvfrom (1 samples, 0.04%)</title><rect x="998.7" y="819.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1001.7" y="830.0"></text>
</g>
<g>
<title>do_syscall_64 (26 samples, 1.06%)</title><rect x="999.2" y="819.0" width="12.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1002.2" y="830.0"></text>
</g>
<g>
<title>__x64_sys_recvfrom (21 samples, 0.86%)</title><rect x="1001.6" y="803.0" width="10.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1004.6" y="814.0"></text>
</g>
<g>
<title>__sys_recvfrom (19 samples, 0.78%)</title><rect x="1001.6" y="787.0" width="9.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1004.6" y="798.0"></text>
</g>
<g>
<title>sock_recvmsg (14 samples, 0.57%)</title><rect x="1001.6" y="771.0" width="6.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1004.6" y="782.0"></text>
</g>
<g>
<title>apparmor_socket_recvmsg (1 samples, 0.04%)</title><rect x="1001.6" y="755.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1004.6" y="766.0"></text>
</g>
<g>
<title>inet6_recvmsg (12 samples, 0.49%)</title><rect x="1002.1" y="755.0" width="5.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1005.1" y="766.0"></text>
</g>
<g>
<title>tcp_recvmsg (12 samples, 0.49%)</title><rect x="1002.1" y="739.0" width="5.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1005.1" y="750.0"></text>
</g>
<g>
<title>__kfree_skb (3 samples, 0.12%)</title><rect x="1003.6" y="723.0" width="1.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1006.6" y="734.0"></text>
</g>
<g>
<title>kfree_skbmem (1 samples, 0.04%)</title><rect x="1003.6" y="707.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1006.6" y="718.0"></text>
</g>
<g>
<title>skb_release_all (1 samples, 0.04%)</title><rect x="1004.0" y="707.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1007.0" y="718.0"></text>
</g>
<g>
<title>skb_release_head_state (1 samples, 0.04%)</title><rect x="1004.0" y="691.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1007.0" y="702.0"></text>
</g>
<g>
<title>dst_release (1 samples, 0.04%)</title><rect x="1004.0" y="675.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1007.0" y="686.0"></text>
</g>
<g>
<title>skb_release_head_state (1 samples, 0.04%)</title><rect x="1004.5" y="707.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1007.5" y="718.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (1 samples, 0.04%)</title><rect x="1005.0" y="723.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1008.0" y="734.0"></text>
</g>
<g>
<title>release_sock (1 samples, 0.04%)</title><rect x="1005.5" y="723.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1008.5" y="734.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (1 samples, 0.04%)</title><rect x="1005.5" y="707.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1008.5" y="718.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (2 samples, 0.08%)</title><rect x="1006.0" y="723.0" width="0.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1009.0" y="734.0"></text>
</g>
<g>
<title>__skb_datagram_iter (2 samples, 0.08%)</title><rect x="1006.0" y="707.0" width="0.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1009.0" y="718.0"></text>
</g>
<g>
<title>simple_copy_to_iter (1 samples, 0.04%)</title><rect x="1006.5" y="691.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1009.5" y="702.0"></text>
</g>
<g>
<title>_copy_to_iter (1 samples, 0.04%)</title><rect x="1006.5" y="675.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1009.5" y="686.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (1 samples, 0.04%)</title><rect x="1006.5" y="659.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1009.5" y="670.0"></text>
</g>
<g>
<title>tcp_rcv_space_adjust (1 samples, 0.04%)</title><rect x="1006.9" y="723.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1009.9" y="734.0"></text>
</g>
<g>
<title>ktime_get (1 samples, 0.04%)</title><rect x="1006.9" y="707.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1009.9" y="718.0"></text>
</g>
<g>
<title>tcp_release_cb (1 samples, 0.04%)</title><rect x="1007.4" y="723.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1010.4" y="734.0"></text>
</g>
<g>
<title>security_socket_recvmsg (1 samples, 0.04%)</title><rect x="1007.9" y="755.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1010.9" y="766.0"></text>
</g>
<g>
<title>apparmor_socket_recvmsg (1 samples, 0.04%)</title><rect x="1007.9" y="739.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1010.9" y="750.0"></text>
</g>
<g>
<title>aa_sk_perm (1 samples, 0.04%)</title><rect x="1007.9" y="723.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1010.9" y="734.0"></text>
</g>
<g>
<title>sockfd_lookup_light (5 samples, 0.20%)</title><rect x="1008.4" y="771.0" width="2.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1011.4" y="782.0"></text>
</g>
<g>
<title>__fdget (2 samples, 0.08%)</title><rect x="1008.4" y="755.0" width="1.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1011.4" y="766.0"></text>
</g>
<g>
<title>__fget_light (2 samples, 0.08%)</title><rect x="1008.4" y="739.0" width="1.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1011.4" y="750.0"></text>
</g>
<g>
<title>__fget (2 samples, 0.08%)</title><rect x="1008.4" y="723.0" width="1.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1011.4" y="734.0"></text>
</g>
<g>
<title>__fget_light (3 samples, 0.12%)</title><rect x="1009.4" y="755.0" width="1.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1012.4" y="766.0"></text>
</g>
<g>
<title>import_single_range (1 samples, 0.04%)</title><rect x="1010.8" y="787.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1013.8" y="798.0"></text>
</g>
<g>
<title>sock_recvmsg (1 samples, 0.04%)</title><rect x="1011.3" y="787.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1014.3" y="798.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (1 samples, 0.04%)</title><rect x="1011.8" y="899.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1014.8" y="910.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.04%)</title><rect x="1012.3" y="915.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1015.3" y="926.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.04%)</title><rect x="1012.3" y="899.0" width="0.4" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="1015.3" y="910.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.04%)</title><rect x="1012.3" y="883.0" width="0.4" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="1015.3" y="894.0"></text>
</g>
<g>
<title>[NIO Selector #7 tid=4856] (297 samples, 12.16%)</title><rect x="1012.7" y="947.0" width="143.5" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1015.7" y="958.0">[NIO Selector #7 t..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (297 samples, 12.16%)</title><rect x="1012.7" y="931.0" width="143.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1015.7" y="942.0">one/nio/server/Sel..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (50 samples, 2.05%)</title><rect x="1014.2" y="915.0" width="24.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1017.2" y="926.0">o..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (50 samples, 2.05%)</title><rect x="1014.2" y="899.0" width="24.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1017.2" y="910.0">o..</text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (1 samples, 0.04%)</title><rect x="1016.1" y="883.0" width="0.5" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="1019.1" y="894.0"></text>
</g>
<g>
<title>clock_gettime (6 samples, 0.25%)</title><rect x="1016.6" y="883.0" width="2.9" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="1019.6" y="894.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.04%)</title><rect x="1018.5" y="867.0" width="0.5" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="1021.5" y="878.0"></text>
</g>
<g>
<title>clock_gettime (1 samples, 0.04%)</title><rect x="1019.0" y="867.0" width="0.5" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="1022.0" y="878.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.04%)</title><rect x="1019.0" y="851.0" width="0.5" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="1022.0" y="862.0"></text>
</g>
<g>
<title>epoll_wait (39 samples, 1.60%)</title><rect x="1019.5" y="883.0" width="18.8" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="1022.5" y="894.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (30 samples, 1.23%)</title><rect x="1023.8" y="867.0" width="14.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1026.8" y="878.0"></text>
</g>
<g>
<title>do_syscall_64 (30 samples, 1.23%)</title><rect x="1023.8" y="851.0" width="14.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1026.8" y="862.0"></text>
</g>
<g>
<title>__x64_sys_epoll_wait (27 samples, 1.11%)</title><rect x="1025.3" y="835.0" width="13.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1028.3" y="846.0"></text>
</g>
<g>
<title>do_epoll_wait (27 samples, 1.11%)</title><rect x="1025.3" y="819.0" width="13.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1028.3" y="830.0"></text>
</g>
<g>
<title>ep_poll (24 samples, 0.98%)</title><rect x="1026.3" y="803.0" width="11.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1029.3" y="814.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.0 (9 samples, 0.37%)</title><rect x="1026.7" y="787.0" width="4.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1029.7" y="798.0"></text>
</g>
<g>
<title>ep_send_events_proc (5 samples, 0.20%)</title><rect x="1028.2" y="771.0" width="2.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1031.2" y="782.0"></text>
</g>
<g>
<title>ep_item_poll.isra.0 (5 samples, 0.20%)</title><rect x="1028.2" y="755.0" width="2.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1031.2" y="766.0"></text>
</g>
<g>
<title>sock_poll (3 samples, 0.12%)</title><rect x="1029.2" y="739.0" width="1.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1032.2" y="750.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (1 samples, 0.04%)</title><rect x="1030.1" y="723.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1033.1" y="734.0"></text>
</g>
<g>
<title>mutex_lock (1 samples, 0.04%)</title><rect x="1030.6" y="771.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1033.6" y="782.0"></text>
</g>
<g>
<title>rcu_all_qs (1 samples, 0.04%)</title><rect x="1030.6" y="755.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1033.6" y="766.0"></text>
</g>
<g>
<title>mutex_unlock (1 samples, 0.04%)</title><rect x="1031.1" y="787.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1034.1" y="798.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (13 samples, 0.53%)</title><rect x="1031.6" y="787.0" width="6.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1034.6" y="798.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (13 samples, 0.53%)</title><rect x="1031.6" y="771.0" width="6.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1034.6" y="782.0"></text>
</g>
<g>
<title>schedule (12 samples, 0.49%)</title><rect x="1032.1" y="755.0" width="5.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1035.1" y="766.0"></text>
</g>
<g>
<title>__schedule (12 samples, 0.49%)</title><rect x="1032.1" y="739.0" width="5.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1035.1" y="750.0"></text>
</g>
<g>
<title>finish_task_switch (10 samples, 0.41%)</title><rect x="1033.0" y="723.0" width="4.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1036.0" y="734.0"></text>
</g>
<g>
<title>fput_many (1 samples, 0.04%)</title><rect x="1037.9" y="803.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1040.9" y="814.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (244 samples, 9.99%)</title><rect x="1038.3" y="915.0" width="117.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1041.3" y="926.0">one/nio/net/Se..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (236 samples, 9.66%)</title><rect x="1041.7" y="899.0" width="114.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1044.7" y="910.0">one/nio/http/H..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (189 samples, 7.74%)</title><rect x="1041.7" y="883.0" width="91.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1044.7" y="894.0">one/nio/htt..</text>
</g>
<g>
<title>RequestHandler0_entity.handleRequest (1 samples, 0.04%)</title><rect x="1041.7" y="867.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1044.7" y="878.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (1 samples, 0.04%)</title><rect x="1042.2" y="867.0" width="0.5" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="1045.2" y="878.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (174 samples, 7.12%)</title><rect x="1042.7" y="867.0" width="84.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1045.7" y="878.0">one/nio/ht..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (174 samples, 7.12%)</title><rect x="1042.7" y="851.0" width="84.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1045.7" y="862.0">one/nio/ht..</text>
</g>
<g>
<title>RequestHandler0_entity.handleRequest (168 samples, 6.88%)</title><rect x="1042.7" y="835.0" width="81.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1045.7" y="846.0">RequestHa..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (133 samples, 5.44%)</title><rect x="1042.7" y="819.0" width="64.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1045.7" y="830.0">one/nio..</text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (1 samples, 0.04%)</title><rect x="1042.7" y="803.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1045.7" y="814.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.04%)</title><rect x="1042.7" y="787.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1045.7" y="798.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.04%)</title><rect x="1042.7" y="771.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1045.7" y="782.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.04%)</title><rect x="1042.7" y="755.0" width="0.5" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="1045.7" y="766.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (131 samples, 5.36%)</title><rect x="1043.2" y="803.0" width="63.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1046.2" y="814.0">one/nio..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (6 samples, 0.25%)</title><rect x="1043.2" y="787.0" width="2.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1046.2" y="798.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (4 samples, 0.16%)</title><rect x="1044.1" y="771.0" width="2.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1047.1" y="782.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (4 samples, 0.16%)</title><rect x="1044.1" y="755.0" width="2.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1047.1" y="766.0"></text>
</g>
<g>
<title>java/lang/String.charAt (4 samples, 0.16%)</title><rect x="1044.1" y="739.0" width="2.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1047.1" y="750.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (125 samples, 5.12%)</title><rect x="1046.1" y="787.0" width="60.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1049.1" y="798.0">one/ni..</text>
</g>
<g>
<title>one/nio/net/Session.write (125 samples, 5.12%)</title><rect x="1046.1" y="771.0" width="60.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1049.1" y="782.0">one/ni..</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (125 samples, 5.12%)</title><rect x="1046.1" y="755.0" width="60.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1049.1" y="766.0">one/ni..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (125 samples, 5.12%)</title><rect x="1046.1" y="739.0" width="60.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1049.1" y="750.0">one/ni..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (2 samples, 0.08%)</title><rect x="1046.5" y="723.0" width="1.0" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="1049.5" y="734.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (1 samples, 0.04%)</title><rect x="1046.5" y="707.0" width="0.5" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="1049.5" y="718.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (1 samples, 0.04%)</title><rect x="1047.0" y="707.0" width="0.5" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="1050.0" y="718.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (1 samples, 0.04%)</title><rect x="1047.0" y="691.0" width="0.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1050.0" y="702.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (1 samples, 0.04%)</title><rect x="1047.5" y="723.0" width="0.5" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="1050.5" y="734.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (2 samples, 0.08%)</title><rect x="1048.0" y="723.0" width="1.0" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="1051.0" y="734.0"></text>
</g>
<g>
<title>__send (119 samples, 4.87%)</title><rect x="1049.0" y="723.0" width="57.4" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="1052.0" y="734.0">__send</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (113 samples, 4.63%)</title><rect x="1051.9" y="707.0" width="54.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1054.9" y="718.0">entry..</text>
</g>
<g>
<title>do_syscall_64 (113 samples, 4.63%)</title><rect x="1051.9" y="691.0" width="54.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1054.9" y="702.0">do_sy..</text>
</g>
<g>
<title>__x64_sys_sendto (110 samples, 4.50%)</title><rect x="1053.3" y="675.0" width="53.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1056.3" y="686.0">__x64..</text>
</g>
<g>
<title>__sys_sendto (108 samples, 4.42%)</title><rect x="1053.3" y="659.0" width="52.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1056.3" y="670.0">__sys..</text>
</g>
<g>
<title>fput_many (1 samples, 0.04%)</title><rect x="1053.3" y="643.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1056.3" y="654.0"></text>
</g>
<g>
<title>security_socket_sendmsg (1 samples, 0.04%)</title><rect x="1053.8" y="643.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1056.8" y="654.0"></text>
</g>
<g>
<title>sock_sendmsg (104 samples, 4.26%)</title><rect x="1054.3" y="643.0" width="50.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1057.3" y="654.0">sock_..</text>
</g>
<g>
<title>inet6_sendmsg (104 samples, 4.26%)</title><rect x="1054.3" y="627.0" width="50.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1057.3" y="638.0">inet6..</text>
</g>
<g>
<title>tcp_sendmsg (103 samples, 4.22%)</title><rect x="1054.8" y="611.0" width="49.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1057.8" y="622.0">tcp_s..</text>
</g>
<g>
<title>release_sock (2 samples, 0.08%)</title><rect x="1054.8" y="595.0" width="0.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1057.8" y="606.0"></text>
</g>
<g>
<title>sk_page_frag_refill (1 samples, 0.04%)</title><rect x="1055.7" y="595.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1058.7" y="606.0"></text>
</g>
<g>
<title>tcp_push (1 samples, 0.04%)</title><rect x="1056.2" y="595.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1059.2" y="606.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (99 samples, 4.05%)</title><rect x="1056.7" y="595.0" width="47.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1059.7" y="606.0">tcp_..</text>
</g>
<g>
<title>__check_object_size (1 samples, 0.04%)</title><rect x="1057.2" y="579.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1060.2" y="590.0"></text>
</g>
<g>
<title>__virt_addr_valid (1 samples, 0.04%)</title><rect x="1057.2" y="563.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1060.2" y="574.0"></text>
</g>
<g>
<title>sk_page_frag_refill (1 samples, 0.04%)</title><rect x="1057.7" y="579.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1060.7" y="590.0"></text>
</g>
<g>
<title>skb_page_frag_refill (1 samples, 0.04%)</title><rect x="1057.7" y="563.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1060.7" y="574.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (8 samples, 0.33%)</title><rect x="1058.1" y="579.0" width="3.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1061.1" y="590.0"></text>
</g>
<g>
<title>__alloc_skb (6 samples, 0.25%)</title><rect x="1058.6" y="563.0" width="2.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1061.6" y="574.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.0 (2 samples, 0.08%)</title><rect x="1058.6" y="547.0" width="1.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1061.6" y="558.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (2 samples, 0.08%)</title><rect x="1058.6" y="531.0" width="1.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1061.6" y="542.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (4 samples, 0.16%)</title><rect x="1059.6" y="547.0" width="1.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1062.6" y="558.0"></text>
</g>
<g>
<title>_cond_resched (1 samples, 0.04%)</title><rect x="1061.0" y="531.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1064.0" y="542.0"></text>
</g>
<g>
<title>ksize (1 samples, 0.04%)</title><rect x="1061.5" y="563.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1064.5" y="574.0"></text>
</g>
<g>
<title>skb_entail (2 samples, 0.08%)</title><rect x="1062.0" y="579.0" width="1.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1065.0" y="590.0"></text>
</g>
<g>
<title>skb_page_frag_refill (1 samples, 0.04%)</title><rect x="1063.0" y="579.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1066.0" y="590.0"></text>
</g>
<g>
<title>tcp_chrono_start (1 samples, 0.04%)</title><rect x="1063.5" y="579.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1066.5" y="590.0"></text>
</g>
<g>
<title>tcp_current_mss (2 samples, 0.08%)</title><rect x="1063.9" y="579.0" width="1.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1066.9" y="590.0"></text>
</g>
<g>
<title>tcp_push (77 samples, 3.15%)</title><rect x="1064.9" y="579.0" width="37.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1067.9" y="590.0">tcp..</text>
</g>
<g>
<title>__tcp_push_pending_frames (77 samples, 3.15%)</title><rect x="1064.9" y="563.0" width="37.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1067.9" y="574.0">__t..</text>
</g>
<g>
<title>__tcp_transmit_skb (1 samples, 0.04%)</title><rect x="1064.9" y="547.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1067.9" y="558.0"></text>
</g>
<g>
<title>tcp_write_xmit (76 samples, 3.11%)</title><rect x="1065.4" y="547.0" width="36.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1068.4" y="558.0">tcp..</text>
</g>
<g>
<title>__tcp_transmit_skb (73 samples, 2.99%)</title><rect x="1065.9" y="531.0" width="35.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1068.9" y="542.0">__t..</text>
</g>
<g>
<title>ip_queue_xmit (68 samples, 2.78%)</title><rect x="1067.8" y="515.0" width="32.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1070.8" y="526.0">ip..</text>
</g>
<g>
<title>__ip_queue_xmit (65 samples, 2.66%)</title><rect x="1068.3" y="499.0" width="31.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1071.3" y="510.0">__..</text>
</g>
<g>
<title>ip_local_out (65 samples, 2.66%)</title><rect x="1068.3" y="483.0" width="31.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1071.3" y="494.0">ip..</text>
</g>
<g>
<title>ip_output (65 samples, 2.66%)</title><rect x="1068.3" y="467.0" width="31.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1071.3" y="478.0">ip..</text>
</g>
<g>
<title>ip_finish_output (65 samples, 2.66%)</title><rect x="1068.3" y="451.0" width="31.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1071.3" y="462.0">ip..</text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (1 samples, 0.04%)</title><rect x="1069.2" y="435.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1072.2" y="446.0"></text>
</g>
<g>
<title>__ip_finish_output (62 samples, 2.54%)</title><rect x="1069.7" y="435.0" width="30.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1072.7" y="446.0">__..</text>
</g>
<g>
<title>ip_finish_output2 (61 samples, 2.50%)</title><rect x="1069.7" y="419.0" width="29.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1072.7" y="430.0">ip..</text>
</g>
<g>
<title>__local_bh_enable_ip (52 samples, 2.13%)</title><rect x="1070.7" y="403.0" width="25.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1073.7" y="414.0">_..</text>
</g>
<g>
<title>do_softirq.part.0 (52 samples, 2.13%)</title><rect x="1070.7" y="387.0" width="25.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1073.7" y="398.0">d..</text>
</g>
<g>
<title>do_softirq_own_stack (51 samples, 2.09%)</title><rect x="1071.2" y="371.0" width="24.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1074.2" y="382.0">d..</text>
</g>
<g>
<title>__softirqentry_text_start (51 samples, 2.09%)</title><rect x="1071.2" y="355.0" width="24.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1074.2" y="366.0">_..</text>
</g>
<g>
<title>net_rx_action (51 samples, 2.09%)</title><rect x="1071.2" y="339.0" width="24.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1074.2" y="350.0">n..</text>
</g>
<g>
<title>process_backlog (49 samples, 2.01%)</title><rect x="1072.1" y="323.0" width="23.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1075.1" y="334.0">p..</text>
</g>
<g>
<title>__netif_receive_skb (48 samples, 1.96%)</title><rect x="1072.6" y="307.0" width="23.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1075.6" y="318.0">_..</text>
</g>
<g>
<title>__netif_receive_skb_one_core (48 samples, 1.96%)</title><rect x="1072.6" y="291.0" width="23.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1075.6" y="302.0">_..</text>
</g>
<g>
<title>__netif_receive_skb_core (2 samples, 0.08%)</title><rect x="1072.6" y="275.0" width="1.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1075.6" y="286.0"></text>
</g>
<g>
<title>ip_rcv (46 samples, 1.88%)</title><rect x="1073.6" y="275.0" width="22.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1076.6" y="286.0">i..</text>
</g>
<g>
<title>ip_rcv_core.isra.0 (1 samples, 0.04%)</title><rect x="1073.6" y="259.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1076.6" y="270.0"></text>
</g>
<g>
<title>ip_rcv_finish (45 samples, 1.84%)</title><rect x="1074.1" y="259.0" width="21.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1077.1" y="270.0">i..</text>
</g>
<g>
<title>ip_local_deliver (44 samples, 1.80%)</title><rect x="1074.6" y="243.0" width="21.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1077.6" y="254.0">i..</text>
</g>
<g>
<title>ip_local_deliver_finish (43 samples, 1.76%)</title><rect x="1075.0" y="227.0" width="20.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1078.0" y="238.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (43 samples, 1.76%)</title><rect x="1075.0" y="211.0" width="20.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1078.0" y="222.0"></text>
</g>
<g>
<title>tcp_v4_rcv (43 samples, 1.76%)</title><rect x="1075.0" y="195.0" width="20.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1078.0" y="206.0"></text>
</g>
<g>
<title>__inet_lookup_established (2 samples, 0.08%)</title><rect x="1075.5" y="179.0" width="1.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1078.5" y="190.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (1 samples, 0.04%)</title><rect x="1076.5" y="179.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1079.5" y="190.0"></text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (1 samples, 0.04%)</title><rect x="1076.5" y="163.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1079.5" y="174.0"></text>
</g>
<g>
<title>tcp_rcv_established (1 samples, 0.04%)</title><rect x="1077.0" y="179.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1080.0" y="190.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (38 samples, 1.56%)</title><rect x="1077.5" y="179.0" width="18.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1080.5" y="190.0"></text>
</g>
<g>
<title>tcp_rcv_established (38 samples, 1.56%)</title><rect x="1077.5" y="163.0" width="18.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1080.5" y="174.0"></text>
</g>
<g>
<title>__tcp_ack_snd_check (1 samples, 0.04%)</title><rect x="1078.9" y="147.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1081.9" y="158.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (1 samples, 0.04%)</title><rect x="1078.9" y="131.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1081.9" y="142.0"></text>
</g>
<g>
<title>tcp_ack (10 samples, 0.41%)</title><rect x="1079.4" y="147.0" width="4.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1082.4" y="158.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (7 samples, 0.29%)</title><rect x="1080.4" y="131.0" width="3.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1083.4" y="142.0"></text>
</g>
<g>
<title>__kfree_skb (4 samples, 0.16%)</title><rect x="1080.8" y="115.0" width="2.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1083.8" y="126.0"></text>
</g>
<g>
<title>kfree_skbmem (1 samples, 0.04%)</title><rect x="1080.8" y="99.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1083.8" y="110.0"></text>
</g>
<g>
<title>kmem_cache_free (1 samples, 0.04%)</title><rect x="1080.8" y="83.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1083.8" y="94.0"></text>
</g>
<g>
<title>__slab_free (1 samples, 0.04%)</title><rect x="1080.8" y="67.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1083.8" y="78.0"></text>
</g>
<g>
<title>skb_release_all (3 samples, 0.12%)</title><rect x="1081.3" y="99.0" width="1.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1084.3" y="110.0"></text>
</g>
<g>
<title>skb_release_data (3 samples, 0.12%)</title><rect x="1081.3" y="83.0" width="1.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1084.3" y="94.0"></text>
</g>
<g>
<title>skb_free_head (1 samples, 0.04%)</title><rect x="1082.3" y="67.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1085.3" y="78.0"></text>
</g>
<g>
<title>kfree (1 samples, 0.04%)</title><rect x="1082.3" y="51.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1085.3" y="62.0"></text>
</g>
<g>
<title>bictcp_acked (1 samples, 0.04%)</title><rect x="1082.8" y="115.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1085.8" y="126.0"></text>
</g>
<g>
<title>tcp_ack_update_rtt.isra.0 (1 samples, 0.04%)</title><rect x="1083.3" y="115.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1086.3" y="126.0"></text>
</g>
<g>
<title>__usecs_to_jiffies (1 samples, 0.04%)</title><rect x="1083.3" y="99.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1086.3" y="110.0"></text>
</g>
<g>
<title>tcp_update_pacing_rate (1 samples, 0.04%)</title><rect x="1083.7" y="131.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1086.7" y="142.0"></text>
</g>
<g>
<title>tcp_data_ready (21 samples, 0.86%)</title><rect x="1084.2" y="147.0" width="10.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1087.2" y="158.0"></text>
</g>
<g>
<title>sock_def_readable (21 samples, 0.86%)</title><rect x="1084.2" y="131.0" width="10.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1087.2" y="142.0"></text>
</g>
<g>
<title>__wake_up_sync_key (20 samples, 0.82%)</title><rect x="1084.7" y="115.0" width="9.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1087.7" y="126.0"></text>
</g>
<g>
<title>__wake_up_common_lock (20 samples, 0.82%)</title><rect x="1084.7" y="99.0" width="9.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1087.7" y="110.0"></text>
</g>
<g>
<title>__lock_text_start (20 samples, 0.82%)</title><rect x="1084.7" y="83.0" width="9.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1087.7" y="94.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (2 samples, 0.08%)</title><rect x="1094.4" y="147.0" width="0.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1097.4" y="158.0"></text>
</g>
<g>
<title>read_tsc (2 samples, 0.08%)</title><rect x="1094.4" y="131.0" width="0.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1097.4" y="142.0"></text>
</g>
<g>
<title>tcp_queue_rcv (1 samples, 0.04%)</title><rect x="1095.3" y="147.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1098.3" y="158.0"></text>
</g>
<g>
<title>dev_queue_xmit (7 samples, 0.29%)</title><rect x="1095.8" y="403.0" width="3.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1098.8" y="414.0"></text>
</g>
<g>
<title>__dev_queue_xmit (7 samples, 0.29%)</title><rect x="1095.8" y="387.0" width="3.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1098.8" y="398.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (4 samples, 0.16%)</title><rect x="1096.3" y="371.0" width="1.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1099.3" y="382.0"></text>
</g>
<g>
<title>loopback_xmit (3 samples, 0.12%)</title><rect x="1096.8" y="355.0" width="1.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1099.8" y="366.0"></text>
</g>
<g>
<title>netif_rx (1 samples, 0.04%)</title><rect x="1097.3" y="339.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1100.3" y="350.0"></text>
</g>
<g>
<title>netif_rx_internal (1 samples, 0.04%)</title><rect x="1097.3" y="323.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1100.3" y="334.0"></text>
</g>
<g>
<title>enqueue_to_backlog (1 samples, 0.04%)</title><rect x="1097.3" y="307.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1100.3" y="318.0"></text>
</g>
<g>
<title>tcp_wfree (1 samples, 0.04%)</title><rect x="1097.7" y="339.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1100.7" y="350.0"></text>
</g>
<g>
<title>netdev_core_pick_tx (2 samples, 0.08%)</title><rect x="1098.2" y="371.0" width="1.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1101.2" y="382.0"></text>
</g>
<g>
<title>ipv4_mtu (1 samples, 0.04%)</title><rect x="1099.2" y="419.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1102.2" y="430.0"></text>
</g>
<g>
<title>__sk_dst_check (1 samples, 0.04%)</title><rect x="1099.7" y="499.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1102.7" y="510.0"></text>
</g>
<g>
<title>ip_local_out (1 samples, 0.04%)</title><rect x="1100.2" y="499.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1103.2" y="510.0"></text>
</g>
<g>
<title>skb_clone (1 samples, 0.04%)</title><rect x="1100.6" y="515.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1103.6" y="526.0"></text>
</g>
<g>
<title>__skb_clone (1 samples, 0.04%)</title><rect x="1100.6" y="499.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1103.6" y="510.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (2 samples, 0.08%)</title><rect x="1101.1" y="531.0" width="1.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1104.1" y="542.0"></text>
</g>
<g>
<title>tcp_rearm_rto (2 samples, 0.08%)</title><rect x="1101.1" y="515.0" width="1.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1104.1" y="526.0"></text>
</g>
<g>
<title>sk_reset_timer (1 samples, 0.04%)</title><rect x="1101.6" y="499.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1104.6" y="510.0"></text>
</g>
<g>
<title>mod_timer (1 samples, 0.04%)</title><rect x="1101.6" y="483.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1104.6" y="494.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.04%)</title><rect x="1101.6" y="467.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1104.6" y="478.0"></text>
</g>
<g>
<title>tcp_rate_check_app_limited (1 samples, 0.04%)</title><rect x="1102.1" y="579.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1105.1" y="590.0"></text>
</g>
<g>
<title>tcp_send_mss (4 samples, 0.16%)</title><rect x="1102.6" y="579.0" width="1.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1105.6" y="590.0"></text>
</g>
<g>
<title>ipv4_mtu (1 samples, 0.04%)</title><rect x="1102.6" y="563.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1105.6" y="574.0"></text>
</g>
<g>
<title>tcp_current_mss (3 samples, 0.12%)</title><rect x="1103.1" y="563.0" width="1.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1106.1" y="574.0"></text>
</g>
<g>
<title>tcp_established_options (1 samples, 0.04%)</title><rect x="1104.0" y="547.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1107.0" y="558.0"></text>
</g>
<g>
<title>sockfd_lookup_light (2 samples, 0.08%)</title><rect x="1104.5" y="643.0" width="1.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1107.5" y="654.0"></text>
</g>
<g>
<title>__fdget (2 samples, 0.08%)</title><rect x="1104.5" y="627.0" width="1.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1107.5" y="638.0"></text>
</g>
<g>
<title>__fget (1 samples, 0.04%)</title><rect x="1104.5" y="611.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1107.5" y="622.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.04%)</title><rect x="1105.0" y="611.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1108.0" y="622.0"></text>
</g>
<g>
<title>__fget (1 samples, 0.04%)</title><rect x="1105.0" y="595.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1108.0" y="606.0"></text>
</g>
<g>
<title>fput (1 samples, 0.04%)</title><rect x="1105.5" y="659.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1108.5" y="670.0"></text>
</g>
<g>
<title>sock_sendmsg (1 samples, 0.04%)</title><rect x="1106.0" y="659.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1109.0" y="670.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (1 samples, 0.04%)</title><rect x="1106.4" y="803.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1109.4" y="814.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.04%)</title><rect x="1106.4" y="787.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1109.4" y="798.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.04%)</title><rect x="1106.4" y="771.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1109.4" y="782.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (2 samples, 0.08%)</title><rect x="1106.9" y="819.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1109.9" y="830.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (1 samples, 0.04%)</title><rect x="1107.4" y="803.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1110.4" y="814.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.04%)</title><rect x="1107.4" y="787.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1110.4" y="798.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.04%)</title><rect x="1107.4" y="771.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1110.4" y="782.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (1 samples, 0.04%)</title><rect x="1107.4" y="755.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1110.4" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivlev/ServiceController.entity (33 samples, 1.35%)</title><rect x="1107.9" y="819.0" width="15.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1110.9" y="830.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (2 samples, 0.08%)</title><rect x="1107.9" y="803.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1110.9" y="814.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (2 samples, 0.08%)</title><rect x="1107.9" y="787.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1110.9" y="798.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (1 samples, 0.04%)</title><rect x="1108.4" y="771.0" width="0.5" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="1111.4" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivlev/ServiceController.getResponse (31 samples, 1.27%)</title><rect x="1108.9" y="803.0" width="14.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1111.9" y="814.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivlev/ServiceController.methodPut (31 samples, 1.27%)</title><rect x="1108.9" y="787.0" width="14.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1111.9" y="798.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.upsert (31 samples, 1.27%)</title><rect x="1108.9" y="771.0" width="14.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1111.9" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock (5 samples, 0.20%)</title><rect x="1108.9" y="755.0" width="2.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1111.9" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireShared (5 samples, 0.20%)</title><rect x="1108.9" y="739.0" width="2.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1111.9" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryAcquireShared (3 samples, 0.12%)</title><rect x="1109.8" y="723.0" width="1.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1112.8" y="734.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.set (1 samples, 0.04%)</title><rect x="1109.8" y="707.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1112.8" y="718.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.set (1 samples, 0.04%)</title><rect x="1109.8" y="691.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1112.8" y="702.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap$Entry.&lt;init&gt; (1 samples, 0.04%)</title><rect x="1109.8" y="675.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1112.8" y="686.0"></text>
</g>
<g>
<title>java/lang/ref/WeakReference.&lt;init&gt; (1 samples, 0.04%)</title><rect x="1109.8" y="659.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1112.8" y="670.0"></text>
</g>
<g>
<title>java/lang/ref/Reference.&lt;init&gt; (1 samples, 0.04%)</title><rect x="1109.8" y="643.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1112.8" y="654.0"></text>
</g>
<g>
<title>java/lang/ref/Reference.&lt;init&gt; (1 samples, 0.04%)</title><rect x="1109.8" y="627.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1112.8" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.exclusiveCount (1 samples, 0.04%)</title><rect x="1110.3" y="707.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1113.3" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.fullTryAcquireShared (1 samples, 0.04%)</title><rect x="1110.8" y="707.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1113.8" y="718.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.set (1 samples, 0.04%)</title><rect x="1110.8" y="691.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1113.8" y="702.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.set (1 samples, 0.04%)</title><rect x="1110.8" y="675.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1113.8" y="686.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap$Entry.&lt;init&gt; (1 samples, 0.04%)</title><rect x="1110.8" y="659.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1113.8" y="670.0"></text>
</g>
<g>
<title>java/lang/ref/WeakReference.&lt;init&gt; (1 samples, 0.04%)</title><rect x="1110.8" y="643.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1113.8" y="654.0"></text>
</g>
<g>
<title>java/lang/ref/Reference.&lt;init&gt; (1 samples, 0.04%)</title><rect x="1110.8" y="627.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1113.8" y="638.0"></text>
</g>
<g>
<title>java/lang/ref/Reference.&lt;init&gt; (1 samples, 0.04%)</title><rect x="1110.8" y="611.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1113.8" y="622.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.04%)</title><rect x="1110.8" y="595.0" width="0.5" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="1113.8" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/MemTable.upsert (26 samples, 1.06%)</title><rect x="1111.3" y="755.0" width="12.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1114.3" y="766.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (1 samples, 0.04%)</title><rect x="1111.3" y="739.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1114.3" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (1 samples, 0.04%)</title><rect x="1111.3" y="723.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1114.3" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.put (25 samples, 1.02%)</title><rect x="1111.8" y="739.0" width="12.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1114.8" y="750.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.04%)</title><rect x="1111.8" y="723.0" width="0.4" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="1114.8" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (23 samples, 0.94%)</title><rect x="1112.2" y="723.0" width="11.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1115.2" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Index.&lt;init&gt; (17 samples, 0.70%)</title><rect x="1112.7" y="707.0" width="8.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1115.7" y="718.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (2 samples, 0.08%)</title><rect x="1120.0" y="691.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1123.0" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.addIndices (1 samples, 0.04%)</title><rect x="1120.9" y="707.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1123.9" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.addIndices (1 samples, 0.04%)</title><rect x="1120.9" y="691.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1123.9" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (4 samples, 0.16%)</title><rect x="1121.4" y="707.0" width="1.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1124.4" y="718.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (4 samples, 0.16%)</title><rect x="1121.4" y="691.0" width="1.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1124.4" y="702.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (4 samples, 0.16%)</title><rect x="1121.4" y="675.0" width="1.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1124.4" y="686.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (4 samples, 0.16%)</title><rect x="1121.4" y="659.0" width="1.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1124.4" y="670.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (1 samples, 0.04%)</title><rect x="1121.9" y="643.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1124.9" y="654.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (1 samples, 0.04%)</title><rect x="1121.9" y="627.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1124.9" y="638.0"></text>
</g>
<g>
<title>vectorizedMismatch (2 samples, 0.08%)</title><rect x="1122.4" y="643.0" width="0.9" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="1125.4" y="654.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.04%)</title><rect x="1123.3" y="723.0" width="0.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1126.3" y="734.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.04%)</title><rect x="1123.3" y="707.0" width="0.5" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="1126.3" y="718.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.04%)</title><rect x="1123.3" y="691.0" width="0.5" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="1126.3" y="702.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (2 samples, 0.08%)</title><rect x="1123.8" y="835.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1126.8" y="846.0"></text>
</g>
<g>
<title>java/util/HashMap.get (2 samples, 0.08%)</title><rect x="1123.8" y="819.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1126.8" y="830.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (1 samples, 0.04%)</title><rect x="1123.8" y="803.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1126.8" y="814.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (1 samples, 0.04%)</title><rect x="1124.3" y="803.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1127.3" y="814.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (1 samples, 0.04%)</title><rect x="1124.3" y="787.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1127.3" y="798.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (1 samples, 0.04%)</title><rect x="1124.3" y="771.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1127.3" y="782.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (3 samples, 0.12%)</title><rect x="1124.8" y="835.0" width="1.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1127.8" y="846.0"></text>
</g>
<g>
<title>java/lang/String.substring (2 samples, 0.08%)</title><rect x="1124.8" y="819.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1127.8" y="830.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (2 samples, 0.08%)</title><rect x="1124.8" y="803.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1127.8" y="814.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.04%)</title><rect x="1125.3" y="787.0" width="0.5" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="1128.3" y="798.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (1 samples, 0.04%)</title><rect x="1125.8" y="819.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1128.8" y="830.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.04%)</title><rect x="1126.2" y="835.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1129.2" y="846.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.04%)</title><rect x="1126.2" y="819.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1129.2" y="830.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.04%)</title><rect x="1126.2" y="803.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1129.2" y="814.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (5 samples, 0.20%)</title><rect x="1126.7" y="867.0" width="2.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1129.7" y="878.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2 samples, 0.08%)</title><rect x="1127.2" y="851.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1130.2" y="862.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2 samples, 0.08%)</title><rect x="1127.2" y="835.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1130.2" y="846.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.startsWith (2 samples, 0.08%)</title><rect x="1128.2" y="851.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1131.2" y="862.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (2 samples, 0.08%)</title><rect x="1129.1" y="867.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1132.1" y="878.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.04%)</title><rect x="1129.6" y="851.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1132.6" y="862.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.04%)</title><rect x="1129.6" y="835.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1132.6" y="846.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (6 samples, 0.25%)</title><rect x="1130.1" y="867.0" width="2.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1133.1" y="878.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (4 samples, 0.16%)</title><rect x="1131.1" y="851.0" width="1.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1134.1" y="862.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (47 samples, 1.92%)</title><rect x="1133.0" y="883.0" width="22.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1136.0" y="894.0">o..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (46 samples, 1.88%)</title><rect x="1133.5" y="867.0" width="22.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1136.5" y="878.0">o..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (10 samples, 0.41%)</title><rect x="1135.4" y="851.0" width="4.8" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="1138.4" y="862.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (2 samples, 0.08%)</title><rect x="1136.9" y="835.0" width="0.9" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1139.9" y="846.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (2 samples, 0.08%)</title><rect x="1137.8" y="835.0" width="1.0" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1140.8" y="846.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (1 samples, 0.04%)</title><rect x="1138.8" y="835.0" width="0.5" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="1141.8" y="846.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (1 samples, 0.04%)</title><rect x="1138.8" y="819.0" width="0.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1141.8" y="830.0"></text>
</g>
<g>
<title>void AccessInternal::arraycopy_conjoint&lt;signed char&gt;(signed char*, signed char*, unsigned long) (2 samples, 0.08%)</title><rect x="1139.3" y="835.0" width="0.9" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1142.3" y="846.0"></text>
</g>
<g>
<title>recv (32 samples, 1.31%)</title><rect x="1140.2" y="851.0" width="15.5" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="1143.2" y="862.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (23 samples, 0.94%)</title><rect x="1144.6" y="835.0" width="11.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1147.6" y="846.0"></text>
</g>
<g>
<title>__x64_sys_recvfrom (2 samples, 0.08%)</title><rect x="1144.6" y="819.0" width="1.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1147.6" y="830.0"></text>
</g>
<g>
<title>do_syscall_64 (21 samples, 0.86%)</title><rect x="1145.6" y="819.0" width="10.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1148.6" y="830.0"></text>
</g>
<g>
<title>__x64_sys_recvfrom (17 samples, 0.70%)</title><rect x="1147.5" y="803.0" width="8.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1150.5" y="814.0"></text>
</g>
<g>
<title>__sys_recvfrom (15 samples, 0.61%)</title><rect x="1147.5" y="787.0" width="7.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1150.5" y="798.0"></text>
</g>
<g>
<title>sock_recvmsg (11 samples, 0.45%)</title><rect x="1147.5" y="771.0" width="5.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1150.5" y="782.0"></text>
</g>
<g>
<title>apparmor_socket_recvmsg (1 samples, 0.04%)</title><rect x="1147.5" y="755.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1150.5" y="766.0"></text>
</g>
<g>
<title>inet6_recvmsg (9 samples, 0.37%)</title><rect x="1148.0" y="755.0" width="4.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1151.0" y="766.0"></text>
</g>
<g>
<title>tcp_rcv_space_adjust (1 samples, 0.04%)</title><rect x="1148.0" y="739.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1151.0" y="750.0"></text>
</g>
<g>
<title>tcp_recvmsg (8 samples, 0.33%)</title><rect x="1148.5" y="739.0" width="3.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1151.5" y="750.0"></text>
</g>
<g>
<title>__kfree_skb (2 samples, 0.08%)</title><rect x="1149.9" y="723.0" width="1.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1152.9" y="734.0"></text>
</g>
<g>
<title>kfree_skbmem (1 samples, 0.04%)</title><rect x="1149.9" y="707.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1152.9" y="718.0"></text>
</g>
<g>
<title>skb_release_all (1 samples, 0.04%)</title><rect x="1150.4" y="707.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1153.4" y="718.0"></text>
</g>
<g>
<title>skb_release_head_state (1 samples, 0.04%)</title><rect x="1150.4" y="691.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1153.4" y="702.0"></text>
</g>
<g>
<title>dst_release (1 samples, 0.04%)</title><rect x="1150.4" y="675.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1153.4" y="686.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (1 samples, 0.04%)</title><rect x="1150.9" y="723.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1153.9" y="734.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (1 samples, 0.04%)</title><rect x="1151.4" y="723.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1154.4" y="734.0"></text>
</g>
<g>
<title>__skb_datagram_iter (1 samples, 0.04%)</title><rect x="1151.4" y="707.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1154.4" y="718.0"></text>
</g>
<g>
<title>simple_copy_to_iter (1 samples, 0.04%)</title><rect x="1151.4" y="691.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1154.4" y="702.0"></text>
</g>
<g>
<title>__check_object_size (1 samples, 0.04%)</title><rect x="1151.4" y="675.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1154.4" y="686.0"></text>
</g>
<g>
<title>__virt_addr_valid (1 samples, 0.04%)</title><rect x="1151.4" y="659.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1154.4" y="670.0"></text>
</g>
<g>
<title>tcp_cleanup_rbuf (1 samples, 0.04%)</title><rect x="1151.8" y="723.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1154.8" y="734.0"></text>
</g>
<g>
<title>__tcp_select_window (1 samples, 0.04%)</title><rect x="1151.8" y="707.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1154.8" y="718.0"></text>
</g>
<g>
<title>security_socket_recvmsg (1 samples, 0.04%)</title><rect x="1152.3" y="755.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1155.3" y="766.0"></text>
</g>
<g>
<title>apparmor_socket_recvmsg (1 samples, 0.04%)</title><rect x="1152.3" y="739.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1155.3" y="750.0"></text>
</g>
<g>
<title>aa_sk_perm (1 samples, 0.04%)</title><rect x="1152.3" y="723.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1155.3" y="734.0"></text>
</g>
<g>
<title>sockfd_lookup_light (4 samples, 0.16%)</title><rect x="1152.8" y="771.0" width="1.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1155.8" y="782.0"></text>
</g>
<g>
<title>__fdget (1 samples, 0.04%)</title><rect x="1152.8" y="755.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1155.8" y="766.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.04%)</title><rect x="1152.8" y="739.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1155.8" y="750.0"></text>
</g>
<g>
<title>__fget (1 samples, 0.04%)</title><rect x="1152.8" y="723.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1155.8" y="734.0"></text>
</g>
<g>
<title>__fget_light (3 samples, 0.12%)</title><rect x="1153.3" y="755.0" width="1.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1156.3" y="766.0"></text>
</g>
<g>
<title>import_single_range (1 samples, 0.04%)</title><rect x="1154.7" y="787.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1157.7" y="798.0"></text>
</g>
<g>
<title>sockfd_lookup_light (1 samples, 0.04%)</title><rect x="1155.2" y="787.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1158.2" y="798.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (1 samples, 0.04%)</title><rect x="1155.7" y="899.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1158.7" y="910.0"></text>
</g>
<g>
<title>[VM Periodic Tas tid=4845] (1 samples, 0.04%)</title><rect x="1156.2" y="947.0" width="0.5" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1159.2" y="958.0"></text>
</g>
<g>
<title>start_thread (1 samples, 0.04%)</title><rect x="1156.2" y="931.0" width="0.5" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="1159.2" y="942.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (1 samples, 0.04%)</title><rect x="1156.2" y="915.0" width="0.5" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="1159.2" y="926.0"></text>
</g>
<g>
<title>Thread::call_run() (1 samples, 0.04%)</title><rect x="1156.2" y="899.0" width="0.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1159.2" y="910.0"></text>
</g>
<g>
<title>WatcherThread::run() (1 samples, 0.04%)</title><rect x="1156.2" y="883.0" width="0.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1159.2" y="894.0"></text>
</g>
<g>
<title>WatcherThread::sleep() const (1 samples, 0.04%)</title><rect x="1156.2" y="867.0" width="0.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1159.2" y="878.0"></text>
</g>
<g>
<title>Monitor::wait(bool, long, bool) (1 samples, 0.04%)</title><rect x="1156.2" y="851.0" width="0.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1159.2" y="862.0"></text>
</g>
<g>
<title>Monitor::IWait(Thread*, long) (1 samples, 0.04%)</title><rect x="1156.2" y="835.0" width="0.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1159.2" y="846.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock (1 samples, 0.04%)</title><rect x="1156.2" y="819.0" width="0.5" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="1159.2" y="830.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.04%)</title><rect x="1156.2" y="803.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1159.2" y="814.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.04%)</title><rect x="1156.2" y="787.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1159.2" y="798.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.04%)</title><rect x="1156.2" y="771.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1159.2" y="782.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.04%)</title><rect x="1156.2" y="755.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1159.2" y="766.0"></text>
</g>
<g>
<title>[pool-1-thread-2 tid=4991] (69 samples, 2.82%)</title><rect x="1156.7" y="947.0" width="33.3" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="1159.7" y="958.0">[p..</text>
</g>
<g>
<title>[not_walkable_Java] (1 samples, 0.04%)</title><rect x="1156.7" y="931.0" width="0.5" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="1159.7" y="942.0"></text>
</g>
<g>
<title>Runtime1::monitorexit(JavaThread*, BasicObjectLock*) (1 samples, 0.04%)</title><rect x="1156.7" y="915.0" width="0.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1159.7" y="926.0"></text>
</g>
<g>
<title>ExceptionMark::ExceptionMark(Thread*&amp;) (1 samples, 0.04%)</title><rect x="1156.7" y="899.0" width="0.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1159.7" y="910.0"></text>
</g>
<g>
<title>java/lang/Thread.run (68 samples, 2.78%)</title><rect x="1157.2" y="931.0" width="32.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1160.2" y="942.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (68 samples, 2.78%)</title><rect x="1157.2" y="915.0" width="32.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1160.2" y="926.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (68 samples, 2.78%)</title><rect x="1157.2" y="899.0" width="32.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1160.2" y="910.0">ja..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl$$Lambda$57/2019841290.run (68 samples, 2.78%)</title><rect x="1157.2" y="883.0" width="32.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1160.2" y="894.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.lambda$flush$6 (68 samples, 2.78%)</title><rect x="1157.2" y="867.0" width="32.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1160.2" y="878.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/SSTable.write (68 samples, 2.78%)</title><rect x="1157.2" y="851.0" width="32.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1160.2" y="862.0">ru..</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (1 samples, 0.04%)</title><rect x="1157.2" y="835.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1160.2" y="846.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.04%)</title><rect x="1157.2" y="819.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1160.2" y="830.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.04%)</title><rect x="1157.2" y="803.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1160.2" y="814.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.putInt (1 samples, 0.04%)</title><rect x="1157.6" y="835.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1160.6" y="846.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.putLong (2 samples, 0.08%)</title><rect x="1158.1" y="835.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1161.1" y="846.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.putLongUnaligned (1 samples, 0.04%)</title><rect x="1158.6" y="819.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1161.6" y="830.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.convEndian (1 samples, 0.04%)</title><rect x="1158.6" y="803.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1161.6" y="814.0"></text>
</g>
<g>
<title>java/lang/Long.reverseBytes (1 samples, 0.04%)</title><rect x="1158.6" y="787.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1161.6" y="798.0"></text>
</g>
<g>
<title>ru/mail/polis/Cell.getKey (2 samples, 0.08%)</title><rect x="1159.1" y="835.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1162.1" y="846.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (2 samples, 0.08%)</title><rect x="1159.1" y="819.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1162.1" y="830.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.&lt;init&gt; (1 samples, 0.04%)</title><rect x="1159.6" y="803.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1162.6" y="814.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.04%)</title><rect x="1159.6" y="787.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1162.6" y="798.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.04%)</title><rect x="1159.6" y="771.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1162.6" y="782.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (1 samples, 0.04%)</title><rect x="1159.6" y="755.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1162.6" y="766.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.04%)</title><rect x="1159.6" y="739.0" width="0.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1162.6" y="750.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.write (62 samples, 2.54%)</title><rect x="1160.1" y="835.0" width="29.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1163.1" y="846.0">su..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.beginBlocking (2 samples, 0.08%)</title><rect x="1160.1" y="819.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1163.1" y="830.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (2 samples, 0.08%)</title><rect x="1160.1" y="803.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1163.1" y="814.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (2 samples, 0.08%)</title><rect x="1160.1" y="787.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1163.1" y="798.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (2 samples, 0.08%)</title><rect x="1160.1" y="771.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1163.1" y="782.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (2 samples, 0.08%)</title><rect x="1160.1" y="755.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1163.1" y="766.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (60 samples, 2.46%)</title><rect x="1161.0" y="819.0" width="29.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1164.0" y="830.0">su..</text>
</g>
<g>
<title>java/nio/DirectByteBuffer.put (2 samples, 0.08%)</title><rect x="1161.5" y="803.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1164.5" y="814.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.put (2 samples, 0.08%)</title><rect x="1161.5" y="787.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1164.5" y="798.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.put (1 samples, 0.04%)</title><rect x="1162.0" y="771.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1165.0" y="782.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.writeFromNativeBuffer (56 samples, 2.29%)</title><rect x="1162.5" y="803.0" width="27.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1165.5" y="814.0">s..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.write (56 samples, 2.29%)</title><rect x="1162.5" y="787.0" width="27.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1165.5" y="798.0">s..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.write0 (56 samples, 2.29%)</title><rect x="1162.5" y="771.0" width="27.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1165.5" y="782.0">s..</text>
</g>
<g>
<title>__libc_write (56 samples, 2.29%)</title><rect x="1162.5" y="755.0" width="27.0" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="1165.5" y="766.0">_..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (42 samples, 1.72%)</title><rect x="1169.2" y="739.0" width="20.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1172.2" y="750.0"></text>
</g>
<g>
<title>do_syscall_64 (42 samples, 1.72%)</title><rect x="1169.2" y="723.0" width="20.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1172.2" y="734.0"></text>
</g>
<g>
<title>__x64_sys_write (37 samples, 1.51%)</title><rect x="1171.6" y="707.0" width="17.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1174.6" y="718.0"></text>
</g>
<g>
<title>ksys_write (37 samples, 1.51%)</title><rect x="1171.6" y="691.0" width="17.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1174.6" y="702.0"></text>
</g>
<g>
<title>__sb_end_write (1 samples, 0.04%)</title><rect x="1171.6" y="675.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1174.6" y="686.0"></text>
</g>
<g>
<title>vfs_write (36 samples, 1.47%)</title><rect x="1172.1" y="675.0" width="17.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1175.1" y="686.0"></text>
</g>
<g>
<title>__vfs_write (35 samples, 1.43%)</title><rect x="1172.1" y="659.0" width="16.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1175.1" y="670.0"></text>
</g>
<g>
<title>ext4_file_write_iter (1 samples, 0.04%)</title><rect x="1172.1" y="643.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1175.1" y="654.0"></text>
</g>
<g>
<title>new_sync_write (34 samples, 1.39%)</title><rect x="1172.6" y="643.0" width="16.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1175.6" y="654.0"></text>
</g>
<g>
<title>ext4_file_write_iter (34 samples, 1.39%)</title><rect x="1172.6" y="627.0" width="16.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1175.6" y="638.0"></text>
</g>
<g>
<title>__generic_file_write_iter (33 samples, 1.35%)</title><rect x="1172.6" y="611.0" width="16.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1175.6" y="622.0"></text>
</g>
<g>
<title>ext4_da_write_begin (1 samples, 0.04%)</title><rect x="1172.6" y="595.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1175.6" y="606.0"></text>
</g>
<g>
<title>ext4_da_write_end (2 samples, 0.08%)</title><rect x="1173.1" y="595.0" width="1.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1176.1" y="606.0"></text>
</g>
<g>
<title>generic_perform_write (30 samples, 1.23%)</title><rect x="1174.1" y="595.0" width="14.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1177.1" y="606.0"></text>
</g>
<g>
<title>ext4_da_write_begin (8 samples, 0.33%)</title><rect x="1174.1" y="579.0" width="3.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1177.1" y="590.0"></text>
</g>
<g>
<title>__ext4_journal_start_sb (5 samples, 0.20%)</title><rect x="1174.1" y="563.0" width="2.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1177.1" y="574.0"></text>
</g>
<g>
<title>ext4_journal_check_start (1 samples, 0.04%)</title><rect x="1174.1" y="547.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1177.1" y="558.0"></text>
</g>
<g>
<title>jbd2__journal_start (4 samples, 0.16%)</title><rect x="1174.5" y="547.0" width="2.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1177.5" y="558.0"></text>
</g>
<g>
<title>_raw_read_lock (1 samples, 0.04%)</title><rect x="1174.5" y="531.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1177.5" y="542.0"></text>
</g>
<g>
<title>start_this_handle (3 samples, 0.12%)</title><rect x="1175.0" y="531.0" width="1.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1178.0" y="542.0"></text>
</g>
<g>
<title>add_transaction_credits (1 samples, 0.04%)</title><rect x="1176.0" y="515.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1179.0" y="526.0"></text>
</g>
<g>
<title>grab_cache_page_write_begin (3 samples, 0.12%)</title><rect x="1176.5" y="563.0" width="1.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1179.5" y="574.0"></text>
</g>
<g>
<title>pagecache_get_page (3 samples, 0.12%)</title><rect x="1176.5" y="547.0" width="1.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1179.5" y="558.0"></text>
</g>
<g>
<title>find_get_entry (3 samples, 0.12%)</title><rect x="1176.5" y="531.0" width="1.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1179.5" y="542.0"></text>
</g>
<g>
<title>xas_load (2 samples, 0.08%)</title><rect x="1177.0" y="515.0" width="0.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1180.0" y="526.0"></text>
</g>
<g>
<title>ext4_da_write_end (22 samples, 0.90%)</title><rect x="1177.9" y="579.0" width="10.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1180.9" y="590.0"></text>
</g>
<g>
<title>__ext4_journal_stop (1 samples, 0.04%)</title><rect x="1178.4" y="563.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1181.4" y="574.0"></text>
</g>
<g>
<title>jbd2_journal_stop (1 samples, 0.04%)</title><rect x="1178.4" y="547.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1181.4" y="558.0"></text>
</g>
<g>
<title>generic_write_end (20 samples, 0.82%)</title><rect x="1178.9" y="563.0" width="9.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1181.9" y="574.0"></text>
</g>
<g>
<title>__block_commit_write.isra.0 (1 samples, 0.04%)</title><rect x="1178.9" y="547.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1181.9" y="558.0"></text>
</g>
<g>
<title>__mark_inode_dirty (17 samples, 0.70%)</title><rect x="1179.4" y="547.0" width="8.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1182.4" y="558.0"></text>
</g>
<g>
<title>ext4_dirty_inode (17 samples, 0.70%)</title><rect x="1179.4" y="531.0" width="8.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1182.4" y="542.0"></text>
</g>
<g>
<title>ext4_mark_inode_dirty (17 samples, 0.70%)</title><rect x="1179.4" y="515.0" width="8.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1182.4" y="526.0"></text>
</g>
<g>
<title>ext4_mark_iloc_dirty (11 samples, 0.45%)</title><rect x="1179.9" y="499.0" width="5.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1182.9" y="510.0"></text>
</g>
<g>
<title>_raw_spin_lock (1 samples, 0.04%)</title><rect x="1179.9" y="483.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1182.9" y="494.0"></text>
</g>
<g>
<title>ext4_do_update_inode (10 samples, 0.41%)</title><rect x="1180.3" y="483.0" width="4.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1183.3" y="494.0"></text>
</g>
<g>
<title>ext4_inode_csum_set (6 samples, 0.25%)</title><rect x="1181.8" y="467.0" width="2.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1184.8" y="478.0"></text>
</g>
<g>
<title>crypto_shash_update (1 samples, 0.04%)</title><rect x="1181.8" y="451.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1184.8" y="462.0"></text>
</g>
<g>
<title>ext4_inode_csum.isra.0 (5 samples, 0.20%)</title><rect x="1182.3" y="451.0" width="2.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1185.3" y="462.0"></text>
</g>
<g>
<title>crc32c_pcl_intel_update (4 samples, 0.16%)</title><rect x="1182.3" y="435.0" width="1.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1185.3" y="446.0"></text>
</g>
<g>
<title>crypto_shash_update (1 samples, 0.04%)</title><rect x="1184.2" y="435.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1187.2" y="446.0"></text>
</g>
<g>
<title>crc32c_pcl_intel_update (1 samples, 0.04%)</title><rect x="1184.2" y="419.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1187.2" y="430.0"></text>
</g>
<g>
<title>from_kuid (1 samples, 0.04%)</title><rect x="1184.7" y="467.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1187.7" y="478.0"></text>
</g>
<g>
<title>map_id_up (1 samples, 0.04%)</title><rect x="1184.7" y="451.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1187.7" y="462.0"></text>
</g>
<g>
<title>ext4_reserve_inode_write (5 samples, 0.20%)</title><rect x="1185.2" y="499.0" width="2.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1188.2" y="510.0"></text>
</g>
<g>
<title>__ext4_get_inode_loc (5 samples, 0.20%)</title><rect x="1185.2" y="483.0" width="2.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1188.2" y="494.0"></text>
</g>
<g>
<title>__getblk_gfp (1 samples, 0.04%)</title><rect x="1186.1" y="467.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1189.1" y="478.0"></text>
</g>
<g>
<title>ext4_get_group_desc (2 samples, 0.08%)</title><rect x="1186.6" y="467.0" width="1.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1189.6" y="478.0"></text>
</g>
<g>
<title>block_write_end (2 samples, 0.08%)</title><rect x="1187.6" y="547.0" width="1.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1190.6" y="558.0"></text>
</g>
<g>
<title>__block_commit_write.isra.0 (2 samples, 0.08%)</title><rect x="1187.6" y="531.0" width="1.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1190.6" y="542.0"></text>
</g>
<g>
<title>mark_buffer_dirty (1 samples, 0.04%)</title><rect x="1188.1" y="515.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1191.1" y="526.0"></text>
</g>
<g>
<title>file_update_time (1 samples, 0.04%)</title><rect x="1188.6" y="611.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1191.6" y="622.0"></text>
</g>
<g>
<title>rw_verify_area (1 samples, 0.04%)</title><rect x="1189.0" y="659.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1192.0" y="670.0"></text>
</g>
<g>
<title>apparmor_file_permission (1 samples, 0.04%)</title><rect x="1189.0" y="643.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1192.0" y="654.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (1 samples, 0.04%)</title><rect x="1189.5" y="803.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1192.5" y="814.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (1 samples, 0.04%)</title><rect x="1189.5" y="787.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1192.5" y="798.0"></text>
</g>
</g>
</svg>
