<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="598" onload="init(evt)" viewBox="0 0 1200 598" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="581"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="581"> </text>
<g id="frames">
<g>
<title>all (5,595 samples, 100.00%)</title><rect x="10.0" y="547.0" width="1180.0" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="13.0" y="558.0">all</text>
</g>
<g>
<title>[NIO Selector #0 tid=4849] (837 samples, 14.96%)</title><rect x="10.0" y="531.0" width="176.5" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="13.0" y="542.0">[NIO Selector #0 tid=48..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (837 samples, 14.96%)</title><rect x="10.0" y="515.0" width="176.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="13.0" y="526.0">one/nio/server/Selector..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (7 samples, 0.13%)</title><rect x="10.0" y="499.0" width="1.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="13.0" y="510.0"></text>
</g>
<g>
<title>one.nio.net.NativeSelector$2 (7 samples, 0.13%)</title><rect x="10.0" y="483.0" width="1.5" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="13.0" y="494.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (830 samples, 14.83%)</title><rect x="11.5" y="499.0" width="175.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="14.5" y="510.0">one/nio/net/Session.pro..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (830 samples, 14.83%)</title><rect x="11.5" y="483.0" width="175.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="14.5" y="494.0">one/nio/http/HttpSessio..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (830 samples, 14.83%)</title><rect x="11.5" y="467.0" width="175.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="14.5" y="478.0">one/nio/http/HttpSessio..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (814 samples, 14.55%)</title><rect x="11.5" y="451.0" width="171.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="14.5" y="462.0">one/nio/http/HttpSessi..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (814 samples, 14.55%)</title><rect x="11.5" y="435.0" width="171.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="14.5" y="446.0">one/nio/http/HttpServe..</text>
</g>
<g>
<title>RequestHandler0_entity.handleRequest (812 samples, 14.51%)</title><rect x="11.5" y="419.0" width="171.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="14.5" y="430.0">RequestHandler0_entity..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (6 samples, 0.11%)</title><rect x="11.5" y="403.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="14.5" y="414.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (6 samples, 0.11%)</title><rect x="11.5" y="387.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="14.5" y="398.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (4 samples, 0.07%)</title><rect x="11.5" y="371.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="14.5" y="382.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (4 samples, 0.07%)</title><rect x="11.5" y="355.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="14.5" y="366.0"></text>
</g>
<g>
<title>byte[] (4 samples, 0.07%)</title><rect x="11.5" y="339.0" width="0.8" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="14.5" y="350.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (2 samples, 0.04%)</title><rect x="12.3" y="371.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="15.3" y="382.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (2 samples, 0.04%)</title><rect x="12.3" y="355.0" width="0.4" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="15.3" y="366.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (6 samples, 0.11%)</title><rect x="12.7" y="403.0" width="1.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="15.7" y="414.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (6 samples, 0.11%)</title><rect x="12.7" y="387.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="15.7" y="398.0"></text>
</g>
<g>
<title>java/lang/String.substring (6 samples, 0.11%)</title><rect x="12.7" y="371.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="15.7" y="382.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (6 samples, 0.11%)</title><rect x="12.7" y="355.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="15.7" y="366.0"></text>
</g>
<g>
<title>java.lang.String (3 samples, 0.05%)</title><rect x="12.7" y="339.0" width="0.7" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="15.7" y="350.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (3 samples, 0.05%)</title><rect x="13.4" y="339.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="16.4" y="350.0"></text>
</g>
<g>
<title>byte[] (3 samples, 0.05%)</title><rect x="13.4" y="323.0" width="0.6" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="16.4" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivlev/ServiceController.entity (800 samples, 14.30%)</title><rect x="14.0" y="403.0" width="168.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="17.0" y="414.0">ru/mail/polis/service/..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (3 samples, 0.05%)</title><rect x="14.2" y="387.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="17.2" y="398.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (3 samples, 0.05%)</title><rect x="14.2" y="371.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="17.2" y="382.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (3 samples, 0.05%)</title><rect x="14.2" y="355.0" width="0.7" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="17.2" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivlev/ServiceController.getResponse (796 samples, 14.23%)</title><rect x="14.9" y="387.0" width="167.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="17.9" y="398.0">ru/mail/polis/service..</text>
</g>
<g>
<title>ru/mail/polis/service/ivlev/ServiceController.methodGet (796 samples, 14.23%)</title><rect x="14.9" y="371.0" width="167.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="17.9" y="382.0">ru/mail/polis/service..</text>
</g>
<g>
<title>byte[] (3 samples, 0.05%)</title><rect x="14.9" y="355.0" width="0.6" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="17.9" y="366.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (8 samples, 0.14%)</title><rect x="15.5" y="355.0" width="1.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="18.5" y="366.0"></text>
</g>
<g>
<title>byte[] (4 samples, 0.07%)</title><rect x="15.5" y="339.0" width="0.8" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="18.5" y="350.0"></text>
</g>
<g>
<title>java.lang.String[] (3 samples, 0.05%)</title><rect x="16.3" y="339.0" width="0.7" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="19.3" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.get (785 samples, 14.03%)</title><rect x="17.2" y="355.0" width="165.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="20.2" y="366.0">ru/mail/polis/dao/DAO..</text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (35 samples, 0.63%)</title><rect x="17.2" y="339.0" width="7.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="20.2" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (35 samples, 0.63%)</title><rect x="17.2" y="323.0" width="7.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="20.2" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (35 samples, 0.63%)</title><rect x="17.2" y="307.0" width="7.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="20.2" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (35 samples, 0.63%)</title><rect x="17.2" y="291.0" width="7.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="20.2" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (35 samples, 0.63%)</title><rect x="17.2" y="275.0" width="7.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="20.2" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (27 samples, 0.48%)</title><rect x="17.2" y="259.0" width="5.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="20.2" y="270.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (27 samples, 0.48%)</title><rect x="17.2" y="243.0" width="5.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="20.2" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (27 samples, 0.48%)</title><rect x="17.2" y="227.0" width="5.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="20.2" y="238.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (27 samples, 0.48%)</title><rect x="17.2" y="211.0" width="5.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="20.2" y="222.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (27 samples, 0.48%)</title><rect x="17.2" y="195.0" width="5.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="20.2" y="206.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (27 samples, 0.48%)</title><rect x="17.2" y="179.0" width="5.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="20.2" y="190.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (27 samples, 0.48%)</title><rect x="17.2" y="163.0" width="5.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="20.2" y="174.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (26 samples, 0.46%)</title><rect x="17.2" y="147.0" width="5.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="20.2" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/SSTable$1.next (26 samples, 0.46%)</title><rect x="17.2" y="131.0" width="5.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="20.2" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/SSTable$1.next (26 samples, 0.46%)</title><rect x="17.2" y="115.0" width="5.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="20.2" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/SSTable.getCell (26 samples, 0.46%)</title><rect x="17.2" y="99.0" width="5.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="20.2" y="110.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (14 samples, 0.25%)</title><rect x="17.2" y="83.0" width="2.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="20.2" y="94.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (10 samples, 0.18%)</title><rect x="17.2" y="67.0" width="2.1" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="20.2" y="78.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (4 samples, 0.07%)</title><rect x="19.3" y="67.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="22.3" y="78.0"></text>
</g>
<g>
<title>byte[] (4 samples, 0.07%)</title><rect x="19.3" y="51.0" width="0.8" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="22.3" y="62.0"></text>
</g>
<g>
<title>ru.mail.polis.Cell (2 samples, 0.04%)</title><rect x="20.1" y="83.0" width="0.4" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="23.1" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/SSTable.getOffset (9 samples, 0.16%)</title><rect x="20.8" y="83.0" width="1.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="23.8" y="94.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (9 samples, 0.16%)</title><rect x="20.8" y="67.0" width="1.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="23.8" y="78.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (5 samples, 0.09%)</title><rect x="20.8" y="51.0" width="1.0" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="23.8" y="62.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (4 samples, 0.07%)</title><rect x="21.8" y="51.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="24.8" y="62.0"></text>
</g>
<g>
<title>byte[] (4 samples, 0.07%)</title><rect x="21.8" y="35.0" width="0.9" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="24.8" y="46.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl$$Lambda$61/1901050430.apply (8 samples, 0.14%)</title><rect x="22.9" y="259.0" width="1.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="25.9" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/Cell.getKey (8 samples, 0.14%)</title><rect x="22.9" y="243.0" width="1.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="25.9" y="254.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (8 samples, 0.14%)</title><rect x="22.9" y="227.0" width="1.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="25.9" y="238.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (8 samples, 0.14%)</title><rect x="22.9" y="211.0" width="1.7" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="25.9" y="222.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.next (6 samples, 0.11%)</title><rect x="24.6" y="339.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="27.6" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$6.transform (6 samples, 0.11%)</title><rect x="24.6" y="323.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="27.6" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl$$Lambda$63/454736490.apply (6 samples, 0.11%)</title><rect x="24.6" y="307.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="27.6" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.lambda$iterator$4 (6 samples, 0.11%)</title><rect x="24.6" y="291.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="27.6" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/Cell.getKey (2 samples, 0.04%)</title><rect x="24.6" y="275.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="27.6" y="286.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (2 samples, 0.04%)</title><rect x="24.6" y="259.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="27.6" y="270.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (2 samples, 0.04%)</title><rect x="24.6" y="243.0" width="0.4" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="27.6" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/Value.getData (3 samples, 0.05%)</title><rect x="25.2" y="275.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="28.2" y="286.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (3 samples, 0.05%)</title><rect x="25.2" y="259.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="28.2" y="270.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (3 samples, 0.05%)</title><rect x="25.2" y="243.0" width="0.6" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="28.2" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/Record.getValue (3 samples, 0.05%)</title><rect x="25.8" y="339.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="28.8" y="350.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (3 samples, 0.05%)</title><rect x="25.8" y="323.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="28.8" y="334.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (3 samples, 0.05%)</title><rect x="25.8" y="307.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="28.8" y="318.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (3 samples, 0.05%)</title><rect x="25.8" y="291.0" width="0.7" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="28.8" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.iterator (741 samples, 13.24%)</title><rect x="26.5" y="339.0" width="156.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="29.5" y="350.0">ru/mail/polis/dao/im..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.filter (3 samples, 0.05%)</title><rect x="26.5" y="323.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="29.5" y="334.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$5 (3 samples, 0.05%)</title><rect x="26.5" y="307.0" width="0.6" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="29.5" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.compactIterator (738 samples, 13.19%)</title><rect x="27.1" y="323.0" width="155.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="30.1" y="334.0">ru/mail/polis/dao/im..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (75 samples, 1.34%)</title><rect x="27.1" y="307.0" width="15.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="30.1" y="318.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator (2 samples, 0.04%)</title><rect x="27.1" y="291.0" width="0.4" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="30.1" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (73 samples, 1.30%)</title><rect x="27.5" y="291.0" width="15.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="30.5" y="302.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator$1 (3 samples, 0.05%)</title><rect x="27.5" y="275.0" width="0.6" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="30.5" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.peekingIterator (2 samples, 0.04%)</title><rect x="28.1" y="275.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="31.1" y="286.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$PeekingImpl (2 samples, 0.04%)</title><rect x="28.1" y="259.0" width="0.5" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="31.1" y="270.0"></text>
</g>
<g>
<title>java.util.PriorityQueue (5 samples, 0.09%)</title><rect x="28.6" y="275.0" width="1.0" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="31.6" y="286.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (62 samples, 1.11%)</title><rect x="29.8" y="275.0" width="13.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="32.8" y="286.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (62 samples, 1.11%)</title><rect x="29.8" y="259.0" width="13.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="32.8" y="270.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (62 samples, 1.11%)</title><rect x="29.8" y="243.0" width="13.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="32.8" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (62 samples, 1.11%)</title><rect x="29.8" y="227.0" width="13.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="32.8" y="238.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (62 samples, 1.11%)</title><rect x="29.8" y="211.0" width="13.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="32.8" y="222.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (62 samples, 1.11%)</title><rect x="29.8" y="195.0" width="13.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="32.8" y="206.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (62 samples, 1.11%)</title><rect x="29.8" y="179.0" width="13.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="32.8" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/SSTable$1.next (62 samples, 1.11%)</title><rect x="29.8" y="163.0" width="13.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="32.8" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/SSTable$1.next (62 samples, 1.11%)</title><rect x="29.8" y="147.0" width="13.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="32.8" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/SSTable.getCell (62 samples, 1.11%)</title><rect x="29.8" y="131.0" width="13.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="32.8" y="142.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (37 samples, 0.66%)</title><rect x="29.8" y="115.0" width="7.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="32.8" y="126.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (25 samples, 0.45%)</title><rect x="29.8" y="99.0" width="5.3" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="32.8" y="110.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (12 samples, 0.21%)</title><rect x="35.1" y="99.0" width="2.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="38.1" y="110.0"></text>
</g>
<g>
<title>byte[] (12 samples, 0.21%)</title><rect x="35.1" y="83.0" width="2.5" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="38.1" y="94.0"></text>
</g>
<g>
<title>ru.mail.polis.Value (3 samples, 0.05%)</title><rect x="37.8" y="115.0" width="0.7" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="40.8" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/SSTable.getOffset (21 samples, 0.38%)</title><rect x="38.5" y="115.0" width="4.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="41.5" y="126.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (21 samples, 0.38%)</title><rect x="38.5" y="99.0" width="4.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="41.5" y="110.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (13 samples, 0.23%)</title><rect x="38.5" y="83.0" width="2.7" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="41.5" y="94.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (8 samples, 0.14%)</title><rect x="41.2" y="83.0" width="1.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="44.2" y="94.0"></text>
</g>
<g>
<title>byte[] (8 samples, 0.14%)</title><rect x="41.2" y="67.0" width="1.7" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="44.2" y="78.0"></text>
</g>
<g>
<title>java.util.ArrayList (4 samples, 0.07%)</title><rect x="42.9" y="307.0" width="0.8" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="45.9" y="318.0"></text>
</g>
<g>
<title>java/lang/Iterable.forEach (606 samples, 10.83%)</title><rect x="43.7" y="307.0" width="127.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="46.7" y="318.0">java/lang/Iterab..</text>
</g>
<g>
<title>java/util/AbstractMap$2.iterator (4 samples, 0.07%)</title><rect x="43.7" y="291.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="46.7" y="302.0"></text>
</g>
<g>
<title>java.util.AbstractMap$2$1 (3 samples, 0.05%)</title><rect x="43.7" y="275.0" width="0.7" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="46.7" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl$$Lambda$59/395476041.accept (602 samples, 10.76%)</title><rect x="44.6" y="291.0" width="127.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="47.6" y="302.0">ru/mail/polis/da..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.lambda$compactIterator$7 (602 samples, 10.76%)</title><rect x="44.6" y="275.0" width="127.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="47.6" y="286.0">ru/mail/polis/da..</text>
</g>
<g>
<title>ru/mail/polis/SSTable.iterator (602 samples, 10.76%)</title><rect x="44.6" y="259.0" width="127.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="47.6" y="270.0">ru/mail/polis/SS..</text>
</g>
<g>
<title>ru.mail.polis.SSTable$1 (4 samples, 0.07%)</title><rect x="44.6" y="243.0" width="0.8" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="47.6" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/SSTable$1.&lt;init&gt; (598 samples, 10.69%)</title><rect x="45.4" y="243.0" width="126.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="48.4" y="254.0">ru/mail/polis/SS..</text>
</g>
<g>
<title>ru/mail/polis/SSTable.getPosition (598 samples, 10.69%)</title><rect x="45.4" y="227.0" width="126.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="48.4" y="238.0">ru/mail/polis/SS..</text>
</g>
<g>
<title>ru/mail/polis/SSTable.getKey (598 samples, 10.69%)</title><rect x="45.4" y="211.0" width="126.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="48.4" y="222.0">ru/mail/polis/SS..</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (411 samples, 7.35%)</title><rect x="45.4" y="195.0" width="86.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="48.4" y="206.0">java/nio/B..</text>
</g>
<g>
<title>java.nio.HeapByteBuffer (273 samples, 4.88%)</title><rect x="45.4" y="179.0" width="57.6" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="48.4" y="190.0">java.n..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (138 samples, 2.47%)</title><rect x="103.0" y="179.0" width="29.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="106.0" y="190.0">ja..</text>
</g>
<g>
<title>byte[] (138 samples, 2.47%)</title><rect x="103.0" y="163.0" width="29.1" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="106.0" y="174.0">by..</text>
</g>
<g>
<title>ru/mail/polis/SSTable.getOffset (187 samples, 3.34%)</title><rect x="132.1" y="195.0" width="39.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="135.1" y="206.0">ru/..</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (187 samples, 3.34%)</title><rect x="132.1" y="179.0" width="39.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="135.1" y="190.0">jav..</text>
</g>
<g>
<title>java.nio.HeapByteBuffer (126 samples, 2.25%)</title><rect x="132.1" y="163.0" width="26.6" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="135.1" y="174.0">j..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (61 samples, 1.09%)</title><rect x="158.7" y="163.0" width="12.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="161.7" y="174.0"></text>
</g>
<g>
<title>byte[] (61 samples, 1.09%)</title><rect x="158.7" y="147.0" width="12.9" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="161.7" y="158.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (3 samples, 0.05%)</title><rect x="171.6" y="307.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="174.6" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (3 samples, 0.05%)</title><rect x="171.6" y="291.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="174.6" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl$$Lambda$59/395476041.get$Lambda (2 samples, 0.04%)</title><rect x="171.6" y="275.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="174.6" y="286.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.impl.DAOImpl$$Lambda$59 (2 samples, 0.04%)</title><rect x="171.6" y="259.0" width="0.4" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="174.6" y="270.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (2 samples, 0.04%)</title><rect x="172.2" y="307.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="175.2" y="318.0"></text>
</g>
<g>
<title>java.lang.Object[] (2 samples, 0.04%)</title><rect x="172.2" y="291.0" width="0.4" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="175.2" y="302.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection.forEach (6 samples, 0.11%)</title><rect x="172.6" y="307.0" width="1.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="175.6" y="318.0"></text>
</g>
<g>
<title>java/lang/Iterable.forEach (6 samples, 0.11%)</title><rect x="172.6" y="291.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="175.6" y="302.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (6 samples, 0.11%)</title><rect x="172.6" y="275.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="175.6" y="286.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (6 samples, 0.11%)</title><rect x="172.6" y="259.0" width="1.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="175.6" y="270.0"></text>
</g>
<g>
<title>java.util.HashMap$KeyIterator (6 samples, 0.11%)</title><rect x="172.6" y="243.0" width="1.3" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="175.6" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/MemTable.iterator (8 samples, 0.14%)</title><rect x="173.9" y="307.0" width="1.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="176.9" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.transform (3 samples, 0.05%)</title><rect x="173.9" y="291.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="176.9" y="302.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$6 (3 samples, 0.05%)</title><rect x="173.9" y="275.0" width="0.6" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="176.9" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (4 samples, 0.07%)</title><rect x="174.7" y="291.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="177.7" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (4 samples, 0.07%)</title><rect x="174.7" y="275.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="177.7" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (4 samples, 0.07%)</title><rect x="174.7" y="259.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="177.7" y="270.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap (4 samples, 0.07%)</title><rect x="174.7" y="243.0" width="0.9" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="177.7" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (34 samples, 0.61%)</title><rect x="175.6" y="307.0" width="7.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="178.6" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (34 samples, 0.61%)</title><rect x="175.6" y="291.0" width="7.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="178.6" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (34 samples, 0.61%)</title><rect x="175.6" y="275.0" width="7.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="178.6" y="286.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (34 samples, 0.61%)</title><rect x="175.6" y="259.0" width="7.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="178.6" y="270.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (34 samples, 0.61%)</title><rect x="175.6" y="243.0" width="7.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="178.6" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (34 samples, 0.61%)</title><rect x="175.6" y="227.0" width="7.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="178.6" y="238.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (34 samples, 0.61%)</title><rect x="175.6" y="211.0" width="7.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="178.6" y="222.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (34 samples, 0.61%)</title><rect x="175.6" y="195.0" width="7.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="178.6" y="206.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (34 samples, 0.61%)</title><rect x="175.6" y="179.0" width="7.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="178.6" y="190.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (33 samples, 0.59%)</title><rect x="175.6" y="163.0" width="6.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="178.6" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/SSTable$1.next (33 samples, 0.59%)</title><rect x="175.6" y="147.0" width="6.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="178.6" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/SSTable$1.next (33 samples, 0.59%)</title><rect x="175.6" y="131.0" width="6.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="178.6" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/SSTable.getCell (33 samples, 0.59%)</title><rect x="175.6" y="115.0" width="6.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="178.6" y="126.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (26 samples, 0.46%)</title><rect x="175.6" y="99.0" width="5.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="178.6" y="110.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (16 samples, 0.29%)</title><rect x="175.6" y="83.0" width="3.3" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="178.6" y="94.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (10 samples, 0.18%)</title><rect x="178.9" y="83.0" width="2.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="181.9" y="94.0"></text>
</g>
<g>
<title>byte[] (10 samples, 0.18%)</title><rect x="178.9" y="67.0" width="2.1" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="181.9" y="78.0"></text>
</g>
<g>
<title>ru.mail.polis.Cell (2 samples, 0.04%)</title><rect x="181.0" y="99.0" width="0.5" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="184.0" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/SSTable.getOffset (4 samples, 0.07%)</title><rect x="181.7" y="99.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="184.7" y="110.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (4 samples, 0.07%)</title><rect x="181.7" y="83.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="184.7" y="94.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (3 samples, 0.05%)</title><rect x="181.7" y="67.0" width="0.6" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="184.7" y="78.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (2 samples, 0.04%)</title><rect x="182.7" y="419.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="185.7" y="430.0"></text>
</g>
<g>
<title>java/lang/String.substring (2 samples, 0.04%)</title><rect x="182.7" y="403.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="185.7" y="414.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (2 samples, 0.04%)</title><rect x="182.7" y="387.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="185.7" y="398.0"></text>
</g>
<g>
<title>java.lang.String (2 samples, 0.04%)</title><rect x="182.7" y="371.0" width="0.5" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="185.7" y="382.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (9 samples, 0.16%)</title><rect x="183.2" y="451.0" width="1.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="186.2" y="462.0"></text>
</g>
<g>
<title>one.nio.http.Request (2 samples, 0.04%)</title><rect x="183.2" y="435.0" width="0.4" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="186.2" y="446.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (4 samples, 0.07%)</title><rect x="183.6" y="435.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="186.6" y="446.0"></text>
</g>
<g>
<title>java.lang.String[] (4 samples, 0.07%)</title><rect x="183.6" y="419.0" width="0.8" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="186.6" y="430.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (3 samples, 0.05%)</title><rect x="184.4" y="435.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="187.4" y="446.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (3 samples, 0.05%)</title><rect x="184.4" y="419.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="187.4" y="430.0"></text>
</g>
<g>
<title>char[] (2 samples, 0.04%)</title><rect x="184.4" y="403.0" width="0.4" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="187.4" y="414.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (7 samples, 0.13%)</title><rect x="185.0" y="451.0" width="1.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="188.0" y="462.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (7 samples, 0.13%)</title><rect x="185.0" y="435.0" width="1.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="188.0" y="446.0"></text>
</g>
<g>
<title>char[] (5 samples, 0.09%)</title><rect x="185.0" y="419.0" width="1.1" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="188.0" y="430.0"></text>
</g>
<g>
<title>[NIO Selector #1 tid=4850] (782 samples, 13.98%)</title><rect x="186.5" y="531.0" width="165.0" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="189.5" y="542.0">[NIO Selector #1 tid=..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (782 samples, 13.98%)</title><rect x="186.5" y="515.0" width="165.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="189.5" y="526.0">one/nio/server/Select..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (12 samples, 0.21%)</title><rect x="186.5" y="499.0" width="2.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="189.5" y="510.0"></text>
</g>
<g>
<title>one.nio.net.NativeSelector$2 (12 samples, 0.21%)</title><rect x="186.5" y="483.0" width="2.6" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="189.5" y="494.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (770 samples, 13.76%)</title><rect x="189.1" y="499.0" width="162.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="192.1" y="510.0">one/nio/net/Session.p..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (770 samples, 13.76%)</title><rect x="189.1" y="483.0" width="162.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="192.1" y="494.0">one/nio/http/HttpSess..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (770 samples, 13.76%)</title><rect x="189.1" y="467.0" width="162.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="192.1" y="478.0">one/nio/http/HttpSess..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (751 samples, 13.42%)</title><rect x="189.1" y="451.0" width="158.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="192.1" y="462.0">one/nio/http/HttpSes..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (751 samples, 13.42%)</title><rect x="189.1" y="435.0" width="158.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="192.1" y="446.0">one/nio/http/HttpSer..</text>
</g>
<g>
<title>RequestHandler0_entity.handleRequest (749 samples, 13.39%)</title><rect x="189.1" y="419.0" width="157.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="192.1" y="430.0">RequestHandler0_enti..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (3 samples, 0.05%)</title><rect x="189.1" y="403.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="192.1" y="414.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (3 samples, 0.05%)</title><rect x="189.1" y="387.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="192.1" y="398.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (3 samples, 0.05%)</title><rect x="189.1" y="371.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="192.1" y="382.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (3 samples, 0.05%)</title><rect x="189.1" y="355.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="192.1" y="366.0"></text>
</g>
<g>
<title>byte[] (3 samples, 0.05%)</title><rect x="189.1" y="339.0" width="0.6" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="192.1" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivlev/ServiceController.entity (745 samples, 13.32%)</title><rect x="189.9" y="403.0" width="157.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="192.9" y="414.0">ru/mail/polis/servic..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (2 samples, 0.04%)</title><rect x="189.9" y="387.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="192.9" y="398.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (2 samples, 0.04%)</title><rect x="189.9" y="371.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="192.9" y="382.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (2 samples, 0.04%)</title><rect x="189.9" y="355.0" width="0.4" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="192.9" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivlev/ServiceController.getResponse (743 samples, 13.28%)</title><rect x="190.3" y="387.0" width="156.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="193.3" y="398.0">ru/mail/polis/servic..</text>
</g>
<g>
<title>ru/mail/polis/service/ivlev/ServiceController.methodGet (743 samples, 13.28%)</title><rect x="190.3" y="371.0" width="156.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="193.3" y="382.0">ru/mail/polis/servic..</text>
</g>
<g>
<title>byte[] (4 samples, 0.07%)</title><rect x="190.3" y="355.0" width="0.9" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="193.3" y="366.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (4 samples, 0.07%)</title><rect x="191.2" y="355.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="194.2" y="366.0"></text>
</g>
<g>
<title>byte[] (3 samples, 0.05%)</title><rect x="191.2" y="339.0" width="0.6" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="194.2" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.get (735 samples, 13.14%)</title><rect x="192.0" y="355.0" width="155.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="195.0" y="366.0">ru/mail/polis/dao/DA..</text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (40 samples, 0.71%)</title><rect x="192.0" y="339.0" width="8.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="195.0" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (40 samples, 0.71%)</title><rect x="192.0" y="323.0" width="8.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="195.0" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (40 samples, 0.71%)</title><rect x="192.0" y="307.0" width="8.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="195.0" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (40 samples, 0.71%)</title><rect x="192.0" y="291.0" width="8.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="195.0" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (40 samples, 0.71%)</title><rect x="192.0" y="275.0" width="8.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="195.0" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (33 samples, 0.59%)</title><rect x="192.0" y="259.0" width="7.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="195.0" y="270.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (33 samples, 0.59%)</title><rect x="192.0" y="243.0" width="7.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="195.0" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (33 samples, 0.59%)</title><rect x="192.0" y="227.0" width="7.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="195.0" y="238.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (33 samples, 0.59%)</title><rect x="192.0" y="211.0" width="7.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="195.0" y="222.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (33 samples, 0.59%)</title><rect x="192.0" y="195.0" width="7.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="195.0" y="206.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (33 samples, 0.59%)</title><rect x="192.0" y="179.0" width="7.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="195.0" y="190.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (33 samples, 0.59%)</title><rect x="192.0" y="163.0" width="7.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="195.0" y="174.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (29 samples, 0.52%)</title><rect x="192.0" y="147.0" width="6.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="195.0" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/SSTable$1.next (29 samples, 0.52%)</title><rect x="192.0" y="131.0" width="6.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="195.0" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/SSTable$1.next (29 samples, 0.52%)</title><rect x="192.0" y="115.0" width="6.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="195.0" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/SSTable.getCell (29 samples, 0.52%)</title><rect x="192.0" y="99.0" width="6.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="195.0" y="110.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (11 samples, 0.20%)</title><rect x="192.0" y="83.0" width="2.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="195.0" y="94.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (7 samples, 0.13%)</title><rect x="192.0" y="67.0" width="1.5" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="195.0" y="78.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (4 samples, 0.07%)</title><rect x="193.5" y="67.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="196.5" y="78.0"></text>
</g>
<g>
<title>byte[] (4 samples, 0.07%)</title><rect x="193.5" y="51.0" width="0.8" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="196.5" y="62.0"></text>
</g>
<g>
<title>ru.mail.polis.Cell (3 samples, 0.05%)</title><rect x="194.3" y="83.0" width="0.7" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="197.3" y="94.0"></text>
</g>
<g>
<title>ru.mail.polis.Value (2 samples, 0.04%)</title><rect x="195.0" y="83.0" width="0.4" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="198.0" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/SSTable.getOffset (13 samples, 0.23%)</title><rect x="195.4" y="83.0" width="2.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="198.4" y="94.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (13 samples, 0.23%)</title><rect x="195.4" y="67.0" width="2.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="198.4" y="78.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (8 samples, 0.14%)</title><rect x="195.4" y="51.0" width="1.7" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="198.4" y="62.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (5 samples, 0.09%)</title><rect x="197.1" y="51.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="200.1" y="62.0"></text>
</g>
<g>
<title>byte[] (5 samples, 0.09%)</title><rect x="197.1" y="35.0" width="1.0" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="200.1" y="46.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (4 samples, 0.07%)</title><rect x="198.1" y="147.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="201.1" y="158.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (4 samples, 0.07%)</title><rect x="198.1" y="131.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="201.1" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/Cell.compareTo (4 samples, 0.07%)</title><rect x="198.1" y="115.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="201.1" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/Cell.compareTo (4 samples, 0.07%)</title><rect x="198.1" y="99.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="201.1" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/Cell.getKey (4 samples, 0.07%)</title><rect x="198.1" y="83.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="201.1" y="94.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (4 samples, 0.07%)</title><rect x="198.1" y="67.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="201.1" y="78.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (4 samples, 0.07%)</title><rect x="198.1" y="51.0" width="0.9" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="201.1" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl$$Lambda$61/1901050430.apply (7 samples, 0.13%)</title><rect x="199.0" y="259.0" width="1.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="202.0" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/Cell.getKey (7 samples, 0.13%)</title><rect x="199.0" y="243.0" width="1.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="202.0" y="254.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (7 samples, 0.13%)</title><rect x="199.0" y="227.0" width="1.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="202.0" y="238.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (7 samples, 0.13%)</title><rect x="199.0" y="211.0" width="1.4" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="202.0" y="222.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.next (4 samples, 0.07%)</title><rect x="200.4" y="339.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="203.4" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$6.transform (4 samples, 0.07%)</title><rect x="200.4" y="323.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="203.4" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl$$Lambda$63/454736490.apply (4 samples, 0.07%)</title><rect x="200.4" y="307.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="203.4" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.lambda$iterator$4 (4 samples, 0.07%)</title><rect x="200.4" y="291.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="203.4" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/Record.of (2 samples, 0.04%)</title><rect x="200.7" y="275.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="203.7" y="286.0"></text>
</g>
<g>
<title>ru.mail.polis.Record (2 samples, 0.04%)</title><rect x="200.7" y="259.0" width="0.4" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="203.7" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/Record.getValue (4 samples, 0.07%)</title><rect x="201.5" y="339.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="204.5" y="350.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (4 samples, 0.07%)</title><rect x="201.5" y="323.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="204.5" y="334.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (4 samples, 0.07%)</title><rect x="201.5" y="307.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="204.5" y="318.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (4 samples, 0.07%)</title><rect x="201.5" y="291.0" width="0.8" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="204.5" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.iterator (686 samples, 12.26%)</title><rect x="202.3" y="339.0" width="144.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="205.3" y="350.0">ru/mail/polis/dao/..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.compactIterator (683 samples, 12.21%)</title><rect x="203.0" y="323.0" width="144.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="206.0" y="334.0">ru/mail/polis/dao/..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (53 samples, 0.95%)</title><rect x="203.0" y="307.0" width="11.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="206.0" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (53 samples, 0.95%)</title><rect x="203.0" y="291.0" width="11.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="206.0" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.peekingIterator (5 samples, 0.09%)</title><rect x="203.2" y="275.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="206.2" y="286.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$PeekingImpl (5 samples, 0.09%)</title><rect x="203.2" y="259.0" width="1.0" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="206.2" y="270.0"></text>
</g>
<g>
<title>java.util.PriorityQueue (4 samples, 0.07%)</title><rect x="204.2" y="275.0" width="0.9" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="207.2" y="286.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (43 samples, 0.77%)</title><rect x="205.1" y="275.0" width="9.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="208.1" y="286.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (43 samples, 0.77%)</title><rect x="205.1" y="259.0" width="9.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="208.1" y="270.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (43 samples, 0.77%)</title><rect x="205.1" y="243.0" width="9.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="208.1" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (43 samples, 0.77%)</title><rect x="205.1" y="227.0" width="9.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="208.1" y="238.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (43 samples, 0.77%)</title><rect x="205.1" y="211.0" width="9.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="208.1" y="222.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (43 samples, 0.77%)</title><rect x="205.1" y="195.0" width="9.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="208.1" y="206.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (42 samples, 0.75%)</title><rect x="205.1" y="179.0" width="8.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="208.1" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/SSTable$1.next (42 samples, 0.75%)</title><rect x="205.1" y="163.0" width="8.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="208.1" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/SSTable$1.next (42 samples, 0.75%)</title><rect x="205.1" y="147.0" width="8.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="208.1" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/SSTable.getCell (42 samples, 0.75%)</title><rect x="205.1" y="131.0" width="8.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="208.1" y="142.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (20 samples, 0.36%)</title><rect x="205.1" y="115.0" width="4.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="208.1" y="126.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (15 samples, 0.27%)</title><rect x="205.1" y="99.0" width="3.1" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="208.1" y="110.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (5 samples, 0.09%)</title><rect x="208.2" y="99.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="211.2" y="110.0"></text>
</g>
<g>
<title>byte[] (5 samples, 0.09%)</title><rect x="208.2" y="83.0" width="1.1" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="211.2" y="94.0"></text>
</g>
<g>
<title>ru.mail.polis.Cell (3 samples, 0.05%)</title><rect x="209.3" y="115.0" width="0.6" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="212.3" y="126.0"></text>
</g>
<g>
<title>ru.mail.polis.Value (3 samples, 0.05%)</title><rect x="209.9" y="115.0" width="0.7" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="212.9" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/SSTable.getOffset (16 samples, 0.29%)</title><rect x="210.6" y="115.0" width="3.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="213.6" y="126.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (16 samples, 0.29%)</title><rect x="210.6" y="99.0" width="3.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="213.6" y="110.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (10 samples, 0.18%)</title><rect x="210.6" y="83.0" width="2.1" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="213.6" y="94.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (6 samples, 0.11%)</title><rect x="212.7" y="83.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="215.7" y="94.0"></text>
</g>
<g>
<title>byte[] (6 samples, 0.11%)</title><rect x="212.7" y="67.0" width="1.2" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="215.7" y="78.0"></text>
</g>
<g>
<title>java/lang/Iterable.forEach (583 samples, 10.42%)</title><rect x="214.4" y="307.0" width="122.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="217.4" y="318.0">java/lang/Itera..</text>
</g>
<g>
<title>java/util/AbstractMap$2.iterator (3 samples, 0.05%)</title><rect x="214.4" y="291.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="217.4" y="302.0"></text>
</g>
<g>
<title>java/util/AbstractMap$2$1.&lt;init&gt; (2 samples, 0.04%)</title><rect x="214.6" y="275.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="217.6" y="286.0"></text>
</g>
<g>
<title>java/util/TreeMap$DescendingSubMap$DescendingEntrySetView.iterator (2 samples, 0.04%)</title><rect x="214.6" y="259.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="217.6" y="270.0"></text>
</g>
<g>
<title>java.util.TreeMap$NavigableSubMap$DescendingSubMapEntryIterator (2 samples, 0.04%)</title><rect x="214.6" y="243.0" width="0.4" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="217.6" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl$$Lambda$59/395476041.accept (580 samples, 10.37%)</title><rect x="215.0" y="291.0" width="122.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="218.0" y="302.0">ru/mail/polis/d..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.lambda$compactIterator$7 (580 samples, 10.37%)</title><rect x="215.0" y="275.0" width="122.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="218.0" y="286.0">ru/mail/polis/d..</text>
</g>
<g>
<title>ru/mail/polis/SSTable.iterator (580 samples, 10.37%)</title><rect x="215.0" y="259.0" width="122.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="218.0" y="270.0">ru/mail/polis/S..</text>
</g>
<g>
<title>ru.mail.polis.SSTable$1 (2 samples, 0.04%)</title><rect x="215.0" y="243.0" width="0.4" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="218.0" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/SSTable$1.&lt;init&gt; (578 samples, 10.33%)</title><rect x="215.4" y="243.0" width="121.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="218.4" y="254.0">ru/mail/polis/S..</text>
</g>
<g>
<title>ru/mail/polis/SSTable.getPosition (578 samples, 10.33%)</title><rect x="215.4" y="227.0" width="121.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="218.4" y="238.0">ru/mail/polis/S..</text>
</g>
<g>
<title>ru/mail/polis/SSTable.getKey (578 samples, 10.33%)</title><rect x="215.4" y="211.0" width="121.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="218.4" y="222.0">ru/mail/polis/S..</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (399 samples, 7.13%)</title><rect x="215.4" y="195.0" width="84.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="218.4" y="206.0">java/nio/B..</text>
</g>
<g>
<title>java.nio.HeapByteBuffer (253 samples, 4.52%)</title><rect x="215.4" y="179.0" width="53.4" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="218.4" y="190.0">java...</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (146 samples, 2.61%)</title><rect x="268.8" y="179.0" width="30.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="271.8" y="190.0">ja..</text>
</g>
<g>
<title>byte[] (146 samples, 2.61%)</title><rect x="268.8" y="163.0" width="30.8" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="271.8" y="174.0">by..</text>
</g>
<g>
<title>ru/mail/polis/SSTable.getOffset (179 samples, 3.20%)</title><rect x="299.6" y="195.0" width="37.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="302.6" y="206.0">ru/..</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (179 samples, 3.20%)</title><rect x="299.6" y="179.0" width="37.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="302.6" y="190.0">jav..</text>
</g>
<g>
<title>java.nio.HeapByteBuffer (126 samples, 2.25%)</title><rect x="299.6" y="163.0" width="26.5" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="302.6" y="174.0">j..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (53 samples, 0.95%)</title><rect x="326.1" y="163.0" width="11.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="329.1" y="174.0"></text>
</g>
<g>
<title>byte[] (53 samples, 0.95%)</title><rect x="326.1" y="147.0" width="11.2" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="329.1" y="158.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (5 samples, 0.09%)</title><rect x="337.3" y="307.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="340.3" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (5 samples, 0.09%)</title><rect x="337.3" y="291.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="340.3" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl$$Lambda$59/395476041.get$Lambda (3 samples, 0.05%)</title><rect x="337.3" y="275.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="340.3" y="286.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.impl.DAOImpl$$Lambda$59 (3 samples, 0.05%)</title><rect x="337.3" y="259.0" width="0.7" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="340.3" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl$$Lambda$60/1813653559.get$Lambda (2 samples, 0.04%)</title><rect x="338.0" y="275.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="341.0" y="286.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.impl.DAOImpl$$Lambda$60 (2 samples, 0.04%)</title><rect x="338.0" y="259.0" width="0.4" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="341.0" y="270.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection.forEach (2 samples, 0.04%)</title><rect x="338.4" y="307.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="341.4" y="318.0"></text>
</g>
<g>
<title>java/lang/Iterable.forEach (2 samples, 0.04%)</title><rect x="338.4" y="291.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="341.4" y="302.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (2 samples, 0.04%)</title><rect x="338.4" y="275.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="341.4" y="286.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (2 samples, 0.04%)</title><rect x="338.4" y="259.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="341.4" y="270.0"></text>
</g>
<g>
<title>java.util.HashMap$KeyIterator (2 samples, 0.04%)</title><rect x="338.4" y="243.0" width="0.4" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="341.4" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/MemTable.iterator (7 samples, 0.13%)</title><rect x="338.8" y="307.0" width="1.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="341.8" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$EntrySet.iterator (4 samples, 0.07%)</title><rect x="339.0" y="291.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="342.0" y="302.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapEntryIterator (4 samples, 0.07%)</title><rect x="339.0" y="275.0" width="0.9" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="342.0" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (2 samples, 0.04%)</title><rect x="339.9" y="291.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="342.9" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (2 samples, 0.04%)</title><rect x="339.9" y="275.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="342.9" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (2 samples, 0.04%)</title><rect x="339.9" y="259.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="342.9" y="270.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap (2 samples, 0.04%)</title><rect x="339.9" y="243.0" width="0.4" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="342.9" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (32 samples, 0.57%)</title><rect x="340.3" y="307.0" width="6.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="343.3" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (31 samples, 0.55%)</title><rect x="340.5" y="291.0" width="6.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="343.5" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (31 samples, 0.55%)</title><rect x="340.5" y="275.0" width="6.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="343.5" y="286.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (31 samples, 0.55%)</title><rect x="340.5" y="259.0" width="6.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="343.5" y="270.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (31 samples, 0.55%)</title><rect x="340.5" y="243.0" width="6.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="343.5" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (31 samples, 0.55%)</title><rect x="340.5" y="227.0" width="6.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="343.5" y="238.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (31 samples, 0.55%)</title><rect x="340.5" y="211.0" width="6.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="343.5" y="222.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (31 samples, 0.55%)</title><rect x="340.5" y="195.0" width="6.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="343.5" y="206.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (31 samples, 0.55%)</title><rect x="340.5" y="179.0" width="6.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="343.5" y="190.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (30 samples, 0.54%)</title><rect x="340.5" y="163.0" width="6.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="343.5" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/SSTable$1.next (30 samples, 0.54%)</title><rect x="340.5" y="147.0" width="6.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="343.5" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/SSTable$1.next (30 samples, 0.54%)</title><rect x="340.5" y="131.0" width="6.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="343.5" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/SSTable.getCell (30 samples, 0.54%)</title><rect x="340.5" y="115.0" width="6.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="343.5" y="126.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (18 samples, 0.32%)</title><rect x="340.5" y="99.0" width="3.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="343.5" y="110.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (16 samples, 0.29%)</title><rect x="340.5" y="83.0" width="3.4" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="343.5" y="94.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (2 samples, 0.04%)</title><rect x="343.9" y="83.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="346.9" y="94.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.04%)</title><rect x="343.9" y="67.0" width="0.4" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="346.9" y="78.0"></text>
</g>
<g>
<title>ru/mail/polis/SSTable.getOffset (10 samples, 0.18%)</title><rect x="344.7" y="99.0" width="2.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="347.7" y="110.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (10 samples, 0.18%)</title><rect x="344.7" y="83.0" width="2.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="347.7" y="94.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (8 samples, 0.14%)</title><rect x="344.7" y="67.0" width="1.7" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="347.7" y="78.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (2 samples, 0.04%)</title><rect x="346.4" y="67.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="349.4" y="78.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.04%)</title><rect x="346.4" y="51.0" width="0.4" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="349.4" y="62.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (2 samples, 0.04%)</title><rect x="347.0" y="419.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="350.0" y="430.0"></text>
</g>
<g>
<title>java/lang/String.substring (2 samples, 0.04%)</title><rect x="347.0" y="403.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="350.0" y="414.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (2 samples, 0.04%)</title><rect x="347.0" y="387.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="350.0" y="398.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (13 samples, 0.23%)</title><rect x="347.4" y="451.0" width="2.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="350.4" y="462.0"></text>
</g>
<g>
<title>one.nio.http.Request (4 samples, 0.07%)</title><rect x="347.4" y="435.0" width="0.9" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="350.4" y="446.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (2 samples, 0.04%)</title><rect x="348.3" y="435.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="351.3" y="446.0"></text>
</g>
<g>
<title>java.lang.String[] (2 samples, 0.04%)</title><rect x="348.3" y="419.0" width="0.4" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="351.3" y="430.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (7 samples, 0.13%)</title><rect x="348.7" y="435.0" width="1.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="351.7" y="446.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (7 samples, 0.13%)</title><rect x="348.7" y="419.0" width="1.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="351.7" y="430.0"></text>
</g>
<g>
<title>char[] (5 samples, 0.09%)</title><rect x="348.7" y="403.0" width="1.1" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="351.7" y="414.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (6 samples, 0.11%)</title><rect x="350.2" y="451.0" width="1.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="353.2" y="462.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (6 samples, 0.11%)</title><rect x="350.2" y="435.0" width="1.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="353.2" y="446.0"></text>
</g>
<g>
<title>char[] (3 samples, 0.05%)</title><rect x="350.2" y="419.0" width="0.6" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="353.2" y="430.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (2 samples, 0.04%)</title><rect x="351.0" y="419.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="354.0" y="430.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (2 samples, 0.04%)</title><rect x="351.0" y="403.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="354.0" y="414.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (2 samples, 0.04%)</title><rect x="351.0" y="387.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="354.0" y="398.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.04%)</title><rect x="351.0" y="371.0" width="0.5" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="354.0" y="382.0"></text>
</g>
<g>
<title>[NIO Selector #2 tid=4851] (774 samples, 13.83%)</title><rect x="351.5" y="531.0" width="163.2" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="354.5" y="542.0">[NIO Selector #2 tid=..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (774 samples, 13.83%)</title><rect x="351.5" y="515.0" width="163.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="354.5" y="526.0">one/nio/server/Select..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (11 samples, 0.20%)</title><rect x="351.5" y="499.0" width="2.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="354.5" y="510.0"></text>
</g>
<g>
<title>one.nio.net.NativeSelector$2 (11 samples, 0.20%)</title><rect x="351.5" y="483.0" width="2.3" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="354.5" y="494.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (763 samples, 13.64%)</title><rect x="353.8" y="499.0" width="160.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="356.8" y="510.0">one/nio/net/Session...</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (763 samples, 13.64%)</title><rect x="353.8" y="483.0" width="160.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="356.8" y="494.0">one/nio/http/HttpSes..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (763 samples, 13.64%)</title><rect x="353.8" y="467.0" width="160.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="356.8" y="478.0">one/nio/http/HttpSes..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (737 samples, 13.17%)</title><rect x="353.8" y="451.0" width="155.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="356.8" y="462.0">one/nio/http/HttpSes..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (737 samples, 13.17%)</title><rect x="353.8" y="435.0" width="155.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="356.8" y="446.0">one/nio/http/HttpSer..</text>
</g>
<g>
<title>RequestHandler0_entity.handleRequest (733 samples, 13.10%)</title><rect x="353.8" y="419.0" width="154.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="356.8" y="430.0">RequestHandler0_enti..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (6 samples, 0.11%)</title><rect x="353.8" y="403.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="356.8" y="414.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (6 samples, 0.11%)</title><rect x="353.8" y="387.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="356.8" y="398.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (4 samples, 0.07%)</title><rect x="353.8" y="371.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="356.8" y="382.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (4 samples, 0.07%)</title><rect x="353.8" y="355.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="356.8" y="366.0"></text>
</g>
<g>
<title>byte[] (4 samples, 0.07%)</title><rect x="353.8" y="339.0" width="0.8" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="356.8" y="350.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (2 samples, 0.04%)</title><rect x="354.6" y="371.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="357.6" y="382.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (2 samples, 0.04%)</title><rect x="354.6" y="355.0" width="0.4" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="357.6" y="366.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (2 samples, 0.04%)</title><rect x="355.0" y="403.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="358.0" y="414.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (2 samples, 0.04%)</title><rect x="355.0" y="387.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="358.0" y="398.0"></text>
</g>
<g>
<title>java/lang/String.substring (2 samples, 0.04%)</title><rect x="355.0" y="371.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="358.0" y="382.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (2 samples, 0.04%)</title><rect x="355.0" y="355.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="358.0" y="366.0"></text>
</g>
<g>
<title>java.lang.String (2 samples, 0.04%)</title><rect x="355.0" y="339.0" width="0.5" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="358.0" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivlev/ServiceController.entity (725 samples, 12.96%)</title><rect x="355.5" y="403.0" width="152.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="358.5" y="414.0">ru/mail/polis/servi..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (3 samples, 0.05%)</title><rect x="355.5" y="387.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="358.5" y="398.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (3 samples, 0.05%)</title><rect x="355.5" y="371.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="358.5" y="382.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (3 samples, 0.05%)</title><rect x="355.5" y="355.0" width="0.6" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="358.5" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivlev/ServiceController.getResponse (722 samples, 12.90%)</title><rect x="356.1" y="387.0" width="152.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="359.1" y="398.0">ru/mail/polis/servi..</text>
</g>
<g>
<title>ru/mail/polis/service/ivlev/ServiceController.methodGet (722 samples, 12.90%)</title><rect x="356.1" y="371.0" width="152.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="359.1" y="382.0">ru/mail/polis/servi..</text>
</g>
<g>
<title>byte[] (2 samples, 0.04%)</title><rect x="356.1" y="355.0" width="0.4" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="359.1" y="366.0"></text>
</g>
<g>
<title>one.nio.http.Response (2 samples, 0.04%)</title><rect x="356.5" y="355.0" width="0.4" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="359.5" y="366.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (3 samples, 0.05%)</title><rect x="356.9" y="355.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="359.9" y="366.0"></text>
</g>
<g>
<title>byte[] (3 samples, 0.05%)</title><rect x="356.9" y="339.0" width="0.7" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="359.9" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.get (715 samples, 12.78%)</title><rect x="357.6" y="355.0" width="150.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="360.6" y="366.0">ru/mail/polis/dao/D..</text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (25 samples, 0.45%)</title><rect x="357.6" y="339.0" width="5.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="360.6" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (25 samples, 0.45%)</title><rect x="357.6" y="323.0" width="5.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="360.6" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (25 samples, 0.45%)</title><rect x="357.6" y="307.0" width="5.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="360.6" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (25 samples, 0.45%)</title><rect x="357.6" y="291.0" width="5.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="360.6" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (25 samples, 0.45%)</title><rect x="357.6" y="275.0" width="5.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="360.6" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (16 samples, 0.29%)</title><rect x="357.6" y="259.0" width="3.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="360.6" y="270.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (16 samples, 0.29%)</title><rect x="357.6" y="243.0" width="3.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="360.6" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (16 samples, 0.29%)</title><rect x="357.6" y="227.0" width="3.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="360.6" y="238.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (16 samples, 0.29%)</title><rect x="357.6" y="211.0" width="3.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="360.6" y="222.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (16 samples, 0.29%)</title><rect x="357.6" y="195.0" width="3.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="360.6" y="206.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (16 samples, 0.29%)</title><rect x="357.6" y="179.0" width="3.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="360.6" y="190.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (16 samples, 0.29%)</title><rect x="357.6" y="163.0" width="3.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="360.6" y="174.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (12 samples, 0.21%)</title><rect x="357.6" y="147.0" width="2.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="360.6" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/SSTable$1.next (12 samples, 0.21%)</title><rect x="357.6" y="131.0" width="2.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="360.6" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/SSTable$1.next (12 samples, 0.21%)</title><rect x="357.6" y="115.0" width="2.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="360.6" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/SSTable.getCell (12 samples, 0.21%)</title><rect x="357.6" y="99.0" width="2.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="360.6" y="110.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (6 samples, 0.11%)</title><rect x="357.6" y="83.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="360.6" y="94.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (6 samples, 0.11%)</title><rect x="357.6" y="67.0" width="1.2" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="360.6" y="78.0"></text>
</g>
<g>
<title>ru/mail/polis/SSTable.getOffset (5 samples, 0.09%)</title><rect x="359.0" y="83.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="362.0" y="94.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (5 samples, 0.09%)</title><rect x="359.0" y="67.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="362.0" y="78.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (5 samples, 0.09%)</title><rect x="359.0" y="51.0" width="1.1" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="362.0" y="62.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (4 samples, 0.07%)</title><rect x="360.1" y="147.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="363.1" y="158.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (4 samples, 0.07%)</title><rect x="360.1" y="131.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="363.1" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/Cell.compareTo (4 samples, 0.07%)</title><rect x="360.1" y="115.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="363.1" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/Cell.compareTo (4 samples, 0.07%)</title><rect x="360.1" y="99.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="363.1" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/Cell.getKey (4 samples, 0.07%)</title><rect x="360.1" y="83.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="363.1" y="94.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (4 samples, 0.07%)</title><rect x="360.1" y="67.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="363.1" y="78.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (4 samples, 0.07%)</title><rect x="360.1" y="51.0" width="0.8" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="363.1" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl$$Lambda$61/1901050430.apply (9 samples, 0.16%)</title><rect x="360.9" y="259.0" width="1.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="363.9" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/Cell.getKey (9 samples, 0.16%)</title><rect x="360.9" y="243.0" width="1.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="363.9" y="254.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (9 samples, 0.16%)</title><rect x="360.9" y="227.0" width="1.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="363.9" y="238.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (9 samples, 0.16%)</title><rect x="360.9" y="211.0" width="1.9" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="363.9" y="222.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.next (6 samples, 0.11%)</title><rect x="362.8" y="339.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="365.8" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$6.transform (6 samples, 0.11%)</title><rect x="362.8" y="323.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="365.8" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl$$Lambda$63/454736490.apply (6 samples, 0.11%)</title><rect x="362.8" y="307.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="365.8" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.lambda$iterator$4 (6 samples, 0.11%)</title><rect x="362.8" y="291.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="365.8" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/Cell.getKey (2 samples, 0.04%)</title><rect x="362.8" y="275.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="365.8" y="286.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (2 samples, 0.04%)</title><rect x="362.8" y="259.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="365.8" y="270.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (2 samples, 0.04%)</title><rect x="362.8" y="243.0" width="0.5" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="365.8" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/Value.getData (3 samples, 0.05%)</title><rect x="363.5" y="275.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="366.5" y="286.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (3 samples, 0.05%)</title><rect x="363.5" y="259.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="366.5" y="270.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (3 samples, 0.05%)</title><rect x="363.5" y="243.0" width="0.6" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="366.5" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/Record.getKey (4 samples, 0.07%)</title><rect x="364.1" y="339.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="367.1" y="350.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (4 samples, 0.07%)</title><rect x="364.1" y="323.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="367.1" y="334.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (4 samples, 0.07%)</title><rect x="364.1" y="307.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="367.1" y="318.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (4 samples, 0.07%)</title><rect x="364.1" y="291.0" width="0.8" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="367.1" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.iterator (679 samples, 12.14%)</title><rect x="365.2" y="339.0" width="143.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="368.2" y="350.0">ru/mail/polis/dao/..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.compactIterator (677 samples, 12.10%)</title><rect x="365.6" y="323.0" width="142.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="368.6" y="334.0">ru/mail/polis/dao/..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (62 samples, 1.11%)</title><rect x="365.6" y="307.0" width="13.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="368.6" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (61 samples, 1.09%)</title><rect x="365.8" y="291.0" width="12.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="368.8" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.peekingIterator (2 samples, 0.04%)</title><rect x="366.0" y="275.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="369.0" y="286.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$PeekingImpl (2 samples, 0.04%)</title><rect x="366.0" y="259.0" width="0.4" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="369.0" y="270.0"></text>
</g>
<g>
<title>java.util.PriorityQueue (3 samples, 0.05%)</title><rect x="366.4" y="275.0" width="0.7" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="369.4" y="286.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (54 samples, 0.97%)</title><rect x="367.3" y="275.0" width="11.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="370.3" y="286.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (54 samples, 0.97%)</title><rect x="367.3" y="259.0" width="11.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="370.3" y="270.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (54 samples, 0.97%)</title><rect x="367.3" y="243.0" width="11.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="370.3" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (54 samples, 0.97%)</title><rect x="367.3" y="227.0" width="11.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="370.3" y="238.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (54 samples, 0.97%)</title><rect x="367.3" y="211.0" width="11.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="370.3" y="222.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (54 samples, 0.97%)</title><rect x="367.3" y="195.0" width="11.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="370.3" y="206.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (51 samples, 0.91%)</title><rect x="367.3" y="179.0" width="10.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="370.3" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/SSTable$1.next (51 samples, 0.91%)</title><rect x="367.3" y="163.0" width="10.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="370.3" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/SSTable$1.next (51 samples, 0.91%)</title><rect x="367.3" y="147.0" width="10.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="370.3" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/SSTable.getCell (51 samples, 0.91%)</title><rect x="367.3" y="131.0" width="10.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="370.3" y="142.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (37 samples, 0.66%)</title><rect x="367.3" y="115.0" width="7.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="370.3" y="126.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (21 samples, 0.38%)</title><rect x="367.3" y="99.0" width="4.4" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="370.3" y="110.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (16 samples, 0.29%)</title><rect x="371.7" y="99.0" width="3.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="374.7" y="110.0"></text>
</g>
<g>
<title>byte[] (16 samples, 0.29%)</title><rect x="371.7" y="83.0" width="3.4" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="374.7" y="94.0"></text>
</g>
<g>
<title>ru.mail.polis.Cell (3 samples, 0.05%)</title><rect x="375.1" y="115.0" width="0.6" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="378.1" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/SSTable.getOffset (11 samples, 0.20%)</title><rect x="375.7" y="115.0" width="2.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="378.7" y="126.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (11 samples, 0.20%)</title><rect x="375.7" y="99.0" width="2.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="378.7" y="110.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (6 samples, 0.11%)</title><rect x="375.7" y="83.0" width="1.3" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="378.7" y="94.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (5 samples, 0.09%)</title><rect x="377.0" y="83.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="380.0" y="94.0"></text>
</g>
<g>
<title>byte[] (5 samples, 0.09%)</title><rect x="377.0" y="67.0" width="1.0" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="380.0" y="78.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (3 samples, 0.05%)</title><rect x="378.0" y="179.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="381.0" y="190.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (3 samples, 0.05%)</title><rect x="378.0" y="163.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="381.0" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/Cell.compareTo (3 samples, 0.05%)</title><rect x="378.0" y="147.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="381.0" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/Cell.compareTo (3 samples, 0.05%)</title><rect x="378.0" y="131.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="381.0" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/Cell.getKey (3 samples, 0.05%)</title><rect x="378.0" y="115.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="381.0" y="126.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (3 samples, 0.05%)</title><rect x="378.0" y="99.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="381.0" y="110.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (3 samples, 0.05%)</title><rect x="378.0" y="83.0" width="0.7" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="381.0" y="94.0"></text>
</g>
<g>
<title>java.util.ArrayList (2 samples, 0.04%)</title><rect x="378.7" y="307.0" width="0.4" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="381.7" y="318.0"></text>
</g>
<g>
<title>java/lang/Iterable.forEach (573 samples, 10.24%)</title><rect x="379.1" y="307.0" width="120.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="382.1" y="318.0">java/lang/Itera..</text>
</g>
<g>
<title>java/util/AbstractMap$2.iterator (4 samples, 0.07%)</title><rect x="379.1" y="291.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="382.1" y="302.0"></text>
</g>
<g>
<title>java/util/AbstractMap$2$1.&lt;init&gt; (3 samples, 0.05%)</title><rect x="379.3" y="275.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="382.3" y="286.0"></text>
</g>
<g>
<title>java/util/TreeMap$DescendingSubMap$DescendingEntrySetView.iterator (3 samples, 0.05%)</title><rect x="379.3" y="259.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="382.3" y="270.0"></text>
</g>
<g>
<title>java.util.TreeMap$NavigableSubMap$DescendingSubMapEntryIterator (3 samples, 0.05%)</title><rect x="379.3" y="243.0" width="0.6" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="382.3" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl$$Lambda$59/395476041.accept (569 samples, 10.17%)</title><rect x="379.9" y="291.0" width="120.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="382.9" y="302.0">ru/mail/polis/d..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.lambda$compactIterator$7 (569 samples, 10.17%)</title><rect x="379.9" y="275.0" width="120.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="382.9" y="286.0">ru/mail/polis/d..</text>
</g>
<g>
<title>ru/mail/polis/SSTable.iterator (569 samples, 10.17%)</title><rect x="379.9" y="259.0" width="120.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="382.9" y="270.0">ru/mail/polis/S..</text>
</g>
<g>
<title>ru.mail.polis.SSTable$1 (6 samples, 0.11%)</title><rect x="379.9" y="243.0" width="1.3" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="382.9" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/SSTable$1.&lt;init&gt; (563 samples, 10.06%)</title><rect x="381.2" y="243.0" width="118.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="384.2" y="254.0">ru/mail/polis/..</text>
</g>
<g>
<title>ru/mail/polis/SSTable.getPosition (563 samples, 10.06%)</title><rect x="381.2" y="227.0" width="118.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="384.2" y="238.0">ru/mail/polis/..</text>
</g>
<g>
<title>ru/mail/polis/SSTable.getKey (563 samples, 10.06%)</title><rect x="381.2" y="211.0" width="118.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="384.2" y="222.0">ru/mail/polis/..</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (378 samples, 6.76%)</title><rect x="381.2" y="195.0" width="79.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="384.2" y="206.0">java/nio/..</text>
</g>
<g>
<title>java.nio.HeapByteBuffer (258 samples, 4.61%)</title><rect x="381.2" y="179.0" width="54.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="384.2" y="190.0">java...</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (120 samples, 2.14%)</title><rect x="435.6" y="179.0" width="25.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="438.6" y="190.0">j..</text>
</g>
<g>
<title>byte[] (120 samples, 2.14%)</title><rect x="435.6" y="163.0" width="25.3" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="438.6" y="174.0">b..</text>
</g>
<g>
<title>ru/mail/polis/SSTable.getOffset (185 samples, 3.31%)</title><rect x="460.9" y="195.0" width="39.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="463.9" y="206.0">ru/..</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (185 samples, 3.31%)</title><rect x="460.9" y="179.0" width="39.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="463.9" y="190.0">jav..</text>
</g>
<g>
<title>java.nio.HeapByteBuffer (125 samples, 2.23%)</title><rect x="460.9" y="163.0" width="26.4" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="463.9" y="174.0">j..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (60 samples, 1.07%)</title><rect x="487.3" y="163.0" width="12.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="490.3" y="174.0"></text>
</g>
<g>
<title>byte[] (60 samples, 1.07%)</title><rect x="487.3" y="147.0" width="12.6" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="490.3" y="158.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.04%)</title><rect x="499.9" y="307.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="502.9" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.04%)</title><rect x="499.9" y="291.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="502.9" y="302.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection.forEach (2 samples, 0.04%)</title><rect x="500.3" y="307.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="503.3" y="318.0"></text>
</g>
<g>
<title>java/lang/Iterable.forEach (2 samples, 0.04%)</title><rect x="500.3" y="291.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="503.3" y="302.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (2 samples, 0.04%)</title><rect x="500.3" y="275.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="503.3" y="286.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (2 samples, 0.04%)</title><rect x="500.3" y="259.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="503.3" y="270.0"></text>
</g>
<g>
<title>java.util.HashMap$KeyIterator (2 samples, 0.04%)</title><rect x="500.3" y="243.0" width="0.5" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="503.3" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/MemTable.iterator (6 samples, 0.11%)</title><rect x="500.8" y="307.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="503.8" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (4 samples, 0.07%)</title><rect x="501.2" y="291.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="504.2" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (4 samples, 0.07%)</title><rect x="501.2" y="275.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="504.2" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (4 samples, 0.07%)</title><rect x="501.2" y="259.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="504.2" y="270.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap (4 samples, 0.07%)</title><rect x="501.2" y="243.0" width="0.8" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="504.2" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (30 samples, 0.54%)</title><rect x="502.0" y="307.0" width="6.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="505.0" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (29 samples, 0.52%)</title><rect x="502.2" y="291.0" width="6.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="505.2" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (29 samples, 0.52%)</title><rect x="502.2" y="275.0" width="6.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="505.2" y="286.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (29 samples, 0.52%)</title><rect x="502.2" y="259.0" width="6.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="505.2" y="270.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (29 samples, 0.52%)</title><rect x="502.2" y="243.0" width="6.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="505.2" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (29 samples, 0.52%)</title><rect x="502.2" y="227.0" width="6.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="505.2" y="238.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (29 samples, 0.52%)</title><rect x="502.2" y="211.0" width="6.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="505.2" y="222.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (29 samples, 0.52%)</title><rect x="502.2" y="195.0" width="6.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="505.2" y="206.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (29 samples, 0.52%)</title><rect x="502.2" y="179.0" width="6.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="505.2" y="190.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (25 samples, 0.45%)</title><rect x="502.2" y="163.0" width="5.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="505.2" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/SSTable$1.next (25 samples, 0.45%)</title><rect x="502.2" y="147.0" width="5.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="505.2" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/SSTable$1.next (25 samples, 0.45%)</title><rect x="502.2" y="131.0" width="5.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="505.2" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/SSTable.getCell (25 samples, 0.45%)</title><rect x="502.2" y="115.0" width="5.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="505.2" y="126.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (10 samples, 0.18%)</title><rect x="502.2" y="99.0" width="2.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="505.2" y="110.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (7 samples, 0.13%)</title><rect x="502.2" y="83.0" width="1.5" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="505.2" y="94.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (3 samples, 0.05%)</title><rect x="503.7" y="83.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="506.7" y="94.0"></text>
</g>
<g>
<title>byte[] (3 samples, 0.05%)</title><rect x="503.7" y="67.0" width="0.7" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="506.7" y="78.0"></text>
</g>
<g>
<title>ru.mail.polis.Cell (2 samples, 0.04%)</title><rect x="504.4" y="99.0" width="0.4" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="507.4" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/SSTable.getOffset (12 samples, 0.21%)</title><rect x="505.0" y="99.0" width="2.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="508.0" y="110.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (12 samples, 0.21%)</title><rect x="505.0" y="83.0" width="2.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="508.0" y="94.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (9 samples, 0.16%)</title><rect x="505.0" y="67.0" width="1.9" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="508.0" y="78.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (3 samples, 0.05%)</title><rect x="506.9" y="67.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="509.9" y="78.0"></text>
</g>
<g>
<title>byte[] (3 samples, 0.05%)</title><rect x="506.9" y="51.0" width="0.6" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="509.9" y="62.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (4 samples, 0.07%)</title><rect x="507.5" y="163.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="510.5" y="174.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (4 samples, 0.07%)</title><rect x="507.5" y="147.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="510.5" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/Cell.compareTo (4 samples, 0.07%)</title><rect x="507.5" y="131.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="510.5" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/Cell.compareTo (4 samples, 0.07%)</title><rect x="507.5" y="115.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="510.5" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/Cell.getKey (4 samples, 0.07%)</title><rect x="507.5" y="99.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="510.5" y="110.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (4 samples, 0.07%)</title><rect x="507.5" y="83.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="510.5" y="94.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (4 samples, 0.07%)</title><rect x="507.5" y="67.0" width="0.9" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="510.5" y="78.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (4 samples, 0.07%)</title><rect x="508.4" y="419.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="511.4" y="430.0"></text>
</g>
<g>
<title>java/lang/String.substring (4 samples, 0.07%)</title><rect x="508.4" y="403.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="511.4" y="414.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (4 samples, 0.07%)</title><rect x="508.4" y="387.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="511.4" y="398.0"></text>
</g>
<g>
<title>java.lang.String (2 samples, 0.04%)</title><rect x="508.4" y="371.0" width="0.4" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="511.4" y="382.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (2 samples, 0.04%)</title><rect x="508.8" y="371.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="511.8" y="382.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.04%)</title><rect x="508.8" y="355.0" width="0.4" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="511.8" y="366.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (16 samples, 0.29%)</title><rect x="509.2" y="451.0" width="3.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="512.2" y="462.0"></text>
</g>
<g>
<title>one.nio.http.Request (2 samples, 0.04%)</title><rect x="509.2" y="435.0" width="0.4" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="512.2" y="446.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (5 samples, 0.09%)</title><rect x="509.6" y="435.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="512.6" y="446.0"></text>
</g>
<g>
<title>java.lang.String[] (5 samples, 0.09%)</title><rect x="509.6" y="419.0" width="1.1" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="512.6" y="430.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (9 samples, 0.16%)</title><rect x="510.7" y="435.0" width="1.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="513.7" y="446.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (9 samples, 0.16%)</title><rect x="510.7" y="419.0" width="1.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="513.7" y="430.0"></text>
</g>
<g>
<title>char[] (3 samples, 0.05%)</title><rect x="510.7" y="403.0" width="0.6" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="513.7" y="414.0"></text>
</g>
<g>
<title>java.lang.String (2 samples, 0.04%)</title><rect x="511.3" y="403.0" width="0.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="514.3" y="414.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (4 samples, 0.07%)</title><rect x="511.7" y="403.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="514.7" y="414.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (4 samples, 0.07%)</title><rect x="511.7" y="387.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="514.7" y="398.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (4 samples, 0.07%)</title><rect x="511.7" y="371.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="514.7" y="382.0"></text>
</g>
<g>
<title>byte[] (4 samples, 0.07%)</title><rect x="511.7" y="355.0" width="0.9" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="514.7" y="366.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (10 samples, 0.18%)</title><rect x="512.6" y="451.0" width="2.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="515.6" y="462.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (10 samples, 0.18%)</title><rect x="512.6" y="435.0" width="2.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="515.6" y="446.0"></text>
</g>
<g>
<title>char[] (8 samples, 0.14%)</title><rect x="512.6" y="419.0" width="1.7" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="515.6" y="430.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (2 samples, 0.04%)</title><rect x="514.3" y="419.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="517.3" y="430.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (2 samples, 0.04%)</title><rect x="514.3" y="403.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="517.3" y="414.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (2 samples, 0.04%)</title><rect x="514.3" y="387.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="517.3" y="398.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.04%)</title><rect x="514.3" y="371.0" width="0.4" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="517.3" y="382.0"></text>
</g>
<g>
<title>[NIO Selector #3 tid=4852] (773 samples, 13.82%)</title><rect x="514.7" y="531.0" width="163.0" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="517.7" y="542.0">[NIO Selector #3 tid=..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (773 samples, 13.82%)</title><rect x="514.7" y="515.0" width="163.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="517.7" y="526.0">one/nio/server/Select..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (13 samples, 0.23%)</title><rect x="514.7" y="499.0" width="2.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="517.7" y="510.0"></text>
</g>
<g>
<title>one.nio.net.NativeSelector$2 (13 samples, 0.23%)</title><rect x="514.7" y="483.0" width="2.7" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="517.7" y="494.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (760 samples, 13.58%)</title><rect x="517.4" y="499.0" width="160.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="520.4" y="510.0">one/nio/net/Session...</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (760 samples, 13.58%)</title><rect x="517.4" y="483.0" width="160.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="520.4" y="494.0">one/nio/http/HttpSes..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (760 samples, 13.58%)</title><rect x="517.4" y="467.0" width="160.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="520.4" y="478.0">one/nio/http/HttpSes..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (743 samples, 13.28%)</title><rect x="517.4" y="451.0" width="156.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="520.4" y="462.0">one/nio/http/HttpSes..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (743 samples, 13.28%)</title><rect x="517.4" y="435.0" width="156.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="520.4" y="446.0">one/nio/http/HttpSer..</text>
</g>
<g>
<title>RequestHandler0_entity.handleRequest (741 samples, 13.24%)</title><rect x="517.4" y="419.0" width="156.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="520.4" y="430.0">RequestHandler0_enti..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (4 samples, 0.07%)</title><rect x="517.4" y="403.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="520.4" y="414.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (4 samples, 0.07%)</title><rect x="517.4" y="387.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="520.4" y="398.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (2 samples, 0.04%)</title><rect x="517.4" y="371.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="520.4" y="382.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (2 samples, 0.04%)</title><rect x="517.4" y="355.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="520.4" y="366.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.04%)</title><rect x="517.4" y="339.0" width="0.5" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="520.4" y="350.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (2 samples, 0.04%)</title><rect x="517.9" y="371.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="520.9" y="382.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (2 samples, 0.04%)</title><rect x="517.9" y="355.0" width="0.4" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="520.9" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivlev/ServiceController.entity (736 samples, 13.15%)</title><rect x="518.5" y="403.0" width="155.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="521.5" y="414.0">ru/mail/polis/servic..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (3 samples, 0.05%)</title><rect x="518.7" y="387.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="521.7" y="398.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (3 samples, 0.05%)</title><rect x="518.7" y="371.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="521.7" y="382.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (3 samples, 0.05%)</title><rect x="518.7" y="355.0" width="0.6" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="521.7" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivlev/ServiceController.getResponse (732 samples, 13.08%)</title><rect x="519.3" y="387.0" width="154.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="522.3" y="398.0">ru/mail/polis/servic..</text>
</g>
<g>
<title>ru/mail/polis/service/ivlev/ServiceController.methodGet (732 samples, 13.08%)</title><rect x="519.3" y="371.0" width="154.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="522.3" y="382.0">ru/mail/polis/servic..</text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.get (731 samples, 13.07%)</title><rect x="519.5" y="355.0" width="154.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="522.5" y="366.0">ru/mail/polis/dao/DA..</text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (33 samples, 0.59%)</title><rect x="519.5" y="339.0" width="7.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="522.5" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (33 samples, 0.59%)</title><rect x="519.5" y="323.0" width="7.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="522.5" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (33 samples, 0.59%)</title><rect x="519.5" y="307.0" width="7.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="522.5" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (33 samples, 0.59%)</title><rect x="519.5" y="291.0" width="7.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="522.5" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (33 samples, 0.59%)</title><rect x="519.5" y="275.0" width="7.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="522.5" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (27 samples, 0.48%)</title><rect x="519.5" y="259.0" width="5.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="522.5" y="270.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (27 samples, 0.48%)</title><rect x="519.5" y="243.0" width="5.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="522.5" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (27 samples, 0.48%)</title><rect x="519.5" y="227.0" width="5.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="522.5" y="238.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (27 samples, 0.48%)</title><rect x="519.5" y="211.0" width="5.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="522.5" y="222.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (27 samples, 0.48%)</title><rect x="519.5" y="195.0" width="5.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="522.5" y="206.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (27 samples, 0.48%)</title><rect x="519.5" y="179.0" width="5.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="522.5" y="190.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (27 samples, 0.48%)</title><rect x="519.5" y="163.0" width="5.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="522.5" y="174.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (25 samples, 0.45%)</title><rect x="519.5" y="147.0" width="5.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="522.5" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/SSTable$1.next (25 samples, 0.45%)</title><rect x="519.5" y="131.0" width="5.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="522.5" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/SSTable$1.next (25 samples, 0.45%)</title><rect x="519.5" y="115.0" width="5.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="522.5" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/SSTable.getCell (25 samples, 0.45%)</title><rect x="519.5" y="99.0" width="5.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="522.5" y="110.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (14 samples, 0.25%)</title><rect x="519.5" y="83.0" width="3.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="522.5" y="94.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (5 samples, 0.09%)</title><rect x="519.5" y="67.0" width="1.1" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="522.5" y="78.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (9 samples, 0.16%)</title><rect x="520.6" y="67.0" width="1.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="523.6" y="78.0"></text>
</g>
<g>
<title>byte[] (9 samples, 0.16%)</title><rect x="520.6" y="51.0" width="1.9" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="523.6" y="62.0"></text>
</g>
<g>
<title>ru.mail.polis.Value (4 samples, 0.07%)</title><rect x="522.5" y="83.0" width="0.8" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="525.5" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/SSTable.getOffset (7 samples, 0.13%)</title><rect x="523.3" y="83.0" width="1.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="526.3" y="94.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (7 samples, 0.13%)</title><rect x="523.3" y="67.0" width="1.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="526.3" y="78.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (5 samples, 0.09%)</title><rect x="523.3" y="51.0" width="1.1" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="526.3" y="62.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (2 samples, 0.04%)</title><rect x="524.4" y="51.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="527.4" y="62.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.04%)</title><rect x="524.4" y="35.0" width="0.4" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="527.4" y="46.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (2 samples, 0.04%)</title><rect x="524.8" y="147.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="527.8" y="158.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (2 samples, 0.04%)</title><rect x="524.8" y="131.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="527.8" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/Cell.compareTo (2 samples, 0.04%)</title><rect x="524.8" y="115.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="527.8" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/Cell.compareTo (2 samples, 0.04%)</title><rect x="524.8" y="99.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="527.8" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/Cell.getKey (2 samples, 0.04%)</title><rect x="524.8" y="83.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="527.8" y="94.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (2 samples, 0.04%)</title><rect x="524.8" y="67.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="527.8" y="78.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (2 samples, 0.04%)</title><rect x="524.8" y="51.0" width="0.4" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="527.8" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl$$Lambda$61/1901050430.apply (6 samples, 0.11%)</title><rect x="525.2" y="259.0" width="1.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="528.2" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/Cell.getKey (6 samples, 0.11%)</title><rect x="525.2" y="243.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="528.2" y="254.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (6 samples, 0.11%)</title><rect x="525.2" y="227.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="528.2" y="238.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (6 samples, 0.11%)</title><rect x="525.2" y="211.0" width="1.3" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="528.2" y="222.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.next (6 samples, 0.11%)</title><rect x="526.5" y="339.0" width="1.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="529.5" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$6.transform (6 samples, 0.11%)</title><rect x="526.5" y="323.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="529.5" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl$$Lambda$63/454736490.apply (6 samples, 0.11%)</title><rect x="526.5" y="307.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="529.5" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.lambda$iterator$4 (6 samples, 0.11%)</title><rect x="526.5" y="291.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="529.5" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/Cell.getKey (3 samples, 0.05%)</title><rect x="526.5" y="275.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="529.5" y="286.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (3 samples, 0.05%)</title><rect x="526.5" y="259.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="529.5" y="270.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (3 samples, 0.05%)</title><rect x="526.5" y="243.0" width="0.6" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="529.5" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/Value.getData (2 samples, 0.04%)</title><rect x="527.3" y="275.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="530.3" y="286.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (2 samples, 0.04%)</title><rect x="527.3" y="259.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="530.3" y="270.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (2 samples, 0.04%)</title><rect x="527.3" y="243.0" width="0.5" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="530.3" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/Record.getKey (5 samples, 0.09%)</title><rect x="527.8" y="339.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="530.8" y="350.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (5 samples, 0.09%)</title><rect x="527.8" y="323.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="530.8" y="334.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (5 samples, 0.09%)</title><rect x="527.8" y="307.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="530.8" y="318.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (5 samples, 0.09%)</title><rect x="527.8" y="291.0" width="1.0" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="530.8" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.iterator (686 samples, 12.26%)</title><rect x="529.0" y="339.0" width="144.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="532.0" y="350.0">ru/mail/polis/dao/..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.compactIterator (685 samples, 12.24%)</title><rect x="529.2" y="323.0" width="144.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="532.2" y="334.0">ru/mail/polis/dao/..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (65 samples, 1.16%)</title><rect x="529.2" y="307.0" width="13.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="532.2" y="318.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator (4 samples, 0.07%)</title><rect x="529.2" y="291.0" width="0.9" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="532.2" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (61 samples, 1.09%)</title><rect x="530.1" y="291.0" width="12.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="533.1" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.peekingIterator (4 samples, 0.07%)</title><rect x="530.1" y="275.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="533.1" y="286.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$PeekingImpl (4 samples, 0.07%)</title><rect x="530.1" y="259.0" width="0.8" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="533.1" y="270.0"></text>
</g>
<g>
<title>java.util.PriorityQueue (2 samples, 0.04%)</title><rect x="530.9" y="275.0" width="0.5" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="533.9" y="286.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (55 samples, 0.98%)</title><rect x="531.4" y="275.0" width="11.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="534.4" y="286.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (55 samples, 0.98%)</title><rect x="531.4" y="259.0" width="11.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="534.4" y="270.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (55 samples, 0.98%)</title><rect x="531.4" y="243.0" width="11.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="534.4" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (55 samples, 0.98%)</title><rect x="531.4" y="227.0" width="11.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="534.4" y="238.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (55 samples, 0.98%)</title><rect x="531.4" y="211.0" width="11.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="534.4" y="222.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (55 samples, 0.98%)</title><rect x="531.4" y="195.0" width="11.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="534.4" y="206.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (52 samples, 0.93%)</title><rect x="531.4" y="179.0" width="10.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="534.4" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/SSTable$1.next (52 samples, 0.93%)</title><rect x="531.4" y="163.0" width="10.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="534.4" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/SSTable$1.next (52 samples, 0.93%)</title><rect x="531.4" y="147.0" width="10.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="534.4" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/SSTable.getCell (52 samples, 0.93%)</title><rect x="531.4" y="131.0" width="10.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="534.4" y="142.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (34 samples, 0.61%)</title><rect x="531.4" y="115.0" width="7.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="534.4" y="126.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (21 samples, 0.38%)</title><rect x="531.4" y="99.0" width="4.4" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="534.4" y="110.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (13 samples, 0.23%)</title><rect x="535.8" y="99.0" width="2.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="538.8" y="110.0"></text>
</g>
<g>
<title>byte[] (13 samples, 0.23%)</title><rect x="535.8" y="83.0" width="2.7" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="538.8" y="94.0"></text>
</g>
<g>
<title>ru.mail.polis.Cell (3 samples, 0.05%)</title><rect x="538.5" y="115.0" width="0.7" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="541.5" y="126.0"></text>
</g>
<g>
<title>ru.mail.polis.Value (2 samples, 0.04%)</title><rect x="539.2" y="115.0" width="0.4" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="542.2" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/SSTable.getOffset (13 samples, 0.23%)</title><rect x="539.6" y="115.0" width="2.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="542.6" y="126.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (13 samples, 0.23%)</title><rect x="539.6" y="99.0" width="2.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="542.6" y="110.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (9 samples, 0.16%)</title><rect x="539.6" y="83.0" width="1.9" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="542.6" y="94.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (4 samples, 0.07%)</title><rect x="541.5" y="83.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="544.5" y="94.0"></text>
</g>
<g>
<title>byte[] (4 samples, 0.07%)</title><rect x="541.5" y="67.0" width="0.8" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="544.5" y="78.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (3 samples, 0.05%)</title><rect x="542.3" y="179.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="545.3" y="190.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (3 samples, 0.05%)</title><rect x="542.3" y="163.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="545.3" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/Cell.compareTo (3 samples, 0.05%)</title><rect x="542.3" y="147.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="545.3" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/Cell.compareTo (3 samples, 0.05%)</title><rect x="542.3" y="131.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="545.3" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/Cell.getKey (3 samples, 0.05%)</title><rect x="542.3" y="115.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="545.3" y="126.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (3 samples, 0.05%)</title><rect x="542.3" y="99.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="545.3" y="110.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (3 samples, 0.05%)</title><rect x="542.3" y="83.0" width="0.7" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="545.3" y="94.0"></text>
</g>
<g>
<title>java.util.ArrayList (2 samples, 0.04%)</title><rect x="543.0" y="307.0" width="0.4" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="546.0" y="318.0"></text>
</g>
<g>
<title>java/lang/Iterable.forEach (570 samples, 10.19%)</title><rect x="543.4" y="307.0" width="120.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="546.4" y="318.0">java/lang/Itera..</text>
</g>
<g>
<title>java/util/AbstractMap$2.iterator (5 samples, 0.09%)</title><rect x="543.4" y="291.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="546.4" y="302.0"></text>
</g>
<g>
<title>java/util/AbstractMap$2$1.&lt;init&gt; (5 samples, 0.09%)</title><rect x="543.4" y="275.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="546.4" y="286.0"></text>
</g>
<g>
<title>java/util/TreeMap$DescendingSubMap$DescendingEntrySetView.iterator (5 samples, 0.09%)</title><rect x="543.4" y="259.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="546.4" y="270.0"></text>
</g>
<g>
<title>java.util.TreeMap$NavigableSubMap$DescendingSubMapEntryIterator (5 samples, 0.09%)</title><rect x="543.4" y="243.0" width="1.0" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="546.4" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl$$Lambda$59/395476041.accept (565 samples, 10.10%)</title><rect x="544.4" y="291.0" width="119.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="547.4" y="302.0">ru/mail/polis/d..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.lambda$compactIterator$7 (565 samples, 10.10%)</title><rect x="544.4" y="275.0" width="119.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="547.4" y="286.0">ru/mail/polis/d..</text>
</g>
<g>
<title>ru/mail/polis/SSTable.iterator (565 samples, 10.10%)</title><rect x="544.4" y="259.0" width="119.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="547.4" y="270.0">ru/mail/polis/S..</text>
</g>
<g>
<title>ru.mail.polis.SSTable$1 (5 samples, 0.09%)</title><rect x="544.4" y="243.0" width="1.1" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="547.4" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/SSTable$1.&lt;init&gt; (560 samples, 10.01%)</title><rect x="545.5" y="243.0" width="118.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="548.5" y="254.0">ru/mail/polis/..</text>
</g>
<g>
<title>ru/mail/polis/SSTable.getPosition (560 samples, 10.01%)</title><rect x="545.5" y="227.0" width="118.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="548.5" y="238.0">ru/mail/polis/..</text>
</g>
<g>
<title>ru/mail/polis/SSTable.getKey (560 samples, 10.01%)</title><rect x="545.5" y="211.0" width="118.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="548.5" y="222.0">ru/mail/polis/..</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (382 samples, 6.83%)</title><rect x="545.5" y="195.0" width="80.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="548.5" y="206.0">java/nio/..</text>
</g>
<g>
<title>java.nio.HeapByteBuffer (253 samples, 4.52%)</title><rect x="545.5" y="179.0" width="53.3" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="548.5" y="190.0">java...</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (129 samples, 2.31%)</title><rect x="598.8" y="179.0" width="27.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="601.8" y="190.0">j..</text>
</g>
<g>
<title>byte[] (129 samples, 2.31%)</title><rect x="598.8" y="163.0" width="27.2" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="601.8" y="174.0">b..</text>
</g>
<g>
<title>ru/mail/polis/SSTable.getOffset (178 samples, 3.18%)</title><rect x="626.0" y="195.0" width="37.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="629.0" y="206.0">ru/..</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (178 samples, 3.18%)</title><rect x="626.0" y="179.0" width="37.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="629.0" y="190.0">jav..</text>
</g>
<g>
<title>java.nio.HeapByteBuffer (126 samples, 2.25%)</title><rect x="626.0" y="163.0" width="26.6" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="629.0" y="174.0">j..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (52 samples, 0.93%)</title><rect x="652.6" y="163.0" width="11.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="655.6" y="174.0"></text>
</g>
<g>
<title>byte[] (52 samples, 0.93%)</title><rect x="652.6" y="147.0" width="11.0" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="655.6" y="158.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (4 samples, 0.07%)</title><rect x="663.6" y="307.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="666.6" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (4 samples, 0.07%)</title><rect x="663.6" y="291.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="666.6" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl$$Lambda$59/395476041.get$Lambda (2 samples, 0.04%)</title><rect x="663.6" y="275.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="666.6" y="286.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.impl.DAOImpl$$Lambda$59 (2 samples, 0.04%)</title><rect x="663.6" y="259.0" width="0.4" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="666.6" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl$$Lambda$60/1813653559.get$Lambda (2 samples, 0.04%)</title><rect x="664.0" y="275.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="667.0" y="286.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.impl.DAOImpl$$Lambda$60 (2 samples, 0.04%)</title><rect x="664.0" y="259.0" width="0.4" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="667.0" y="270.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (2 samples, 0.04%)</title><rect x="664.4" y="307.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="667.4" y="318.0"></text>
</g>
<g>
<title>java.lang.Object[] (2 samples, 0.04%)</title><rect x="664.4" y="291.0" width="0.5" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="667.4" y="302.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection.forEach (3 samples, 0.05%)</title><rect x="664.9" y="307.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="667.9" y="318.0"></text>
</g>
<g>
<title>java/lang/Iterable.forEach (3 samples, 0.05%)</title><rect x="664.9" y="291.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="667.9" y="302.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (3 samples, 0.05%)</title><rect x="664.9" y="275.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="667.9" y="286.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (3 samples, 0.05%)</title><rect x="664.9" y="259.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="667.9" y="270.0"></text>
</g>
<g>
<title>java.util.HashMap$KeyIterator (3 samples, 0.05%)</title><rect x="664.9" y="243.0" width="0.6" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="667.9" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/MemTable.iterator (10 samples, 0.18%)</title><rect x="665.5" y="307.0" width="2.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="668.5" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$EntrySet.iterator (4 samples, 0.07%)</title><rect x="665.5" y="291.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="668.5" y="302.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapEntryIterator (4 samples, 0.07%)</title><rect x="665.5" y="275.0" width="0.8" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="668.5" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.entrySet (2 samples, 0.04%)</title><rect x="666.3" y="291.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="669.3" y="302.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$EntrySet (2 samples, 0.04%)</title><rect x="666.3" y="275.0" width="0.5" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="669.3" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (4 samples, 0.07%)</title><rect x="666.8" y="291.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="669.8" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (4 samples, 0.07%)</title><rect x="666.8" y="275.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="669.8" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (4 samples, 0.07%)</title><rect x="666.8" y="259.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="669.8" y="270.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap (4 samples, 0.07%)</title><rect x="666.8" y="243.0" width="0.8" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="669.8" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (29 samples, 0.52%)</title><rect x="667.6" y="307.0" width="6.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="670.6" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (29 samples, 0.52%)</title><rect x="667.6" y="291.0" width="6.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="670.6" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (29 samples, 0.52%)</title><rect x="667.6" y="275.0" width="6.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="670.6" y="286.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (29 samples, 0.52%)</title><rect x="667.6" y="259.0" width="6.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="670.6" y="270.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (29 samples, 0.52%)</title><rect x="667.6" y="243.0" width="6.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="670.6" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (29 samples, 0.52%)</title><rect x="667.6" y="227.0" width="6.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="670.6" y="238.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (29 samples, 0.52%)</title><rect x="667.6" y="211.0" width="6.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="670.6" y="222.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (29 samples, 0.52%)</title><rect x="667.6" y="195.0" width="6.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="670.6" y="206.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (29 samples, 0.52%)</title><rect x="667.6" y="179.0" width="6.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="670.6" y="190.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (25 samples, 0.45%)</title><rect x="667.6" y="163.0" width="5.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="670.6" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/SSTable$1.next (25 samples, 0.45%)</title><rect x="667.6" y="147.0" width="5.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="670.6" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/SSTable$1.next (25 samples, 0.45%)</title><rect x="667.6" y="131.0" width="5.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="670.6" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/SSTable.getCell (25 samples, 0.45%)</title><rect x="667.6" y="115.0" width="5.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="670.6" y="126.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (18 samples, 0.32%)</title><rect x="667.6" y="99.0" width="3.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="670.6" y="110.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (11 samples, 0.20%)</title><rect x="667.6" y="83.0" width="2.3" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="670.6" y="94.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (7 samples, 0.13%)</title><rect x="669.9" y="83.0" width="1.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="672.9" y="94.0"></text>
</g>
<g>
<title>byte[] (7 samples, 0.13%)</title><rect x="669.9" y="67.0" width="1.5" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="672.9" y="78.0"></text>
</g>
<g>
<title>ru/mail/polis/SSTable.getOffset (7 samples, 0.13%)</title><rect x="671.4" y="99.0" width="1.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="674.4" y="110.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (7 samples, 0.13%)</title><rect x="671.4" y="83.0" width="1.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="674.4" y="94.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (3 samples, 0.05%)</title><rect x="671.4" y="67.0" width="0.6" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="674.4" y="78.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (4 samples, 0.07%)</title><rect x="672.0" y="67.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="675.0" y="78.0"></text>
</g>
<g>
<title>byte[] (4 samples, 0.07%)</title><rect x="672.0" y="51.0" width="0.9" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="675.0" y="62.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (4 samples, 0.07%)</title><rect x="672.9" y="163.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="675.9" y="174.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (4 samples, 0.07%)</title><rect x="672.9" y="147.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="675.9" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/Cell.compareTo (4 samples, 0.07%)</title><rect x="672.9" y="131.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="675.9" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/Cell.compareTo (4 samples, 0.07%)</title><rect x="672.9" y="115.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="675.9" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/Cell.getKey (4 samples, 0.07%)</title><rect x="672.9" y="99.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="675.9" y="110.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (4 samples, 0.07%)</title><rect x="672.9" y="83.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="675.9" y="94.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (4 samples, 0.07%)</title><rect x="672.9" y="67.0" width="0.8" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="675.9" y="78.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (2 samples, 0.04%)</title><rect x="673.7" y="419.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="676.7" y="430.0"></text>
</g>
<g>
<title>java/lang/String.substring (2 samples, 0.04%)</title><rect x="673.7" y="403.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="676.7" y="414.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (2 samples, 0.04%)</title><rect x="673.7" y="387.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="676.7" y="398.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (13 samples, 0.23%)</title><rect x="674.1" y="451.0" width="2.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="677.1" y="462.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (6 samples, 0.11%)</title><rect x="674.3" y="435.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="677.3" y="446.0"></text>
</g>
<g>
<title>java.lang.String[] (6 samples, 0.11%)</title><rect x="674.3" y="419.0" width="1.3" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="677.3" y="430.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (6 samples, 0.11%)</title><rect x="675.6" y="435.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="678.6" y="446.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (6 samples, 0.11%)</title><rect x="675.6" y="419.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="678.6" y="430.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (5 samples, 0.09%)</title><rect x="675.8" y="403.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="678.8" y="414.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (5 samples, 0.09%)</title><rect x="675.8" y="387.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="678.8" y="398.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (5 samples, 0.09%)</title><rect x="675.8" y="371.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="678.8" y="382.0"></text>
</g>
<g>
<title>byte[] (5 samples, 0.09%)</title><rect x="675.8" y="355.0" width="1.1" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="678.8" y="366.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (4 samples, 0.07%)</title><rect x="676.9" y="451.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="679.9" y="462.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (4 samples, 0.07%)</title><rect x="676.9" y="435.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="679.9" y="446.0"></text>
</g>
<g>
<title>char[] (3 samples, 0.05%)</title><rect x="676.9" y="419.0" width="0.6" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="679.9" y="430.0"></text>
</g>
<g>
<title>[NIO Selector #4 tid=4853] (779 samples, 13.92%)</title><rect x="677.7" y="531.0" width="164.3" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="680.7" y="542.0">[NIO Selector #4 tid=..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (779 samples, 13.92%)</title><rect x="677.7" y="515.0" width="164.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="680.7" y="526.0">one/nio/server/Select..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (9 samples, 0.16%)</title><rect x="677.7" y="499.0" width="1.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="680.7" y="510.0"></text>
</g>
<g>
<title>one.nio.net.NativeSelector$2 (9 samples, 0.16%)</title><rect x="677.7" y="483.0" width="1.9" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="680.7" y="494.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (770 samples, 13.76%)</title><rect x="679.6" y="499.0" width="162.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="682.6" y="510.0">one/nio/net/Session.p..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (770 samples, 13.76%)</title><rect x="679.6" y="483.0" width="162.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="682.6" y="494.0">one/nio/http/HttpSess..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (770 samples, 13.76%)</title><rect x="679.6" y="467.0" width="162.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="682.6" y="478.0">one/nio/http/HttpSess..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (744 samples, 13.30%)</title><rect x="679.6" y="451.0" width="156.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="682.6" y="462.0">one/nio/http/HttpSes..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (744 samples, 13.30%)</title><rect x="679.6" y="435.0" width="156.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="682.6" y="446.0">one/nio/http/HttpSer..</text>
</g>
<g>
<title>RequestHandler0_entity.handleRequest (741 samples, 13.24%)</title><rect x="679.6" y="419.0" width="156.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="682.6" y="430.0">RequestHandler0_enti..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (7 samples, 0.13%)</title><rect x="679.6" y="403.0" width="1.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="682.6" y="414.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (7 samples, 0.13%)</title><rect x="679.6" y="387.0" width="1.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="682.6" y="398.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (5 samples, 0.09%)</title><rect x="679.6" y="371.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="682.6" y="382.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (5 samples, 0.09%)</title><rect x="679.6" y="355.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="682.6" y="366.0"></text>
</g>
<g>
<title>byte[] (5 samples, 0.09%)</title><rect x="679.6" y="339.0" width="1.1" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="682.6" y="350.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (2 samples, 0.04%)</title><rect x="680.7" y="371.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="683.7" y="382.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (2 samples, 0.04%)</title><rect x="680.7" y="355.0" width="0.4" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="683.7" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivlev/ServiceController.entity (733 samples, 13.10%)</title><rect x="681.3" y="403.0" width="154.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="684.3" y="414.0">ru/mail/polis/servic..</text>
</g>
<g>
<title>java/lang/String.getBytes (3 samples, 0.05%)</title><rect x="681.3" y="387.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="684.3" y="398.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (3 samples, 0.05%)</title><rect x="681.3" y="371.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="684.3" y="382.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (3 samples, 0.05%)</title><rect x="681.3" y="355.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="684.3" y="366.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (3 samples, 0.05%)</title><rect x="681.3" y="339.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="684.3" y="350.0"></text>
</g>
<g>
<title>byte[] (3 samples, 0.05%)</title><rect x="681.3" y="323.0" width="0.6" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="684.3" y="334.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (2 samples, 0.04%)</title><rect x="681.9" y="387.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="684.9" y="398.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (2 samples, 0.04%)</title><rect x="681.9" y="371.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="684.9" y="382.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (2 samples, 0.04%)</title><rect x="681.9" y="355.0" width="0.5" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="684.9" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivlev/ServiceController.getResponse (728 samples, 13.01%)</title><rect x="682.4" y="387.0" width="153.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="685.4" y="398.0">ru/mail/polis/servi..</text>
</g>
<g>
<title>ru/mail/polis/service/ivlev/ServiceController.methodGet (728 samples, 13.01%)</title><rect x="682.4" y="371.0" width="153.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="685.4" y="382.0">ru/mail/polis/servi..</text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (6 samples, 0.11%)</title><rect x="682.4" y="355.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="685.4" y="366.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.04%)</title><rect x="682.4" y="339.0" width="0.4" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="685.4" y="350.0"></text>
</g>
<g>
<title>java.lang.String[] (3 samples, 0.05%)</title><rect x="682.8" y="339.0" width="0.6" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="685.8" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.get (722 samples, 12.90%)</title><rect x="683.6" y="355.0" width="152.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="686.6" y="366.0">ru/mail/polis/dao/D..</text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (26 samples, 0.46%)</title><rect x="683.6" y="339.0" width="5.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="686.6" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (26 samples, 0.46%)</title><rect x="683.6" y="323.0" width="5.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="686.6" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (26 samples, 0.46%)</title><rect x="683.6" y="307.0" width="5.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="686.6" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (26 samples, 0.46%)</title><rect x="683.6" y="291.0" width="5.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="686.6" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (26 samples, 0.46%)</title><rect x="683.6" y="275.0" width="5.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="686.6" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (24 samples, 0.43%)</title><rect x="683.6" y="259.0" width="5.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="686.6" y="270.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (24 samples, 0.43%)</title><rect x="683.6" y="243.0" width="5.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="686.6" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (24 samples, 0.43%)</title><rect x="683.6" y="227.0" width="5.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="686.6" y="238.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (24 samples, 0.43%)</title><rect x="683.6" y="211.0" width="5.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="686.6" y="222.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (24 samples, 0.43%)</title><rect x="683.6" y="195.0" width="5.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="686.6" y="206.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (24 samples, 0.43%)</title><rect x="683.6" y="179.0" width="5.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="686.6" y="190.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (24 samples, 0.43%)</title><rect x="683.6" y="163.0" width="5.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="686.6" y="174.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (22 samples, 0.39%)</title><rect x="683.6" y="147.0" width="4.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="686.6" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/SSTable$1.next (22 samples, 0.39%)</title><rect x="683.6" y="131.0" width="4.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="686.6" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/SSTable$1.next (22 samples, 0.39%)</title><rect x="683.6" y="115.0" width="4.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="686.6" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/SSTable.getCell (22 samples, 0.39%)</title><rect x="683.6" y="99.0" width="4.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="686.6" y="110.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (13 samples, 0.23%)</title><rect x="683.6" y="83.0" width="2.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="686.6" y="94.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (8 samples, 0.14%)</title><rect x="683.6" y="67.0" width="1.7" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="686.6" y="78.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (5 samples, 0.09%)</title><rect x="685.3" y="67.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="688.3" y="78.0"></text>
</g>
<g>
<title>byte[] (5 samples, 0.09%)</title><rect x="685.3" y="51.0" width="1.1" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="688.3" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/SSTable.getOffset (7 samples, 0.13%)</title><rect x="686.8" y="83.0" width="1.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="689.8" y="94.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (7 samples, 0.13%)</title><rect x="686.8" y="67.0" width="1.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="689.8" y="78.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (3 samples, 0.05%)</title><rect x="686.8" y="51.0" width="0.6" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="689.8" y="62.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (4 samples, 0.07%)</title><rect x="687.4" y="51.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="690.4" y="62.0"></text>
</g>
<g>
<title>byte[] (4 samples, 0.07%)</title><rect x="687.4" y="35.0" width="0.9" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="690.4" y="46.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (2 samples, 0.04%)</title><rect x="688.3" y="147.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="691.3" y="158.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (2 samples, 0.04%)</title><rect x="688.3" y="131.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="691.3" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/Cell.compareTo (2 samples, 0.04%)</title><rect x="688.3" y="115.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="691.3" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/Cell.compareTo (2 samples, 0.04%)</title><rect x="688.3" y="99.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="691.3" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/Cell.getKey (2 samples, 0.04%)</title><rect x="688.3" y="83.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="691.3" y="94.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (2 samples, 0.04%)</title><rect x="688.3" y="67.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="691.3" y="78.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (2 samples, 0.04%)</title><rect x="688.3" y="51.0" width="0.4" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="691.3" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl$$Lambda$61/1901050430.apply (2 samples, 0.04%)</title><rect x="688.7" y="259.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="691.7" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/Cell.getKey (2 samples, 0.04%)</title><rect x="688.7" y="243.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="691.7" y="254.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (2 samples, 0.04%)</title><rect x="688.7" y="227.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="691.7" y="238.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (2 samples, 0.04%)</title><rect x="688.7" y="211.0" width="0.4" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="691.7" y="222.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.next (8 samples, 0.14%)</title><rect x="689.1" y="339.0" width="1.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="692.1" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$6.transform (8 samples, 0.14%)</title><rect x="689.1" y="323.0" width="1.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="692.1" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl$$Lambda$63/454736490.apply (8 samples, 0.14%)</title><rect x="689.1" y="307.0" width="1.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="692.1" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.lambda$iterator$4 (8 samples, 0.14%)</title><rect x="689.1" y="291.0" width="1.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="692.1" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/Cell.getKey (4 samples, 0.07%)</title><rect x="689.1" y="275.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="692.1" y="286.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (4 samples, 0.07%)</title><rect x="689.1" y="259.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="692.1" y="270.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (4 samples, 0.07%)</title><rect x="689.1" y="243.0" width="0.8" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="692.1" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/Value.getData (3 samples, 0.05%)</title><rect x="690.2" y="275.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="693.2" y="286.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (3 samples, 0.05%)</title><rect x="690.2" y="259.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="693.2" y="270.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (3 samples, 0.05%)</title><rect x="690.2" y="243.0" width="0.6" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="693.2" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/Record.getKey (3 samples, 0.05%)</title><rect x="690.8" y="339.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="693.8" y="350.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (3 samples, 0.05%)</title><rect x="690.8" y="323.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="693.8" y="334.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (3 samples, 0.05%)</title><rect x="690.8" y="307.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="693.8" y="318.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (3 samples, 0.05%)</title><rect x="690.8" y="291.0" width="0.6" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="693.8" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/Record.getValue (3 samples, 0.05%)</title><rect x="691.4" y="339.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="694.4" y="350.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (3 samples, 0.05%)</title><rect x="691.4" y="323.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="694.4" y="334.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (3 samples, 0.05%)</title><rect x="691.4" y="307.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="694.4" y="318.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (3 samples, 0.05%)</title><rect x="691.4" y="291.0" width="0.7" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="694.4" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.iterator (682 samples, 12.19%)</title><rect x="692.1" y="339.0" width="143.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="695.1" y="350.0">ru/mail/polis/dao/..</text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$WriteLock.lock (3 samples, 0.05%)</title><rect x="692.3" y="323.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="695.3" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (3 samples, 0.05%)</title><rect x="692.3" y="307.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="695.3" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.addWaiter (3 samples, 0.05%)</title><rect x="692.3" y="291.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="695.3" y="302.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (3 samples, 0.05%)</title><rect x="692.3" y="275.0" width="0.6" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="695.3" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.compactIterator (678 samples, 12.12%)</title><rect x="692.9" y="323.0" width="143.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="695.9" y="334.0">ru/mail/polis/dao/..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (74 samples, 1.32%)</title><rect x="692.9" y="307.0" width="15.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="695.9" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (74 samples, 1.32%)</title><rect x="692.9" y="291.0" width="15.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="695.9" y="302.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator$1 (2 samples, 0.04%)</title><rect x="692.9" y="275.0" width="0.4" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="695.9" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.peekingIterator (2 samples, 0.04%)</title><rect x="693.3" y="275.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="696.3" y="286.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$PeekingImpl (2 samples, 0.04%)</title><rect x="693.3" y="259.0" width="0.4" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="696.3" y="270.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (68 samples, 1.22%)</title><rect x="694.2" y="275.0" width="14.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="697.2" y="286.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (68 samples, 1.22%)</title><rect x="694.2" y="259.0" width="14.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="697.2" y="270.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (68 samples, 1.22%)</title><rect x="694.2" y="243.0" width="14.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="697.2" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (68 samples, 1.22%)</title><rect x="694.2" y="227.0" width="14.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="697.2" y="238.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (68 samples, 1.22%)</title><rect x="694.2" y="211.0" width="14.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="697.2" y="222.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (68 samples, 1.22%)</title><rect x="694.2" y="195.0" width="14.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="697.2" y="206.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (63 samples, 1.13%)</title><rect x="694.2" y="179.0" width="13.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="697.2" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/SSTable$1.next (63 samples, 1.13%)</title><rect x="694.2" y="163.0" width="13.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="697.2" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/SSTable$1.next (63 samples, 1.13%)</title><rect x="694.2" y="147.0" width="13.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="697.2" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/SSTable.getCell (63 samples, 1.13%)</title><rect x="694.2" y="131.0" width="13.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="697.2" y="142.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (43 samples, 0.77%)</title><rect x="694.2" y="115.0" width="9.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="697.2" y="126.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (26 samples, 0.46%)</title><rect x="694.2" y="99.0" width="5.5" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="697.2" y="110.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (17 samples, 0.30%)</title><rect x="699.7" y="99.0" width="3.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="702.7" y="110.0"></text>
</g>
<g>
<title>byte[] (17 samples, 0.30%)</title><rect x="699.7" y="83.0" width="3.5" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="702.7" y="94.0"></text>
</g>
<g>
<title>ru.mail.polis.Cell (3 samples, 0.05%)</title><rect x="703.2" y="115.0" width="0.7" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="706.2" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/SSTable.getOffset (16 samples, 0.29%)</title><rect x="704.1" y="115.0" width="3.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="707.1" y="126.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (16 samples, 0.29%)</title><rect x="704.1" y="99.0" width="3.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="707.1" y="110.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (13 samples, 0.23%)</title><rect x="704.1" y="83.0" width="2.7" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="707.1" y="94.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (3 samples, 0.05%)</title><rect x="706.8" y="83.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="709.8" y="94.0"></text>
</g>
<g>
<title>byte[] (3 samples, 0.05%)</title><rect x="706.8" y="67.0" width="0.7" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="709.8" y="78.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (5 samples, 0.09%)</title><rect x="707.5" y="179.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="710.5" y="190.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (5 samples, 0.09%)</title><rect x="707.5" y="163.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="710.5" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/Cell.compareTo (5 samples, 0.09%)</title><rect x="707.5" y="147.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="710.5" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/Cell.compareTo (5 samples, 0.09%)</title><rect x="707.5" y="131.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="710.5" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/Cell.getKey (5 samples, 0.09%)</title><rect x="707.5" y="115.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="710.5" y="126.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (5 samples, 0.09%)</title><rect x="707.5" y="99.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="710.5" y="110.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (5 samples, 0.09%)</title><rect x="707.5" y="83.0" width="1.0" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="710.5" y="94.0"></text>
</g>
<g>
<title>java.util.ArrayList (5 samples, 0.09%)</title><rect x="708.5" y="307.0" width="1.1" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="711.5" y="318.0"></text>
</g>
<g>
<title>java/lang/Iterable.forEach (552 samples, 9.87%)</title><rect x="709.6" y="307.0" width="116.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="712.6" y="318.0">java/lang/Iter..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl$$Lambda$59/395476041.accept (551 samples, 9.85%)</title><rect x="709.8" y="291.0" width="116.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="712.8" y="302.0">ru/mail/polis/..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.lambda$compactIterator$7 (551 samples, 9.85%)</title><rect x="709.8" y="275.0" width="116.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="712.8" y="286.0">ru/mail/polis/..</text>
</g>
<g>
<title>ru/mail/polis/SSTable.iterator (551 samples, 9.85%)</title><rect x="709.8" y="259.0" width="116.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="712.8" y="270.0">ru/mail/polis/..</text>
</g>
<g>
<title>ru.mail.polis.SSTable$1 (2 samples, 0.04%)</title><rect x="709.8" y="243.0" width="0.4" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="712.8" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/SSTable$1.&lt;init&gt; (549 samples, 9.81%)</title><rect x="710.2" y="243.0" width="115.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="713.2" y="254.0">ru/mail/polis/..</text>
</g>
<g>
<title>ru/mail/polis/SSTable.getPosition (549 samples, 9.81%)</title><rect x="710.2" y="227.0" width="115.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="713.2" y="238.0">ru/mail/polis/..</text>
</g>
<g>
<title>ru/mail/polis/SSTable.getKey (549 samples, 9.81%)</title><rect x="710.2" y="211.0" width="115.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="713.2" y="222.0">ru/mail/polis/..</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (360 samples, 6.43%)</title><rect x="710.2" y="195.0" width="75.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="713.2" y="206.0">java/nio..</text>
</g>
<g>
<title>java.nio.HeapByteBuffer (211 samples, 3.77%)</title><rect x="710.2" y="179.0" width="44.5" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="713.2" y="190.0">java..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (149 samples, 2.66%)</title><rect x="754.7" y="179.0" width="31.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="757.7" y="190.0">ja..</text>
</g>
<g>
<title>byte[] (149 samples, 2.66%)</title><rect x="754.7" y="163.0" width="31.4" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="757.7" y="174.0">by..</text>
</g>
<g>
<title>ru/mail/polis/SSTable.getOffset (189 samples, 3.38%)</title><rect x="786.1" y="195.0" width="39.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="789.1" y="206.0">ru/..</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (189 samples, 3.38%)</title><rect x="786.1" y="179.0" width="39.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="789.1" y="190.0">jav..</text>
</g>
<g>
<title>java.nio.HeapByteBuffer (129 samples, 2.31%)</title><rect x="786.1" y="163.0" width="27.2" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="789.1" y="174.0">j..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (60 samples, 1.07%)</title><rect x="813.3" y="163.0" width="12.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="816.3" y="174.0"></text>
</g>
<g>
<title>byte[] (60 samples, 1.07%)</title><rect x="813.3" y="147.0" width="12.7" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="816.3" y="158.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (3 samples, 0.05%)</title><rect x="826.0" y="307.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="829.0" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (3 samples, 0.05%)</title><rect x="826.0" y="291.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="829.0" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl$$Lambda$59/395476041.get$Lambda (2 samples, 0.04%)</title><rect x="826.0" y="275.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="829.0" y="286.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.impl.DAOImpl$$Lambda$59 (2 samples, 0.04%)</title><rect x="826.0" y="259.0" width="0.4" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="829.0" y="270.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (3 samples, 0.05%)</title><rect x="826.6" y="307.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="829.6" y="318.0"></text>
</g>
<g>
<title>java.lang.Object[] (3 samples, 0.05%)</title><rect x="826.6" y="291.0" width="0.6" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="829.6" y="302.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection.forEach (2 samples, 0.04%)</title><rect x="827.2" y="307.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="830.2" y="318.0"></text>
</g>
<g>
<title>java/lang/Iterable.forEach (2 samples, 0.04%)</title><rect x="827.2" y="291.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="830.2" y="302.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (2 samples, 0.04%)</title><rect x="827.2" y="275.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="830.2" y="286.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (2 samples, 0.04%)</title><rect x="827.2" y="259.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="830.2" y="270.0"></text>
</g>
<g>
<title>java.util.HashMap$KeyIterator (2 samples, 0.04%)</title><rect x="827.2" y="243.0" width="0.5" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="830.2" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/MemTable.iterator (5 samples, 0.09%)</title><rect x="827.7" y="307.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="830.7" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (3 samples, 0.05%)</title><rect x="828.1" y="291.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="831.1" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (3 samples, 0.05%)</title><rect x="828.1" y="275.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="831.1" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (3 samples, 0.05%)</title><rect x="828.1" y="259.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="831.1" y="270.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap (3 samples, 0.05%)</title><rect x="828.1" y="243.0" width="0.6" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="831.1" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (34 samples, 0.61%)</title><rect x="828.7" y="307.0" width="7.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="831.7" y="318.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.Iters$CollapseEqualsIterator (3 samples, 0.05%)</title><rect x="828.7" y="291.0" width="0.7" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="831.7" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (31 samples, 0.55%)</title><rect x="829.4" y="291.0" width="6.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="832.4" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (31 samples, 0.55%)</title><rect x="829.4" y="275.0" width="6.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="832.4" y="286.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (31 samples, 0.55%)</title><rect x="829.4" y="259.0" width="6.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="832.4" y="270.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (31 samples, 0.55%)</title><rect x="829.4" y="243.0" width="6.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="832.4" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (31 samples, 0.55%)</title><rect x="829.4" y="227.0" width="6.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="832.4" y="238.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (31 samples, 0.55%)</title><rect x="829.4" y="211.0" width="6.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="832.4" y="222.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (31 samples, 0.55%)</title><rect x="829.4" y="195.0" width="6.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="832.4" y="206.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (31 samples, 0.55%)</title><rect x="829.4" y="179.0" width="6.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="832.4" y="190.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (27 samples, 0.48%)</title><rect x="829.4" y="163.0" width="5.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="832.4" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/SSTable$1.next (27 samples, 0.48%)</title><rect x="829.4" y="147.0" width="5.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="832.4" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/SSTable$1.next (27 samples, 0.48%)</title><rect x="829.4" y="131.0" width="5.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="832.4" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/SSTable.getCell (27 samples, 0.48%)</title><rect x="829.4" y="115.0" width="5.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="832.4" y="126.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (19 samples, 0.34%)</title><rect x="829.4" y="99.0" width="4.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="832.4" y="110.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (12 samples, 0.21%)</title><rect x="829.4" y="83.0" width="2.5" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="832.4" y="94.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (7 samples, 0.13%)</title><rect x="831.9" y="83.0" width="1.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="834.9" y="94.0"></text>
</g>
<g>
<title>byte[] (7 samples, 0.13%)</title><rect x="831.9" y="67.0" width="1.5" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="834.9" y="78.0"></text>
</g>
<g>
<title>ru.mail.polis.Cell (2 samples, 0.04%)</title><rect x="833.4" y="99.0" width="0.4" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="836.4" y="110.0"></text>
</g>
<g>
<title>ru.mail.polis.Value (2 samples, 0.04%)</title><rect x="833.8" y="99.0" width="0.4" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="836.8" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/SSTable.getOffset (4 samples, 0.07%)</title><rect x="834.2" y="99.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="837.2" y="110.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (4 samples, 0.07%)</title><rect x="834.2" y="83.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="837.2" y="94.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (3 samples, 0.05%)</title><rect x="834.4" y="67.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="837.4" y="78.0"></text>
</g>
<g>
<title>byte[] (3 samples, 0.05%)</title><rect x="834.4" y="51.0" width="0.7" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="837.4" y="62.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (4 samples, 0.07%)</title><rect x="835.1" y="163.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="838.1" y="174.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (4 samples, 0.07%)</title><rect x="835.1" y="147.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="838.1" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/Cell.compareTo (4 samples, 0.07%)</title><rect x="835.1" y="131.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="838.1" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/Cell.compareTo (4 samples, 0.07%)</title><rect x="835.1" y="115.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="838.1" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/Cell.getKey (4 samples, 0.07%)</title><rect x="835.1" y="99.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="838.1" y="110.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (4 samples, 0.07%)</title><rect x="835.1" y="83.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="838.1" y="94.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (4 samples, 0.07%)</title><rect x="835.1" y="67.0" width="0.8" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="838.1" y="78.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (3 samples, 0.05%)</title><rect x="835.9" y="419.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="838.9" y="430.0"></text>
</g>
<g>
<title>java/lang/String.substring (3 samples, 0.05%)</title><rect x="835.9" y="403.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="838.9" y="414.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (3 samples, 0.05%)</title><rect x="835.9" y="387.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="838.9" y="398.0"></text>
</g>
<g>
<title>java.lang.String (3 samples, 0.05%)</title><rect x="835.9" y="371.0" width="0.6" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="838.9" y="382.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (14 samples, 0.25%)</title><rect x="836.5" y="451.0" width="3.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="839.5" y="462.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (3 samples, 0.05%)</title><rect x="836.7" y="435.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="839.7" y="446.0"></text>
</g>
<g>
<title>java.lang.String[] (3 samples, 0.05%)</title><rect x="836.7" y="419.0" width="0.7" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="839.7" y="430.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (10 samples, 0.18%)</title><rect x="837.4" y="435.0" width="2.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="840.4" y="446.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (10 samples, 0.18%)</title><rect x="837.4" y="419.0" width="2.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="840.4" y="430.0"></text>
</g>
<g>
<title>char[] (5 samples, 0.09%)</title><rect x="837.4" y="403.0" width="1.0" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="840.4" y="414.0"></text>
</g>
<g>
<title>java.lang.String (2 samples, 0.04%)</title><rect x="838.4" y="403.0" width="0.4" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="841.4" y="414.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (3 samples, 0.05%)</title><rect x="838.8" y="403.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="841.8" y="414.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (3 samples, 0.05%)</title><rect x="838.8" y="387.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="841.8" y="398.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (3 samples, 0.05%)</title><rect x="838.8" y="371.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="841.8" y="382.0"></text>
</g>
<g>
<title>byte[] (3 samples, 0.05%)</title><rect x="838.8" y="355.0" width="0.7" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="841.8" y="366.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (12 samples, 0.21%)</title><rect x="839.5" y="451.0" width="2.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="842.5" y="462.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (12 samples, 0.21%)</title><rect x="839.5" y="435.0" width="2.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="842.5" y="446.0"></text>
</g>
<g>
<title>char[] (4 samples, 0.07%)</title><rect x="839.5" y="419.0" width="0.8" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="842.5" y="430.0"></text>
</g>
<g>
<title>java.lang.String (3 samples, 0.05%)</title><rect x="840.3" y="419.0" width="0.7" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="843.3" y="430.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (5 samples, 0.09%)</title><rect x="841.0" y="419.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="844.0" y="430.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (5 samples, 0.09%)</title><rect x="841.0" y="403.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="844.0" y="414.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (5 samples, 0.09%)</title><rect x="841.0" y="387.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="844.0" y="398.0"></text>
</g>
<g>
<title>byte[] (5 samples, 0.09%)</title><rect x="841.0" y="371.0" width="1.0" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="844.0" y="382.0"></text>
</g>
<g>
<title>[NIO Selector #5 tid=4854] (805 samples, 14.39%)</title><rect x="842.0" y="531.0" width="169.8" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="845.0" y="542.0">[NIO Selector #5 tid=4..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (805 samples, 14.39%)</title><rect x="842.0" y="515.0" width="169.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="845.0" y="526.0">one/nio/server/Selecto..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (9 samples, 0.16%)</title><rect x="842.0" y="499.0" width="1.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="845.0" y="510.0"></text>
</g>
<g>
<title>one.nio.net.NativeSelector$2 (9 samples, 0.16%)</title><rect x="842.0" y="483.0" width="1.9" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="845.0" y="494.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (796 samples, 14.23%)</title><rect x="843.9" y="499.0" width="167.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="846.9" y="510.0">one/nio/net/Session.p..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (796 samples, 14.23%)</title><rect x="843.9" y="483.0" width="167.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="846.9" y="494.0">one/nio/http/HttpSess..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (796 samples, 14.23%)</title><rect x="843.9" y="467.0" width="167.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="846.9" y="478.0">one/nio/http/HttpSess..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (783 samples, 13.99%)</title><rect x="843.9" y="451.0" width="165.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="846.9" y="462.0">one/nio/http/HttpSess..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (783 samples, 13.99%)</title><rect x="843.9" y="435.0" width="165.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="846.9" y="446.0">one/nio/http/HttpServ..</text>
</g>
<g>
<title>RequestHandler0_entity.handleRequest (780 samples, 13.94%)</title><rect x="843.9" y="419.0" width="164.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="846.9" y="430.0">RequestHandler0_entit..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (9 samples, 0.16%)</title><rect x="843.9" y="403.0" width="1.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="846.9" y="414.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (9 samples, 0.16%)</title><rect x="843.9" y="387.0" width="1.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="846.9" y="398.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (7 samples, 0.13%)</title><rect x="843.9" y="371.0" width="1.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="846.9" y="382.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (7 samples, 0.13%)</title><rect x="843.9" y="355.0" width="1.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="846.9" y="366.0"></text>
</g>
<g>
<title>byte[] (7 samples, 0.13%)</title><rect x="843.9" y="339.0" width="1.5" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="846.9" y="350.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (2 samples, 0.04%)</title><rect x="845.4" y="371.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="848.4" y="382.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (2 samples, 0.04%)</title><rect x="845.4" y="355.0" width="0.4" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="848.4" y="366.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (3 samples, 0.05%)</title><rect x="845.8" y="403.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="848.8" y="414.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (3 samples, 0.05%)</title><rect x="845.8" y="387.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="848.8" y="398.0"></text>
</g>
<g>
<title>java/lang/String.substring (3 samples, 0.05%)</title><rect x="845.8" y="371.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="848.8" y="382.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (3 samples, 0.05%)</title><rect x="845.8" y="355.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="848.8" y="366.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (2 samples, 0.04%)</title><rect x="846.0" y="339.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="849.0" y="350.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.04%)</title><rect x="846.0" y="323.0" width="0.4" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="849.0" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivlev/ServiceController.entity (768 samples, 13.73%)</title><rect x="846.4" y="403.0" width="162.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="849.4" y="414.0">ru/mail/polis/service..</text>
</g>
<g>
<title>ru/mail/polis/service/ivlev/ServiceController.getResponse (767 samples, 13.71%)</title><rect x="846.7" y="387.0" width="161.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="849.7" y="398.0">ru/mail/polis/service..</text>
</g>
<g>
<title>ru/mail/polis/service/ivlev/ServiceController.methodGet (767 samples, 13.71%)</title><rect x="846.7" y="371.0" width="161.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="849.7" y="382.0">ru/mail/polis/service..</text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (5 samples, 0.09%)</title><rect x="846.9" y="355.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="849.9" y="366.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.04%)</title><rect x="846.9" y="339.0" width="0.4" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="849.9" y="350.0"></text>
</g>
<g>
<title>java.lang.String[] (2 samples, 0.04%)</title><rect x="847.3" y="339.0" width="0.4" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="850.3" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.get (761 samples, 13.60%)</title><rect x="847.9" y="355.0" width="160.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="850.9" y="366.0">ru/mail/polis/dao/DA..</text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (33 samples, 0.59%)</title><rect x="847.9" y="339.0" width="7.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="850.9" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (33 samples, 0.59%)</title><rect x="847.9" y="323.0" width="7.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="850.9" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (33 samples, 0.59%)</title><rect x="847.9" y="307.0" width="7.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="850.9" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (33 samples, 0.59%)</title><rect x="847.9" y="291.0" width="7.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="850.9" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (33 samples, 0.59%)</title><rect x="847.9" y="275.0" width="7.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="850.9" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (24 samples, 0.43%)</title><rect x="847.9" y="259.0" width="5.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="850.9" y="270.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (24 samples, 0.43%)</title><rect x="847.9" y="243.0" width="5.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="850.9" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (24 samples, 0.43%)</title><rect x="847.9" y="227.0" width="5.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="850.9" y="238.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (24 samples, 0.43%)</title><rect x="847.9" y="211.0" width="5.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="850.9" y="222.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (24 samples, 0.43%)</title><rect x="847.9" y="195.0" width="5.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="850.9" y="206.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (24 samples, 0.43%)</title><rect x="847.9" y="179.0" width="5.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="850.9" y="190.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (24 samples, 0.43%)</title><rect x="847.9" y="163.0" width="5.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="850.9" y="174.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (22 samples, 0.39%)</title><rect x="847.9" y="147.0" width="4.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="850.9" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/SSTable$1.next (22 samples, 0.39%)</title><rect x="847.9" y="131.0" width="4.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="850.9" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/SSTable$1.next (22 samples, 0.39%)</title><rect x="847.9" y="115.0" width="4.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="850.9" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/SSTable.getCell (22 samples, 0.39%)</title><rect x="847.9" y="99.0" width="4.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="850.9" y="110.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (16 samples, 0.29%)</title><rect x="847.9" y="83.0" width="3.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="850.9" y="94.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (12 samples, 0.21%)</title><rect x="847.9" y="67.0" width="2.5" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="850.9" y="78.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (4 samples, 0.07%)</title><rect x="850.4" y="67.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="853.4" y="78.0"></text>
</g>
<g>
<title>byte[] (4 samples, 0.07%)</title><rect x="850.4" y="51.0" width="0.9" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="853.4" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/SSTable.getOffset (5 samples, 0.09%)</title><rect x="851.5" y="83.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="854.5" y="94.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (5 samples, 0.09%)</title><rect x="851.5" y="67.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="854.5" y="78.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (4 samples, 0.07%)</title><rect x="851.5" y="51.0" width="0.8" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="854.5" y="62.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (2 samples, 0.04%)</title><rect x="852.6" y="147.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="855.6" y="158.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (2 samples, 0.04%)</title><rect x="852.6" y="131.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="855.6" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/Cell.compareTo (2 samples, 0.04%)</title><rect x="852.6" y="115.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="855.6" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/Cell.compareTo (2 samples, 0.04%)</title><rect x="852.6" y="99.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="855.6" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/Cell.getKey (2 samples, 0.04%)</title><rect x="852.6" y="83.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="855.6" y="94.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (2 samples, 0.04%)</title><rect x="852.6" y="67.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="855.6" y="78.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (2 samples, 0.04%)</title><rect x="852.6" y="51.0" width="0.4" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="855.6" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl$$Lambda$61/1901050430.apply (9 samples, 0.16%)</title><rect x="853.0" y="259.0" width="1.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="856.0" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/Cell.getKey (9 samples, 0.16%)</title><rect x="853.0" y="243.0" width="1.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="856.0" y="254.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (9 samples, 0.16%)</title><rect x="853.0" y="227.0" width="1.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="856.0" y="238.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (9 samples, 0.16%)</title><rect x="853.0" y="211.0" width="1.9" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="856.0" y="222.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.next (7 samples, 0.13%)</title><rect x="854.9" y="339.0" width="1.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="857.9" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$6.transform (7 samples, 0.13%)</title><rect x="854.9" y="323.0" width="1.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="857.9" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl$$Lambda$63/454736490.apply (7 samples, 0.13%)</title><rect x="854.9" y="307.0" width="1.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="857.9" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.lambda$iterator$4 (7 samples, 0.13%)</title><rect x="854.9" y="291.0" width="1.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="857.9" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/Cell.getKey (4 samples, 0.07%)</title><rect x="854.9" y="275.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="857.9" y="286.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (4 samples, 0.07%)</title><rect x="854.9" y="259.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="857.9" y="270.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (4 samples, 0.07%)</title><rect x="854.9" y="243.0" width="0.8" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="857.9" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/Value.getData (2 samples, 0.04%)</title><rect x="855.9" y="275.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="858.9" y="286.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (2 samples, 0.04%)</title><rect x="855.9" y="259.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="858.9" y="270.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (2 samples, 0.04%)</title><rect x="855.9" y="243.0" width="0.5" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="858.9" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/Record.getKey (3 samples, 0.05%)</title><rect x="856.4" y="339.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="859.4" y="350.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (3 samples, 0.05%)</title><rect x="856.4" y="323.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="859.4" y="334.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (3 samples, 0.05%)</title><rect x="856.4" y="307.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="859.4" y="318.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (3 samples, 0.05%)</title><rect x="856.4" y="291.0" width="0.6" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="859.4" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/Record.getValue (2 samples, 0.04%)</title><rect x="857.0" y="339.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="860.0" y="350.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (2 samples, 0.04%)</title><rect x="857.0" y="323.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="860.0" y="334.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (2 samples, 0.04%)</title><rect x="857.0" y="307.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="860.0" y="318.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (2 samples, 0.04%)</title><rect x="857.0" y="291.0" width="0.4" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="860.0" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.iterator (716 samples, 12.80%)</title><rect x="857.4" y="339.0" width="151.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="860.4" y="350.0">ru/mail/polis/dao/i..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.filter (2 samples, 0.04%)</title><rect x="857.4" y="323.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="860.4" y="334.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$5 (2 samples, 0.04%)</title><rect x="857.4" y="307.0" width="0.4" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="860.4" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$WriteLock.lock (2 samples, 0.04%)</title><rect x="857.8" y="323.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="860.8" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (2 samples, 0.04%)</title><rect x="857.8" y="307.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="860.8" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.addWaiter (2 samples, 0.04%)</title><rect x="857.8" y="291.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="860.8" y="302.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (2 samples, 0.04%)</title><rect x="857.8" y="275.0" width="0.5" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="860.8" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.compactIterator (712 samples, 12.73%)</title><rect x="858.3" y="323.0" width="150.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="861.3" y="334.0">ru/mail/polis/dao/i..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (48 samples, 0.86%)</title><rect x="858.3" y="307.0" width="10.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="861.3" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (47 samples, 0.84%)</title><rect x="858.5" y="291.0" width="9.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="861.5" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.peekingIterator (3 samples, 0.05%)</title><rect x="858.7" y="275.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="861.7" y="286.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$PeekingImpl (3 samples, 0.05%)</title><rect x="858.7" y="259.0" width="0.6" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="861.7" y="270.0"></text>
</g>
<g>
<title>java.util.PriorityQueue (2 samples, 0.04%)</title><rect x="859.3" y="275.0" width="0.4" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="862.3" y="286.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.&lt;init&gt; (2 samples, 0.04%)</title><rect x="859.7" y="275.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="862.7" y="286.0"></text>
</g>
<g>
<title>java.lang.Object[] (2 samples, 0.04%)</title><rect x="859.7" y="259.0" width="0.4" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="862.7" y="270.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (39 samples, 0.70%)</title><rect x="860.1" y="275.0" width="8.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="863.1" y="286.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (39 samples, 0.70%)</title><rect x="860.1" y="259.0" width="8.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="863.1" y="270.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (39 samples, 0.70%)</title><rect x="860.1" y="243.0" width="8.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="863.1" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (39 samples, 0.70%)</title><rect x="860.1" y="227.0" width="8.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="863.1" y="238.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (39 samples, 0.70%)</title><rect x="860.1" y="211.0" width="8.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="863.1" y="222.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (39 samples, 0.70%)</title><rect x="860.1" y="195.0" width="8.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="863.1" y="206.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (39 samples, 0.70%)</title><rect x="860.1" y="179.0" width="8.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="863.1" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/SSTable$1.next (39 samples, 0.70%)</title><rect x="860.1" y="163.0" width="8.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="863.1" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/SSTable$1.next (39 samples, 0.70%)</title><rect x="860.1" y="147.0" width="8.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="863.1" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/SSTable.getCell (39 samples, 0.70%)</title><rect x="860.1" y="131.0" width="8.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="863.1" y="142.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (24 samples, 0.43%)</title><rect x="860.1" y="115.0" width="5.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="863.1" y="126.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (16 samples, 0.29%)</title><rect x="860.1" y="99.0" width="3.4" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="863.1" y="110.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (8 samples, 0.14%)</title><rect x="863.5" y="99.0" width="1.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="866.5" y="110.0"></text>
</g>
<g>
<title>byte[] (8 samples, 0.14%)</title><rect x="863.5" y="83.0" width="1.7" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="866.5" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/SSTable.getOffset (13 samples, 0.23%)</title><rect x="865.6" y="115.0" width="2.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="868.6" y="126.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (13 samples, 0.23%)</title><rect x="865.6" y="99.0" width="2.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="868.6" y="110.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (11 samples, 0.20%)</title><rect x="865.6" y="83.0" width="2.4" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="868.6" y="94.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (2 samples, 0.04%)</title><rect x="868.0" y="83.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="871.0" y="94.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.04%)</title><rect x="868.0" y="67.0" width="0.4" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="871.0" y="78.0"></text>
</g>
<g>
<title>java.util.ArrayList (7 samples, 0.13%)</title><rect x="868.4" y="307.0" width="1.4" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="871.4" y="318.0"></text>
</g>
<g>
<title>java/lang/Iterable.forEach (611 samples, 10.92%)</title><rect x="869.8" y="307.0" width="128.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="872.8" y="318.0">java/lang/Iterab..</text>
</g>
<g>
<title>java/util/AbstractMap$2.iterator (3 samples, 0.05%)</title><rect x="869.8" y="291.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="872.8" y="302.0"></text>
</g>
<g>
<title>java/util/AbstractMap$2$1.&lt;init&gt; (2 samples, 0.04%)</title><rect x="870.1" y="275.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="873.1" y="286.0"></text>
</g>
<g>
<title>java/util/TreeMap$DescendingSubMap$DescendingEntrySetView.iterator (2 samples, 0.04%)</title><rect x="870.1" y="259.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="873.1" y="270.0"></text>
</g>
<g>
<title>java.util.TreeMap$NavigableSubMap$DescendingSubMapEntryIterator (2 samples, 0.04%)</title><rect x="870.1" y="243.0" width="0.4" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="873.1" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl$$Lambda$59/395476041.accept (608 samples, 10.87%)</title><rect x="870.5" y="291.0" width="128.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="873.5" y="302.0">ru/mail/polis/da..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.lambda$compactIterator$7 (608 samples, 10.87%)</title><rect x="870.5" y="275.0" width="128.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="873.5" y="286.0">ru/mail/polis/da..</text>
</g>
<g>
<title>ru/mail/polis/SSTable.iterator (608 samples, 10.87%)</title><rect x="870.5" y="259.0" width="128.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="873.5" y="270.0">ru/mail/polis/SS..</text>
</g>
<g>
<title>ru.mail.polis.SSTable$1 (6 samples, 0.11%)</title><rect x="870.5" y="243.0" width="1.2" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="873.5" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/SSTable$1.&lt;init&gt; (602 samples, 10.76%)</title><rect x="871.7" y="243.0" width="127.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="874.7" y="254.0">ru/mail/polis/SS..</text>
</g>
<g>
<title>ru/mail/polis/SSTable.getPosition (602 samples, 10.76%)</title><rect x="871.7" y="227.0" width="127.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="874.7" y="238.0">ru/mail/polis/SS..</text>
</g>
<g>
<title>ru/mail/polis/SSTable.getKey (602 samples, 10.76%)</title><rect x="871.7" y="211.0" width="127.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="874.7" y="222.0">ru/mail/polis/SS..</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (425 samples, 7.60%)</title><rect x="871.7" y="195.0" width="89.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="874.7" y="206.0">java/nio/B..</text>
</g>
<g>
<title>java.nio.HeapByteBuffer (278 samples, 4.97%)</title><rect x="871.7" y="179.0" width="58.7" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="874.7" y="190.0">java.n..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (147 samples, 2.63%)</title><rect x="930.4" y="179.0" width="31.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="933.4" y="190.0">ja..</text>
</g>
<g>
<title>byte[] (147 samples, 2.63%)</title><rect x="930.4" y="163.0" width="31.0" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="933.4" y="174.0">by..</text>
</g>
<g>
<title>ru/mail/polis/SSTable.getOffset (177 samples, 3.16%)</title><rect x="961.4" y="195.0" width="37.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="964.4" y="206.0">ru/..</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (177 samples, 3.16%)</title><rect x="961.4" y="179.0" width="37.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="964.4" y="190.0">jav..</text>
</g>
<g>
<title>java.nio.HeapByteBuffer (123 samples, 2.20%)</title><rect x="961.4" y="163.0" width="25.9" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="964.4" y="174.0">j..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (54 samples, 0.97%)</title><rect x="987.3" y="163.0" width="11.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="990.3" y="174.0"></text>
</g>
<g>
<title>byte[] (54 samples, 0.97%)</title><rect x="987.3" y="147.0" width="11.4" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="990.3" y="158.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (5 samples, 0.09%)</title><rect x="998.7" y="307.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1001.7" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (5 samples, 0.09%)</title><rect x="998.7" y="291.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1001.7" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl$$Lambda$59/395476041.get$Lambda (3 samples, 0.05%)</title><rect x="998.7" y="275.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1001.7" y="286.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.impl.DAOImpl$$Lambda$59 (3 samples, 0.05%)</title><rect x="998.7" y="259.0" width="0.6" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="1001.7" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl$$Lambda$60/1813653559.get$Lambda (2 samples, 0.04%)</title><rect x="999.3" y="275.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1002.3" y="286.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.impl.DAOImpl$$Lambda$60 (2 samples, 0.04%)</title><rect x="999.3" y="259.0" width="0.5" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="1002.3" y="270.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection.forEach (3 samples, 0.05%)</title><rect x="999.8" y="307.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1002.8" y="318.0"></text>
</g>
<g>
<title>java/lang/Iterable.forEach (3 samples, 0.05%)</title><rect x="999.8" y="291.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1002.8" y="302.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (3 samples, 0.05%)</title><rect x="999.8" y="275.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1002.8" y="286.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (3 samples, 0.05%)</title><rect x="999.8" y="259.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1002.8" y="270.0"></text>
</g>
<g>
<title>java.util.HashMap$KeyIterator (3 samples, 0.05%)</title><rect x="999.8" y="243.0" width="0.6" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="1002.8" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/MemTable.iterator (5 samples, 0.09%)</title><rect x="1000.4" y="307.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1003.4" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.transform (2 samples, 0.04%)</title><rect x="1000.4" y="291.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1003.4" y="302.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$6 (2 samples, 0.04%)</title><rect x="1000.4" y="275.0" width="0.4" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="1003.4" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (2 samples, 0.04%)</title><rect x="1001.0" y="291.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1004.0" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (2 samples, 0.04%)</title><rect x="1001.0" y="275.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1004.0" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (2 samples, 0.04%)</title><rect x="1001.0" y="259.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1004.0" y="270.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap (2 samples, 0.04%)</title><rect x="1001.0" y="243.0" width="0.5" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="1004.0" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (33 samples, 0.59%)</title><rect x="1001.5" y="307.0" width="6.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1004.5" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (32 samples, 0.57%)</title><rect x="1001.7" y="291.0" width="6.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1004.7" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (32 samples, 0.57%)</title><rect x="1001.7" y="275.0" width="6.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1004.7" y="286.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (32 samples, 0.57%)</title><rect x="1001.7" y="259.0" width="6.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1004.7" y="270.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (32 samples, 0.57%)</title><rect x="1001.7" y="243.0" width="6.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1004.7" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (32 samples, 0.57%)</title><rect x="1001.7" y="227.0" width="6.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1004.7" y="238.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (32 samples, 0.57%)</title><rect x="1001.7" y="211.0" width="6.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1004.7" y="222.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (32 samples, 0.57%)</title><rect x="1001.7" y="195.0" width="6.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1004.7" y="206.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (32 samples, 0.57%)</title><rect x="1001.7" y="179.0" width="6.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1004.7" y="190.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (32 samples, 0.57%)</title><rect x="1001.7" y="163.0" width="6.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1004.7" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/SSTable$1.next (32 samples, 0.57%)</title><rect x="1001.7" y="147.0" width="6.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1004.7" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/SSTable$1.next (32 samples, 0.57%)</title><rect x="1001.7" y="131.0" width="6.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1004.7" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/SSTable.getCell (32 samples, 0.57%)</title><rect x="1001.7" y="115.0" width="6.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1004.7" y="126.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (21 samples, 0.38%)</title><rect x="1001.7" y="99.0" width="4.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1004.7" y="110.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (15 samples, 0.27%)</title><rect x="1001.7" y="83.0" width="3.1" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="1004.7" y="94.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (6 samples, 0.11%)</title><rect x="1004.8" y="83.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1007.8" y="94.0"></text>
</g>
<g>
<title>byte[] (6 samples, 0.11%)</title><rect x="1004.8" y="67.0" width="1.3" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="1007.8" y="78.0"></text>
</g>
<g>
<title>ru.mail.polis.Value (2 samples, 0.04%)</title><rect x="1006.1" y="99.0" width="0.4" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="1009.1" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/SSTable.getOffset (9 samples, 0.16%)</title><rect x="1006.5" y="99.0" width="1.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1009.5" y="110.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (9 samples, 0.16%)</title><rect x="1006.5" y="83.0" width="1.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1009.5" y="94.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (4 samples, 0.07%)</title><rect x="1006.5" y="67.0" width="0.9" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="1009.5" y="78.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (5 samples, 0.09%)</title><rect x="1007.4" y="67.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1010.4" y="78.0"></text>
</g>
<g>
<title>byte[] (5 samples, 0.09%)</title><rect x="1007.4" y="51.0" width="1.0" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="1010.4" y="62.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (3 samples, 0.05%)</title><rect x="1008.4" y="419.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1011.4" y="430.0"></text>
</g>
<g>
<title>java/lang/String.substring (3 samples, 0.05%)</title><rect x="1008.4" y="403.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1011.4" y="414.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (3 samples, 0.05%)</title><rect x="1008.4" y="387.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1011.4" y="398.0"></text>
</g>
<g>
<title>java.lang.String (2 samples, 0.04%)</title><rect x="1008.4" y="371.0" width="0.4" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="1011.4" y="382.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (10 samples, 0.18%)</title><rect x="1009.0" y="451.0" width="2.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1012.0" y="462.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (4 samples, 0.07%)</title><rect x="1009.3" y="435.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1012.3" y="446.0"></text>
</g>
<g>
<title>java.lang.String[] (4 samples, 0.07%)</title><rect x="1009.3" y="419.0" width="0.8" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="1012.3" y="430.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (5 samples, 0.09%)</title><rect x="1010.1" y="435.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1013.1" y="446.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (5 samples, 0.09%)</title><rect x="1010.1" y="419.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1013.1" y="430.0"></text>
</g>
<g>
<title>char[] (4 samples, 0.07%)</title><rect x="1010.1" y="403.0" width="0.8" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="1013.1" y="414.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (3 samples, 0.05%)</title><rect x="1011.2" y="451.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1014.2" y="462.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (3 samples, 0.05%)</title><rect x="1011.2" y="435.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1014.2" y="446.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (2 samples, 0.04%)</title><rect x="1011.4" y="419.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1014.4" y="430.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (2 samples, 0.04%)</title><rect x="1011.4" y="403.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1014.4" y="414.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (2 samples, 0.04%)</title><rect x="1011.4" y="387.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1014.4" y="398.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.04%)</title><rect x="1011.4" y="371.0" width="0.4" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="1014.4" y="382.0"></text>
</g>
<g>
<title>[NIO Selector #7 tid=4856] (845 samples, 15.10%)</title><rect x="1011.8" y="531.0" width="178.2" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1014.8" y="542.0">[NIO Selector #7 tid=48..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (845 samples, 15.10%)</title><rect x="1011.8" y="515.0" width="178.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1014.8" y="526.0">one/nio/server/Selector..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (6 samples, 0.11%)</title><rect x="1011.8" y="499.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1014.8" y="510.0"></text>
</g>
<g>
<title>one.nio.net.NativeSelector$2 (6 samples, 0.11%)</title><rect x="1011.8" y="483.0" width="1.3" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="1014.8" y="494.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (839 samples, 15.00%)</title><rect x="1013.1" y="499.0" width="176.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1016.1" y="510.0">one/nio/net/Session.pro..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (839 samples, 15.00%)</title><rect x="1013.1" y="483.0" width="176.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1016.1" y="494.0">one/nio/http/HttpSessio..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (839 samples, 15.00%)</title><rect x="1013.1" y="467.0" width="176.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1016.1" y="478.0">one/nio/http/HttpSessio..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (812 samples, 14.51%)</title><rect x="1013.1" y="451.0" width="171.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1016.1" y="462.0">one/nio/http/HttpSessi..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (812 samples, 14.51%)</title><rect x="1013.1" y="435.0" width="171.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1016.1" y="446.0">one/nio/http/HttpServe..</text>
</g>
<g>
<title>RequestHandler0_entity.handleRequest (809 samples, 14.46%)</title><rect x="1013.1" y="419.0" width="170.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1016.1" y="430.0">RequestHandler0_entity..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (6 samples, 0.11%)</title><rect x="1013.1" y="403.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1016.1" y="414.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (6 samples, 0.11%)</title><rect x="1013.1" y="387.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1016.1" y="398.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (4 samples, 0.07%)</title><rect x="1013.1" y="371.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1016.1" y="382.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (4 samples, 0.07%)</title><rect x="1013.1" y="355.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1016.1" y="366.0"></text>
</g>
<g>
<title>byte[] (4 samples, 0.07%)</title><rect x="1013.1" y="339.0" width="0.8" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="1016.1" y="350.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (2 samples, 0.04%)</title><rect x="1013.9" y="371.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1016.9" y="382.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (2 samples, 0.04%)</title><rect x="1013.9" y="355.0" width="0.4" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="1016.9" y="366.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (4 samples, 0.07%)</title><rect x="1014.3" y="403.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1017.3" y="414.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (4 samples, 0.07%)</title><rect x="1014.3" y="387.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1017.3" y="398.0"></text>
</g>
<g>
<title>java/lang/String.substring (4 samples, 0.07%)</title><rect x="1014.3" y="371.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1017.3" y="382.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (4 samples, 0.07%)</title><rect x="1014.3" y="355.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1017.3" y="366.0"></text>
</g>
<g>
<title>java.lang.String (2 samples, 0.04%)</title><rect x="1014.3" y="339.0" width="0.4" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="1017.3" y="350.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (2 samples, 0.04%)</title><rect x="1014.7" y="339.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1017.7" y="350.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.04%)</title><rect x="1014.7" y="323.0" width="0.5" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="1017.7" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivlev/ServiceController.entity (799 samples, 14.28%)</title><rect x="1015.2" y="403.0" width="168.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1018.2" y="414.0">ru/mail/polis/service/..</text>
</g>
<g>
<title>java/lang/String.getBytes (2 samples, 0.04%)</title><rect x="1015.2" y="387.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1018.2" y="398.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (2 samples, 0.04%)</title><rect x="1015.2" y="371.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1018.2" y="382.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (2 samples, 0.04%)</title><rect x="1015.2" y="355.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1018.2" y="366.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (2 samples, 0.04%)</title><rect x="1015.2" y="339.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1018.2" y="350.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.04%)</title><rect x="1015.2" y="323.0" width="0.4" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="1018.2" y="334.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (3 samples, 0.05%)</title><rect x="1015.6" y="387.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1018.6" y="398.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (3 samples, 0.05%)</title><rect x="1015.6" y="371.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1018.6" y="382.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (3 samples, 0.05%)</title><rect x="1015.6" y="355.0" width="0.6" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="1018.6" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivlev/ServiceController.getResponse (794 samples, 14.19%)</title><rect x="1016.2" y="387.0" width="167.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1019.2" y="398.0">ru/mail/polis/service..</text>
</g>
<g>
<title>ru/mail/polis/service/ivlev/ServiceController.methodGet (794 samples, 14.19%)</title><rect x="1016.2" y="371.0" width="167.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1019.2" y="382.0">ru/mail/polis/service..</text>
</g>
<g>
<title>byte[] (2 samples, 0.04%)</title><rect x="1016.2" y="355.0" width="0.4" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="1019.2" y="366.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (7 samples, 0.13%)</title><rect x="1016.8" y="355.0" width="1.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1019.8" y="366.0"></text>
</g>
<g>
<title>java.lang.String[] (3 samples, 0.05%)</title><rect x="1017.1" y="339.0" width="0.6" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="1020.1" y="350.0"></text>
</g>
<g>
<title>java.lang.String (3 samples, 0.05%)</title><rect x="1017.7" y="339.0" width="0.6" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="1020.7" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.get (784 samples, 14.01%)</title><rect x="1018.3" y="355.0" width="165.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1021.3" y="366.0">ru/mail/polis/dao/DAO..</text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (44 samples, 0.79%)</title><rect x="1018.3" y="339.0" width="9.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1021.3" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (44 samples, 0.79%)</title><rect x="1018.3" y="323.0" width="9.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1021.3" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (44 samples, 0.79%)</title><rect x="1018.3" y="307.0" width="9.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1021.3" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (44 samples, 0.79%)</title><rect x="1018.3" y="291.0" width="9.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1021.3" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (44 samples, 0.79%)</title><rect x="1018.3" y="275.0" width="9.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1021.3" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (37 samples, 0.66%)</title><rect x="1018.3" y="259.0" width="7.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1021.3" y="270.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (37 samples, 0.66%)</title><rect x="1018.3" y="243.0" width="7.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1021.3" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (37 samples, 0.66%)</title><rect x="1018.3" y="227.0" width="7.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1021.3" y="238.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (37 samples, 0.66%)</title><rect x="1018.3" y="211.0" width="7.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1021.3" y="222.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (37 samples, 0.66%)</title><rect x="1018.3" y="195.0" width="7.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1021.3" y="206.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (37 samples, 0.66%)</title><rect x="1018.3" y="179.0" width="7.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1021.3" y="190.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (37 samples, 0.66%)</title><rect x="1018.3" y="163.0" width="7.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1021.3" y="174.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (35 samples, 0.63%)</title><rect x="1018.3" y="147.0" width="7.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1021.3" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/SSTable$1.next (35 samples, 0.63%)</title><rect x="1018.3" y="131.0" width="7.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1021.3" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/SSTable$1.next (35 samples, 0.63%)</title><rect x="1018.3" y="115.0" width="7.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1021.3" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/SSTable.getCell (35 samples, 0.63%)</title><rect x="1018.3" y="99.0" width="7.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1021.3" y="110.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (23 samples, 0.41%)</title><rect x="1018.3" y="83.0" width="4.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1021.3" y="94.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (15 samples, 0.27%)</title><rect x="1018.3" y="67.0" width="3.2" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="1021.3" y="78.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (8 samples, 0.14%)</title><rect x="1021.5" y="67.0" width="1.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1024.5" y="78.0"></text>
</g>
<g>
<title>byte[] (8 samples, 0.14%)</title><rect x="1021.5" y="51.0" width="1.7" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="1024.5" y="62.0"></text>
</g>
<g>
<title>ru.mail.polis.Cell (4 samples, 0.07%)</title><rect x="1023.2" y="83.0" width="0.8" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="1026.2" y="94.0"></text>
</g>
<g>
<title>ru.mail.polis.Value (2 samples, 0.04%)</title><rect x="1024.0" y="83.0" width="0.4" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="1027.0" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/SSTable.getOffset (6 samples, 0.11%)</title><rect x="1024.4" y="83.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1027.4" y="94.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (6 samples, 0.11%)</title><rect x="1024.4" y="67.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1027.4" y="78.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (3 samples, 0.05%)</title><rect x="1024.4" y="51.0" width="0.7" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="1027.4" y="62.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (3 samples, 0.05%)</title><rect x="1025.1" y="51.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1028.1" y="62.0"></text>
</g>
<g>
<title>byte[] (3 samples, 0.05%)</title><rect x="1025.1" y="35.0" width="0.6" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="1028.1" y="46.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (2 samples, 0.04%)</title><rect x="1025.7" y="147.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1028.7" y="158.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (2 samples, 0.04%)</title><rect x="1025.7" y="131.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1028.7" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/Cell.compareTo (2 samples, 0.04%)</title><rect x="1025.7" y="115.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1028.7" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/Cell.compareTo (2 samples, 0.04%)</title><rect x="1025.7" y="99.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1028.7" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/Cell.getKey (2 samples, 0.04%)</title><rect x="1025.7" y="83.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1028.7" y="94.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (2 samples, 0.04%)</title><rect x="1025.7" y="67.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1028.7" y="78.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (2 samples, 0.04%)</title><rect x="1025.7" y="51.0" width="0.4" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="1028.7" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl$$Lambda$61/1901050430.apply (7 samples, 0.13%)</title><rect x="1026.1" y="259.0" width="1.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1029.1" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/Cell.getKey (7 samples, 0.13%)</title><rect x="1026.1" y="243.0" width="1.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1029.1" y="254.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (7 samples, 0.13%)</title><rect x="1026.1" y="227.0" width="1.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1029.1" y="238.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (7 samples, 0.13%)</title><rect x="1026.1" y="211.0" width="1.5" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="1029.1" y="222.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.next (4 samples, 0.07%)</title><rect x="1027.6" y="339.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1030.6" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$6.transform (4 samples, 0.07%)</title><rect x="1027.6" y="323.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1030.6" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl$$Lambda$63/454736490.apply (4 samples, 0.07%)</title><rect x="1027.6" y="307.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1030.6" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.lambda$iterator$4 (4 samples, 0.07%)</title><rect x="1027.6" y="291.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1030.6" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/Value.getData (3 samples, 0.05%)</title><rect x="1027.8" y="275.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1030.8" y="286.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (3 samples, 0.05%)</title><rect x="1027.8" y="259.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1030.8" y="270.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (3 samples, 0.05%)</title><rect x="1027.8" y="243.0" width="0.6" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="1030.8" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/Record.getKey (5 samples, 0.09%)</title><rect x="1028.4" y="339.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1031.4" y="350.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (5 samples, 0.09%)</title><rect x="1028.4" y="323.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1031.4" y="334.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (5 samples, 0.09%)</title><rect x="1028.4" y="307.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1031.4" y="318.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (5 samples, 0.09%)</title><rect x="1028.4" y="291.0" width="1.1" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="1031.4" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.iterator (731 samples, 13.07%)</title><rect x="1029.5" y="339.0" width="154.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1032.5" y="350.0">ru/mail/polis/dao/im..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.compactIterator (730 samples, 13.05%)</title><rect x="1029.7" y="323.0" width="154.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1032.7" y="334.0">ru/mail/polis/dao/i..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (73 samples, 1.30%)</title><rect x="1029.7" y="307.0" width="15.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1032.7" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (73 samples, 1.30%)</title><rect x="1029.7" y="291.0" width="15.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1032.7" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.peekingIterator (5 samples, 0.09%)</title><rect x="1029.9" y="275.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1032.9" y="286.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$PeekingImpl (5 samples, 0.09%)</title><rect x="1029.9" y="259.0" width="1.1" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="1032.9" y="270.0"></text>
</g>
<g>
<title>java.util.PriorityQueue (2 samples, 0.04%)</title><rect x="1031.0" y="275.0" width="0.4" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="1034.0" y="286.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.&lt;init&gt; (3 samples, 0.05%)</title><rect x="1031.4" y="275.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1034.4" y="286.0"></text>
</g>
<g>
<title>java.lang.Object[] (3 samples, 0.05%)</title><rect x="1031.4" y="259.0" width="0.6" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="1034.4" y="270.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (62 samples, 1.11%)</title><rect x="1032.0" y="275.0" width="13.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1035.0" y="286.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (62 samples, 1.11%)</title><rect x="1032.0" y="259.0" width="13.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1035.0" y="270.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (62 samples, 1.11%)</title><rect x="1032.0" y="243.0" width="13.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1035.0" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (62 samples, 1.11%)</title><rect x="1032.0" y="227.0" width="13.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1035.0" y="238.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (62 samples, 1.11%)</title><rect x="1032.0" y="211.0" width="13.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1035.0" y="222.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (62 samples, 1.11%)</title><rect x="1032.0" y="195.0" width="13.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1035.0" y="206.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (59 samples, 1.05%)</title><rect x="1032.0" y="179.0" width="12.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1035.0" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/SSTable$1.next (59 samples, 1.05%)</title><rect x="1032.0" y="163.0" width="12.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1035.0" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/SSTable$1.next (59 samples, 1.05%)</title><rect x="1032.0" y="147.0" width="12.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1035.0" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/SSTable.getCell (59 samples, 1.05%)</title><rect x="1032.0" y="131.0" width="12.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1035.0" y="142.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (40 samples, 0.71%)</title><rect x="1032.0" y="115.0" width="8.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1035.0" y="126.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (24 samples, 0.43%)</title><rect x="1032.0" y="99.0" width="5.1" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="1035.0" y="110.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (16 samples, 0.29%)</title><rect x="1037.1" y="99.0" width="3.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1040.1" y="110.0"></text>
</g>
<g>
<title>byte[] (16 samples, 0.29%)</title><rect x="1037.1" y="83.0" width="3.4" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="1040.1" y="94.0"></text>
</g>
<g>
<title>ru.mail.polis.Value (3 samples, 0.05%)</title><rect x="1040.5" y="115.0" width="0.6" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="1043.5" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/SSTable.getOffset (16 samples, 0.29%)</title><rect x="1041.1" y="115.0" width="3.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1044.1" y="126.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (16 samples, 0.29%)</title><rect x="1041.1" y="99.0" width="3.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1044.1" y="110.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (11 samples, 0.20%)</title><rect x="1041.1" y="83.0" width="2.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="1044.1" y="94.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (5 samples, 0.09%)</title><rect x="1043.4" y="83.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1046.4" y="94.0"></text>
</g>
<g>
<title>byte[] (5 samples, 0.09%)</title><rect x="1043.4" y="67.0" width="1.1" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="1046.4" y="78.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (3 samples, 0.05%)</title><rect x="1044.5" y="179.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1047.5" y="190.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (3 samples, 0.05%)</title><rect x="1044.5" y="163.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1047.5" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/Cell.compareTo (3 samples, 0.05%)</title><rect x="1044.5" y="147.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1047.5" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/Cell.compareTo (3 samples, 0.05%)</title><rect x="1044.5" y="131.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1047.5" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/Cell.getKey (3 samples, 0.05%)</title><rect x="1044.5" y="115.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1047.5" y="126.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (3 samples, 0.05%)</title><rect x="1044.5" y="99.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1047.5" y="110.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (3 samples, 0.05%)</title><rect x="1044.5" y="83.0" width="0.6" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="1047.5" y="94.0"></text>
</g>
<g>
<title>java.util.ArrayList (4 samples, 0.07%)</title><rect x="1045.1" y="307.0" width="0.9" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="1048.1" y="318.0"></text>
</g>
<g>
<title>java/lang/Iterable.forEach (616 samples, 11.01%)</title><rect x="1046.0" y="307.0" width="129.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1049.0" y="318.0">java/lang/Iterab..</text>
</g>
<g>
<title>java/util/AbstractMap$2.iterator (5 samples, 0.09%)</title><rect x="1046.0" y="291.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1049.0" y="302.0"></text>
</g>
<g>
<title>java.util.AbstractMap$2$1 (3 samples, 0.05%)</title><rect x="1046.0" y="275.0" width="0.6" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="1049.0" y="286.0"></text>
</g>
<g>
<title>java/util/AbstractMap$2$1.&lt;init&gt; (2 samples, 0.04%)</title><rect x="1046.6" y="275.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1049.6" y="286.0"></text>
</g>
<g>
<title>java/util/TreeMap$DescendingSubMap$DescendingEntrySetView.iterator (2 samples, 0.04%)</title><rect x="1046.6" y="259.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1049.6" y="270.0"></text>
</g>
<g>
<title>java.util.TreeMap$NavigableSubMap$DescendingSubMapEntryIterator (2 samples, 0.04%)</title><rect x="1046.6" y="243.0" width="0.4" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="1049.6" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl$$Lambda$59/395476041.accept (611 samples, 10.92%)</title><rect x="1047.0" y="291.0" width="128.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1050.0" y="302.0">ru/mail/polis/da..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.lambda$compactIterator$7 (611 samples, 10.92%)</title><rect x="1047.0" y="275.0" width="128.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1050.0" y="286.0">ru/mail/polis/da..</text>
</g>
<g>
<title>ru/mail/polis/SSTable.iterator (611 samples, 10.92%)</title><rect x="1047.0" y="259.0" width="128.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1050.0" y="270.0">ru/mail/polis/SS..</text>
</g>
<g>
<title>ru.mail.polis.SSTable$1 (3 samples, 0.05%)</title><rect x="1047.0" y="243.0" width="0.6" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="1050.0" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/SSTable$1.&lt;init&gt; (608 samples, 10.87%)</title><rect x="1047.6" y="243.0" width="128.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1050.6" y="254.0">ru/mail/polis/SS..</text>
</g>
<g>
<title>ru/mail/polis/SSTable.getPosition (608 samples, 10.87%)</title><rect x="1047.6" y="227.0" width="128.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1050.6" y="238.0">ru/mail/polis/SS..</text>
</g>
<g>
<title>ru/mail/polis/SSTable.getKey (608 samples, 10.87%)</title><rect x="1047.6" y="211.0" width="128.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1050.6" y="222.0">ru/mail/polis/SS..</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (404 samples, 7.22%)</title><rect x="1047.6" y="195.0" width="85.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1050.6" y="206.0">java/nio/B..</text>
</g>
<g>
<title>java.nio.HeapByteBuffer (270 samples, 4.83%)</title><rect x="1047.6" y="179.0" width="57.0" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="1050.6" y="190.0">java.n..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (134 samples, 2.39%)</title><rect x="1104.6" y="179.0" width="28.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1107.6" y="190.0">ja..</text>
</g>
<g>
<title>byte[] (134 samples, 2.39%)</title><rect x="1104.6" y="163.0" width="28.2" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="1107.6" y="174.0">by..</text>
</g>
<g>
<title>ru/mail/polis/SSTable.getOffset (204 samples, 3.65%)</title><rect x="1132.8" y="195.0" width="43.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1135.8" y="206.0">ru/m..</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (204 samples, 3.65%)</title><rect x="1132.8" y="179.0" width="43.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1135.8" y="190.0">java..</text>
</g>
<g>
<title>java.nio.HeapByteBuffer (130 samples, 2.32%)</title><rect x="1132.8" y="163.0" width="27.5" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="1135.8" y="174.0">j..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (74 samples, 1.32%)</title><rect x="1160.3" y="163.0" width="15.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1163.3" y="174.0"></text>
</g>
<g>
<title>byte[] (74 samples, 1.32%)</title><rect x="1160.3" y="147.0" width="15.6" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="1163.3" y="158.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (3 samples, 0.05%)</title><rect x="1175.9" y="307.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1178.9" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (3 samples, 0.05%)</title><rect x="1175.9" y="291.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1178.9" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl$$Lambda$60/1813653559.get$Lambda (2 samples, 0.04%)</title><rect x="1176.1" y="275.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1179.1" y="286.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.impl.DAOImpl$$Lambda$60 (2 samples, 0.04%)</title><rect x="1176.1" y="259.0" width="0.4" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="1179.1" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/MemTable.iterator (6 samples, 0.11%)</title><rect x="1176.9" y="307.0" width="1.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1179.9" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.transform (2 samples, 0.04%)</title><rect x="1176.9" y="291.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1179.9" y="302.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$6 (2 samples, 0.04%)</title><rect x="1176.9" y="275.0" width="0.4" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="1179.9" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$EntrySet.iterator (2 samples, 0.04%)</title><rect x="1177.3" y="291.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1180.3" y="302.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapEntryIterator (2 samples, 0.04%)</title><rect x="1177.3" y="275.0" width="0.5" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="1180.3" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (26 samples, 0.46%)</title><rect x="1178.2" y="307.0" width="5.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1181.2" y="318.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.Iters$CollapseEqualsIterator (2 samples, 0.04%)</title><rect x="1178.2" y="291.0" width="0.4" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="1181.2" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (24 samples, 0.43%)</title><rect x="1178.6" y="291.0" width="5.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1181.6" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (24 samples, 0.43%)</title><rect x="1178.6" y="275.0" width="5.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1181.6" y="286.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (24 samples, 0.43%)</title><rect x="1178.6" y="259.0" width="5.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1181.6" y="270.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (24 samples, 0.43%)</title><rect x="1178.6" y="243.0" width="5.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1181.6" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (24 samples, 0.43%)</title><rect x="1178.6" y="227.0" width="5.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1181.6" y="238.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (24 samples, 0.43%)</title><rect x="1178.6" y="211.0" width="5.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1181.6" y="222.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (24 samples, 0.43%)</title><rect x="1178.6" y="195.0" width="5.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1181.6" y="206.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (24 samples, 0.43%)</title><rect x="1178.6" y="179.0" width="5.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1181.6" y="190.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (20 samples, 0.36%)</title><rect x="1178.6" y="163.0" width="4.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1181.6" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/SSTable$1.next (20 samples, 0.36%)</title><rect x="1178.6" y="147.0" width="4.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1181.6" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/SSTable$1.next (20 samples, 0.36%)</title><rect x="1178.6" y="131.0" width="4.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1181.6" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/SSTable.getCell (20 samples, 0.36%)</title><rect x="1178.6" y="115.0" width="4.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1181.6" y="126.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (13 samples, 0.23%)</title><rect x="1178.6" y="99.0" width="2.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1181.6" y="110.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (10 samples, 0.18%)</title><rect x="1178.6" y="83.0" width="2.1" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="1181.6" y="94.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (3 samples, 0.05%)</title><rect x="1180.7" y="83.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1183.7" y="94.0"></text>
</g>
<g>
<title>byte[] (3 samples, 0.05%)</title><rect x="1180.7" y="67.0" width="0.7" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="1183.7" y="78.0"></text>
</g>
<g>
<title>ru.mail.polis.Value (3 samples, 0.05%)</title><rect x="1181.6" y="99.0" width="0.6" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="1184.6" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/SSTable.getOffset (3 samples, 0.05%)</title><rect x="1182.2" y="99.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1185.2" y="110.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (3 samples, 0.05%)</title><rect x="1182.2" y="83.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1185.2" y="94.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (3 samples, 0.05%)</title><rect x="1182.2" y="67.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1185.2" y="78.0"></text>
</g>
<g>
<title>byte[] (3 samples, 0.05%)</title><rect x="1182.2" y="51.0" width="0.6" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="1185.2" y="62.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (4 samples, 0.07%)</title><rect x="1182.8" y="163.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1185.8" y="174.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (4 samples, 0.07%)</title><rect x="1182.8" y="147.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1185.8" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/Cell.compareTo (4 samples, 0.07%)</title><rect x="1182.8" y="131.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1185.8" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/Cell.compareTo (4 samples, 0.07%)</title><rect x="1182.8" y="115.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1185.8" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/Cell.getKey (4 samples, 0.07%)</title><rect x="1182.8" y="99.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1185.8" y="110.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (4 samples, 0.07%)</title><rect x="1182.8" y="83.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1185.8" y="94.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (4 samples, 0.07%)</title><rect x="1182.8" y="67.0" width="0.9" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="1185.8" y="78.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (3 samples, 0.05%)</title><rect x="1183.7" y="419.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1186.7" y="430.0"></text>
</g>
<g>
<title>java/lang/String.substring (3 samples, 0.05%)</title><rect x="1183.7" y="403.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1186.7" y="414.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (3 samples, 0.05%)</title><rect x="1183.7" y="387.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1186.7" y="398.0"></text>
</g>
<g>
<title>java.lang.String (3 samples, 0.05%)</title><rect x="1183.7" y="371.0" width="0.6" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="1186.7" y="382.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (17 samples, 0.30%)</title><rect x="1184.3" y="451.0" width="3.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1187.3" y="462.0"></text>
</g>
<g>
<title>one.nio.http.Request (2 samples, 0.04%)</title><rect x="1184.3" y="435.0" width="0.4" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="1187.3" y="446.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (7 samples, 0.13%)</title><rect x="1184.7" y="435.0" width="1.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1187.7" y="446.0"></text>
</g>
<g>
<title>java.lang.String[] (7 samples, 0.13%)</title><rect x="1184.7" y="419.0" width="1.5" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="1187.7" y="430.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (8 samples, 0.14%)</title><rect x="1186.2" y="435.0" width="1.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1189.2" y="446.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (8 samples, 0.14%)</title><rect x="1186.2" y="419.0" width="1.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1189.2" y="430.0"></text>
</g>
<g>
<title>char[] (4 samples, 0.07%)</title><rect x="1186.2" y="403.0" width="0.8" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="1189.2" y="414.0"></text>
</g>
<g>
<title>java.lang.String (2 samples, 0.04%)</title><rect x="1187.0" y="403.0" width="0.5" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="1190.0" y="414.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (2 samples, 0.04%)</title><rect x="1187.5" y="403.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1190.5" y="414.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (2 samples, 0.04%)</title><rect x="1187.5" y="387.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1190.5" y="398.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (2 samples, 0.04%)</title><rect x="1187.5" y="371.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1190.5" y="382.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.04%)</title><rect x="1187.5" y="355.0" width="0.4" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="1190.5" y="366.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (10 samples, 0.18%)</title><rect x="1187.9" y="451.0" width="2.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1190.9" y="462.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (10 samples, 0.18%)</title><rect x="1187.9" y="435.0" width="2.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1190.9" y="446.0"></text>
</g>
<g>
<title>char[] (5 samples, 0.09%)</title><rect x="1187.9" y="419.0" width="1.0" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="1190.9" y="430.0"></text>
</g>
<g>
<title>java.lang.String (4 samples, 0.07%)</title><rect x="1188.9" y="419.0" width="0.9" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="1191.9" y="430.0"></text>
</g>
</g>
</svg>
