<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="326" onload="init(evt)" viewBox="0 0 1200 326" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="309"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="309"> </text>
<g id="frames">
<g>
<title>all (4,719 samples, 100.00%)</title><rect x="10.0" y="275.0" width="1180.0" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="13.0" y="286.0">all</text>
</g>
<g>
<title>[NIO Selector #0 tid=4263] (304 samples, 6.44%)</title><rect x="10.0" y="259.0" width="76.0" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="13.0" y="270.0">[NIO Sel..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (304 samples, 6.44%)</title><rect x="10.0" y="243.0" width="76.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="13.0" y="254.0">one/nio/..</text>
</g>
<g>
<title>one/nio/net/Session.process (304 samples, 6.44%)</title><rect x="10.0" y="227.0" width="76.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="13.0" y="238.0">one/nio/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (304 samples, 6.44%)</title><rect x="10.0" y="211.0" width="76.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="13.0" y="222.0">one/nio/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (304 samples, 6.44%)</title><rect x="10.0" y="195.0" width="76.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="13.0" y="206.0">one/nio/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (67 samples, 1.42%)</title><rect x="10.0" y="179.0" width="16.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="13.0" y="190.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (67 samples, 1.42%)</title><rect x="10.0" y="163.0" width="16.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="13.0" y="174.0"></text>
</g>
<g>
<title>RequestHandler1_put.handleRequest (37 samples, 0.78%)</title><rect x="10.0" y="147.0" width="9.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="13.0" y="158.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (19 samples, 0.40%)</title><rect x="10.0" y="131.0" width="4.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="13.0" y="142.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (19 samples, 0.40%)</title><rect x="10.0" y="115.0" width="4.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="13.0" y="126.0"></text>
</g>
<g>
<title>java/lang/String.substring (19 samples, 0.40%)</title><rect x="10.0" y="99.0" width="4.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="13.0" y="110.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (19 samples, 0.40%)</title><rect x="10.0" y="83.0" width="4.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="13.0" y="94.0"></text>
</g>
<g>
<title>java.lang.String (9 samples, 0.19%)</title><rect x="10.0" y="67.0" width="2.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="13.0" y="78.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (10 samples, 0.21%)</title><rect x="12.3" y="67.0" width="2.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="15.3" y="78.0"></text>
</g>
<g>
<title>byte[] (10 samples, 0.21%)</title><rect x="12.3" y="51.0" width="2.5" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="15.3" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivlev/ThreadController.put (18 samples, 0.38%)</title><rect x="14.8" y="131.0" width="4.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="17.8" y="142.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (18 samples, 0.38%)</title><rect x="14.8" y="115.0" width="4.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="17.8" y="126.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (18 samples, 0.38%)</title><rect x="14.8" y="99.0" width="4.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="17.8" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivlev/ThreadController$$Lambda$65/822960827.get$Lambda (18 samples, 0.38%)</title><rect x="14.8" y="83.0" width="4.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="17.8" y="94.0"></text>
</g>
<g>
<title>ru.mail.polis.service.ivlev.ThreadController$$Lambda$65 (18 samples, 0.38%)</title><rect x="14.8" y="67.0" width="4.5" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="17.8" y="78.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (30 samples, 0.64%)</title><rect x="19.3" y="147.0" width="7.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="22.3" y="158.0"></text>
</g>
<g>
<title>java/lang/String.substring (30 samples, 0.64%)</title><rect x="19.3" y="131.0" width="7.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="22.3" y="142.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (30 samples, 0.64%)</title><rect x="19.3" y="115.0" width="7.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="22.3" y="126.0"></text>
</g>
<g>
<title>java.lang.String (16 samples, 0.34%)</title><rect x="19.3" y="99.0" width="4.0" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="22.3" y="110.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (14 samples, 0.30%)</title><rect x="23.3" y="99.0" width="3.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="26.3" y="110.0"></text>
</g>
<g>
<title>byte[] (14 samples, 0.30%)</title><rect x="23.3" y="83.0" width="3.5" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="26.3" y="94.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (100 samples, 2.12%)</title><rect x="26.8" y="179.0" width="25.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="29.8" y="190.0">o..</text>
</g>
<g>
<title>one.nio.http.Request (7 samples, 0.15%)</title><rect x="26.8" y="163.0" width="1.7" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="29.8" y="174.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (30 samples, 0.64%)</title><rect x="28.5" y="163.0" width="7.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="31.5" y="174.0"></text>
</g>
<g>
<title>java.lang.String[] (30 samples, 0.64%)</title><rect x="28.5" y="147.0" width="7.5" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="31.5" y="158.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (63 samples, 1.34%)</title><rect x="36.0" y="163.0" width="15.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="39.0" y="174.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (63 samples, 1.34%)</title><rect x="36.0" y="147.0" width="15.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="39.0" y="158.0"></text>
</g>
<g>
<title>char[] (35 samples, 0.74%)</title><rect x="36.0" y="131.0" width="8.8" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="39.0" y="142.0"></text>
</g>
<g>
<title>java.lang.String (9 samples, 0.19%)</title><rect x="44.8" y="131.0" width="2.2" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="47.8" y="142.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (19 samples, 0.40%)</title><rect x="47.0" y="131.0" width="4.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="50.0" y="142.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (19 samples, 0.40%)</title><rect x="47.0" y="115.0" width="4.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="50.0" y="126.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (19 samples, 0.40%)</title><rect x="47.0" y="99.0" width="4.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="50.0" y="110.0"></text>
</g>
<g>
<title>byte[] (19 samples, 0.40%)</title><rect x="47.0" y="83.0" width="4.8" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="50.0" y="94.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (16 samples, 0.34%)</title><rect x="51.8" y="179.0" width="4.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="54.8" y="190.0"></text>
</g>
<g>
<title>byte[] (16 samples, 0.34%)</title><rect x="51.8" y="163.0" width="4.0" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="54.8" y="174.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (22 samples, 0.47%)</title><rect x="55.8" y="179.0" width="5.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="58.8" y="190.0"></text>
</g>
<g>
<title>java/lang/String.substring (22 samples, 0.47%)</title><rect x="55.8" y="163.0" width="5.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="58.8" y="174.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (22 samples, 0.47%)</title><rect x="55.8" y="147.0" width="5.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="58.8" y="158.0"></text>
</g>
<g>
<title>java.lang.String (13 samples, 0.28%)</title><rect x="55.8" y="131.0" width="3.2" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="58.8" y="142.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (9 samples, 0.19%)</title><rect x="59.0" y="131.0" width="2.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="62.0" y="142.0"></text>
</g>
<g>
<title>byte[] (9 samples, 0.19%)</title><rect x="59.0" y="115.0" width="2.3" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="62.0" y="126.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (99 samples, 2.10%)</title><rect x="61.3" y="179.0" width="24.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="64.3" y="190.0">o..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (99 samples, 2.10%)</title><rect x="61.3" y="163.0" width="24.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="64.3" y="174.0">o..</text>
</g>
<g>
<title>char[] (40 samples, 0.85%)</title><rect x="61.3" y="147.0" width="10.0" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="64.3" y="158.0"></text>
</g>
<g>
<title>java.lang.String (17 samples, 0.36%)</title><rect x="71.3" y="147.0" width="4.2" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="74.3" y="158.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (42 samples, 0.89%)</title><rect x="75.5" y="147.0" width="10.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="78.5" y="158.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (42 samples, 0.89%)</title><rect x="75.5" y="131.0" width="10.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="78.5" y="142.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (42 samples, 0.89%)</title><rect x="75.5" y="115.0" width="10.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="78.5" y="126.0"></text>
</g>
<g>
<title>byte[] (42 samples, 0.89%)</title><rect x="75.5" y="99.0" width="10.5" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="78.5" y="110.0"></text>
</g>
<g>
<title>[NIO Selector #1 tid=4264] (302 samples, 6.40%)</title><rect x="86.0" y="259.0" width="75.5" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="89.0" y="270.0">[NIO Sel..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (302 samples, 6.40%)</title><rect x="86.0" y="243.0" width="75.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="89.0" y="254.0">one/nio/..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (13 samples, 0.28%)</title><rect x="86.0" y="227.0" width="3.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="89.0" y="238.0"></text>
</g>
<g>
<title>one.nio.net.NativeSelector$2 (13 samples, 0.28%)</title><rect x="86.0" y="211.0" width="3.3" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="89.0" y="222.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (289 samples, 6.12%)</title><rect x="89.3" y="227.0" width="72.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="92.3" y="238.0">one/nio/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (289 samples, 6.12%)</title><rect x="89.3" y="211.0" width="72.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="92.3" y="222.0">one/nio/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (289 samples, 6.12%)</title><rect x="89.3" y="195.0" width="72.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="92.3" y="206.0">one/nio/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (54 samples, 1.14%)</title><rect x="89.3" y="179.0" width="13.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="92.3" y="190.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (54 samples, 1.14%)</title><rect x="89.3" y="163.0" width="13.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="92.3" y="174.0"></text>
</g>
<g>
<title>RequestHandler1_put.handleRequest (33 samples, 0.70%)</title><rect x="89.3" y="147.0" width="8.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="92.3" y="158.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (21 samples, 0.45%)</title><rect x="89.3" y="131.0" width="5.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="92.3" y="142.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (21 samples, 0.45%)</title><rect x="89.3" y="115.0" width="5.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="92.3" y="126.0"></text>
</g>
<g>
<title>java/lang/String.substring (21 samples, 0.45%)</title><rect x="89.3" y="99.0" width="5.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="92.3" y="110.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (21 samples, 0.45%)</title><rect x="89.3" y="83.0" width="5.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="92.3" y="94.0"></text>
</g>
<g>
<title>java.lang.String (7 samples, 0.15%)</title><rect x="89.3" y="67.0" width="1.7" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="92.3" y="78.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (14 samples, 0.30%)</title><rect x="91.0" y="67.0" width="3.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="94.0" y="78.0"></text>
</g>
<g>
<title>byte[] (14 samples, 0.30%)</title><rect x="91.0" y="51.0" width="3.5" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="94.0" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivlev/ThreadController.put (12 samples, 0.25%)</title><rect x="94.5" y="131.0" width="3.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="97.5" y="142.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (11 samples, 0.23%)</title><rect x="94.5" y="115.0" width="2.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="97.5" y="126.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (11 samples, 0.23%)</title><rect x="94.5" y="99.0" width="2.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="97.5" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivlev/ThreadController$$Lambda$65/822960827.get$Lambda (11 samples, 0.23%)</title><rect x="94.5" y="83.0" width="2.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="97.5" y="94.0"></text>
</g>
<g>
<title>ru.mail.polis.service.ivlev.ThreadController$$Lambda$65 (11 samples, 0.23%)</title><rect x="94.5" y="67.0" width="2.8" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="97.5" y="78.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (1 samples, 0.02%)</title><rect x="97.3" y="115.0" width="0.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="100.3" y="126.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (1 samples, 0.02%)</title><rect x="97.3" y="99.0" width="0.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="100.3" y="110.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (1 samples, 0.02%)</title><rect x="97.3" y="83.0" width="0.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="100.3" y="94.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (1 samples, 0.02%)</title><rect x="97.3" y="67.0" width="0.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="100.3" y="78.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.addWaiter (1 samples, 0.02%)</title><rect x="97.3" y="51.0" width="0.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="100.3" y="62.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (1 samples, 0.02%)</title><rect x="97.3" y="35.0" width="0.2" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="100.3" y="46.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (21 samples, 0.45%)</title><rect x="97.5" y="147.0" width="5.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="100.5" y="158.0"></text>
</g>
<g>
<title>java/lang/String.substring (21 samples, 0.45%)</title><rect x="97.5" y="131.0" width="5.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="100.5" y="142.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (21 samples, 0.45%)</title><rect x="97.5" y="115.0" width="5.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="100.5" y="126.0"></text>
</g>
<g>
<title>java.lang.String (9 samples, 0.19%)</title><rect x="97.5" y="99.0" width="2.3" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="100.5" y="110.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (12 samples, 0.25%)</title><rect x="99.8" y="99.0" width="3.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="102.8" y="110.0"></text>
</g>
<g>
<title>byte[] (12 samples, 0.25%)</title><rect x="99.8" y="83.0" width="3.0" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="102.8" y="94.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (103 samples, 2.18%)</title><rect x="102.8" y="179.0" width="25.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="105.8" y="190.0">o..</text>
</g>
<g>
<title>one.nio.http.Request (15 samples, 0.32%)</title><rect x="102.8" y="163.0" width="3.7" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="105.8" y="174.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (29 samples, 0.61%)</title><rect x="106.5" y="163.0" width="7.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="109.5" y="174.0"></text>
</g>
<g>
<title>java.lang.String[] (29 samples, 0.61%)</title><rect x="106.5" y="147.0" width="7.3" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="109.5" y="158.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (59 samples, 1.25%)</title><rect x="113.8" y="163.0" width="14.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="116.8" y="174.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (59 samples, 1.25%)</title><rect x="113.8" y="147.0" width="14.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="116.8" y="158.0"></text>
</g>
<g>
<title>char[] (36 samples, 0.76%)</title><rect x="113.8" y="131.0" width="9.0" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="116.8" y="142.0"></text>
</g>
<g>
<title>java.lang.String (6 samples, 0.13%)</title><rect x="122.8" y="131.0" width="1.5" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="125.8" y="142.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (17 samples, 0.36%)</title><rect x="124.3" y="131.0" width="4.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="127.3" y="142.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (17 samples, 0.36%)</title><rect x="124.3" y="115.0" width="4.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="127.3" y="126.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (17 samples, 0.36%)</title><rect x="124.3" y="99.0" width="4.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="127.3" y="110.0"></text>
</g>
<g>
<title>byte[] (17 samples, 0.36%)</title><rect x="124.3" y="83.0" width="4.2" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="127.3" y="94.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (16 samples, 0.34%)</title><rect x="128.5" y="179.0" width="4.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="131.5" y="190.0"></text>
</g>
<g>
<title>byte[] (16 samples, 0.34%)</title><rect x="128.5" y="163.0" width="4.0" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="131.5" y="174.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (17 samples, 0.36%)</title><rect x="132.5" y="179.0" width="4.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="135.5" y="190.0"></text>
</g>
<g>
<title>java/lang/String.substring (17 samples, 0.36%)</title><rect x="132.5" y="163.0" width="4.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="135.5" y="174.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (17 samples, 0.36%)</title><rect x="132.5" y="147.0" width="4.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="135.5" y="158.0"></text>
</g>
<g>
<title>java.lang.String (6 samples, 0.13%)</title><rect x="132.5" y="131.0" width="1.5" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="135.5" y="142.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (11 samples, 0.23%)</title><rect x="134.0" y="131.0" width="2.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="137.0" y="142.0"></text>
</g>
<g>
<title>byte[] (11 samples, 0.23%)</title><rect x="134.0" y="115.0" width="2.8" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="137.0" y="126.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (99 samples, 2.10%)</title><rect x="136.8" y="179.0" width="24.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="139.8" y="190.0">o..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (99 samples, 2.10%)</title><rect x="136.8" y="163.0" width="24.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="139.8" y="174.0">o..</text>
</g>
<g>
<title>char[] (49 samples, 1.04%)</title><rect x="136.8" y="147.0" width="12.2" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="139.8" y="158.0"></text>
</g>
<g>
<title>java.lang.String (16 samples, 0.34%)</title><rect x="149.0" y="147.0" width="4.0" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="152.0" y="158.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (34 samples, 0.72%)</title><rect x="153.0" y="147.0" width="8.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="156.0" y="158.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (34 samples, 0.72%)</title><rect x="153.0" y="131.0" width="8.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="156.0" y="142.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (34 samples, 0.72%)</title><rect x="153.0" y="115.0" width="8.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="156.0" y="126.0"></text>
</g>
<g>
<title>byte[] (34 samples, 0.72%)</title><rect x="153.0" y="99.0" width="8.5" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="156.0" y="110.0"></text>
</g>
<g>
<title>[NIO Selector #2 tid=4265] (295 samples, 6.25%)</title><rect x="161.5" y="259.0" width="73.8" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="164.5" y="270.0">[NIO Sel..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (295 samples, 6.25%)</title><rect x="161.5" y="243.0" width="73.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="164.5" y="254.0">one/nio/..</text>
</g>
<g>
<title>one/nio/net/Session.process (295 samples, 6.25%)</title><rect x="161.5" y="227.0" width="73.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="164.5" y="238.0">one/nio/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (295 samples, 6.25%)</title><rect x="161.5" y="211.0" width="73.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="164.5" y="222.0">one/nio/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (295 samples, 6.25%)</title><rect x="161.5" y="195.0" width="73.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="164.5" y="206.0">one/nio/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (63 samples, 1.34%)</title><rect x="161.5" y="179.0" width="15.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="164.5" y="190.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (63 samples, 1.34%)</title><rect x="161.5" y="163.0" width="15.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="164.5" y="174.0"></text>
</g>
<g>
<title>RequestHandler1_put.handleRequest (49 samples, 1.04%)</title><rect x="161.5" y="147.0" width="12.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="164.5" y="158.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (35 samples, 0.74%)</title><rect x="161.5" y="131.0" width="8.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="164.5" y="142.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (35 samples, 0.74%)</title><rect x="161.5" y="115.0" width="8.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="164.5" y="126.0"></text>
</g>
<g>
<title>java/lang/String.substring (35 samples, 0.74%)</title><rect x="161.5" y="99.0" width="8.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="164.5" y="110.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (35 samples, 0.74%)</title><rect x="161.5" y="83.0" width="8.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="164.5" y="94.0"></text>
</g>
<g>
<title>java.lang.String (17 samples, 0.36%)</title><rect x="161.5" y="67.0" width="4.3" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="164.5" y="78.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (18 samples, 0.38%)</title><rect x="165.8" y="67.0" width="4.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="168.8" y="78.0"></text>
</g>
<g>
<title>byte[] (18 samples, 0.38%)</title><rect x="165.8" y="51.0" width="4.5" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="168.8" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivlev/ThreadController.put (14 samples, 0.30%)</title><rect x="170.3" y="131.0" width="3.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="173.3" y="142.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (14 samples, 0.30%)</title><rect x="170.3" y="115.0" width="3.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="173.3" y="126.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (14 samples, 0.30%)</title><rect x="170.3" y="99.0" width="3.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="173.3" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivlev/ThreadController$$Lambda$65/822960827.get$Lambda (14 samples, 0.30%)</title><rect x="170.3" y="83.0" width="3.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="173.3" y="94.0"></text>
</g>
<g>
<title>ru.mail.polis.service.ivlev.ThreadController$$Lambda$65 (14 samples, 0.30%)</title><rect x="170.3" y="67.0" width="3.5" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="173.3" y="78.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (14 samples, 0.30%)</title><rect x="173.8" y="147.0" width="3.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="176.8" y="158.0"></text>
</g>
<g>
<title>java/lang/String.substring (14 samples, 0.30%)</title><rect x="173.8" y="131.0" width="3.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="176.8" y="142.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (14 samples, 0.30%)</title><rect x="173.8" y="115.0" width="3.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="176.8" y="126.0"></text>
</g>
<g>
<title>java.lang.String (8 samples, 0.17%)</title><rect x="173.8" y="99.0" width="2.0" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="176.8" y="110.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (6 samples, 0.13%)</title><rect x="175.8" y="99.0" width="1.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="178.8" y="110.0"></text>
</g>
<g>
<title>byte[] (6 samples, 0.13%)</title><rect x="175.8" y="83.0" width="1.5" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="178.8" y="94.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (118 samples, 2.50%)</title><rect x="177.3" y="179.0" width="29.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="180.3" y="190.0">on..</text>
</g>
<g>
<title>one.nio.http.Request (20 samples, 0.42%)</title><rect x="177.3" y="163.0" width="5.0" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="180.3" y="174.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (32 samples, 0.68%)</title><rect x="182.3" y="163.0" width="8.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="185.3" y="174.0"></text>
</g>
<g>
<title>java.lang.String[] (32 samples, 0.68%)</title><rect x="182.3" y="147.0" width="8.0" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="185.3" y="158.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (66 samples, 1.40%)</title><rect x="190.3" y="163.0" width="16.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="193.3" y="174.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (66 samples, 1.40%)</title><rect x="190.3" y="147.0" width="16.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="193.3" y="158.0"></text>
</g>
<g>
<title>char[] (38 samples, 0.81%)</title><rect x="190.3" y="131.0" width="9.5" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="193.3" y="142.0"></text>
</g>
<g>
<title>java.lang.String (5 samples, 0.11%)</title><rect x="199.8" y="131.0" width="1.2" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="202.8" y="142.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (23 samples, 0.49%)</title><rect x="201.0" y="131.0" width="5.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="204.0" y="142.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (23 samples, 0.49%)</title><rect x="201.0" y="115.0" width="5.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="204.0" y="126.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (23 samples, 0.49%)</title><rect x="201.0" y="99.0" width="5.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="204.0" y="110.0"></text>
</g>
<g>
<title>byte[] (23 samples, 0.49%)</title><rect x="201.0" y="83.0" width="5.8" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="204.0" y="94.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (12 samples, 0.25%)</title><rect x="206.8" y="179.0" width="3.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="209.8" y="190.0"></text>
</g>
<g>
<title>byte[] (12 samples, 0.25%)</title><rect x="206.8" y="163.0" width="3.0" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="209.8" y="174.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (15 samples, 0.32%)</title><rect x="209.8" y="179.0" width="3.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="212.8" y="190.0"></text>
</g>
<g>
<title>java/lang/String.substring (15 samples, 0.32%)</title><rect x="209.8" y="163.0" width="3.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="212.8" y="174.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (15 samples, 0.32%)</title><rect x="209.8" y="147.0" width="3.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="212.8" y="158.0"></text>
</g>
<g>
<title>java.lang.String (7 samples, 0.15%)</title><rect x="209.8" y="131.0" width="1.7" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="212.8" y="142.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (8 samples, 0.17%)</title><rect x="211.5" y="131.0" width="2.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="214.5" y="142.0"></text>
</g>
<g>
<title>byte[] (8 samples, 0.17%)</title><rect x="211.5" y="115.0" width="2.0" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="214.5" y="126.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (87 samples, 1.84%)</title><rect x="213.5" y="179.0" width="21.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="216.5" y="190.0">o..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (87 samples, 1.84%)</title><rect x="213.5" y="163.0" width="21.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="216.5" y="174.0">o..</text>
</g>
<g>
<title>char[] (39 samples, 0.83%)</title><rect x="213.5" y="147.0" width="9.8" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="216.5" y="158.0"></text>
</g>
<g>
<title>java.lang.String (20 samples, 0.42%)</title><rect x="223.3" y="147.0" width="5.0" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="226.3" y="158.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (28 samples, 0.59%)</title><rect x="228.3" y="147.0" width="7.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="231.3" y="158.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (28 samples, 0.59%)</title><rect x="228.3" y="131.0" width="7.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="231.3" y="142.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (28 samples, 0.59%)</title><rect x="228.3" y="115.0" width="7.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="231.3" y="126.0"></text>
</g>
<g>
<title>byte[] (28 samples, 0.59%)</title><rect x="228.3" y="99.0" width="7.0" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="231.3" y="110.0"></text>
</g>
<g>
<title>[NIO Selector #3 tid=4266] (293 samples, 6.21%)</title><rect x="235.3" y="259.0" width="73.3" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="238.3" y="270.0">[NIO Sel..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (293 samples, 6.21%)</title><rect x="235.3" y="243.0" width="73.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="238.3" y="254.0">one/nio/..</text>
</g>
<g>
<title>one/nio/net/Session.process (293 samples, 6.21%)</title><rect x="235.3" y="227.0" width="73.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="238.3" y="238.0">one/nio/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (293 samples, 6.21%)</title><rect x="235.3" y="211.0" width="73.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="238.3" y="222.0">one/nio/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (293 samples, 6.21%)</title><rect x="235.3" y="195.0" width="73.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="238.3" y="206.0">one/nio/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (55 samples, 1.17%)</title><rect x="235.3" y="179.0" width="13.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="238.3" y="190.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (55 samples, 1.17%)</title><rect x="235.3" y="163.0" width="13.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="238.3" y="174.0"></text>
</g>
<g>
<title>RequestHandler1_put.handleRequest (29 samples, 0.61%)</title><rect x="235.3" y="147.0" width="7.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="238.3" y="158.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (16 samples, 0.34%)</title><rect x="235.3" y="131.0" width="4.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="238.3" y="142.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (16 samples, 0.34%)</title><rect x="235.3" y="115.0" width="4.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="238.3" y="126.0"></text>
</g>
<g>
<title>java/lang/String.substring (16 samples, 0.34%)</title><rect x="235.3" y="99.0" width="4.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="238.3" y="110.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (16 samples, 0.34%)</title><rect x="235.3" y="83.0" width="4.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="238.3" y="94.0"></text>
</g>
<g>
<title>java.lang.String (6 samples, 0.13%)</title><rect x="235.3" y="67.0" width="1.5" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="238.3" y="78.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (10 samples, 0.21%)</title><rect x="236.8" y="67.0" width="2.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="239.8" y="78.0"></text>
</g>
<g>
<title>byte[] (10 samples, 0.21%)</title><rect x="236.8" y="51.0" width="2.5" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="239.8" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivlev/ThreadController.put (13 samples, 0.28%)</title><rect x="239.3" y="131.0" width="3.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="242.3" y="142.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (13 samples, 0.28%)</title><rect x="239.3" y="115.0" width="3.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="242.3" y="126.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (13 samples, 0.28%)</title><rect x="239.3" y="99.0" width="3.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="242.3" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivlev/ThreadController$$Lambda$65/822960827.get$Lambda (13 samples, 0.28%)</title><rect x="239.3" y="83.0" width="3.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="242.3" y="94.0"></text>
</g>
<g>
<title>ru.mail.polis.service.ivlev.ThreadController$$Lambda$65 (13 samples, 0.28%)</title><rect x="239.3" y="67.0" width="3.2" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="242.3" y="78.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (26 samples, 0.55%)</title><rect x="242.5" y="147.0" width="6.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="245.5" y="158.0"></text>
</g>
<g>
<title>java/lang/String.substring (26 samples, 0.55%)</title><rect x="242.5" y="131.0" width="6.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="245.5" y="142.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (26 samples, 0.55%)</title><rect x="242.5" y="115.0" width="6.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="245.5" y="126.0"></text>
</g>
<g>
<title>java.lang.String (11 samples, 0.23%)</title><rect x="242.5" y="99.0" width="2.8" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="245.5" y="110.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (15 samples, 0.32%)</title><rect x="245.3" y="99.0" width="3.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="248.3" y="110.0"></text>
</g>
<g>
<title>byte[] (15 samples, 0.32%)</title><rect x="245.3" y="83.0" width="3.8" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="248.3" y="94.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (107 samples, 2.27%)</title><rect x="249.1" y="179.0" width="26.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="252.1" y="190.0">o..</text>
</g>
<g>
<title>one.nio.http.Request (10 samples, 0.21%)</title><rect x="249.1" y="163.0" width="2.5" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="252.1" y="174.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (33 samples, 0.70%)</title><rect x="251.6" y="163.0" width="8.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="254.6" y="174.0"></text>
</g>
<g>
<title>java.lang.String[] (33 samples, 0.70%)</title><rect x="251.6" y="147.0" width="8.2" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="254.6" y="158.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (64 samples, 1.36%)</title><rect x="259.8" y="163.0" width="16.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="262.8" y="174.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (64 samples, 1.36%)</title><rect x="259.8" y="147.0" width="16.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="262.8" y="158.0"></text>
</g>
<g>
<title>char[] (39 samples, 0.83%)</title><rect x="259.8" y="131.0" width="9.8" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="262.8" y="142.0"></text>
</g>
<g>
<title>java.lang.String (10 samples, 0.21%)</title><rect x="269.6" y="131.0" width="2.5" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="272.6" y="142.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (15 samples, 0.32%)</title><rect x="272.1" y="131.0" width="3.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="275.1" y="142.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (15 samples, 0.32%)</title><rect x="272.1" y="115.0" width="3.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="275.1" y="126.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (15 samples, 0.32%)</title><rect x="272.1" y="99.0" width="3.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="275.1" y="110.0"></text>
</g>
<g>
<title>byte[] (15 samples, 0.32%)</title><rect x="272.1" y="83.0" width="3.7" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="275.1" y="94.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (15 samples, 0.32%)</title><rect x="275.8" y="179.0" width="3.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="278.8" y="190.0"></text>
</g>
<g>
<title>byte[] (15 samples, 0.32%)</title><rect x="275.8" y="163.0" width="3.8" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="278.8" y="174.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (14 samples, 0.30%)</title><rect x="279.6" y="179.0" width="3.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="282.6" y="190.0"></text>
</g>
<g>
<title>java/lang/String.substring (14 samples, 0.30%)</title><rect x="279.6" y="163.0" width="3.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="282.6" y="174.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (14 samples, 0.30%)</title><rect x="279.6" y="147.0" width="3.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="282.6" y="158.0"></text>
</g>
<g>
<title>java.lang.String (2 samples, 0.04%)</title><rect x="279.6" y="131.0" width="0.5" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="282.6" y="142.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (12 samples, 0.25%)</title><rect x="280.1" y="131.0" width="3.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="283.1" y="142.0"></text>
</g>
<g>
<title>byte[] (12 samples, 0.25%)</title><rect x="280.1" y="115.0" width="3.0" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="283.1" y="126.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (102 samples, 2.16%)</title><rect x="283.1" y="179.0" width="25.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="286.1" y="190.0">o..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (102 samples, 2.16%)</title><rect x="283.1" y="163.0" width="25.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="286.1" y="174.0">o..</text>
</g>
<g>
<title>char[] (41 samples, 0.87%)</title><rect x="283.1" y="147.0" width="10.2" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="286.1" y="158.0"></text>
</g>
<g>
<title>java.lang.String (23 samples, 0.49%)</title><rect x="293.3" y="147.0" width="5.8" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="296.3" y="158.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (38 samples, 0.81%)</title><rect x="299.1" y="147.0" width="9.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="302.1" y="158.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (38 samples, 0.81%)</title><rect x="299.1" y="131.0" width="9.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="302.1" y="142.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (38 samples, 0.81%)</title><rect x="299.1" y="115.0" width="9.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="302.1" y="126.0"></text>
</g>
<g>
<title>byte[] (38 samples, 0.81%)</title><rect x="299.1" y="99.0" width="9.5" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="302.1" y="110.0"></text>
</g>
<g>
<title>[NIO Selector #4 tid=4267] (299 samples, 6.34%)</title><rect x="308.6" y="259.0" width="74.7" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="311.6" y="270.0">[NIO Sel..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (299 samples, 6.34%)</title><rect x="308.6" y="243.0" width="74.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="311.6" y="254.0">one/nio/..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (23 samples, 0.49%)</title><rect x="308.6" y="227.0" width="5.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="311.6" y="238.0"></text>
</g>
<g>
<title>one.nio.net.NativeSelector$2 (23 samples, 0.49%)</title><rect x="308.6" y="211.0" width="5.7" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="311.6" y="222.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (276 samples, 5.85%)</title><rect x="314.3" y="227.0" width="69.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="317.3" y="238.0">one/nio..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (276 samples, 5.85%)</title><rect x="314.3" y="211.0" width="69.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="317.3" y="222.0">one/nio..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (276 samples, 5.85%)</title><rect x="314.3" y="195.0" width="69.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="317.3" y="206.0">one/nio..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (47 samples, 1.00%)</title><rect x="314.3" y="179.0" width="11.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="317.3" y="190.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (47 samples, 1.00%)</title><rect x="314.3" y="163.0" width="11.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="317.3" y="174.0"></text>
</g>
<g>
<title>RequestHandler1_put.handleRequest (26 samples, 0.55%)</title><rect x="314.3" y="147.0" width="6.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="317.3" y="158.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (16 samples, 0.34%)</title><rect x="314.3" y="131.0" width="4.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="317.3" y="142.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (16 samples, 0.34%)</title><rect x="314.3" y="115.0" width="4.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="317.3" y="126.0"></text>
</g>
<g>
<title>java/lang/String.substring (16 samples, 0.34%)</title><rect x="314.3" y="99.0" width="4.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="317.3" y="110.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (16 samples, 0.34%)</title><rect x="314.3" y="83.0" width="4.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="317.3" y="94.0"></text>
</g>
<g>
<title>java.lang.String (5 samples, 0.11%)</title><rect x="314.3" y="67.0" width="1.3" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="317.3" y="78.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (11 samples, 0.23%)</title><rect x="315.6" y="67.0" width="2.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="318.6" y="78.0"></text>
</g>
<g>
<title>byte[] (11 samples, 0.23%)</title><rect x="315.6" y="51.0" width="2.7" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="318.6" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivlev/ThreadController.put (10 samples, 0.21%)</title><rect x="318.3" y="131.0" width="2.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="321.3" y="142.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (10 samples, 0.21%)</title><rect x="318.3" y="115.0" width="2.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="321.3" y="126.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (10 samples, 0.21%)</title><rect x="318.3" y="99.0" width="2.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="321.3" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivlev/ThreadController$$Lambda$65/822960827.get$Lambda (10 samples, 0.21%)</title><rect x="318.3" y="83.0" width="2.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="321.3" y="94.0"></text>
</g>
<g>
<title>ru.mail.polis.service.ivlev.ThreadController$$Lambda$65 (10 samples, 0.21%)</title><rect x="318.3" y="67.0" width="2.5" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="321.3" y="78.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (21 samples, 0.45%)</title><rect x="320.8" y="147.0" width="5.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="323.8" y="158.0"></text>
</g>
<g>
<title>java/lang/String.substring (21 samples, 0.45%)</title><rect x="320.8" y="131.0" width="5.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="323.8" y="142.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (21 samples, 0.45%)</title><rect x="320.8" y="115.0" width="5.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="323.8" y="126.0"></text>
</g>
<g>
<title>java.lang.String (10 samples, 0.21%)</title><rect x="320.8" y="99.0" width="2.5" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="323.8" y="110.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (11 samples, 0.23%)</title><rect x="323.3" y="99.0" width="2.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="326.3" y="110.0"></text>
</g>
<g>
<title>byte[] (11 samples, 0.23%)</title><rect x="323.3" y="83.0" width="2.8" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="326.3" y="94.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (96 samples, 2.03%)</title><rect x="326.1" y="179.0" width="24.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="329.1" y="190.0">o..</text>
</g>
<g>
<title>one.nio.http.Request (14 samples, 0.30%)</title><rect x="326.1" y="163.0" width="3.5" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="329.1" y="174.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (29 samples, 0.61%)</title><rect x="329.6" y="163.0" width="7.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="332.6" y="174.0"></text>
</g>
<g>
<title>java.lang.String[] (29 samples, 0.61%)</title><rect x="329.6" y="147.0" width="7.2" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="332.6" y="158.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (53 samples, 1.12%)</title><rect x="336.8" y="163.0" width="13.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="339.8" y="174.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (53 samples, 1.12%)</title><rect x="336.8" y="147.0" width="13.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="339.8" y="158.0"></text>
</g>
<g>
<title>char[] (26 samples, 0.55%)</title><rect x="336.8" y="131.0" width="6.5" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="339.8" y="142.0"></text>
</g>
<g>
<title>java.lang.String (11 samples, 0.23%)</title><rect x="343.3" y="131.0" width="2.8" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="346.3" y="142.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (16 samples, 0.34%)</title><rect x="346.1" y="131.0" width="4.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="349.1" y="142.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (16 samples, 0.34%)</title><rect x="346.1" y="115.0" width="4.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="349.1" y="126.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (16 samples, 0.34%)</title><rect x="346.1" y="99.0" width="4.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="349.1" y="110.0"></text>
</g>
<g>
<title>byte[] (16 samples, 0.34%)</title><rect x="346.1" y="83.0" width="4.0" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="349.1" y="94.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (20 samples, 0.42%)</title><rect x="350.1" y="179.0" width="5.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="353.1" y="190.0"></text>
</g>
<g>
<title>byte[] (20 samples, 0.42%)</title><rect x="350.1" y="163.0" width="5.0" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="353.1" y="174.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (28 samples, 0.59%)</title><rect x="355.1" y="179.0" width="7.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="358.1" y="190.0"></text>
</g>
<g>
<title>java/lang/String.substring (28 samples, 0.59%)</title><rect x="355.1" y="163.0" width="7.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="358.1" y="174.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (28 samples, 0.59%)</title><rect x="355.1" y="147.0" width="7.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="358.1" y="158.0"></text>
</g>
<g>
<title>java.lang.String (14 samples, 0.30%)</title><rect x="355.1" y="131.0" width="3.5" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="358.1" y="142.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (14 samples, 0.30%)</title><rect x="358.6" y="131.0" width="3.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="361.6" y="142.0"></text>
</g>
<g>
<title>byte[] (14 samples, 0.30%)</title><rect x="358.6" y="115.0" width="3.5" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="361.6" y="126.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (85 samples, 1.80%)</title><rect x="362.1" y="179.0" width="21.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="365.1" y="190.0">o..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (85 samples, 1.80%)</title><rect x="362.1" y="163.0" width="21.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="365.1" y="174.0">o..</text>
</g>
<g>
<title>char[] (46 samples, 0.97%)</title><rect x="362.1" y="147.0" width="11.5" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="365.1" y="158.0"></text>
</g>
<g>
<title>java.lang.String (15 samples, 0.32%)</title><rect x="373.6" y="147.0" width="3.7" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="376.6" y="158.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (24 samples, 0.51%)</title><rect x="377.3" y="147.0" width="6.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="380.3" y="158.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (24 samples, 0.51%)</title><rect x="377.3" y="131.0" width="6.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="380.3" y="142.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (24 samples, 0.51%)</title><rect x="377.3" y="115.0" width="6.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="380.3" y="126.0"></text>
</g>
<g>
<title>byte[] (24 samples, 0.51%)</title><rect x="377.3" y="99.0" width="6.0" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="380.3" y="110.0"></text>
</g>
<g>
<title>[NIO Selector #5 tid=4268] (296 samples, 6.27%)</title><rect x="383.3" y="259.0" width="74.0" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="386.3" y="270.0">[NIO Sel..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (296 samples, 6.27%)</title><rect x="383.3" y="243.0" width="74.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="386.3" y="254.0">one/nio/..</text>
</g>
<g>
<title>one/nio/net/Session.process (296 samples, 6.27%)</title><rect x="383.3" y="227.0" width="74.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="386.3" y="238.0">one/nio/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (296 samples, 6.27%)</title><rect x="383.3" y="211.0" width="74.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="386.3" y="222.0">one/nio/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (296 samples, 6.27%)</title><rect x="383.3" y="195.0" width="74.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="386.3" y="206.0">one/nio/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (49 samples, 1.04%)</title><rect x="383.3" y="179.0" width="12.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="386.3" y="190.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (49 samples, 1.04%)</title><rect x="383.3" y="163.0" width="12.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="386.3" y="174.0"></text>
</g>
<g>
<title>RequestHandler1_put.handleRequest (34 samples, 0.72%)</title><rect x="383.3" y="147.0" width="8.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="386.3" y="158.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (20 samples, 0.42%)</title><rect x="383.3" y="131.0" width="5.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="386.3" y="142.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (20 samples, 0.42%)</title><rect x="383.3" y="115.0" width="5.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="386.3" y="126.0"></text>
</g>
<g>
<title>java/lang/String.substring (20 samples, 0.42%)</title><rect x="383.3" y="99.0" width="5.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="386.3" y="110.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (20 samples, 0.42%)</title><rect x="383.3" y="83.0" width="5.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="386.3" y="94.0"></text>
</g>
<g>
<title>java.lang.String (8 samples, 0.17%)</title><rect x="383.3" y="67.0" width="2.0" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="386.3" y="78.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (12 samples, 0.25%)</title><rect x="385.3" y="67.0" width="3.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="388.3" y="78.0"></text>
</g>
<g>
<title>byte[] (12 samples, 0.25%)</title><rect x="385.3" y="51.0" width="3.0" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="388.3" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivlev/ThreadController.put (14 samples, 0.30%)</title><rect x="388.3" y="131.0" width="3.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="391.3" y="142.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (14 samples, 0.30%)</title><rect x="388.3" y="115.0" width="3.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="391.3" y="126.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (14 samples, 0.30%)</title><rect x="388.3" y="99.0" width="3.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="391.3" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivlev/ThreadController$$Lambda$65/822960827.get$Lambda (14 samples, 0.30%)</title><rect x="388.3" y="83.0" width="3.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="391.3" y="94.0"></text>
</g>
<g>
<title>ru.mail.polis.service.ivlev.ThreadController$$Lambda$65 (14 samples, 0.30%)</title><rect x="388.3" y="67.0" width="3.5" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="391.3" y="78.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (15 samples, 0.32%)</title><rect x="391.8" y="147.0" width="3.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="394.8" y="158.0"></text>
</g>
<g>
<title>java/lang/String.substring (15 samples, 0.32%)</title><rect x="391.8" y="131.0" width="3.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="394.8" y="142.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (15 samples, 0.32%)</title><rect x="391.8" y="115.0" width="3.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="394.8" y="126.0"></text>
</g>
<g>
<title>java.lang.String (7 samples, 0.15%)</title><rect x="391.8" y="99.0" width="1.8" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="394.8" y="110.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (8 samples, 0.17%)</title><rect x="393.6" y="99.0" width="2.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="396.6" y="110.0"></text>
</g>
<g>
<title>byte[] (8 samples, 0.17%)</title><rect x="393.6" y="83.0" width="2.0" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="396.6" y="94.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (113 samples, 2.39%)</title><rect x="395.6" y="179.0" width="28.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="398.6" y="190.0">on..</text>
</g>
<g>
<title>one.nio.http.Request (21 samples, 0.45%)</title><rect x="395.6" y="163.0" width="5.2" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="398.6" y="174.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (29 samples, 0.61%)</title><rect x="400.8" y="163.0" width="7.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="403.8" y="174.0"></text>
</g>
<g>
<title>java.lang.String[] (29 samples, 0.61%)</title><rect x="400.8" y="147.0" width="7.3" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="403.8" y="158.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (63 samples, 1.34%)</title><rect x="408.1" y="163.0" width="15.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="411.1" y="174.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (63 samples, 1.34%)</title><rect x="408.1" y="147.0" width="15.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="411.1" y="158.0"></text>
</g>
<g>
<title>char[] (33 samples, 0.70%)</title><rect x="408.1" y="131.0" width="8.2" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="411.1" y="142.0"></text>
</g>
<g>
<title>java.lang.String (8 samples, 0.17%)</title><rect x="416.3" y="131.0" width="2.0" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="419.3" y="142.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (22 samples, 0.47%)</title><rect x="418.3" y="131.0" width="5.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="421.3" y="142.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (22 samples, 0.47%)</title><rect x="418.3" y="115.0" width="5.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="421.3" y="126.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (22 samples, 0.47%)</title><rect x="418.3" y="99.0" width="5.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="421.3" y="110.0"></text>
</g>
<g>
<title>byte[] (22 samples, 0.47%)</title><rect x="418.3" y="83.0" width="5.5" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="421.3" y="94.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (19 samples, 0.40%)</title><rect x="423.8" y="179.0" width="4.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="426.8" y="190.0"></text>
</g>
<g>
<title>byte[] (19 samples, 0.40%)</title><rect x="423.8" y="163.0" width="4.8" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="426.8" y="174.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (20 samples, 0.42%)</title><rect x="428.6" y="179.0" width="5.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="431.6" y="190.0"></text>
</g>
<g>
<title>java/lang/String.substring (20 samples, 0.42%)</title><rect x="428.6" y="163.0" width="5.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="431.6" y="174.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (20 samples, 0.42%)</title><rect x="428.6" y="147.0" width="5.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="431.6" y="158.0"></text>
</g>
<g>
<title>java.lang.String (10 samples, 0.21%)</title><rect x="428.6" y="131.0" width="2.5" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="431.6" y="142.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (10 samples, 0.21%)</title><rect x="431.1" y="131.0" width="2.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="434.1" y="142.0"></text>
</g>
<g>
<title>byte[] (10 samples, 0.21%)</title><rect x="431.1" y="115.0" width="2.5" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="434.1" y="126.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (95 samples, 2.01%)</title><rect x="433.6" y="179.0" width="23.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="436.6" y="190.0">o..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (95 samples, 2.01%)</title><rect x="433.6" y="163.0" width="23.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="436.6" y="174.0">o..</text>
</g>
<g>
<title>char[] (42 samples, 0.89%)</title><rect x="433.6" y="147.0" width="10.5" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="436.6" y="158.0"></text>
</g>
<g>
<title>java.lang.String (23 samples, 0.49%)</title><rect x="444.1" y="147.0" width="5.7" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="447.1" y="158.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (30 samples, 0.64%)</title><rect x="449.8" y="147.0" width="7.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="452.8" y="158.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (30 samples, 0.64%)</title><rect x="449.8" y="131.0" width="7.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="452.8" y="142.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (30 samples, 0.64%)</title><rect x="449.8" y="115.0" width="7.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="452.8" y="126.0"></text>
</g>
<g>
<title>byte[] (30 samples, 0.64%)</title><rect x="449.8" y="99.0" width="7.5" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="452.8" y="110.0"></text>
</g>
<g>
<title>[NIO Selector #6 tid=4269] (299 samples, 6.34%)</title><rect x="457.3" y="259.0" width="74.8" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="460.3" y="270.0">[NIO Sel..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (299 samples, 6.34%)</title><rect x="457.3" y="243.0" width="74.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="460.3" y="254.0">one/nio/..</text>
</g>
<g>
<title>one/nio/net/Session.process (299 samples, 6.34%)</title><rect x="457.3" y="227.0" width="74.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="460.3" y="238.0">one/nio/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (299 samples, 6.34%)</title><rect x="457.3" y="211.0" width="74.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="460.3" y="222.0">one/nio/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (299 samples, 6.34%)</title><rect x="457.3" y="195.0" width="74.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="460.3" y="206.0">one/nio/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (47 samples, 1.00%)</title><rect x="457.3" y="179.0" width="11.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="460.3" y="190.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (47 samples, 1.00%)</title><rect x="457.3" y="163.0" width="11.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="460.3" y="174.0"></text>
</g>
<g>
<title>RequestHandler1_put.handleRequest (27 samples, 0.57%)</title><rect x="457.3" y="147.0" width="6.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="460.3" y="158.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (18 samples, 0.38%)</title><rect x="457.3" y="131.0" width="4.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="460.3" y="142.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (18 samples, 0.38%)</title><rect x="457.3" y="115.0" width="4.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="460.3" y="126.0"></text>
</g>
<g>
<title>java/lang/String.substring (18 samples, 0.38%)</title><rect x="457.3" y="99.0" width="4.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="460.3" y="110.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (18 samples, 0.38%)</title><rect x="457.3" y="83.0" width="4.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="460.3" y="94.0"></text>
</g>
<g>
<title>java.lang.String (9 samples, 0.19%)</title><rect x="457.3" y="67.0" width="2.3" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="460.3" y="78.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (9 samples, 0.19%)</title><rect x="459.6" y="67.0" width="2.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="462.6" y="78.0"></text>
</g>
<g>
<title>byte[] (9 samples, 0.19%)</title><rect x="459.6" y="51.0" width="2.2" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="462.6" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivlev/ThreadController.put (9 samples, 0.19%)</title><rect x="461.8" y="131.0" width="2.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="464.8" y="142.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (9 samples, 0.19%)</title><rect x="461.8" y="115.0" width="2.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="464.8" y="126.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (9 samples, 0.19%)</title><rect x="461.8" y="99.0" width="2.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="464.8" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivlev/ThreadController$$Lambda$65/822960827.get$Lambda (9 samples, 0.19%)</title><rect x="461.8" y="83.0" width="2.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="464.8" y="94.0"></text>
</g>
<g>
<title>ru.mail.polis.service.ivlev.ThreadController$$Lambda$65 (9 samples, 0.19%)</title><rect x="461.8" y="67.0" width="2.3" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="464.8" y="78.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (20 samples, 0.42%)</title><rect x="464.1" y="147.0" width="5.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="467.1" y="158.0"></text>
</g>
<g>
<title>java/lang/String.substring (20 samples, 0.42%)</title><rect x="464.1" y="131.0" width="5.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="467.1" y="142.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (20 samples, 0.42%)</title><rect x="464.1" y="115.0" width="5.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="467.1" y="126.0"></text>
</g>
<g>
<title>java.lang.String (9 samples, 0.19%)</title><rect x="464.1" y="99.0" width="2.2" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="467.1" y="110.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (11 samples, 0.23%)</title><rect x="466.3" y="99.0" width="2.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="469.3" y="110.0"></text>
</g>
<g>
<title>byte[] (11 samples, 0.23%)</title><rect x="466.3" y="83.0" width="2.8" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="469.3" y="94.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (108 samples, 2.29%)</title><rect x="469.1" y="179.0" width="27.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="472.1" y="190.0">o..</text>
</g>
<g>
<title>one.nio.http.Request (15 samples, 0.32%)</title><rect x="469.1" y="163.0" width="3.7" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="472.1" y="174.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (26 samples, 0.55%)</title><rect x="472.8" y="163.0" width="6.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="475.8" y="174.0"></text>
</g>
<g>
<title>java.lang.String[] (26 samples, 0.55%)</title><rect x="472.8" y="147.0" width="6.5" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="475.8" y="158.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (67 samples, 1.42%)</title><rect x="479.3" y="163.0" width="16.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="482.3" y="174.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (67 samples, 1.42%)</title><rect x="479.3" y="147.0" width="16.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="482.3" y="158.0"></text>
</g>
<g>
<title>char[] (35 samples, 0.74%)</title><rect x="479.3" y="131.0" width="8.8" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="482.3" y="142.0"></text>
</g>
<g>
<title>java.lang.String (10 samples, 0.21%)</title><rect x="488.1" y="131.0" width="2.5" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="491.1" y="142.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (22 samples, 0.47%)</title><rect x="490.6" y="131.0" width="5.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="493.6" y="142.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (22 samples, 0.47%)</title><rect x="490.6" y="115.0" width="5.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="493.6" y="126.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (22 samples, 0.47%)</title><rect x="490.6" y="99.0" width="5.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="493.6" y="110.0"></text>
</g>
<g>
<title>byte[] (22 samples, 0.47%)</title><rect x="490.6" y="83.0" width="5.5" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="493.6" y="94.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (15 samples, 0.32%)</title><rect x="496.1" y="179.0" width="3.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="499.1" y="190.0"></text>
</g>
<g>
<title>byte[] (15 samples, 0.32%)</title><rect x="496.1" y="163.0" width="3.8" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="499.1" y="174.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (23 samples, 0.49%)</title><rect x="499.9" y="179.0" width="5.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="502.9" y="190.0"></text>
</g>
<g>
<title>java/lang/String.substring (23 samples, 0.49%)</title><rect x="499.9" y="163.0" width="5.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="502.9" y="174.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (23 samples, 0.49%)</title><rect x="499.9" y="147.0" width="5.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="502.9" y="158.0"></text>
</g>
<g>
<title>java.lang.String (12 samples, 0.25%)</title><rect x="499.9" y="131.0" width="3.0" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="502.9" y="142.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (11 samples, 0.23%)</title><rect x="502.9" y="131.0" width="2.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="505.9" y="142.0"></text>
</g>
<g>
<title>byte[] (11 samples, 0.23%)</title><rect x="502.9" y="115.0" width="2.7" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="505.9" y="126.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (106 samples, 2.25%)</title><rect x="505.6" y="179.0" width="26.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="508.6" y="190.0">o..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (106 samples, 2.25%)</title><rect x="505.6" y="163.0" width="26.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="508.6" y="174.0">o..</text>
</g>
<g>
<title>char[] (54 samples, 1.14%)</title><rect x="505.6" y="147.0" width="13.5" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="508.6" y="158.0"></text>
</g>
<g>
<title>java.lang.String (20 samples, 0.42%)</title><rect x="519.1" y="147.0" width="5.0" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="522.1" y="158.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (32 samples, 0.68%)</title><rect x="524.1" y="147.0" width="8.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="527.1" y="158.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (32 samples, 0.68%)</title><rect x="524.1" y="131.0" width="8.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="527.1" y="142.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (32 samples, 0.68%)</title><rect x="524.1" y="115.0" width="8.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="527.1" y="126.0"></text>
</g>
<g>
<title>byte[] (32 samples, 0.68%)</title><rect x="524.1" y="99.0" width="8.0" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="527.1" y="110.0"></text>
</g>
<g>
<title>[NIO Selector #7 tid=4270] (297 samples, 6.29%)</title><rect x="532.1" y="259.0" width="74.3" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="535.1" y="270.0">[NIO Sel..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (297 samples, 6.29%)</title><rect x="532.1" y="243.0" width="74.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="535.1" y="254.0">one/nio/..</text>
</g>
<g>
<title>one/nio/net/Session.process (297 samples, 6.29%)</title><rect x="532.1" y="227.0" width="74.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="535.1" y="238.0">one/nio/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (297 samples, 6.29%)</title><rect x="532.1" y="211.0" width="74.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="535.1" y="222.0">one/nio/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (297 samples, 6.29%)</title><rect x="532.1" y="195.0" width="74.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="535.1" y="206.0">one/nio/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (55 samples, 1.17%)</title><rect x="532.1" y="179.0" width="13.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="535.1" y="190.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (55 samples, 1.17%)</title><rect x="532.1" y="163.0" width="13.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="535.1" y="174.0"></text>
</g>
<g>
<title>RequestHandler1_put.handleRequest (32 samples, 0.68%)</title><rect x="532.1" y="147.0" width="8.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="535.1" y="158.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (17 samples, 0.36%)</title><rect x="532.1" y="131.0" width="4.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="535.1" y="142.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (17 samples, 0.36%)</title><rect x="532.1" y="115.0" width="4.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="535.1" y="126.0"></text>
</g>
<g>
<title>java/lang/String.substring (17 samples, 0.36%)</title><rect x="532.1" y="99.0" width="4.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="535.1" y="110.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (17 samples, 0.36%)</title><rect x="532.1" y="83.0" width="4.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="535.1" y="94.0"></text>
</g>
<g>
<title>java.lang.String (6 samples, 0.13%)</title><rect x="532.1" y="67.0" width="1.5" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="535.1" y="78.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (11 samples, 0.23%)</title><rect x="533.6" y="67.0" width="2.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="536.6" y="78.0"></text>
</g>
<g>
<title>byte[] (11 samples, 0.23%)</title><rect x="533.6" y="51.0" width="2.8" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="536.6" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivlev/ThreadController.put (15 samples, 0.32%)</title><rect x="536.4" y="131.0" width="3.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="539.4" y="142.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (15 samples, 0.32%)</title><rect x="536.4" y="115.0" width="3.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="539.4" y="126.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (15 samples, 0.32%)</title><rect x="536.4" y="99.0" width="3.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="539.4" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivlev/ThreadController$$Lambda$65/822960827.get$Lambda (15 samples, 0.32%)</title><rect x="536.4" y="83.0" width="3.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="539.4" y="94.0"></text>
</g>
<g>
<title>ru.mail.polis.service.ivlev.ThreadController$$Lambda$65 (15 samples, 0.32%)</title><rect x="536.4" y="67.0" width="3.7" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="539.4" y="78.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (23 samples, 0.49%)</title><rect x="540.1" y="147.0" width="5.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="543.1" y="158.0"></text>
</g>
<g>
<title>java/lang/String.substring (23 samples, 0.49%)</title><rect x="540.1" y="131.0" width="5.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="543.1" y="142.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (23 samples, 0.49%)</title><rect x="540.1" y="115.0" width="5.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="543.1" y="126.0"></text>
</g>
<g>
<title>java.lang.String (7 samples, 0.15%)</title><rect x="540.1" y="99.0" width="1.8" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="543.1" y="110.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (16 samples, 0.34%)</title><rect x="541.9" y="99.0" width="4.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="544.9" y="110.0"></text>
</g>
<g>
<title>byte[] (16 samples, 0.34%)</title><rect x="541.9" y="83.0" width="4.0" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="544.9" y="94.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (118 samples, 2.50%)</title><rect x="545.9" y="179.0" width="29.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="548.9" y="190.0">on..</text>
</g>
<g>
<title>one.nio.http.Request (14 samples, 0.30%)</title><rect x="545.9" y="163.0" width="3.5" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="548.9" y="174.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (30 samples, 0.64%)</title><rect x="549.4" y="163.0" width="7.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="552.4" y="174.0"></text>
</g>
<g>
<title>java.lang.String[] (30 samples, 0.64%)</title><rect x="549.4" y="147.0" width="7.5" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="552.4" y="158.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (74 samples, 1.57%)</title><rect x="556.9" y="163.0" width="18.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="559.9" y="174.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (74 samples, 1.57%)</title><rect x="556.9" y="147.0" width="18.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="559.9" y="158.0"></text>
</g>
<g>
<title>char[] (32 samples, 0.68%)</title><rect x="556.9" y="131.0" width="8.0" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="559.9" y="142.0"></text>
</g>
<g>
<title>java.lang.String (13 samples, 0.28%)</title><rect x="564.9" y="131.0" width="3.2" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="567.9" y="142.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (29 samples, 0.61%)</title><rect x="568.1" y="131.0" width="7.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="571.1" y="142.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (29 samples, 0.61%)</title><rect x="568.1" y="115.0" width="7.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="571.1" y="126.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (29 samples, 0.61%)</title><rect x="568.1" y="99.0" width="7.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="571.1" y="110.0"></text>
</g>
<g>
<title>byte[] (29 samples, 0.61%)</title><rect x="568.1" y="83.0" width="7.3" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="571.1" y="94.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (15 samples, 0.32%)</title><rect x="575.4" y="179.0" width="3.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="578.4" y="190.0"></text>
</g>
<g>
<title>byte[] (15 samples, 0.32%)</title><rect x="575.4" y="163.0" width="3.7" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="578.4" y="174.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (20 samples, 0.42%)</title><rect x="579.1" y="179.0" width="5.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="582.1" y="190.0"></text>
</g>
<g>
<title>java/lang/String.substring (20 samples, 0.42%)</title><rect x="579.1" y="163.0" width="5.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="582.1" y="174.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (20 samples, 0.42%)</title><rect x="579.1" y="147.0" width="5.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="582.1" y="158.0"></text>
</g>
<g>
<title>java.lang.String (5 samples, 0.11%)</title><rect x="579.1" y="131.0" width="1.3" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="582.1" y="142.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (15 samples, 0.32%)</title><rect x="580.4" y="131.0" width="3.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="583.4" y="142.0"></text>
</g>
<g>
<title>byte[] (15 samples, 0.32%)</title><rect x="580.4" y="115.0" width="3.7" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="583.4" y="126.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (89 samples, 1.89%)</title><rect x="584.1" y="179.0" width="22.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="587.1" y="190.0">o..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (89 samples, 1.89%)</title><rect x="584.1" y="163.0" width="22.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="587.1" y="174.0">o..</text>
</g>
<g>
<title>char[] (37 samples, 0.78%)</title><rect x="584.1" y="147.0" width="9.3" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="587.1" y="158.0"></text>
</g>
<g>
<title>java.lang.String (24 samples, 0.51%)</title><rect x="593.4" y="147.0" width="6.0" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="596.4" y="158.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (28 samples, 0.59%)</title><rect x="599.4" y="147.0" width="7.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="602.4" y="158.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (28 samples, 0.59%)</title><rect x="599.4" y="131.0" width="7.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="602.4" y="142.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (28 samples, 0.59%)</title><rect x="599.4" y="115.0" width="7.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="602.4" y="126.0"></text>
</g>
<g>
<title>byte[] (28 samples, 0.59%)</title><rect x="599.4" y="99.0" width="7.0" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="602.4" y="110.0"></text>
</g>
<g>
<title>[pool-1-thread-3 tid=4768] (24 samples, 0.51%)</title><rect x="606.4" y="259.0" width="6.0" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="609.4" y="270.0"></text>
</g>
<g>
<title>java/lang/Thread.run (24 samples, 0.51%)</title><rect x="606.4" y="243.0" width="6.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="609.4" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (24 samples, 0.51%)</title><rect x="606.4" y="227.0" width="6.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="609.4" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (24 samples, 0.51%)</title><rect x="606.4" y="211.0" width="6.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="609.4" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl$$Lambda$72/552887719.run (24 samples, 0.51%)</title><rect x="606.4" y="195.0" width="6.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="609.4" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.lambda$flush$6 (24 samples, 0.51%)</title><rect x="606.4" y="179.0" width="6.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="609.4" y="190.0"></text>
</g>
<g>
<title>java.io.File (1 samples, 0.02%)</title><rect x="606.4" y="163.0" width="0.2" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="609.4" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/SSTable.write (23 samples, 0.49%)</title><rect x="606.6" y="163.0" width="5.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="609.6" y="174.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (12 samples, 0.25%)</title><rect x="606.6" y="147.0" width="3.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="609.6" y="158.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (8 samples, 0.17%)</title><rect x="606.6" y="131.0" width="2.0" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="609.6" y="142.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (4 samples, 0.08%)</title><rect x="608.6" y="131.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="611.6" y="142.0"></text>
</g>
<g>
<title>byte[] (4 samples, 0.08%)</title><rect x="608.6" y="115.0" width="1.0" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="611.6" y="126.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1 samples, 0.02%)</title><rect x="609.6" y="147.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="612.6" y="158.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1 samples, 0.02%)</title><rect x="609.6" y="131.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="612.6" y="142.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1 samples, 0.02%)</title><rect x="609.6" y="115.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="612.6" y="126.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1 samples, 0.02%)</title><rect x="609.6" y="99.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="612.6" y="110.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1 samples, 0.02%)</title><rect x="609.6" y="83.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="612.6" y="94.0"></text>
</g>
<g>
<title>java.lang.Object[] (1 samples, 0.02%)</title><rect x="609.6" y="67.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="612.6" y="78.0"></text>
</g>
<g>
<title>ru/mail/polis/Cell.getKey (7 samples, 0.15%)</title><rect x="609.9" y="147.0" width="1.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="612.9" y="158.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (7 samples, 0.15%)</title><rect x="609.9" y="131.0" width="1.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="612.9" y="142.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (7 samples, 0.15%)</title><rect x="609.9" y="115.0" width="1.7" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="612.9" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/Value.getData (3 samples, 0.06%)</title><rect x="611.6" y="147.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="614.6" y="158.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (3 samples, 0.06%)</title><rect x="611.6" y="131.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="614.6" y="142.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (3 samples, 0.06%)</title><rect x="611.6" y="115.0" width="0.8" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="614.6" y="126.0"></text>
</g>
<g>
<title>[worker_0 tid=4341] (286 samples, 6.06%)</title><rect x="612.4" y="259.0" width="71.5" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="615.4" y="270.0">[worker_..</text>
</g>
<g>
<title>java/lang/Thread.run (286 samples, 6.06%)</title><rect x="612.4" y="243.0" width="71.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="615.4" y="254.0">java/lan..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (286 samples, 6.06%)</title><rect x="612.4" y="227.0" width="71.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="615.4" y="238.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (286 samples, 6.06%)</title><rect x="612.4" y="211.0" width="71.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="615.4" y="222.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (22 samples, 0.47%)</title><rect x="612.4" y="195.0" width="5.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="615.4" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (22 samples, 0.47%)</title><rect x="612.4" y="179.0" width="5.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="615.4" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (22 samples, 0.47%)</title><rect x="612.4" y="163.0" width="5.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="615.4" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (22 samples, 0.47%)</title><rect x="612.4" y="147.0" width="5.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="615.4" y="158.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (22 samples, 0.47%)</title><rect x="612.4" y="131.0" width="5.5" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="615.4" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivlev/ThreadController$$Lambda$65/822960827.run (264 samples, 5.59%)</title><rect x="617.9" y="195.0" width="66.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="620.9" y="206.0">ru/mail..</text>
</g>
<g>
<title>ru/mail/polis/service/ivlev/ThreadController.lambda$put$3 (264 samples, 5.59%)</title><rect x="617.9" y="179.0" width="66.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="620.9" y="190.0">ru/mail..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (22 samples, 0.47%)</title><rect x="617.9" y="163.0" width="5.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="620.9" y="174.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (22 samples, 0.47%)</title><rect x="617.9" y="147.0" width="5.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="620.9" y="158.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (22 samples, 0.47%)</title><rect x="617.9" y="131.0" width="5.5" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="620.9" y="142.0"></text>
</g>
<g>
<title>one.nio.http.Response (10 samples, 0.21%)</title><rect x="623.4" y="163.0" width="2.5" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="626.4" y="174.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (70 samples, 1.48%)</title><rect x="625.9" y="163.0" width="17.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="628.9" y="174.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (70 samples, 1.48%)</title><rect x="625.9" y="147.0" width="17.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="628.9" y="158.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (49 samples, 1.04%)</title><rect x="625.9" y="131.0" width="12.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="628.9" y="142.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (49 samples, 1.04%)</title><rect x="625.9" y="115.0" width="12.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="628.9" y="126.0"></text>
</g>
<g>
<title>byte[] (49 samples, 1.04%)</title><rect x="625.9" y="99.0" width="12.2" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="628.9" y="110.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (21 samples, 0.45%)</title><rect x="638.1" y="131.0" width="5.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="641.1" y="142.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (21 samples, 0.45%)</title><rect x="638.1" y="115.0" width="5.3" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="641.1" y="126.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (48 samples, 1.02%)</title><rect x="643.4" y="163.0" width="12.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="646.4" y="174.0"></text>
</g>
<g>
<title>byte[] (22 samples, 0.47%)</title><rect x="643.4" y="147.0" width="5.5" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="646.4" y="158.0"></text>
</g>
<g>
<title>java.lang.String[] (14 samples, 0.30%)</title><rect x="648.9" y="147.0" width="3.5" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="651.9" y="158.0"></text>
</g>
<g>
<title>java.lang.String (12 samples, 0.25%)</title><rect x="652.4" y="147.0" width="3.0" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="655.4" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.upsert (63 samples, 1.34%)</title><rect x="655.4" y="163.0" width="15.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="658.4" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock (1 samples, 0.02%)</title><rect x="655.4" y="147.0" width="0.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="658.4" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireShared (1 samples, 0.02%)</title><rect x="655.4" y="131.0" width="0.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="658.4" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryAcquireShared (1 samples, 0.02%)</title><rect x="655.4" y="115.0" width="0.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="658.4" y="126.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.fullTryAcquireShared (1 samples, 0.02%)</title><rect x="655.4" y="99.0" width="0.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="658.4" y="110.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (1 samples, 0.02%)</title><rect x="655.4" y="83.0" width="0.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="658.4" y="94.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (1 samples, 0.02%)</title><rect x="655.4" y="67.0" width="0.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="658.4" y="78.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.set (1 samples, 0.02%)</title><rect x="655.4" y="51.0" width="0.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="658.4" y="62.0"></text>
</g>
<g>
<title>java.lang.ThreadLocal$ThreadLocalMap$Entry (1 samples, 0.02%)</title><rect x="655.4" y="35.0" width="0.2" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="658.4" y="46.0"></text>
</g>
<g>
<title>ru/mail/polis/MemTable.upsert (62 samples, 1.31%)</title><rect x="655.6" y="147.0" width="15.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="658.6" y="158.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (49 samples, 1.04%)</title><rect x="655.6" y="131.0" width="12.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="658.6" y="142.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (49 samples, 1.04%)</title><rect x="655.6" y="115.0" width="12.3" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="658.6" y="126.0"></text>
</g>
<g>
<title>ru.mail.polis.Value (13 samples, 0.28%)</title><rect x="667.9" y="131.0" width="3.2" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="670.9" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivlev/ThreadController.toByteBuffer (51 samples, 1.08%)</title><rect x="671.1" y="163.0" width="12.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="674.1" y="174.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (24 samples, 0.51%)</title><rect x="671.1" y="147.0" width="6.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="674.1" y="158.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (24 samples, 0.51%)</title><rect x="671.1" y="131.0" width="6.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="674.1" y="142.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (24 samples, 0.51%)</title><rect x="671.1" y="115.0" width="6.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="674.1" y="126.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (24 samples, 0.51%)</title><rect x="671.1" y="99.0" width="6.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="674.1" y="110.0"></text>
</g>
<g>
<title>byte[] (24 samples, 0.51%)</title><rect x="671.1" y="83.0" width="6.0" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="674.1" y="94.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (27 samples, 0.57%)</title><rect x="677.1" y="147.0" width="6.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="680.1" y="158.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (27 samples, 0.57%)</title><rect x="677.1" y="131.0" width="6.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="680.1" y="142.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (27 samples, 0.57%)</title><rect x="677.1" y="115.0" width="6.8" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="680.1" y="126.0"></text>
</g>
<g>
<title>[worker_1 tid=4346] (294 samples, 6.23%)</title><rect x="683.9" y="259.0" width="73.5" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="686.9" y="270.0">[worker_..</text>
</g>
<g>
<title>java/lang/Thread.run (294 samples, 6.23%)</title><rect x="683.9" y="243.0" width="73.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="686.9" y="254.0">java/lan..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (294 samples, 6.23%)</title><rect x="683.9" y="227.0" width="73.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="686.9" y="238.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (294 samples, 6.23%)</title><rect x="683.9" y="211.0" width="73.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="686.9" y="222.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (19 samples, 0.40%)</title><rect x="683.9" y="195.0" width="4.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="686.9" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (19 samples, 0.40%)</title><rect x="683.9" y="179.0" width="4.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="686.9" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (18 samples, 0.38%)</title><rect x="683.9" y="163.0" width="4.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="686.9" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (18 samples, 0.38%)</title><rect x="683.9" y="147.0" width="4.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="686.9" y="158.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (18 samples, 0.38%)</title><rect x="683.9" y="131.0" width="4.5" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="686.9" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (1 samples, 0.02%)</title><rect x="688.4" y="163.0" width="0.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="691.4" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (1 samples, 0.02%)</title><rect x="688.4" y="147.0" width="0.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="691.4" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (1 samples, 0.02%)</title><rect x="688.4" y="131.0" width="0.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="691.4" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.addWaiter (1 samples, 0.02%)</title><rect x="688.4" y="115.0" width="0.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="691.4" y="126.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (1 samples, 0.02%)</title><rect x="688.4" y="99.0" width="0.2" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="691.4" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivlev/ThreadController$$Lambda$65/822960827.run (275 samples, 5.83%)</title><rect x="688.6" y="195.0" width="68.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="691.6" y="206.0">ru/mail..</text>
</g>
<g>
<title>ru/mail/polis/service/ivlev/ThreadController.lambda$put$3 (275 samples, 5.83%)</title><rect x="688.6" y="179.0" width="68.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="691.6" y="190.0">ru/mail..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (32 samples, 0.68%)</title><rect x="688.6" y="163.0" width="8.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="691.6" y="174.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (32 samples, 0.68%)</title><rect x="688.6" y="147.0" width="8.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="691.6" y="158.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (32 samples, 0.68%)</title><rect x="688.6" y="131.0" width="8.0" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="691.6" y="142.0"></text>
</g>
<g>
<title>one.nio.http.Response (10 samples, 0.21%)</title><rect x="696.6" y="163.0" width="2.5" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="699.6" y="174.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (59 samples, 1.25%)</title><rect x="699.1" y="163.0" width="14.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="702.1" y="174.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (59 samples, 1.25%)</title><rect x="699.1" y="147.0" width="14.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="702.1" y="158.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (45 samples, 0.95%)</title><rect x="699.1" y="131.0" width="11.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="702.1" y="142.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (45 samples, 0.95%)</title><rect x="699.1" y="115.0" width="11.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="702.1" y="126.0"></text>
</g>
<g>
<title>byte[] (45 samples, 0.95%)</title><rect x="699.1" y="99.0" width="11.3" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="702.1" y="110.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (14 samples, 0.30%)</title><rect x="710.4" y="131.0" width="3.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="713.4" y="142.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (14 samples, 0.30%)</title><rect x="710.4" y="115.0" width="3.5" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="713.4" y="126.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (60 samples, 1.27%)</title><rect x="713.9" y="163.0" width="15.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="716.9" y="174.0"></text>
</g>
<g>
<title>byte[] (22 samples, 0.47%)</title><rect x="713.9" y="147.0" width="5.5" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="716.9" y="158.0"></text>
</g>
<g>
<title>java.lang.String[] (21 samples, 0.45%)</title><rect x="719.4" y="147.0" width="5.3" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="722.4" y="158.0"></text>
</g>
<g>
<title>java.lang.String (17 samples, 0.36%)</title><rect x="724.7" y="147.0" width="4.2" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="727.7" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.upsert (72 samples, 1.53%)</title><rect x="728.9" y="163.0" width="18.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="731.9" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/MemTable.upsert (72 samples, 1.53%)</title><rect x="728.9" y="147.0" width="18.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="731.9" y="158.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (56 samples, 1.19%)</title><rect x="728.9" y="131.0" width="14.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="731.9" y="142.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (56 samples, 1.19%)</title><rect x="728.9" y="115.0" width="14.0" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="731.9" y="126.0"></text>
</g>
<g>
<title>ru.mail.polis.Value (16 samples, 0.34%)</title><rect x="742.9" y="131.0" width="4.0" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="745.9" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivlev/ThreadController.toByteBuffer (42 samples, 0.89%)</title><rect x="746.9" y="163.0" width="10.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="749.9" y="174.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (16 samples, 0.34%)</title><rect x="746.9" y="147.0" width="4.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="749.9" y="158.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (16 samples, 0.34%)</title><rect x="746.9" y="131.0" width="4.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="749.9" y="142.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (16 samples, 0.34%)</title><rect x="746.9" y="115.0" width="4.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="749.9" y="126.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (16 samples, 0.34%)</title><rect x="746.9" y="99.0" width="4.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="749.9" y="110.0"></text>
</g>
<g>
<title>byte[] (16 samples, 0.34%)</title><rect x="746.9" y="83.0" width="4.0" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="749.9" y="94.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (26 samples, 0.55%)</title><rect x="750.9" y="147.0" width="6.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="753.9" y="158.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (26 samples, 0.55%)</title><rect x="750.9" y="131.0" width="6.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="753.9" y="142.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (26 samples, 0.55%)</title><rect x="750.9" y="115.0" width="6.5" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="753.9" y="126.0"></text>
</g>
<g>
<title>[worker_2 tid=4350] (290 samples, 6.15%)</title><rect x="757.4" y="259.0" width="72.5" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="760.4" y="270.0">[worker_..</text>
</g>
<g>
<title>java/lang/Thread.run (290 samples, 6.15%)</title><rect x="757.4" y="243.0" width="72.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="760.4" y="254.0">java/lan..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (290 samples, 6.15%)</title><rect x="757.4" y="227.0" width="72.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="760.4" y="238.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (290 samples, 6.15%)</title><rect x="757.4" y="211.0" width="72.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="760.4" y="222.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (16 samples, 0.34%)</title><rect x="757.4" y="195.0" width="4.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="760.4" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (16 samples, 0.34%)</title><rect x="757.4" y="179.0" width="4.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="760.4" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (16 samples, 0.34%)</title><rect x="757.4" y="163.0" width="4.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="760.4" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (16 samples, 0.34%)</title><rect x="757.4" y="147.0" width="4.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="760.4" y="158.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (16 samples, 0.34%)</title><rect x="757.4" y="131.0" width="4.0" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="760.4" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivlev/ThreadController$$Lambda$65/822960827.run (274 samples, 5.81%)</title><rect x="761.4" y="195.0" width="68.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="764.4" y="206.0">ru/mail..</text>
</g>
<g>
<title>ru/mail/polis/service/ivlev/ThreadController.lambda$put$3 (274 samples, 5.81%)</title><rect x="761.4" y="179.0" width="68.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="764.4" y="190.0">ru/mail..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (30 samples, 0.64%)</title><rect x="761.4" y="163.0" width="7.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="764.4" y="174.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (30 samples, 0.64%)</title><rect x="761.4" y="147.0" width="7.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="764.4" y="158.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (30 samples, 0.64%)</title><rect x="761.4" y="131.0" width="7.5" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="764.4" y="142.0"></text>
</g>
<g>
<title>one.nio.http.Response (12 samples, 0.25%)</title><rect x="768.9" y="163.0" width="3.0" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="771.9" y="174.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (75 samples, 1.59%)</title><rect x="771.9" y="163.0" width="18.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="774.9" y="174.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (75 samples, 1.59%)</title><rect x="771.9" y="147.0" width="18.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="774.9" y="158.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (52 samples, 1.10%)</title><rect x="771.9" y="131.0" width="13.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="774.9" y="142.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (52 samples, 1.10%)</title><rect x="771.9" y="115.0" width="13.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="774.9" y="126.0"></text>
</g>
<g>
<title>byte[] (52 samples, 1.10%)</title><rect x="771.9" y="99.0" width="13.0" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="774.9" y="110.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (23 samples, 0.49%)</title><rect x="784.9" y="131.0" width="5.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="787.9" y="142.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (23 samples, 0.49%)</title><rect x="784.9" y="115.0" width="5.8" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="787.9" y="126.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (43 samples, 0.91%)</title><rect x="790.7" y="163.0" width="10.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="793.7" y="174.0"></text>
</g>
<g>
<title>byte[] (14 samples, 0.30%)</title><rect x="790.7" y="147.0" width="3.5" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="793.7" y="158.0"></text>
</g>
<g>
<title>java.lang.String[] (16 samples, 0.34%)</title><rect x="794.2" y="147.0" width="4.0" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="797.2" y="158.0"></text>
</g>
<g>
<title>java.lang.String (13 samples, 0.28%)</title><rect x="798.2" y="147.0" width="3.2" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="801.2" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.upsert (67 samples, 1.42%)</title><rect x="801.4" y="163.0" width="16.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="804.4" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/MemTable.upsert (67 samples, 1.42%)</title><rect x="801.4" y="147.0" width="16.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="804.4" y="158.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (56 samples, 1.19%)</title><rect x="801.4" y="131.0" width="14.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="804.4" y="142.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (56 samples, 1.19%)</title><rect x="801.4" y="115.0" width="14.0" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="804.4" y="126.0"></text>
</g>
<g>
<title>ru.mail.polis.Value (11 samples, 0.23%)</title><rect x="815.4" y="131.0" width="2.8" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="818.4" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivlev/ThreadController.toByteBuffer (47 samples, 1.00%)</title><rect x="818.2" y="163.0" width="11.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="821.2" y="174.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (19 samples, 0.40%)</title><rect x="818.2" y="147.0" width="4.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="821.2" y="158.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (19 samples, 0.40%)</title><rect x="818.2" y="131.0" width="4.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="821.2" y="142.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (19 samples, 0.40%)</title><rect x="818.2" y="115.0" width="4.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="821.2" y="126.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (19 samples, 0.40%)</title><rect x="818.2" y="99.0" width="4.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="821.2" y="110.0"></text>
</g>
<g>
<title>byte[] (19 samples, 0.40%)</title><rect x="818.2" y="83.0" width="4.7" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="821.2" y="94.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (28 samples, 0.59%)</title><rect x="822.9" y="147.0" width="7.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="825.9" y="158.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (28 samples, 0.59%)</title><rect x="822.9" y="131.0" width="7.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="825.9" y="142.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (28 samples, 0.59%)</title><rect x="822.9" y="115.0" width="7.0" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="825.9" y="126.0"></text>
</g>
<g>
<title>[worker_3 tid=4348] (283 samples, 6.00%)</title><rect x="829.9" y="259.0" width="70.8" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="832.9" y="270.0">[worker_..</text>
</g>
<g>
<title>java/lang/Thread.run (283 samples, 6.00%)</title><rect x="829.9" y="243.0" width="70.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="832.9" y="254.0">java/lan..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (283 samples, 6.00%)</title><rect x="829.9" y="227.0" width="70.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="832.9" y="238.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (283 samples, 6.00%)</title><rect x="829.9" y="211.0" width="70.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="832.9" y="222.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (21 samples, 0.45%)</title><rect x="829.9" y="195.0" width="5.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="832.9" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (21 samples, 0.45%)</title><rect x="829.9" y="179.0" width="5.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="832.9" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (21 samples, 0.45%)</title><rect x="829.9" y="163.0" width="5.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="832.9" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (21 samples, 0.45%)</title><rect x="829.9" y="147.0" width="5.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="832.9" y="158.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (21 samples, 0.45%)</title><rect x="829.9" y="131.0" width="5.3" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="832.9" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivlev/ThreadController$$Lambda$65/822960827.run (262 samples, 5.55%)</title><rect x="835.2" y="195.0" width="65.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="838.2" y="206.0">ru/mail..</text>
</g>
<g>
<title>ru/mail/polis/service/ivlev/ThreadController.lambda$put$3 (262 samples, 5.55%)</title><rect x="835.2" y="179.0" width="65.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="838.2" y="190.0">ru/mail..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (24 samples, 0.51%)</title><rect x="835.2" y="163.0" width="6.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="838.2" y="174.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (24 samples, 0.51%)</title><rect x="835.2" y="147.0" width="6.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="838.2" y="158.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (24 samples, 0.51%)</title><rect x="835.2" y="131.0" width="6.0" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="838.2" y="142.0"></text>
</g>
<g>
<title>one.nio.http.Response (10 samples, 0.21%)</title><rect x="841.2" y="163.0" width="2.5" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="844.2" y="174.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (59 samples, 1.25%)</title><rect x="843.7" y="163.0" width="14.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="846.7" y="174.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (59 samples, 1.25%)</title><rect x="843.7" y="147.0" width="14.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="846.7" y="158.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (39 samples, 0.83%)</title><rect x="843.7" y="131.0" width="9.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="846.7" y="142.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (39 samples, 0.83%)</title><rect x="843.7" y="115.0" width="9.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="846.7" y="126.0"></text>
</g>
<g>
<title>byte[] (39 samples, 0.83%)</title><rect x="843.7" y="99.0" width="9.7" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="846.7" y="110.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (20 samples, 0.42%)</title><rect x="853.4" y="131.0" width="5.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="856.4" y="142.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (20 samples, 0.42%)</title><rect x="853.4" y="115.0" width="5.0" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="856.4" y="126.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (54 samples, 1.14%)</title><rect x="858.4" y="163.0" width="13.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="861.4" y="174.0"></text>
</g>
<g>
<title>byte[] (24 samples, 0.51%)</title><rect x="858.4" y="147.0" width="6.0" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="861.4" y="158.0"></text>
</g>
<g>
<title>java.lang.String[] (15 samples, 0.32%)</title><rect x="864.4" y="147.0" width="3.8" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="867.4" y="158.0"></text>
</g>
<g>
<title>java.lang.String (15 samples, 0.32%)</title><rect x="868.2" y="147.0" width="3.7" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="871.2" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.upsert (66 samples, 1.40%)</title><rect x="871.9" y="163.0" width="16.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="874.9" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock (1 samples, 0.02%)</title><rect x="871.9" y="147.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="874.9" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireShared (1 samples, 0.02%)</title><rect x="871.9" y="131.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="874.9" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryAcquireShared (1 samples, 0.02%)</title><rect x="871.9" y="115.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="874.9" y="126.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (1 samples, 0.02%)</title><rect x="871.9" y="99.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="874.9" y="110.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (1 samples, 0.02%)</title><rect x="871.9" y="83.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="874.9" y="94.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync$ThreadLocalHoldCounter.initialValue (1 samples, 0.02%)</title><rect x="871.9" y="67.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="874.9" y="78.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync$ThreadLocalHoldCounter.initialValue (1 samples, 0.02%)</title><rect x="871.9" y="51.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="874.9" y="62.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantReadWriteLock$Sync$HoldCounter (1 samples, 0.02%)</title><rect x="871.9" y="35.0" width="0.3" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="874.9" y="46.0"></text>
</g>
<g>
<title>ru/mail/polis/MemTable.upsert (65 samples, 1.38%)</title><rect x="872.2" y="147.0" width="16.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="875.2" y="158.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (47 samples, 1.00%)</title><rect x="872.2" y="131.0" width="11.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="875.2" y="142.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (47 samples, 1.00%)</title><rect x="872.2" y="115.0" width="11.7" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="875.2" y="126.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.put (1 samples, 0.02%)</title><rect x="883.9" y="131.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="886.9" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (1 samples, 0.02%)</title><rect x="883.9" y="115.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="886.9" y="126.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$Node (1 samples, 0.02%)</title><rect x="883.9" y="99.0" width="0.3" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="886.9" y="110.0"></text>
</g>
<g>
<title>ru.mail.polis.Value (17 samples, 0.36%)</title><rect x="884.2" y="131.0" width="4.2" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="887.2" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivlev/ThreadController.toByteBuffer (49 samples, 1.04%)</title><rect x="888.4" y="163.0" width="12.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="891.4" y="174.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (19 samples, 0.40%)</title><rect x="888.4" y="147.0" width="4.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="891.4" y="158.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (19 samples, 0.40%)</title><rect x="888.4" y="131.0" width="4.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="891.4" y="142.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (19 samples, 0.40%)</title><rect x="888.4" y="115.0" width="4.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="891.4" y="126.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (19 samples, 0.40%)</title><rect x="888.4" y="99.0" width="4.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="891.4" y="110.0"></text>
</g>
<g>
<title>byte[] (19 samples, 0.40%)</title><rect x="888.4" y="83.0" width="4.8" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="891.4" y="94.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (30 samples, 0.64%)</title><rect x="893.2" y="147.0" width="7.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="896.2" y="158.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (30 samples, 0.64%)</title><rect x="893.2" y="131.0" width="7.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="896.2" y="142.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (30 samples, 0.64%)</title><rect x="893.2" y="115.0" width="7.5" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="896.2" y="126.0"></text>
</g>
<g>
<title>[worker_4 tid=4349] (289 samples, 6.12%)</title><rect x="900.7" y="259.0" width="72.3" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="903.7" y="270.0">[worker_..</text>
</g>
<g>
<title>java/lang/Thread.run (289 samples, 6.12%)</title><rect x="900.7" y="243.0" width="72.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="903.7" y="254.0">java/lan..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (289 samples, 6.12%)</title><rect x="900.7" y="227.0" width="72.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="903.7" y="238.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (289 samples, 6.12%)</title><rect x="900.7" y="211.0" width="72.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="903.7" y="222.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (26 samples, 0.55%)</title><rect x="900.7" y="195.0" width="6.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="903.7" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (26 samples, 0.55%)</title><rect x="900.7" y="179.0" width="6.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="903.7" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (25 samples, 0.53%)</title><rect x="900.7" y="163.0" width="6.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="903.7" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (25 samples, 0.53%)</title><rect x="900.7" y="147.0" width="6.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="903.7" y="158.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (25 samples, 0.53%)</title><rect x="900.7" y="131.0" width="6.2" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="903.7" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (1 samples, 0.02%)</title><rect x="906.9" y="163.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="909.9" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (1 samples, 0.02%)</title><rect x="906.9" y="147.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="909.9" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (1 samples, 0.02%)</title><rect x="906.9" y="131.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="909.9" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.addWaiter (1 samples, 0.02%)</title><rect x="906.9" y="115.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="909.9" y="126.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (1 samples, 0.02%)</title><rect x="906.9" y="99.0" width="0.3" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="909.9" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivlev/ThreadController$$Lambda$65/822960827.run (263 samples, 5.57%)</title><rect x="907.2" y="195.0" width="65.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="910.2" y="206.0">ru/mail..</text>
</g>
<g>
<title>ru/mail/polis/service/ivlev/ThreadController.lambda$put$3 (263 samples, 5.57%)</title><rect x="907.2" y="179.0" width="65.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="910.2" y="190.0">ru/mail..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (24 samples, 0.51%)</title><rect x="907.2" y="163.0" width="6.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="910.2" y="174.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (24 samples, 0.51%)</title><rect x="907.2" y="147.0" width="6.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="910.2" y="158.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (24 samples, 0.51%)</title><rect x="907.2" y="131.0" width="6.0" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="910.2" y="142.0"></text>
</g>
<g>
<title>one.nio.http.Response (12 samples, 0.25%)</title><rect x="913.2" y="163.0" width="3.0" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="916.2" y="174.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (64 samples, 1.36%)</title><rect x="916.2" y="163.0" width="16.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="919.2" y="174.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (64 samples, 1.36%)</title><rect x="916.2" y="147.0" width="16.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="919.2" y="158.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (44 samples, 0.93%)</title><rect x="916.2" y="131.0" width="11.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="919.2" y="142.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (44 samples, 0.93%)</title><rect x="916.2" y="115.0" width="11.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="919.2" y="126.0"></text>
</g>
<g>
<title>byte[] (44 samples, 0.93%)</title><rect x="916.2" y="99.0" width="11.0" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="919.2" y="110.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (20 samples, 0.42%)</title><rect x="927.2" y="131.0" width="5.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="930.2" y="142.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (20 samples, 0.42%)</title><rect x="927.2" y="115.0" width="5.0" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="930.2" y="126.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (53 samples, 1.12%)</title><rect x="932.2" y="163.0" width="13.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="935.2" y="174.0"></text>
</g>
<g>
<title>byte[] (22 samples, 0.47%)</title><rect x="932.2" y="147.0" width="5.5" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="935.2" y="158.0"></text>
</g>
<g>
<title>java.lang.String[] (19 samples, 0.40%)</title><rect x="937.7" y="147.0" width="4.7" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="940.7" y="158.0"></text>
</g>
<g>
<title>java.lang.String (12 samples, 0.25%)</title><rect x="942.4" y="147.0" width="3.0" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="945.4" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.upsert (70 samples, 1.48%)</title><rect x="945.4" y="163.0" width="17.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="948.4" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/MemTable.upsert (70 samples, 1.48%)</title><rect x="945.4" y="147.0" width="17.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="948.4" y="158.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (52 samples, 1.10%)</title><rect x="945.4" y="131.0" width="13.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="948.4" y="142.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (52 samples, 1.10%)</title><rect x="945.4" y="115.0" width="13.1" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="948.4" y="126.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.put (1 samples, 0.02%)</title><rect x="958.5" y="131.0" width="0.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="961.5" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (1 samples, 0.02%)</title><rect x="958.5" y="115.0" width="0.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="961.5" y="126.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$Index (1 samples, 0.02%)</title><rect x="958.5" y="99.0" width="0.2" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="961.5" y="110.0"></text>
</g>
<g>
<title>ru.mail.polis.Value (17 samples, 0.36%)</title><rect x="958.7" y="131.0" width="4.3" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="961.7" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivlev/ThreadController.toByteBuffer (40 samples, 0.85%)</title><rect x="963.0" y="163.0" width="10.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="966.0" y="174.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (19 samples, 0.40%)</title><rect x="963.0" y="147.0" width="4.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="966.0" y="158.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (19 samples, 0.40%)</title><rect x="963.0" y="131.0" width="4.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="966.0" y="142.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (19 samples, 0.40%)</title><rect x="963.0" y="115.0" width="4.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="966.0" y="126.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (19 samples, 0.40%)</title><rect x="963.0" y="99.0" width="4.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="966.0" y="110.0"></text>
</g>
<g>
<title>byte[] (19 samples, 0.40%)</title><rect x="963.0" y="83.0" width="4.7" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="966.0" y="94.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (21 samples, 0.45%)</title><rect x="967.7" y="147.0" width="5.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="970.7" y="158.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (21 samples, 0.45%)</title><rect x="967.7" y="131.0" width="5.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="970.7" y="142.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (21 samples, 0.45%)</title><rect x="967.7" y="115.0" width="5.3" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="970.7" y="126.0"></text>
</g>
<g>
<title>[worker_5 tid=4343] (297 samples, 6.29%)</title><rect x="973.0" y="259.0" width="74.2" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="976.0" y="270.0">[worker_..</text>
</g>
<g>
<title>java/lang/Thread.run (297 samples, 6.29%)</title><rect x="973.0" y="243.0" width="74.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="976.0" y="254.0">java/lan..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (297 samples, 6.29%)</title><rect x="973.0" y="227.0" width="74.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="976.0" y="238.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (297 samples, 6.29%)</title><rect x="973.0" y="211.0" width="74.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="976.0" y="222.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (20 samples, 0.42%)</title><rect x="973.0" y="195.0" width="5.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="976.0" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (20 samples, 0.42%)</title><rect x="973.0" y="179.0" width="5.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="976.0" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (17 samples, 0.36%)</title><rect x="973.0" y="163.0" width="4.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="976.0" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (17 samples, 0.36%)</title><rect x="973.0" y="147.0" width="4.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="976.0" y="158.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (17 samples, 0.36%)</title><rect x="973.0" y="131.0" width="4.2" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="976.0" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (3 samples, 0.06%)</title><rect x="977.2" y="163.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="980.2" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (3 samples, 0.06%)</title><rect x="977.2" y="147.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="980.2" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (3 samples, 0.06%)</title><rect x="977.2" y="131.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="980.2" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.addWaiter (3 samples, 0.06%)</title><rect x="977.2" y="115.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="980.2" y="126.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (3 samples, 0.06%)</title><rect x="977.2" y="99.0" width="0.8" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="980.2" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivlev/ThreadController$$Lambda$65/822960827.run (277 samples, 5.87%)</title><rect x="978.0" y="195.0" width="69.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="981.0" y="206.0">ru/mail..</text>
</g>
<g>
<title>ru/mail/polis/service/ivlev/ThreadController.lambda$put$3 (277 samples, 5.87%)</title><rect x="978.0" y="179.0" width="69.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="981.0" y="190.0">ru/mail..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (30 samples, 0.64%)</title><rect x="978.0" y="163.0" width="7.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="981.0" y="174.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (30 samples, 0.64%)</title><rect x="978.0" y="147.0" width="7.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="981.0" y="158.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (30 samples, 0.64%)</title><rect x="978.0" y="131.0" width="7.5" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="981.0" y="142.0"></text>
</g>
<g>
<title>one.nio.http.Response (12 samples, 0.25%)</title><rect x="985.5" y="163.0" width="3.0" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="988.5" y="174.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (67 samples, 1.42%)</title><rect x="988.5" y="163.0" width="16.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="991.5" y="174.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (67 samples, 1.42%)</title><rect x="988.5" y="147.0" width="16.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="991.5" y="158.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (49 samples, 1.04%)</title><rect x="988.5" y="131.0" width="12.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="991.5" y="142.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (49 samples, 1.04%)</title><rect x="988.5" y="115.0" width="12.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="991.5" y="126.0"></text>
</g>
<g>
<title>byte[] (49 samples, 1.04%)</title><rect x="988.5" y="99.0" width="12.2" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="991.5" y="110.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (18 samples, 0.38%)</title><rect x="1000.7" y="131.0" width="4.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1003.7" y="142.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (18 samples, 0.38%)</title><rect x="1000.7" y="115.0" width="4.5" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="1003.7" y="126.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (48 samples, 1.02%)</title><rect x="1005.2" y="163.0" width="12.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1008.2" y="174.0"></text>
</g>
<g>
<title>byte[] (21 samples, 0.45%)</title><rect x="1005.2" y="147.0" width="5.3" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="1008.2" y="158.0"></text>
</g>
<g>
<title>java.lang.String[] (15 samples, 0.32%)</title><rect x="1010.5" y="147.0" width="3.7" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="1013.5" y="158.0"></text>
</g>
<g>
<title>java.lang.String (12 samples, 0.25%)</title><rect x="1014.2" y="147.0" width="3.0" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="1017.2" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.upsert (69 samples, 1.46%)</title><rect x="1017.2" y="163.0" width="17.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1020.2" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock (1 samples, 0.02%)</title><rect x="1017.2" y="147.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1020.2" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireShared (1 samples, 0.02%)</title><rect x="1017.2" y="131.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1020.2" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryAcquireShared (1 samples, 0.02%)</title><rect x="1017.2" y="115.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1020.2" y="126.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (1 samples, 0.02%)</title><rect x="1017.2" y="99.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1020.2" y="110.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (1 samples, 0.02%)</title><rect x="1017.2" y="83.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1020.2" y="94.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync$ThreadLocalHoldCounter.initialValue (1 samples, 0.02%)</title><rect x="1017.2" y="67.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1020.2" y="78.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync$ThreadLocalHoldCounter.initialValue (1 samples, 0.02%)</title><rect x="1017.2" y="51.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1020.2" y="62.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantReadWriteLock$Sync$HoldCounter (1 samples, 0.02%)</title><rect x="1017.2" y="35.0" width="0.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="1020.2" y="46.0"></text>
</g>
<g>
<title>ru/mail/polis/MemTable.upsert (68 samples, 1.44%)</title><rect x="1017.5" y="147.0" width="17.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1020.5" y="158.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (52 samples, 1.10%)</title><rect x="1017.5" y="131.0" width="13.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1020.5" y="142.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (52 samples, 1.10%)</title><rect x="1017.5" y="115.0" width="13.0" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="1020.5" y="126.0"></text>
</g>
<g>
<title>ru.mail.polis.Value (16 samples, 0.34%)</title><rect x="1030.5" y="131.0" width="4.0" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="1033.5" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivlev/ThreadController.toByteBuffer (51 samples, 1.08%)</title><rect x="1034.5" y="163.0" width="12.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1037.5" y="174.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (14 samples, 0.30%)</title><rect x="1034.5" y="147.0" width="3.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1037.5" y="158.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (14 samples, 0.30%)</title><rect x="1034.5" y="131.0" width="3.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1037.5" y="142.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (14 samples, 0.30%)</title><rect x="1034.5" y="115.0" width="3.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1037.5" y="126.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (14 samples, 0.30%)</title><rect x="1034.5" y="99.0" width="3.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1037.5" y="110.0"></text>
</g>
<g>
<title>byte[] (14 samples, 0.30%)</title><rect x="1034.5" y="83.0" width="3.5" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="1037.5" y="94.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (37 samples, 0.78%)</title><rect x="1038.0" y="147.0" width="9.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1041.0" y="158.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (37 samples, 0.78%)</title><rect x="1038.0" y="131.0" width="9.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1041.0" y="142.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (37 samples, 0.78%)</title><rect x="1038.0" y="115.0" width="9.2" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="1041.0" y="126.0"></text>
</g>
<g>
<title>[worker_6 tid=4347] (285 samples, 6.04%)</title><rect x="1047.2" y="259.0" width="71.3" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="1050.2" y="270.0">[worker_..</text>
</g>
<g>
<title>java/lang/Thread.run (285 samples, 6.04%)</title><rect x="1047.2" y="243.0" width="71.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1050.2" y="254.0">java/lan..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (285 samples, 6.04%)</title><rect x="1047.2" y="227.0" width="71.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1050.2" y="238.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (285 samples, 6.04%)</title><rect x="1047.2" y="211.0" width="71.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1050.2" y="222.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (14 samples, 0.30%)</title><rect x="1047.2" y="195.0" width="3.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1050.2" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (14 samples, 0.30%)</title><rect x="1047.2" y="179.0" width="3.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1050.2" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (14 samples, 0.30%)</title><rect x="1047.2" y="163.0" width="3.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1050.2" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (14 samples, 0.30%)</title><rect x="1047.2" y="147.0" width="3.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1050.2" y="158.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (14 samples, 0.30%)</title><rect x="1047.2" y="131.0" width="3.5" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="1050.2" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivlev/ThreadController$$Lambda$65/822960827.run (271 samples, 5.74%)</title><rect x="1050.7" y="195.0" width="67.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1053.7" y="206.0">ru/mail..</text>
</g>
<g>
<title>ru/mail/polis/service/ivlev/ThreadController.lambda$put$3 (271 samples, 5.74%)</title><rect x="1050.7" y="179.0" width="67.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1053.7" y="190.0">ru/mail..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (34 samples, 0.72%)</title><rect x="1050.7" y="163.0" width="8.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1053.7" y="174.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (34 samples, 0.72%)</title><rect x="1050.7" y="147.0" width="8.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1053.7" y="158.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (34 samples, 0.72%)</title><rect x="1050.7" y="131.0" width="8.5" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="1053.7" y="142.0"></text>
</g>
<g>
<title>one.nio.http.Response (10 samples, 0.21%)</title><rect x="1059.2" y="163.0" width="2.5" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="1062.2" y="174.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (77 samples, 1.63%)</title><rect x="1061.7" y="163.0" width="19.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1064.7" y="174.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (77 samples, 1.63%)</title><rect x="1061.7" y="147.0" width="19.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1064.7" y="158.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (49 samples, 1.04%)</title><rect x="1061.7" y="131.0" width="12.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1064.7" y="142.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (49 samples, 1.04%)</title><rect x="1061.7" y="115.0" width="12.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1064.7" y="126.0"></text>
</g>
<g>
<title>byte[] (49 samples, 1.04%)</title><rect x="1061.7" y="99.0" width="12.3" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="1064.7" y="110.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (28 samples, 0.59%)</title><rect x="1074.0" y="131.0" width="7.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1077.0" y="142.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (28 samples, 0.59%)</title><rect x="1074.0" y="115.0" width="7.0" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="1077.0" y="126.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (48 samples, 1.02%)</title><rect x="1081.0" y="163.0" width="12.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1084.0" y="174.0"></text>
</g>
<g>
<title>byte[] (24 samples, 0.51%)</title><rect x="1081.0" y="147.0" width="6.0" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="1084.0" y="158.0"></text>
</g>
<g>
<title>java.lang.String[] (11 samples, 0.23%)</title><rect x="1087.0" y="147.0" width="2.7" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="1090.0" y="158.0"></text>
</g>
<g>
<title>java.lang.String (13 samples, 0.28%)</title><rect x="1089.7" y="147.0" width="3.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="1092.7" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.upsert (60 samples, 1.27%)</title><rect x="1093.0" y="163.0" width="15.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1096.0" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock (2 samples, 0.04%)</title><rect x="1093.0" y="147.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1096.0" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireShared (2 samples, 0.04%)</title><rect x="1093.0" y="131.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1096.0" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryAcquireShared (2 samples, 0.04%)</title><rect x="1093.0" y="115.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1096.0" y="126.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (1 samples, 0.02%)</title><rect x="1093.0" y="99.0" width="0.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1096.0" y="110.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (1 samples, 0.02%)</title><rect x="1093.0" y="83.0" width="0.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1096.0" y="94.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync$ThreadLocalHoldCounter.initialValue (1 samples, 0.02%)</title><rect x="1093.0" y="67.0" width="0.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1096.0" y="78.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync$ThreadLocalHoldCounter.initialValue (1 samples, 0.02%)</title><rect x="1093.0" y="51.0" width="0.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1096.0" y="62.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantReadWriteLock$Sync$HoldCounter (1 samples, 0.02%)</title><rect x="1093.0" y="35.0" width="0.2" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="1096.0" y="46.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.set (1 samples, 0.02%)</title><rect x="1093.2" y="99.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1096.2" y="110.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.set (1 samples, 0.02%)</title><rect x="1093.2" y="83.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1096.2" y="94.0"></text>
</g>
<g>
<title>java.lang.ThreadLocal$ThreadLocalMap$Entry (1 samples, 0.02%)</title><rect x="1093.2" y="67.0" width="0.3" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="1096.2" y="78.0"></text>
</g>
<g>
<title>ru/mail/polis/MemTable.upsert (58 samples, 1.23%)</title><rect x="1093.5" y="147.0" width="14.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1096.5" y="158.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (47 samples, 1.00%)</title><rect x="1093.5" y="131.0" width="11.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1096.5" y="142.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (47 samples, 1.00%)</title><rect x="1093.5" y="115.0" width="11.7" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="1096.5" y="126.0"></text>
</g>
<g>
<title>ru.mail.polis.Value (11 samples, 0.23%)</title><rect x="1105.2" y="131.0" width="2.8" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="1108.2" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivlev/ThreadController.toByteBuffer (42 samples, 0.89%)</title><rect x="1108.0" y="163.0" width="10.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1111.0" y="174.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (19 samples, 0.40%)</title><rect x="1108.0" y="147.0" width="4.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1111.0" y="158.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (19 samples, 0.40%)</title><rect x="1108.0" y="131.0" width="4.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1111.0" y="142.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (19 samples, 0.40%)</title><rect x="1108.0" y="115.0" width="4.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1111.0" y="126.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (19 samples, 0.40%)</title><rect x="1108.0" y="99.0" width="4.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1111.0" y="110.0"></text>
</g>
<g>
<title>byte[] (19 samples, 0.40%)</title><rect x="1108.0" y="83.0" width="4.7" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="1111.0" y="94.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (23 samples, 0.49%)</title><rect x="1112.7" y="147.0" width="5.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1115.7" y="158.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (23 samples, 0.49%)</title><rect x="1112.7" y="131.0" width="5.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1115.7" y="142.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (23 samples, 0.49%)</title><rect x="1112.7" y="115.0" width="5.8" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="1115.7" y="126.0"></text>
</g>
<g>
<title>[worker_7 tid=4345] (286 samples, 6.06%)</title><rect x="1118.5" y="259.0" width="71.5" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="1121.5" y="270.0">[worker_..</text>
</g>
<g>
<title>java/lang/Thread.run (286 samples, 6.06%)</title><rect x="1118.5" y="243.0" width="71.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1121.5" y="254.0">java/lan..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (286 samples, 6.06%)</title><rect x="1118.5" y="227.0" width="71.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1121.5" y="238.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (286 samples, 6.06%)</title><rect x="1118.5" y="211.0" width="71.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1121.5" y="222.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (15 samples, 0.32%)</title><rect x="1118.5" y="195.0" width="3.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1121.5" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (15 samples, 0.32%)</title><rect x="1118.5" y="179.0" width="3.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1121.5" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (14 samples, 0.30%)</title><rect x="1118.5" y="163.0" width="3.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1121.5" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (14 samples, 0.30%)</title><rect x="1118.5" y="147.0" width="3.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1121.5" y="158.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (14 samples, 0.30%)</title><rect x="1118.5" y="131.0" width="3.5" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="1121.5" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (1 samples, 0.02%)</title><rect x="1122.0" y="163.0" width="0.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1125.0" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (1 samples, 0.02%)</title><rect x="1122.0" y="147.0" width="0.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1125.0" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (1 samples, 0.02%)</title><rect x="1122.0" y="131.0" width="0.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1125.0" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.addWaiter (1 samples, 0.02%)</title><rect x="1122.0" y="115.0" width="0.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1125.0" y="126.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (1 samples, 0.02%)</title><rect x="1122.0" y="99.0" width="0.2" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="1125.0" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivlev/ThreadController$$Lambda$65/822960827.run (271 samples, 5.74%)</title><rect x="1122.2" y="195.0" width="67.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1125.2" y="206.0">ru/mail..</text>
</g>
<g>
<title>ru/mail/polis/service/ivlev/ThreadController.lambda$put$3 (271 samples, 5.74%)</title><rect x="1122.2" y="179.0" width="67.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1125.2" y="190.0">ru/mail..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (30 samples, 0.64%)</title><rect x="1122.2" y="163.0" width="7.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1125.2" y="174.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (30 samples, 0.64%)</title><rect x="1122.2" y="147.0" width="7.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1125.2" y="158.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (30 samples, 0.64%)</title><rect x="1122.2" y="131.0" width="7.5" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="1125.2" y="142.0"></text>
</g>
<g>
<title>one.nio.http.Response (12 samples, 0.25%)</title><rect x="1129.7" y="163.0" width="3.0" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="1132.7" y="174.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (70 samples, 1.48%)</title><rect x="1132.7" y="163.0" width="17.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1135.7" y="174.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (70 samples, 1.48%)</title><rect x="1132.7" y="147.0" width="17.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1135.7" y="158.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (53 samples, 1.12%)</title><rect x="1132.7" y="131.0" width="13.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1135.7" y="142.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (53 samples, 1.12%)</title><rect x="1132.7" y="115.0" width="13.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1135.7" y="126.0"></text>
</g>
<g>
<title>byte[] (53 samples, 1.12%)</title><rect x="1132.7" y="99.0" width="13.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="1135.7" y="110.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (17 samples, 0.36%)</title><rect x="1146.0" y="131.0" width="4.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1149.0" y="142.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (17 samples, 0.36%)</title><rect x="1146.0" y="115.0" width="4.2" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="1149.0" y="126.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (58 samples, 1.23%)</title><rect x="1150.2" y="163.0" width="14.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1153.2" y="174.0"></text>
</g>
<g>
<title>byte[] (29 samples, 0.61%)</title><rect x="1150.2" y="147.0" width="7.3" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="1153.2" y="158.0"></text>
</g>
<g>
<title>java.lang.String[] (20 samples, 0.42%)</title><rect x="1157.5" y="147.0" width="5.0" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="1160.5" y="158.0"></text>
</g>
<g>
<title>java.lang.String (9 samples, 0.19%)</title><rect x="1162.5" y="147.0" width="2.2" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="1165.5" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/DAOImpl.upsert (55 samples, 1.17%)</title><rect x="1164.7" y="163.0" width="13.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1167.7" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/MemTable.upsert (55 samples, 1.17%)</title><rect x="1164.7" y="147.0" width="13.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1167.7" y="158.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (41 samples, 0.87%)</title><rect x="1164.7" y="131.0" width="10.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1167.7" y="142.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (41 samples, 0.87%)</title><rect x="1164.7" y="115.0" width="10.3" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="1167.7" y="126.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.put (2 samples, 0.04%)</title><rect x="1175.0" y="131.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1178.0" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (2 samples, 0.04%)</title><rect x="1175.0" y="115.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1178.0" y="126.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$Node (2 samples, 0.04%)</title><rect x="1175.0" y="99.0" width="0.5" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="1178.0" y="110.0"></text>
</g>
<g>
<title>ru.mail.polis.Value (12 samples, 0.25%)</title><rect x="1175.5" y="131.0" width="3.0" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="1178.5" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivlev/ThreadController.toByteBuffer (46 samples, 0.97%)</title><rect x="1178.5" y="163.0" width="11.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1181.5" y="174.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (20 samples, 0.42%)</title><rect x="1178.5" y="147.0" width="5.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1181.5" y="158.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (20 samples, 0.42%)</title><rect x="1178.5" y="131.0" width="5.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1181.5" y="142.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (20 samples, 0.42%)</title><rect x="1178.5" y="115.0" width="5.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1181.5" y="126.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (20 samples, 0.42%)</title><rect x="1178.5" y="99.0" width="5.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1181.5" y="110.0"></text>
</g>
<g>
<title>byte[] (20 samples, 0.42%)</title><rect x="1178.5" y="83.0" width="5.0" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="1181.5" y="94.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (26 samples, 0.55%)</title><rect x="1183.5" y="147.0" width="6.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1186.5" y="158.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (26 samples, 0.55%)</title><rect x="1183.5" y="131.0" width="6.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1186.5" y="142.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (26 samples, 0.55%)</title><rect x="1183.5" y="115.0" width="6.5" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="1186.5" y="126.0"></text>
</g>
</g>
</svg>
